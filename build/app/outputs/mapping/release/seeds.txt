androidx.appcompat.view.menu.ListMenuItemView
androidx.window.layout.FoldingFeature$State$Companion
io.flutter.embedding.engine.FlutterJNI
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
androidx.window.layout.WindowInfoTracker
androidx.appcompat.widget.ActionBarContextView
com.google.firebase.components.ComponentDiscoveryService
androidx.appcompat.app.AlertController$RecycleListView
androidx.window.embedding.EmbeddingAdapter
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback
androidx.core.graphics.drawable.IconCompat
androidx.lifecycle.FullLifecycleObserverAdapter
androidx.window.layout.DisplayFeature
androidx.window.embedding.EmbeddingTranslatingCallback
androidx.window.embedding.EmbeddingInterfaceCompat
androidx.window.embedding.ActivityStack
android.support.v4.graphics.drawable.IconCompatParcelizer
com.journeyapps.barcodescanner.ViewfinderView
androidx.lifecycle.SavedStateHandleController
androidx.window.core.Version$bigInteger$2
androidx.window.embedding.ExtensionEmbeddingBackend$Companion
androidx.window.core.Version
androidx.appcompat.widget.ActionBarContainer
androidx.window.layout.SidecarWindowBackend
io.flutter.plugins.urllauncher.WebViewActivity
androidx.appcompat.widget.ViewStubCompat
androidx.window.layout.SidecarCompat$FirstAttachAdapter
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
androidx.window.embedding.SplitRule$LayoutDir
androidx.core.app.RemoteActionCompatParcelizer
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1
androidx.annotation.Keep
io.flutter.plugins.GeneratedPluginRegistrant
androidx.core.widget.NestedScrollView
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter
androidx.window.layout.SidecarCompat
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1
androidx.window.embedding.MatcherUtils
androidx.window.layout.WindowInfoTrackerDecorator
androidx.window.layout.FoldingFeature$OcclusionType
androidx.window.embedding.SplitController$Companion
io.flutter.plugins.firebase.core.FlutterFirebasePlugin
androidx.lifecycle.SavedStateHandleController$1
androidx.window.layout.WindowInfoTrackerImpl
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter
com.lyokone.location.FlutterLocationService
androidx.fragment.app.Fragment$5
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
androidx.window.R$styleable
androidx.window.layout.WindowLayoutInfo
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper
io.flutter.plugins.googlemaps.GoogleMapController
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl
androidx.window.embedding.SplitPairRule
androidx.core.app.RemoteActionCompat
androidx.appcompat.widget.SearchView$SearchAutoComplete
androidx.window.layout.WindowInfoTracker$Companion
com.google.firebase.database.DatabaseRegistrar
androidx.window.layout.HardwareFoldingFeature$Type$Companion
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1
com.journeyapps.barcodescanner.CaptureActivity
androidx.window.embedding.ActivityRule
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer
androidx.window.embedding.SplitRule$Api30Impl
androidx.activity.ComponentActivity$5
androidx.window.layout.SidecarAdapter$Companion
com.google.android.gms.common.SupportErrorDialogFragment
androidx.window.embedding.SplitPairFilter
androidx.window.layout.WindowMetricsCalculatorDecorator
androidx.window.R
com.example.sendeaze.MainActivity
androidx.window.layout.ExtensionWindowLayoutInfoBackend
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar
com.google.android.gms.common.api.internal.LifecycleCallback
androidx.window.layout.WindowBackend
androidx.window.embedding.EmbeddingCompat
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.journeyapps.barcodescanner.BarcodeView
androidx.appcompat.widget.DialogTitle
androidx.appcompat.widget.ActivityChooserView$InnerLayout
androidx.versionedparcelable.CustomVersionedParcelable
androidx.lifecycle.LiveData$LifecycleBoundObserver
androidx.window.layout.SidecarAdapter
io.flutter.view.FlutterCallbackInformation
androidx.window.layout.FoldingFeature$Orientation$Companion
com.journeyapps.barcodescanner.DecoratedBarcodeView
androidx.appcompat.widget.Toolbar
androidx.window.R$id
androidx.window.layout.ExtensionInterfaceCompat
io.flutter.plugins.imagepicker.ImagePickerFileProvider
androidx.appcompat.widget.FitWindowsFrameLayout
androidx.window.R$attr
androidx.window.embedding.SplitController
androidx.window.layout.SidecarWindowBackend$Companion
androidx.lifecycle.SingleGeneratedAdapterObserver
androidx.savedstate.SavedStateRegistry$1
androidx.window.embedding.SplitRule
androidx.activity.ComponentActivity$4
io.flutter.embedding.engine.FlutterOverlaySurface
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver
androidx.window.layout.ActivityCompatHelperApi24
androidx.window.embedding.EmbeddingRule
com.google.firebase.FirebaseCommonRegistrar
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry
androidx.lifecycle.ReflectiveGenericLifecycleObserver
io.flutter.view.AccessibilityViewEmbedder
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface
androidx.window.embedding.SplitRuleParser
androidx.window.layout.DisplayCompatHelperApi17
io.flutter.embedding.android.FlutterSplashView$SavedState
androidx.window.layout.WindowInfoTrackerImpl$Companion
androidx.window.layout.HardwareFoldingFeature$Companion
com.baseflow.geolocator.GeolocatorLocationService
androidx.fragment.app.FragmentManager$6
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl
androidx.window.embedding.SplitPlaceholderRule
androidx.appcompat.widget.ActionBarOverlayLayout
androidx.window.layout.SidecarCompat$Companion
androidx.window.layout.WindowMetricsCalculatorCompat
androidx.window.layout.HardwareFoldingFeature
androidx.core.app.CoreComponentFactory
kotlinx.coroutines.android.AndroidExceptionPreHandler
androidx.window.layout.SidecarCompat$TranslatingCallback
androidx.lifecycle.Lifecycling$1
com.google.android.gms.common.api.GoogleApiActivity
androidx.appcompat.widget.SearchView
io.flutter.plugins.firebase.database.FlutterFirebaseAppRegistrar
androidx.window.java.R
androidx.window.embedding.SplitInfo
androidx.window.layout.WindowMetrics
androidx.appcompat.widget.ButtonBarLayout
androidx.lifecycle.DefaultLifecycleObserver
androidx.window.core.ExperimentalWindowApi
androidx.window.layout.EmptyDecorator
io.flutter.plugin.platform.SingleViewPresentation
androidx.appcompat.view.menu.ExpandedMenuView
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1
com.google.android.gms.common.annotation.KeepName
androidx.window.embedding.EmbeddingBackend
androidx.window.layout.ActivityCompatHelperApi30
androidx.window.layout.WindowMetricsCalculator$Companion
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1
androidx.window.layout.FoldingFeature
com.google.android.gms.common.api.internal.zzc
androidx.window.core.Bounds
androidx.activity.ComponentActivity$3
androidx.appcompat.view.menu.ActionMenuItemView
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1
androidx.window.layout.HardwareFoldingFeature$Type
androidx.window.embedding.ExtensionEmbeddingBackend
androidx.window.core.Version$Companion
androidx.window.embedding.EmbeddingCompat$Companion
androidx.appcompat.widget.FitWindowsLinearLayout
com.google.android.gms.common.internal.ReflectedParcelable
androidx.window.layout.WindowMetricsCalculator
kotlinx.coroutines.android.AndroidDispatcherFactory
androidx.window.embedding.EmptyEmbeddingComponent
androidx.activity.ImmLeaksCleaner
androidx.window.layout.FoldingFeature$Orientation
androidx.window.embedding.ActivityFilter
com.google.android.gms.common.util.DynamiteApi
androidx.versionedparcelable.ParcelImpl
androidx.core.graphics.drawable.IconCompatParcelizer
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
androidx.multidex.MultiDexApplication
androidx.fragment.app.DialogFragment
androidx.window.layout.FoldingFeature$State
com.google.firebase.provider.FirebaseInitProvider
androidx.window.layout.FoldingFeature$OcclusionType$Companion
androidx.window.layout.DisplayCompatHelperApi28
androidx.appcompat.widget.ContentFrameLayout
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface
androidx.appcompat.widget.AlertDialogLayout
android.support.v4.app.RemoteActionCompatParcelizer
androidx.window.layout.SidecarCompat$DistinctElementCallback
androidx.activity.result.ActivityResultRegistry$1
androidx.appcompat.widget.ActionMenuView
androidx.savedstate.Recreator
androidx.appcompat.R$styleable: int[] ActivityChooserView
com.google.firebase.database.core.Repo$TransactionData: com.google.firebase.database.DatabaseError abortReason
com.google.firebase.database.core.SyncTree$13: com.google.firebase.database.core.EventRegistration val$eventRegistration
com.journeyapps.barcodescanner.CameraPreview$5: com.journeyapps.barcodescanner.CameraPreview this$0
androidx.appcompat.widget.SuggestionsAdapter: java.util.WeakHashMap mOutsideDrawablesCache
com.google.zxing.qrcode.detector.Detector: com.google.zxing.ResultPointCallback resultPointCallback
io.flutter.view.AccessibilityBridge$SemanticsNode: int textSelectionBase
com.google.zxing.common.detector.WhiteRectangleDetector: com.google.zxing.common.BitMatrix image
io.flutter.plugins.googlemaps.GoogleMapBuilder: java.util.List initialTileOverlays
com.baseflow.geolocator.GeolocatorPlugin: com.baseflow.geolocator.permission.PermissionManager permissionManager
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup: androidx.appcompat.widget.ActionMenuPresenter this$0
androidx.core.graphics.ColorUtils: java.lang.ThreadLocal TEMP_ARRAY
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ASCII
com.google.android.gms.tasks.TaskExecutors$zza: android.os.Handler mHandler
io.flutter.plugins.googlemaps.GoogleMapController: float density
com.journeyapps.barcodescanner.camera.CameraThread: android.os.HandlerThread thread
androidx.core.view.ViewCompat$AccessibilityViewProperty: int mFrameworkMinimumSdk
androidx.appcompat.widget.DropDownListView: androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable mResolveHoverRunnable
com.google.zxing.client.android.R$styleable: int zxing_finder_zxing_viewfinder_laser
androidx.appcompat.R$styleable: int[] LinearLayoutCompat_Layout
io.flutter.view.AccessibilityBridge$2: io.flutter.view.AccessibilityBridge this$0
androidx.collection.MapCollections$ValuesCollection: androidx.collection.MapCollections this$0
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mParcelizerCache
androidx.lifecycle.LiveData: boolean mDispatchInvalidated
androidx.appcompat.view.menu.StandardMenuPopup: boolean mOverflowOnly
androidx.collection.SimpleArrayMap: int mTwiceBaseCacheSize
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mRootAlpha
androidx.fragment.app.Fragment: int mTargetRequestCode
io.flutter.view.AccessibilityBridge: android.content.ContentResolver contentResolver
androidx.core.provider.CallbackWithHandler$1: android.graphics.Typeface val$typeface
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mPivotY
io.flutter.plugins.urllauncher.WebViewActivity: java.lang.String ENABLE_DOM_EXTRA
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.TextInputPlugin$InputTarget inputTarget
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextPaint mPaint
androidx.core.text.PrecomputedTextCompat$Params: android.text.PrecomputedText$Params mWrapped
com.google.firebase.database.core.utilities.DefaultRunLoop$FirebaseThreadFactory$1: com.google.firebase.database.core.utilities.DefaultRunLoop$FirebaseThreadFactory this$1
com.google.firebase.components.EventBus: java.util.Map handlerMap
com.google.firebase.database.core.utilities.encoding.CustomClassMapper$BeanMapper: java.util.Map fields
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: int[] mColors
androidx.appcompat.widget.ListPopupWindow: android.graphics.drawable.Drawable mDropDownListHighlight
androidx.appcompat.R$attr: int checkboxStyle
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix mStackedMatrix
androidx.exifinterface.media.ExifInterface$Rational: long numerator
androidx.window.core.Version: androidx.window.core.Version CURRENT
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem$OnActionExpandListener mOnActionExpandListener
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels
androidx.appcompat.widget.Toolbar: java.lang.CharSequence mSubtitleText
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1: androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1
com.google.firebase.database.connection.PersistentConnectionImpl: java.util.List onDisconnectRequestQueue
com.journeyapps.barcodescanner.camera.CameraInstance$1: com.journeyapps.barcodescanner.camera.CameraInstance this$0
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode surface
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.ListMenuPresenter listMenuPresenter
androidx.fragment.app.FragmentTransitionCompat21$5: android.graphics.Rect val$epicenter
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence mTooltipText
androidx.collection.MapCollections$EntrySet: androidx.collection.MapCollections this$0
io.flutter.embedding.engine.loader.FlutterLoader$Settings: java.lang.String logTag
com.google.firebase.database.Query: com.google.firebase.database.core.view.QueryParams params
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransition$Callback mFragmentTransitionCallback
com.google.android.gms.internal.location.zzay: android.location.Location zzdd
androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mIcon
io.flutter.plugins.googlemaps.PolylinesController: java.util.Map polylineIdToController
io.flutter.embedding.engine.renderer.FlutterRenderer$1: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
com.google.firebase.database.connection.util.StringListReader: int markedStringListPos
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
com.baseflow.geolocator.GeolocatorPlugin$1: com.baseflow.geolocator.GeolocatorPlugin this$0
androidx.appcompat.view.menu.MenuItemImpl: char mShortcutNumericChar
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: java.lang.String mSystemFontFamilyName
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType ASSUME_CODE_39_CHECK_DIGIT
io.flutter.view.AccessibilityBridge$SemanticsNode: float left
kotlinx.coroutines.flow.internal.SafeCollector: int collectContextSize
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.GoogleApiManager zabo
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode EDIFACT_ENCODE
androidx.window.R$attr: int primaryActivityName
com.google.firebase.database.connection.WebsocketConnection: long totalFrames
com.google.android.gms.common.api.internal.BasePendingResult: boolean zaeb
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mSharedElementReturnTransition
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.Continuation completion
androidx.appcompat.widget.ListPopupWindow: boolean mForceIgnoreOutsideTouch
kotlinx.coroutines.InvokeOnCancel: kotlin.jvm.functions.Function1 handler
com.google.firebase.database.core.WriteTree$1: com.google.firebase.database.core.WriteTree this$0
androidx.appcompat.widget.FitWindowsFrameLayout: androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener
com.google.android.gms.common.api.internal.zace: java.util.Set mScopes
com.google.android.gms.base.R$string: int common_google_play_services_wear_update_text
com.google.firebase.database.collection.ArraySortedMap$1: int val$pos
com.journeyapps.barcodescanner.DecoderThread: java.lang.String TAG
io.flutter.plugin.platform.PlatformPlugin$3: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay
androidx.appcompat.R$id: int message
androidx.arch.core.internal.SafeIterableMap: java.util.WeakHashMap mIterators
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mMinWidthMajor
com.google.android.gms.common.internal.BaseGmsClient: java.lang.String[] GOOGLE_PLUS_REQUIRED_FEATURES
androidx.appcompat.R$color: int abc_decor_view_status_guard
com.google.zxing.ReaderException: java.lang.StackTraceElement[] NO_TRACE
androidx.core.widget.NestedScrollView: int[] SCROLLVIEW_STYLEABLE
androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper: io.flutter.plugin.common.MethodChannel$Result methodResult
androidx.appcompat.app.AlertController$AlertParams$2: androidx.appcompat.app.AlertController$AlertParams this$0
io.flutter.plugins.googlemaps.PolylineBuilder: com.google.android.gms.maps.model.PolylineOptions polylineOptions
androidx.appcompat.app.TwilightManager: android.location.LocationManager mLocationManager
androidx.window.R$attr: int clearTop
androidx.appcompat.widget.ListPopupWindow: android.graphics.Rect mEpicenterBounds
io.flutter.embedding.engine.FlutterShellArgs: java.util.Set args
androidx.appcompat.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.plugin.common.MethodChannel channel
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus ACTIVITY_NOT_FOUND
com.google.firebase.database.DatabaseReference$3: com.google.firebase.database.DatabaseReference this$0
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map serviceAwarePlugins
androidx.exifinterface.media.ExifInterface: byte[] PNG_CHUNK_TYPE_EXIF
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderPlatformThread$1: io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderPlatformThread this$1
androidx.appcompat.app.AppCompatDelegateImpl: boolean mWindowNoTitle
com.google.zxing.datamatrix.detector.Detector: com.google.zxing.common.detector.WhiteRectangleDetector rectangleDetector
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeMiterlimit
com.google.android.gms.common.GoogleApiAvailability: java.lang.Object mLock
androidx.collection.MapCollections$MapIterator: androidx.collection.MapCollections this$0
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: boolean mTransitionEnded
io.flutter.plugins.firebase.database.EventsProxy: java.lang.String eventType
com.google.firebase.database.core.EventRegistration: boolean isUserInitiated
com.google.firebase.database.core.SyncTree$6: com.google.firebase.database.core.Path val$path
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0
io.flutter.plugins.googlemaps.PolygonsController: com.google.android.gms.maps.GoogleMap googleMap
androidx.appcompat.widget.TintInfo: android.graphics.PorterDuff$Mode mTintMode
com.journeyapps.barcodescanner.ViewfinderView: android.graphics.Rect framingRect
androidx.appcompat.app.AppCompatDelegateImpl$4: androidx.appcompat.app.AppCompatDelegateImpl this$0
io.flutter.embedding.engine.renderer.FlutterRenderer: java.util.concurrent.atomic.AtomicLong nextTextureId
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState BLOCKING
androidx.core.R$id: int accessibility_custom_action_29
kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache cache
io.flutter.embedding.android.FlutterView$4: java.lang.Runnable val$onDone
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: androidx.appcompat.widget.ActionMenuPresenter val$this$0
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean enableIMEPersonalizedLearning
com.google.android.gms.common.internal.zzf: android.content.ComponentName mComponentName
com.google.firebase.database.connection.util.RetryHelper: long currentRetryDelay
com.google.firebase.database.android.AndroidPlatform: com.google.firebase.FirebaseApp firebaseApp
com.google.firebase.database.core.Repo$4: com.google.firebase.database.core.Repo this$0
io.flutter.embedding.android.FlutterSplashView: android.view.View splashScreenView
com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long WAITERS_OFFSET
androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonPositiveIcon
androidx.window.embedding.SplitPairRule: java.util.Set filters
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController globalInstance
androidx.appcompat.view.menu.ActionMenuItem: int mId
androidx.appcompat.widget.AppCompatAutoCompleteTextView: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
androidx.appcompat.R$styleable: int MenuItem_iconTint
com.google.common.base.MoreObjects$ToStringHelper$ValueHolder: com.google.common.base.MoreObjects$ToStringHelper$ValueHolder next
kotlinx.coroutines.Job$Key: kotlinx.coroutines.Job$Key $$INSTANCE
androidx.appcompat.app.AppCompatDelegateImpl$2: androidx.appcompat.app.AppCompatDelegateImpl this$0
com.google.android.gms.common.api.internal.zace: com.google.android.gms.common.internal.ClientSettings zafa
com.google.zxing.qrcode.decoder.Version: int versionNumber
androidx.core.app.NotificationCompat$Builder: int mBadgeIcon
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.BinaryMessenger$TaskQueue taskQueue
io.flutter.plugins.imagepicker.ImageResizer: io.flutter.plugins.imagepicker.ExifDataCopier exifDataCopier
androidx.core.graphics.TypefaceCompatBaseImpl$2: androidx.core.graphics.TypefaceCompatBaseImpl this$0
com.google.zxing.Binarizer: com.google.zxing.LuminanceSource source
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: int[] mThemeAttrs
com.google.zxing.oned.rss.expanded.ExpandedPair: com.google.zxing.oned.rss.FinderPattern finderPattern
io.flutter.view.AccessibilityBridge: java.lang.Integer lastLeftFrameInset
com.google.firebase.database.core.Constants: com.google.firebase.database.snapshot.ChildKey DOT_INFO
androidx.activity.ComponentActivity$2$2: androidx.activity.ComponentActivity$2 this$1
io.flutter.plugins.firebase.database.TransactionExecutor: io.flutter.plugin.common.MethodChannel channel
com.google.firebase.database.connection.PersistentConnectionImpl$5: java.lang.String val$action
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$5$1: kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$5$1 INSTANCE
androidx.appcompat.R$id: int submit_area
androidx.appcompat.widget.AppCompatTextHelper$1: androidx.appcompat.widget.AppCompatTextHelper this$0
com.google.zxing.oned.rss.expanded.ExpandedRow: java.util.List pairs
androidx.appcompat.R$styleable: int[] GradientColorItem
androidx.core.R$id: int accessibility_custom_action_16
io.flutter.plugin.platform.PlatformViewsController: java.util.HashSet currentFrameUsedPlatformViewIds
kotlin.coroutines.ContinuationInterceptor$Key: kotlin.coroutines.ContinuationInterceptor$Key $$INSTANCE
com.google.android.gms.common.internal.BaseGmsClient: java.util.concurrent.atomic.AtomicInteger zzcr
androidx.appcompat.view.menu.CascadingMenuPopup: int mDropDownGravity
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host host
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_RIGHT
com.google.zxing.client.android.DecodeFormatManager: java.util.Set ONE_D_FORMATS
com.journeyapps.barcodescanner.camera.CameraInstance: java.lang.Runnable previewStarter
com.google.android.gms.maps.model.CameraPosition: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterView flutterView
com.journeyapps.barcodescanner.DecoderThread: com.journeyapps.barcodescanner.camera.PreviewCallback previewCallback
com.journeyapps.barcodescanner.camera.AutoFocusManager: android.os.Handler handler
com.google.firebase.database.core.SyncTree$10: com.google.firebase.database.core.Path val$path
com.google.zxing.common.DecoderResult: java.lang.Integer errorsCorrected
com.google.android.gms.maps.zzq: com.google.android.gms.maps.GoogleMap$OnPolylineClickListener zzy
androidx.fragment.app.LogWriter: java.lang.StringBuilder mBuilder
androidx.lifecycle.Lifecycling: java.util.Map sClassToAdapters
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_ISOLATE_SNAPSHOT_DATA_KEY
androidx.fragment.app.FragmentAnim$3: androidx.fragment.app.Fragment val$fragment
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState state
io.flutter.plugins.urllauncher.WebViewActivity: java.lang.String ENABLE_JS_EXTRA
io.flutter.embedding.android.KeyboardManager: android.view.View view
androidx.fragment.app.FragmentState: boolean mRetainInstance
androidx.lifecycle.Lifecycle$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State
androidx.savedstate.SavedStateRegistry: android.os.Bundle mRestoredState
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.LayoutIncludeDetector mLayoutIncludeDetector
com.google.firebase.database.core.utilities.PushIdGenerator: int[] lastRandChars
androidx.appcompat.R$attr: int alertDialogStyle
com.google.zxing.client.android.R$styleable: int[] ColorStateListItem
androidx.appcompat.widget.ThemeUtils: int[] SELECTED_STATE_SET
com.google.zxing.client.android.R$styleable: int[] GradientColorItem
androidx.appcompat.R$styleable: int ActionBar_contentInsetStart
com.google.android.gms.maps.model.CameraPosition$Builder: float tilt
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: androidx.appcompat.view.menu.CascadingMenuPopup$3 this$1
com.google.android.gms.common.api.Status: com.google.android.gms.common.api.Status RESULT_CANCELED
com.google.android.gms.maps.model.TileOverlayOptions: float zzcs
androidx.core.app.ActivityRecreator: java.lang.Class activityThreadClass
com.google.firebase.database.core.SyncTree$ListenContainer: com.google.firebase.database.core.Tag tag
androidx.core.view.ViewCompat$UnhandledKeyEventManager: java.util.WeakHashMap mViewsContainingListeners
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: boolean firstOutIsPop
androidx.appcompat.R$styleable: int ActionMode_subtitleTextStyle
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableStart
androidx.appcompat.app.AlertController: androidx.core.widget.NestedScrollView mScrollView
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
androidx.core.view.ViewCompat: boolean sAccessibilityDelegateCheckFailed
com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState: com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState GettingToken
com.journeyapps.barcodescanner.camera.CameraManager: com.journeyapps.barcodescanner.camera.CameraSettings settings
androidx.core.app.ActivityCompat$1: android.app.Activity val$activity
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat mVectorDrawable
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_MAKER_NOTE_TAGS
io.flutter.plugins.googlemaps.GoogleMapController: java.util.List initialCircles
com.google.firebase.database.DatabaseReference$2: com.google.firebase.database.snapshot.Node val$priority
io.flutter.plugin.common.EventChannel: java.lang.String name
androidx.appcompat.widget.ActionBarContextView: int mSubtitleStyleRes
androidx.appcompat.widget.TintContextWrapper: android.content.res.Resources$Theme mTheme
com.google.zxing.common.DecoderResult: java.lang.Object other
com.google.zxing.common.PerspectiveTransform: float a31
com.google.android.gms.auth.api.signin.internal.Storage: com.google.android.gms.auth.api.signin.internal.Storage zaaj
androidx.fragment.app.FragmentManager$6: androidx.fragment.app.FragmentResultListener val$listener
androidx.core.R$id: int tag_unhandled_key_listeners
androidx.window.embedding.EmbeddingCompat: boolean DEBUG
io.flutter.embedding.android.FlutterImageView: android.media.Image currentImage
com.google.firebase.database.tubesock.WebSocketHandshake: java.util.Map extraHeaders
androidx.appcompat.widget.TooltipCompatHandler: int mHoverSlop
com.google.zxing.oned.rss.Pair: com.google.zxing.oned.rss.FinderPattern finderPattern
androidx.appcompat.view.menu.ListMenuItemView: boolean mPreserveIconSpacing
com.google.firebase.database.snapshot.LeafNode$LeafType: com.google.firebase.database.snapshot.LeafNode$LeafType[] $VALUES
com.google.firebase.database.DatabaseReference$1: com.google.firebase.database.snapshot.Node val$node
androidx.appcompat.widget.DropDownListView: int mSelectionLeftPadding
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView
com.google.firebase.database.core.Repo$10: com.google.firebase.database.core.Path val$path
com.journeyapps.barcodescanner.camera.AutoFocusManager: android.hardware.Camera camera
androidx.core.app.NotificationCompat$Builder: int mPriority
com.google.firebase.database.core.Repo$2: com.google.firebase.database.core.Repo this$0
kotlinx.coroutines.CoroutineContextKt: boolean useCoroutinesScheduler
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock$1: com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock this$1
androidx.window.embedding.SplitController: boolean sDebug
com.google.zxing.pdf417.decoder.DetectionResult: int barcodeColumnCount
androidx.appcompat.view.menu.MenuAdapter: boolean mOverflowOnly
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] mRemoteInputs
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.Object mAction
io.flutter.plugins.imagepicker.ImagePickerDelegate: android.app.Activity activity
androidx.appcompat.R$styleable: int ActionBar_homeAsUpIndicator
com.google.android.gms.common.internal.GetServiceRequest: int version
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId
com.google.firebase.database.core.Repo$21: com.google.firebase.database.DataSnapshot val$snapshot
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_IMAGE_PROCESSING_TAGS
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper
com.google.android.gms.common.util.Strings: java.util.regex.Pattern zzhh
androidx.appcompat.widget.ActionBarContainer: boolean mIsTransitioning
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngineCache instance
com.google.android.gms.internal.base.zab: android.os.IBinder zab
com.google.firebase.database.OnDisconnect$1: com.google.firebase.database.OnDisconnect this$0
androidx.appcompat.R$styleable: int TextAppearance_android_textFontWeight
androidx.collection.SimpleArrayMap: java.lang.Object[] mArray
androidx.appcompat.R$attr: int editTextStyle
androidx.appcompat.widget.LinearLayoutCompat: int mDividerWidth
androidx.core.widget.NestedScrollView: boolean mFillViewport
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean itemVisible
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI GB18030
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.core.view.LayoutInflaterCompat: boolean sCheckedField
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.util.concurrent.ConcurrentHashMap sTextViewFieldByNameCache
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mSubText
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus[] $VALUES
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback
androidx.activity.result.ActivityResultRegistry: java.util.Map mParsedPendingResults
com.google.android.gms.common.api.internal.zan: com.google.android.gms.common.api.internal.zal zaed
com.google.zxing.pdf417.detector.PDF417DetectorResult: com.google.zxing.common.BitMatrix bits
com.google.android.gms.signin.internal.zab: int zasv
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_ACCESSIBILITY_FOCUS
com.google.zxing.common.GlobalHistogramBinarizer: byte[] EMPTY
androidx.fragment.R$id: int fragment_container_view_tag
com.google.android.gms.common.GoogleSignatureVerifier: android.content.Context mContext
androidx.appcompat.widget.LinearLayoutCompat: int mTotalLength
com.google.firebase.database.core.Constants: com.google.firebase.database.snapshot.ChildKey DOT_INFO_SERVERTIME_OFFSET
androidx.arch.core.executor.DefaultTaskExecutor: java.util.concurrent.ExecutorService mDiskIO
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onRequestPermissionsResultListeners
androidx.appcompat.R$styleable: int ActionBar_backgroundSplit
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: boolean coreInitialized
com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode: com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode MACRO
androidx.appcompat.app.AlertController: android.widget.ImageView mIconView
androidx.appcompat.R$styleable: int[] CompoundButton
com.google.firebase.database.connection.PersistentConnectionImpl: com.google.firebase.database.connection.util.RetryHelper retryHelper
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Style mStyle
com.google.firebase.database.core.persistence.PruneForest$3: com.google.firebase.database.core.utilities.ImmutableTree$TreeVisitor val$treeVisitor
com.google.firebase.database.core.Repo: com.google.firebase.database.core.SparseSnapshotTree onDisconnect
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness DARK
androidx.core.graphics.Insets: int bottom
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType SELECTION_CLICK
com.journeyapps.barcodescanner.ViewfinderView: android.graphics.Bitmap resultBitmap
com.google.firebase.database.tubesock.WebSocket$State: com.google.firebase.database.tubesock.WebSocket$State CONNECTING
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: float mAutoSizeMaxTextSizeInPx
androidx.appcompat.view.StandaloneActionMode: boolean mFinished
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType[] $VALUES
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides NONE
io.flutter.plugins.googlemaps.TileOverlayController: com.google.android.gms.maps.model.TileOverlay tileOverlay
com.google.zxing.qrcode.detector.AlignmentPatternFinder: int startX
androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFirstFrameRendered
com.google.zxing.oned.UPCEANExtension5Support: int[] decodeMiddleCounters
androidx.fragment.app.FragmentManager$PopBackStackState: androidx.fragment.app.FragmentManager this$0
androidx.fragment.app.Fragment: boolean mRetainInstanceChangedWhileDetached
io.flutter.plugin.editing.TextInputPlugin$2: double[] val$matrix
androidx.appcompat.widget.AppCompatCheckedTextView: int[] TINT_ATTRS
com.google.firebase.database.core.Repo$18$1: com.google.firebase.database.DataSnapshot val$snap
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: androidx.fragment.app.BackStackRecord lastInTransaction
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: java.lang.reflect.Method mDoAfterTextChanged
androidx.core.provider.FontRequestWorker: java.util.concurrent.ExecutorService DEFAULT_EXECUTOR_SERVICE
com.google.firebase.database.logging.Logger$Level: com.google.firebase.database.logging.Logger$Level NONE
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Field childNodeIdsField
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int viewId
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State RESUMED
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: java.util.ArrayList mAnimationCallbacks
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode C40_ENCODE
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: java.lang.Object mProvider
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode parent
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.ImageView mIconRefine
com.google.android.gms.tasks.zzi: java.lang.Object mLock
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
com.google.zxing.qrcode.detector.AlignmentPatternFinder: java.util.List possibleCenters
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join mStrokeLineJoin
com.google.android.gms.internal.common.zza: java.lang.String zzb
com.google.firebase.database.core.Repo$16: com.google.firebase.database.core.Repo this$0
com.google.android.gms.common.api.Status: com.google.android.gms.common.api.Status RESULT_TIMEOUT
androidx.appcompat.view.menu.ActionMenuItem: int mFlags
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton mOverflowButton
com.google.zxing.datamatrix.decoder.Version$ECBlocks: com.google.zxing.datamatrix.decoder.Version$ECB[] ecBlocks
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
kotlinx.coroutines.CancellableContinuationImpl: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: java.lang.String mWho
kotlinx.coroutines.internal.ThreadState: kotlinx.coroutines.ThreadContextElement[] elements
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy PREFER_HIGHEST_OR_REMOTE_VERSION
com.google.firebase.database.core.Repo$18: com.google.firebase.database.core.Repo this$0
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int mTimeoutMs
io.flutter.embedding.android.FlutterSurfaceView: boolean isSurfaceAvailableForRendering
io.flutter.plugin.editing.ListenableEditingState: int mSelectionEndWhenBeginBatchEdit
androidx.core.app.NotificationCompat$BigTextStyle: java.lang.CharSequence mBigText
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo: java.nio.ByteBuffer message
com.google.android.gms.tasks.zzi: com.google.android.gms.tasks.OnCompleteListener zzl
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: kotlinx.coroutines.internal.LockFreeLinkedListNode oldNext
androidx.window.embedding.SplitPairFilter: android.content.ComponentName secondaryActivityName
com.google.firebase.database.core.Repo$9$1: com.google.firebase.database.core.Repo$9 this$1
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo: androidx.fragment.app.FragmentAnim$AnimationOrAnimator mAnimation
com.google.android.gms.internal.location.zzbd: java.util.List zzcd
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout
com.google.firebase.database.connection.PersistentConnectionImpl$3: com.google.firebase.database.connection.PersistentConnectionImpl this$0
com.google.zxing.oned.rss.expanded.RSSExpandedReader: int[][] FINDER_PATTERN_SEQUENCES
androidx.core.R$styleable: int FontFamily_fontProviderFetchTimeout
androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener
com.google.android.gms.common.api.internal.zam: com.google.android.gms.common.ConnectionResult zadn
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: io.flutter.plugin.common.EventChannel this$0
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.IGmsServiceBroker zzce
com.google.firebase.FirebaseApp$UserUnlockReceiver: android.content.Context applicationContext
com.google.firebase.database.connection.Connection$State: com.google.firebase.database.connection.Connection$State REALTIME_CONNECTED
androidx.appcompat.R$id: int scrollIndicatorUp
com.google.android.gms.common.api.Response: com.google.android.gms.common.api.Result zzap
com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long LISTENERS_OFFSET
com.google.firebase.database.tubesock.WebSocketWriter: java.nio.channels.WritableByteChannel channel
com.google.firebase.platforminfo.AutoValue_LibraryVersion: java.lang.String version
com.google.android.gms.common.Feature: int zzk
androidx.appcompat.widget.Toolbar$2: androidx.appcompat.widget.Toolbar this$0
androidx.activity.OnBackPressedDispatcher: java.lang.Runnable mFallbackOnBackPressed
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent
com.google.firebase.database.logging.Logger$Level: com.google.firebase.database.logging.Logger$Level[] $VALUES
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: android.os.Bundle mBundle
io.flutter.plugins.googlemaps.GoogleMapBuilder: com.google.android.gms.maps.GoogleMapOptions options
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: android.content.SharedPreferences preferences
androidx.window.layout.EmptyDecorator: androidx.window.layout.EmptyDecorator INSTANCE
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation HORIZONTAL
androidx.fragment.app.Fragment$2: androidx.fragment.app.Fragment this$0
com.google.zxing.oned.rss.expanded.RSSExpandedReader: java.util.List rows
androidx.savedstate.Recreator$SavedStateProvider: java.util.Set mClasses
io.flutter.Log: int VERBOSE
androidx.appcompat.widget.DropDownListView: java.lang.reflect.Field mIsChildViewEnabled
androidx.window.embedding.ExtensionEmbeddingBackend: java.lang.String TAG
androidx.fragment.app.DialogFragment$2: androidx.fragment.app.DialogFragment this$0
com.journeyapps.barcodescanner.camera.CameraManager: com.journeyapps.barcodescanner.Size previewSize
com.lyokone.location.FlutterLocationService: boolean isForeground
androidx.fragment.app.DialogFragment: boolean mShowsDialog
com.google.android.gms.maps.MapView$zzb: com.google.android.gms.dynamic.OnDelegateCreatedListener zzbd
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Boolean systemStatusBarContrastEnforced
androidx.fragment.app.DefaultSpecialEffectsController$6: androidx.fragment.app.SpecialEffectsController$Operation val$lastIn
com.google.android.gms.internal.location.zzm: java.util.List zzm
androidx.savedstate.SavedStateRegistry: androidx.savedstate.Recreator$SavedStateProvider mRecreatorProvider
androidx.appcompat.R$styleable: int Toolbar_contentInsetStartWithNavigation
androidx.activity.ImmLeaksCleaner: android.app.Activity mActivity
io.flutter.plugins.imagepicker.ImagePickerDelegate: io.flutter.plugins.imagepicker.FileUtils fileUtils
com.journeyapps.barcodescanner.DefaultDecoderFactory: java.util.Collection decodeFormats
com.google.firebase.database.core.view.ViewProcessor$ProcessorResult: java.util.List changes
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$OnCloseListener mOnCloseListener
androidx.collection.SimpleArrayMap: int mBaseCacheSize
androidx.appcompat.widget.ActionBarContainer: boolean mIsStacked
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mOverflowOnly
com.google.firebase.database.tubesock.WebSocket: com.google.firebase.database.logging.LogWrapper logger
com.journeyapps.barcodescanner.camera.DisplayConfiguration: boolean center
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RECT
androidx.appcompat.widget.ListPopupWindow: android.widget.ListAdapter mAdapter
androidx.fragment.app.FragmentManager$5: androidx.fragment.app.FragmentManager this$0
com.google.android.gms.maps.model.CameraPosition$Builder: com.google.android.gms.maps.model.LatLng target
com.journeyapps.barcodescanner.CaptureManager: com.journeyapps.barcodescanner.DecoratedBarcodeView barcodeView
kotlinx.coroutines.DispatcherExecutor: kotlinx.coroutines.CoroutineDispatcher dispatcher
androidx.window.R$attr: int finishPrimaryWithSecondary
androidx.arch.core.executor.DefaultTaskExecutor$1: java.util.concurrent.atomic.AtomicInteger mThreadId
kotlinx.coroutines.scheduling.TasksKt: kotlinx.coroutines.scheduling.SchedulerTimeSource schedulerTimeSource
androidx.appcompat.app.AlertController: android.widget.TextView mMessageView
com.google.android.gms.maps.model.CameraPosition$Builder: float bearing
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: boolean mDestroyed
com.google.zxing.Result: com.google.zxing.BarcodeFormat format
androidx.fragment.app.Fragment: android.view.ViewGroup mContainer
androidx.appcompat.R$styleable: int[] Spinner
androidx.appcompat.view.menu.ExpandedMenuView: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean mTitleSet
androidx.appcompat.widget.ActionMenuPresenter: android.graphics.drawable.Drawable mPendingOverflowIcon
com.google.android.gms.location.zzae: java.lang.String zzbf
androidx.appcompat.app.AlertController: android.os.Message mButtonNeutralMessage
com.google.firebase.database.core.SyncTree$12: com.google.firebase.database.core.SyncTree this$0
com.baseflow.geolocator.location.FusedLocationClient: com.google.android.gms.location.FusedLocationProviderClient fusedLocationProviderClient
androidx.appcompat.widget.RtlSpacingHelper: boolean mIsRtl
com.google.firebase.database.core.view.ViewProcessor$WriteTreeCompleteChildSource: com.google.firebase.database.snapshot.Node optCompleteServerCache
androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mHideListener
com.google.android.gms.tasks.zzg: java.util.concurrent.Executor zzd
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_10
androidx.versionedparcelable.VersionedParcelParcel: int mEnd
com.google.firebase.database.core.view.filter.LimitedFilter: com.google.firebase.database.core.view.filter.RangedFilter rangedFilter
androidx.fragment.app.FragmentStateManager: boolean mMovingToState
androidx.appcompat.view.menu.MenuDialogHelper: androidx.appcompat.app.AlertDialog mDialog
androidx.appcompat.view.menu.SubMenuBuilder: androidx.appcompat.view.menu.MenuBuilder mParentMenu
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onSaveInstanceStateListeners
androidx.core.widget.AutoScrollHelper: boolean mExclusive
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable: androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup mPopup
kotlinx.coroutines.internal.ExceptionsConstuctorKt: java.util.WeakHashMap exceptionCtors
kotlin.KotlinVersion: int minor
com.google.firebase.database.connection.WebsocketConnection: boolean isClosed
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: boolean mEnded
androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView
com.google.zxing.datamatrix.DataMatrixReader: com.google.zxing.datamatrix.decoder.Decoder decoder
com.google.zxing.oned.rss.AbstractRSSReader: float[] oddRoundingErrors
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor: androidx.appcompat.widget.ListPopupWindow this$0
com.google.firebase.database.core.Repo$18: com.google.firebase.database.core.Repo val$repo
androidx.appcompat.view.menu.MenuItemImpl: androidx.appcompat.view.menu.MenuBuilder mMenu
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterEngineConnectionRegistry pluginRegistry
androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews
com.lyokone.location.FlutterLocationService$LocalBinder: com.lyokone.location.FlutterLocationService this$0
androidx.fragment.app.FragmentManager: boolean DEBUG
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] $VALUES
com.journeyapps.barcodescanner.camera.CameraThread: int openCount
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType TEXT
com.google.android.gms.common.api.internal.zah: com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey zacv
androidx.core.R$id: int tag_on_receive_content_mime_types
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock
androidx.core.R$styleable: int FontFamilyFont_font
androidx.activity.ImmLeaksCleaner: int sReflectedFieldsInitialized
io.flutter.plugins.googlemaps.GoogleMapBuilder: boolean myLocationEnabled
androidx.exifinterface.media.ExifInterface: boolean mAreThumbnailStripsConsecutive
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingGet: java.util.Map request
androidx.collection.SparseArrayCompat: java.lang.Object DELETED
com.google.android.gms.internal.location.zzbf: android.os.Parcelable$Creator CREATOR
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGF QR_CODE_FIELD_256
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.Cancellable mCurrentCancellable
com.baseflow.geolocator.MethodCallHandlerImpl: com.baseflow.geolocator.permission.PermissionManager permissionManager
com.lyokone.location.NotificationOptions: boolean onTapBringToFront
androidx.fragment.R$styleable: int[] FragmentContainerView
com.google.firebase.database.core.utilities.Tree: com.google.firebase.database.core.utilities.Tree parent
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
com.google.firebase.database.core.Repo: com.google.firebase.database.core.RepoInfo repoInfo
androidx.fragment.app.DialogFragment: int mTheme
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int mResourceId
androidx.fragment.app.FragmentManagerState: java.util.ArrayList mResultKeys
com.google.zxing.qrcode.detector.AlignmentPatternFinder: com.google.zxing.ResultPointCallback resultPointCallback
com.google.firebase.database.core.view.DataEvent: com.google.firebase.database.DataSnapshot snapshot
com.google.zxing.client.android.InactivityTimer: android.content.Context context
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] $VALUES
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE
androidx.appcompat.R$attr: int actionOverflowButtonStyle
com.google.firebase.database.core.persistence.TrackedQuery: boolean complete
com.google.firebase.database.tubesock.WebSocketMessage: byte opcode
androidx.appcompat.widget.DropDownListView: boolean mDrawsInPressedState
io.flutter.plugin.editing.TextInputPlugin$InputTarget: int id
androidx.appcompat.resources.R$styleable: int[] GradientColor
com.google.android.gms.signin.SignInOptions: boolean zasn
androidx.core.app.NotificationCompat$Builder: android.app.Notification mNotification
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mTranslateX
androidx.fragment.app.Fragment: boolean mCalled
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String hint
androidx.appcompat.widget.ListPopupWindow: int mListItemExpandMaximum
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType HINGE
com.google.firebase.database.collection.ArraySortedMap$1: com.google.firebase.database.collection.ArraySortedMap this$0
com.google.android.gms.internal.location.zzas: java.util.Map zzcx
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion
io.flutter.embedding.engine.systemchannels.NavigationChannel: io.flutter.plugin.common.MethodChannel channel
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.zzh zzbz
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.Class mViewCommandArgumentClass
androidx.core.app.NotificationManagerCompat$NotifyTask: java.lang.String tag
androidx.appcompat.widget.ActionMenuView$LayoutParams: int cellsUsed
androidx.core.R$id: int accessibility_action_clickable_span
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String domainNetworkPolicy
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: boolean $ignoreCase
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding
com.google.android.gms.maps.model.PolygonOptions: java.util.List zzdy
com.google.firebase.database.tubesock.WebSocketWriter: boolean closeSent
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding activityPluginBinding
com.google.firebase.database.core.utilities.Validation: java.util.regex.Pattern INVALID_PATH_REGEX
androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG
androidx.core.provider.FontRequestWorker$2: androidx.core.provider.CallbackWithHandler val$callback
androidx.appcompat.widget.ActionBarContextView: android.view.View mCustomView
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.SingleViewPresentation presentation
androidx.appcompat.view.menu.StandardMenuPopup: int mPopupStyleRes
com.google.android.gms.common.api.internal.RegisterListenerMethod: com.google.android.gms.common.api.internal.ListenerHolder zaju
com.google.firebase.database.android.SqlPersistenceStorageEngine$2: com.google.firebase.database.snapshot.Node val$currentNode
androidx.lifecycle.Lifecycle: java.util.concurrent.atomic.AtomicReference mInternalScopeRef
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend windowBackend
androidx.core.R$styleable: int GradientColor_android_endY
androidx.core.app.NotificationCompat$Builder: java.lang.String mSortKey
com.google.zxing.common.PerspectiveTransform: float a21
androidx.window.R$attr: int splitMinSmallestWidth
androidx.appcompat.widget.LinearLayoutCompat: int mGravity
com.google.zxing.qrcode.QRCodeReader: com.google.zxing.ResultPoint[] NO_POINTS
androidx.appcompat.app.AppCompatDialog$1: androidx.appcompat.app.AppCompatDialog this$0
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat$Impl mImpl
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode BYTE
io.flutter.plugins.urllauncher.WebViewActivity: android.webkit.WebView webview
kotlin.text.DelimitedRangesSequence$iterator$1: int nextState
androidx.core.content.res.ResourcesCompat: java.util.WeakHashMap sColorStateCaches
androidx.fragment.app.FragmentManager$PopBackStackState: int mFlags
androidx.core.text.PrecomputedTextCompat$Params: int mHyphenationFrequency
androidx.lifecycle.CompositeGeneratedAdaptersObserver: androidx.lifecycle.GeneratedAdapter[] mGeneratedAdapters
androidx.appcompat.R$styleable: int ViewBackgroundHelper_android_background
com.google.android.gms.signin.SignInOptions: java.lang.Long zast
kotlin.KotlinVersionCurrentValue: kotlin.KotlinVersionCurrentValue INSTANCE
com.baseflow.geolocator.location.FusedLocationClient: com.baseflow.geolocator.location.PositionChangedCallback positionChangedCallback
androidx.appcompat.app.AlertController: android.widget.TextView mTitleView
com.google.firebase.database.tubesock.WebSocket: com.google.firebase.database.tubesock.ThreadInitializer intializer
androidx.appcompat.widget.FitWindowsLinearLayout: androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener
io.flutter.FlutterInjector$Builder$NamedThreadFactory: int threadId
com.google.android.gms.tasks.zzu$zza: java.util.List zzac
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onActivityResultListeners
com.journeyapps.barcodescanner.CameraPreview$3: com.journeyapps.barcodescanner.CameraPreview this$0
com.google.android.gms.tasks.zzc: com.google.android.gms.tasks.Continuation zze
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_IMAGE
androidx.appcompat.view.menu.StandardMenuPopup: androidx.appcompat.widget.MenuPopupWindow mPopup
com.google.zxing.oned.rss.FinderPattern: com.google.zxing.ResultPoint[] resultPoints
androidx.appcompat.R$styleable: int AppCompatTheme_android_windowIsFloating
androidx.appcompat.R$color: int abc_decor_view_status_guard_light
androidx.appcompat.R$styleable: int Toolbar_maxButtonHeight
com.google.android.gms.dynamic.DeferredLifecycleHelper: com.google.android.gms.dynamic.OnDelegateCreatedListener zarx
io.flutter.plugin.editing.InputConnectionAdaptor: android.text.Layout mLayout
androidx.appcompat.widget.SearchView$7: androidx.appcompat.widget.SearchView this$0
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.FlutterView flutterView
androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Set mCachedEnabledPackages
io.flutter.plugins.googlemaps.GoogleMapController: io.flutter.plugin.common.MethodChannel$Result mapReadyResult
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_10
com.google.zxing.common.reedsolomon.GenericGF: int primitive
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu
com.google.firebase.database.core.Repo$11: com.google.firebase.database.core.Path val$path
androidx.fragment.app.Fragment: java.lang.String mTargetWho
androidx.core.text.PrecomputedTextCompat$Params$Builder: android.text.TextPaint mPaint
io.flutter.plugins.googlemaps.CircleBuilder: boolean consumeTapEvents
com.google.firebase.database.connection.PersistentConnectionImpl$1: com.google.firebase.database.connection.PersistentConnectionImpl this$0
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: io.flutter.embedding.android.FlutterView val$flutterView
androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuView mMenuView
androidx.appcompat.app.AlertDialog$Builder: int mTheme
androidx.appcompat.R$styleable: int ActionMode_titleTextStyle
com.google.android.gms.maps.model.LatLng: double latitude
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean enableSuggestions
com.google.firebase.database.core.view.EventRaiser: com.google.firebase.database.core.EventTarget eventTarget
androidx.appcompat.R$styleable: int MenuItem_android_enabled
androidx.window.layout.WindowMetrics: androidx.window.core.Bounds _bounds
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int id
androidx.fragment.app.FragmentTransition$6: androidx.fragment.app.FragmentTransition$FragmentContainerTransition val$fragments
com.google.zxing.datamatrix.decoder.Version: int dataRegionSizeRows
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow DROP_LATEST
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState state
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode ECI
androidx.activity.result.ActivityResultRegistry$3: androidx.activity.result.ActivityResultRegistry this$0
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension
com.google.android.gms.maps.GoogleMapOptions: java.lang.Float zzav
com.google.android.gms.common.internal.ClientSettings: android.view.View zaoj
androidx.fragment.R$animator: int fragment_close_exit
androidx.appcompat.R$layout: int abc_screen_simple
androidx.core.app.Person: java.lang.String mKey
androidx.appcompat.R$id: int textSpacerNoButtons
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_PATH
net.touchcapture.qr.flutterqr.QRView$startScan$2: java.util.List $allowedBarcodeTypes
androidx.appcompat.view.menu.StandardMenuPopup: boolean mShowTitle
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_LENGTH_TAG
androidx.multidex.MultiDexExtractor$1: androidx.multidex.MultiDexExtractor this$0
com.google.android.gms.maps.model.TileOverlayOptions: boolean zzek
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.MotionEventTracker motionEventTracker
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_textAppearance
com.google.android.gms.maps.model.Dash: float length
com.google.android.gms.common.internal.ResolveAccountRequest: android.accounts.Account zax
io.flutter.embedding.android.FlutterImageView$1: int[] $SwitchMap$io$flutter$embedding$android$FlutterImageView$SurfaceKind
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener
androidx.appcompat.R$styleable: int AppCompatSeekBar_android_thumb
com.google.zxing.client.android.R$color: int zxing_viewfinder_mask
androidx.appcompat.widget.SearchView: java.lang.Runnable mReleaseCursorRunnable
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.SidecarWindowBackend this$0
com.google.firebase.database.core.view.filter.LimitedFilter: com.google.firebase.database.snapshot.Index index
androidx.appcompat.widget.AppCompatTextHelper$2: androidx.appcompat.widget.AppCompatTextHelper this$0
io.flutter.plugins.googlemaps.GoogleMapController: android.content.Context context
com.google.firebase.database.core.operation.OperationSource: boolean tagged
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineContentProviderPluginBinding contentProviderPluginBinding
androidx.fragment.app.FragmentTransitionCompat21$3: java.util.ArrayList val$enteringViews
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence mTitle
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.reflect.Method sAddFontWeightStyle
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State VISIBLE
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String zak
com.google.firebase.database.core.utilities.ImmutableTree: java.lang.Object value
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.CoroutineContext lastEmissionContext
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_14
androidx.appcompat.widget.TintResources: java.lang.ref.WeakReference mContextRef
com.google.android.gms.common.api.internal.zzb: com.google.android.gms.common.api.internal.LifecycleCallback zzbi
androidx.appcompat.R$styleable: int ActionBar_elevation
com.google.android.gms.dynamite.DynamiteModule$zzb: int zziq
androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList
com.google.zxing.oned.rss.expanded.decoders.FieldParser: java.lang.Object[][] FOUR_DIGIT_DATA_LENGTH
kotlinx.coroutines.DebugKt: java.util.concurrent.atomic.AtomicLong COROUTINE_ID
com.google.zxing.oned.rss.expanded.decoders.FieldParser: java.lang.Object[][] THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: androidx.core.provider.FontRequest mRequest
io.flutter.plugins.imagepicker.ImagePickerDelegate: android.net.Uri pendingCameraMediaUri
com.journeyapps.barcodescanner.camera.PreviewScalingStrategy$1: com.journeyapps.barcodescanner.Size val$desired
androidx.fragment.app.Fragment$AnimationInfo: androidx.fragment.app.Fragment$OnStartEnterTransitionListener mStartEnterTransitionListener
com.google.android.gms.common.api.internal.GoogleApiManager: android.content.Context zaih
io.flutter.plugins.urllauncher.WebViewActivity$1: io.flutter.plugins.urllauncher.WebViewActivity this$0
com.google.android.gms.common.internal.BaseGmsClient: java.lang.String zzcn
com.google.android.gms.common.api.internal.zaf: com.google.android.gms.tasks.TaskCompletionSource zacq
io.flutter.Log: int logLevel
com.google.firebase.database.android.AndroidAppCheckTokenProvider: com.google.firebase.inject.Deferred deferredAppCheckProvider
androidx.appcompat.widget.AppCompatSeekBarHelper: android.content.res.ColorStateList mTickMarkTintList
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType TRANSFORM
androidx.cursoradapter.widget.CursorAdapter: androidx.cursoradapter.widget.CursorFilter mCursorFilter
io.flutter.plugin.common.StringCodec: java.nio.charset.Charset UTF8
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.model.LatLngBounds zzax
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI Cp1251
androidx.fragment.app.FragmentState: java.lang.String mWho
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy PREFER_HIGHEST_OR_LOCAL_VERSION_NO_FORCE_STAGING
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.ImageView mIcon1
com.google.zxing.qrcode.decoder.DecodedBitStreamParser$1: int[] $SwitchMap$com$google$zxing$qrcode$decoder$Mode
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion
com.google.android.gms.common.internal.BaseGmsClient: long zzbw
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_8
androidx.appcompat.R$styleable: int MenuItem_tooltipText
androidx.fragment.app.Fragment$AnimationInfo: int mPopEnterAnim
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo: boolean mIsPop
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingHandler
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHideOnContentScroll
com.google.android.gms.common.api.Status: int zzg
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
com.google.android.gms.maps.model.CameraPosition: float tilt
com.journeyapps.barcodescanner.CameraPreview: java.lang.String TAG
com.google.android.gms.common.ConnectionResult: android.app.PendingIntent zzi
androidx.core.R$styleable: int GradientColor_android_tileMode
androidx.core.R$id: int accessibility_custom_action_23
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory
androidx.appcompat.view.menu.MenuBuilder: int mDefaultShowAsAction
com.google.firebase.database.snapshot.LeafNode: com.google.firebase.database.snapshot.Node priority
androidx.core.graphics.Insets: int left
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Bitmap mCachedBitmap
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode inputFocusedSemanticsNode
com.google.android.gms.base.R$string: int common_google_play_services_enable_title
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _prev$FU
com.google.android.gms.location.zzae: java.lang.String zzbd
androidx.core.app.ActivityRecreator$2: androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks val$callbacks
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.util.concurrent.Executor executor
com.google.firebase.database.core.operation.Overwrite: com.google.firebase.database.snapshot.Node snapshot
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter instance
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback
io.flutter.view.VsyncWaiter$1: io.flutter.view.VsyncWaiter this$0
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ContentFrameLayout mContent
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean enableDeltaModel
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat MAXICODE
com.google.firebase.database.snapshot.Node: com.google.firebase.database.snapshot.ChildrenNode MAX_NODE
com.google.zxing.maxicode.MaxiCodeReader: com.google.zxing.maxicode.decoder.Decoder decoder
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: kotlinx.coroutines.CancellableContinuation cont
com.lyokone.location.FlutterLocation: java.lang.Double mLastMslAltitude
com.google.android.gms.common.api.internal.BasePendingResult: java.util.ArrayList zadt
androidx.appcompat.app.AppCompatDelegateImpl: boolean mActivityHandlesUiMode
com.google.android.gms.common.api.internal.zza: int zzbg
androidx.core.view.ViewCompat: java.util.WeakHashMap sTransitionNameMap
androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1
com.google.firebase.database.core.SyncTree$3: long val$writeId
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
androidx.appcompat.app.AlertController: android.widget.Button mButtonPositive
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.Api mApi
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: boolean mIsStarted
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderBackgroundThread: io.flutter.plugins.pathprovider.PathProviderPlugin this$0
kotlinx.coroutines.channels.ArrayChannel: int size
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2: java.lang.reflect.Constructor $constructor$inlined
com.google.zxing.oned.rss.expanded.RSSExpandedReader: int[] startEnd
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionFromIndex
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer statusBarColor
com.google.zxing.aztec.decoder.Decoder$Table: com.google.zxing.aztec.decoder.Decoder$Table LOWER
com.google.android.gms.signin.zab: com.google.android.gms.common.api.Api$AbstractClientBuilder zask
androidx.appcompat.app.AlertController: int mSingleChoiceItemLayout
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType STRUCTURED_APPEND_SEQUENCE
androidx.versionedparcelable.VersionedParcelParcel: int mNextRead
com.google.zxing.oned.Code39Reader: boolean extendedMode
com.google.android.gms.dynamic.DeferredLifecycleHelper: android.os.Bundle zarv
com.google.android.gms.signin.zab: com.google.android.gms.common.api.Api zasl
androidx.appcompat.R$drawable: int abc_seekbar_track_material
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
kotlinx.coroutines.internal.MainDispatchersKt: boolean SUPPORT_MISSING
androidx.arch.core.internal.SafeIterableMap$Entry: androidx.arch.core.internal.SafeIterableMap$Entry mNext
io.flutter.embedding.android.FlutterSplashView: java.lang.String TAG
androidx.fragment.app.FragmentTransition$1: androidx.core.os.CancellationSignal val$signal
androidx.fragment.app.FragmentTransition$5: androidx.fragment.app.Fragment val$inFragment
androidx.lifecycle.ClassesInfoCache: java.util.Map mCallbackMap
io.flutter.embedding.engine.FlutterEngineCache: java.util.Map cachedEngines
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode
androidx.fragment.app.BackStackState: java.util.ArrayList mSharedElementTargetNames
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.RotationListener rotationListener
com.google.firebase.components.OptionalProvider: com.google.firebase.inject.Deferred$DeferredHandler handler
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: android.view.View$OnFocusChangeListener val$userFocusListener
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol POLL_FAILED
androidx.core.R$styleable: int GradientColor_android_centerY
androidx.interpolator.view.animation.LinearOutSlowInInterpolator: float[] VALUES
androidx.appcompat.R$styleable: int Toolbar_titleMarginTop
com.google.android.gms.common.api.internal.ListenerHolder: com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey zajo
com.google.android.gms.common.api.internal.zacp: com.google.android.gms.common.api.Status zalb
com.google.firebase.database.core.ValidationPath: int byteLength
io.flutter.plugins.firebase.database.TransactionHandler: io.flutter.plugin.common.MethodChannel channel
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization SENTENCES
androidx.fragment.app.SpecialEffectsController: android.view.ViewGroup mContainer
com.google.android.gms.internal.location.zzo: android.os.Parcelable$Creator CREATOR
com.google.firebase.database.core.view.ViewCache: com.google.firebase.database.core.view.CacheNode serverSnap
androidx.appcompat.widget.ThemeUtils: int[] NOT_PRESSED_OR_FOCUSED_STATE_SET
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.WeakHashMap activityWindowLayoutInfo
androidx.core.content.FileProvider: java.util.HashMap sCache
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol SEALED
com.google.android.gms.common.api.internal.BackgroundDetector: java.util.concurrent.atomic.AtomicBoolean zzau
com.journeyapps.barcodescanner.CameraPreview: android.os.Handler stateHandler
androidx.fragment.R$styleable: int[] ColorStateListItem
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.content.Context mContext
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.drawable.Drawable mWindowContentOverlay
com.google.firebase.database.core.persistence.TrackedQuery: long id
com.google.firebase.database.core.Repo$10: com.google.firebase.database.core.Repo this$0
com.google.firebase.database.core.Repo$TransactionStatus: com.google.firebase.database.core.Repo$TransactionStatus SENT_NEEDS_ABORT
com.google.android.gms.maps.zzz: com.google.android.gms.maps.GoogleMap$OnMapLongClickListener zzah
com.google.firebase.database.core.Path: int start
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
androidx.appcompat.view.menu.StandardMenuPopup: android.content.Context mContext
io.flutter.plugins.googlemaps.TileProviderController$Worker: int zoom
com.google.android.gms.common.api.GoogleApi$Settings$Builder: android.os.Looper zabl
androidx.activity.ComponentActivity: java.util.concurrent.atomic.AtomicInteger mNextLocalRequestCode
com.google.firebase.FirebaseApp: java.util.concurrent.Executor UI_EXECUTOR
com.google.zxing.oned.rss.AbstractRSSReader: int[] evenCounts
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.Map consumerToJobMap
com.google.firebase.database.core.Repo$19: com.google.firebase.database.core.Repo this$0
com.baseflow.geolocator.GeolocatorPlugin: com.baseflow.geolocator.location.LocationAccuracyManager locationAccuracyManager
com.journeyapps.barcodescanner.BarcodeView: com.journeyapps.barcodescanner.BarcodeCallback callback
androidx.window.layout.SidecarWindowBackend: java.lang.String TAG
androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mRequestPermissions
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] FOR_BITS
com.google.android.gms.common.api.internal.zad: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl zacp
androidx.appcompat.R$color: int abc_tint_btn_checkable
com.google.firebase.database.collection.RBTreeSortedMap$Builder: com.google.firebase.database.collection.ImmutableSortedMap$Builder$KeyTranslator keyTranslator
androidx.appcompat.view.menu.MenuItemImpl: java.lang.Runnable mItemCallback
io.flutter.plugins.googlemaps.MarkerController: com.google.android.gms.maps.model.Marker marker
com.google.firebase.database.snapshot.StringNode: java.lang.String value
com.google.zxing.client.android.R$color: int zxing_result_view
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: androidx.core.view.ActionProvider$VisibilityListener mListener
androidx.appcompat.widget.AppCompatBackgroundHelper: androidx.appcompat.widget.AppCompatDrawableManager mDrawableManager
androidx.appcompat.widget.ForwardingListener: int mTapTimeout
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuBuilder$ItemInvoker mItemInvoker
kotlin.jvm.internal.CallableReference: java.lang.Class owner
androidx.appcompat.widget.SuggestionsAdapter: int mText1Col
androidx.appcompat.widget.ScrollingTabContainerView: int mMaxTabWidth
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String vmSnapshotData
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: android.graphics.Rect childRect
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
androidx.core.widget.AutoScrollHelper: boolean mNeedsReset
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineBroadcastReceiverPluginBinding broadcastReceiverPluginBinding
com.google.android.gms.common.internal.zze: java.util.HashMap zzdu
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemCategoryOrder
com.google.firebase.database.DatabaseError: java.util.Map errorReasons
com.google.firebase.database.OnDisconnect$1: com.google.firebase.database.snapshot.Node val$node
kotlinx.coroutines.scheduling.LimitingDispatcher: int taskMode
com.google.firebase.database.connection.ConnectionContext: java.lang.String clientSdkVersion
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityAction
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: android.view.ViewGroup mParent
androidx.appcompat.app.WindowDecorActionBar: boolean mNowShowing
com.google.firebase.database.DatabaseReference$3: java.util.Map val$bouncedUpdate
com.google.firebase.platforminfo.DefaultUserAgentPublisher: com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar gamesSDKRegistrar
androidx.appcompat.widget.Toolbar: boolean mEatingHover
com.google.firebase.database.OnDisconnect$3: com.google.firebase.database.core.utilities.Pair val$wrapped
kotlinx.coroutines.scheduling.LimitingDispatcher: java.util.concurrent.atomic.AtomicIntegerFieldUpdater inFlightTasks$FU
androidx.core.provider.FontRequest: java.lang.String mProviderAuthority
io.flutter.plugins.urllauncher.UrlLauncher: android.content.Context applicationContext
io.flutter.embedding.engine.renderer.FlutterRenderer: android.view.Surface surface
com.google.firebase.database.core.Path: com.google.firebase.database.snapshot.ChildKey[] pieces
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
androidx.activity.ComponentActivity$1: androidx.activity.ComponentActivity this$0
com.google.android.gms.tasks.zzu: java.lang.Object mLock
androidx.fragment.app.Fragment: boolean mUserVisibleHint
androidx.core.widget.TextViewCompat$OreoCallback: android.widget.TextView mTextView
androidx.fragment.app.FragmentContainerView: boolean mDrawDisappearingViewsFirst
com.google.android.gms.common.api.GoogleApiClient: java.util.Set zacj
com.google.firebase.database.connection.PersistentConnectionImpl: long requestCounter
io.flutter.view.AccessibilityBridge$SemanticsNode: int platformViewId
com.google.firebase.database.core.SyncTree: com.google.firebase.database.logging.LogWrapper logger
androidx.fragment.app.BackStackState: int[] mOldMaxLifecycleStates
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence mTitleCondensed
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean zzam
com.google.zxing.client.android.BeepManager: boolean beepEnabled
androidx.appcompat.widget.MenuPopupWindow: java.lang.reflect.Method sSetTouchModalMethod
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode[] $VALUES
com.google.firebase.FirebaseApp: com.google.firebase.components.Lazy dataCollectionConfigStorage
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat UPC_E
com.lyokone.location.FlutterLocationService: io.flutter.plugin.common.MethodChannel$Result result
androidx.appcompat.R$drawable: int abc_btn_default_mtrl_shape
androidx.fragment.app.SpecialEffectsController$3: int[] $SwitchMap$androidx$fragment$app$SpecialEffectsController$Operation$LifecycleImpact
kotlin.text.DelimitedRangesSequence: int limit
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] $VALUES
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence mTitle
androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mDrawableCaches
androidx.appcompat.app.AlertController$AlertParams$4: androidx.appcompat.app.AlertController$RecycleListView val$listView
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback
io.flutter.plugins.googlemaps.TileProviderController: io.flutter.plugin.common.MethodChannel methodChannel
com.google.firebase.database.snapshot.IndexedNode: com.google.firebase.database.snapshot.Node node
androidx.appcompat.R$styleable: int LinearLayoutCompat_measureWithLargestChild
com.google.android.gms.common.api.internal.GoogleApiManager: long zaid
androidx.fragment.app.SpecialEffectsController$2: androidx.fragment.app.SpecialEffectsController this$0
io.flutter.plugin.platform.PlatformPlugin$2: io.flutter.plugin.platform.PlatformPlugin this$0
androidx.multidex.ZipUtil$CentralDirectory: long offset
com.google.android.gms.maps.model.PolygonOptions: float zzcs
com.journeyapps.barcodescanner.camera.AutoFocusManager: boolean stopped
androidx.appcompat.R$styleable: int RecycleListView_paddingTopNoTitle
androidx.appcompat.content.res.AppCompatResources: java.lang.ThreadLocal TL_TYPED_VALUE
androidx.collection.MapCollections$ArrayIterator: int mIndex
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_CHECKED_STATE
com.google.firebase.database.core.Repo$25: com.google.firebase.database.core.Repo this$0
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getSourceNodeId
androidx.appcompat.widget.TooltipCompatHandler: int mAnchorX
androidx.appcompat.R$styleable: int PopupWindow_overlapAnchor
androidx.appcompat.view.SupportMenuInflater$MenuState: int groupCheckable
androidx.appcompat.widget.ListPopupWindow: android.widget.PopupWindow mPopup
androidx.core.view.NestedScrollingParentHelper: int mNestedScrollAxesTouch
com.google.firebase.database.connection.util.StringListReader: java.util.List strings
io.flutter.plugins.googlemaps.PolygonController: java.lang.String googleMapsPolygonId
com.google.firebase.FirebaseApp: java.util.Map INSTANCES
androidx.exifinterface.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_1
androidx.appcompat.widget.ListPopupWindow: android.content.Context mContext
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$DeviceOrientation
com.google.firebase.database.core.view.Event$EventType: com.google.firebase.database.core.view.Event$EventType[] $VALUES
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: androidx.core.graphics.PathParser$PathDataNode[] mNodeArray
com.google.firebase.database.core.WriteTree$1: boolean val$includeHiddenWrites
androidx.appcompat.app.AlertController: android.view.Window mWindow
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl mActionMode
io.flutter.plugin.editing.ListenableEditingState$1: io.flutter.plugin.editing.ListenableEditingState this$0
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache: java.lang.reflect.Method getDescriptorMethod
com.google.android.gms.maps.model.zzs: com.google.android.gms.maps.model.TileOverlayOptions zzem
androidx.fragment.app.Fragment: android.os.Bundle mArguments
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: android.content.Context applicationContext
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mScaleX
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: int mChangingConfigurations
com.google.android.gms.common.stats.ConnectionTracker: java.util.List zzfe
androidx.core.R$id: int tag_transition_group
io.flutter.view.AccessibilityBridge$SemanticsNode: int currentValueLength
androidx.appcompat.R$attr: int actionDropDownStyle
com.google.android.gms.tasks.zzm: java.lang.Object mLock
kotlinx.coroutines.EventLoopImplBase: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _queue$FU
androidx.appcompat.view.menu.ListMenuItemView: boolean mHasListDivider
androidx.fragment.app.Fragment: boolean mMenuVisible
com.google.android.gms.maps.model.MarkerOptions: boolean zzdr
com.journeyapps.barcodescanner.camera.CameraSettings: boolean autoFocusEnabled
com.google.zxing.qrcode.detector.AlignmentPatternFinder: int startY
androidx.core.graphics.Insets: int top
io.flutter.embedding.android.FlutterView$3: io.flutter.embedding.android.FlutterView this$0
androidx.exifinterface.media.ExifInterface: java.util.HashSet sTagSetForCompatibility
kotlin.collections.EmptySet: kotlin.collections.EmptySet INSTANCE
io.flutter.embedding.engine.dart.DartMessenger: java.util.Map messageHandlers
androidx.appcompat.R$id: int topPanel
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: io.flutter.plugin.common.MethodChannel this$0
com.google.android.gms.common.api.internal.zabh: com.google.android.gms.common.api.internal.GoogleApiManager zaia
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: kotlin.coroutines.CoroutineContext $context
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable$ConstantState mDelegateState
com.google.firebase.database.connection.HostInfo: java.lang.String host
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzk zzih
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_IMPLICIT_SCROLLING
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine flutterEngine
io.flutter.plugins.pathprovider.PathProviderPlugin: io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderImpl impl
androidx.appcompat.widget.ListPopupWindow$2: androidx.appcompat.widget.ListPopupWindow this$0
com.google.firebase.database.core.SyncTree$16: com.google.firebase.database.core.SyncTree this$0
androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.ResourceManagerInternal mResourceManager
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature INVERT_COLORS
com.google.firebase.database.connection.CompoundHash: java.util.List posts
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SettingsChannel settingsChannel
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: android.content.res.Resources mResources
io.flutter.plugins.googlemaps.CircleBuilder: com.google.android.gms.maps.model.CircleOptions circleOptions
com.google.android.gms.maps.MapView$zza: android.view.View zzbi
com.google.android.gms.maps.model.LatLngBounds: android.os.Parcelable$Creator CREATOR
com.google.firebase.database.core.operation.Operation$OperationType: com.google.firebase.database.core.operation.Operation$OperationType[] $VALUES
androidx.appcompat.widget.ScrollingTabContainerView: int mContentHeight
androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToLifecycleContainers
io.flutter.FlutterInjector$Builder: java.util.concurrent.ExecutorService executorService
com.google.android.gms.common.api.AvailabilityException: androidx.collection.ArrayMap zaba
com.google.zxing.LuminanceSource: int height
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback
com.google.firebase.database.core.utilities.Tree$1: boolean val$childrenFirst
com.google.firebase.FirebaseApp: java.util.List lifecycleListeners
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
io.flutter.embedding.android.FlutterSplashView: java.lang.String transitioningIsolateId
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType MEDIUM_IMPACT
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.content.Context flutterAppWindowContext
com.lyokone.location.FlutterLocationService: com.lyokone.location.FlutterLocation location
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.BasePendingResult$zaa mResultGuardian
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryOwner mOwner
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay BOTTOM_OVERLAYS
com.journeyapps.barcodescanner.ViewfinderView: java.util.List lastPossibleResultPoints
androidx.appcompat.R$styleable: int AppCompatTheme_windowMinWidthMajor
com.google.firebase.database.FirebaseDatabase: com.google.firebase.database.core.RepoInfo repoInfo
androidx.appcompat.app.AlertController: android.widget.ListView mListView
com.google.firebase.database.core.ValueEventRegistration: com.google.firebase.database.core.Repo repo
androidx.core.app.NotificationCompat$Builder: java.lang.String mGroupKey
com.google.zxing.common.detector.WhiteRectangleDetector: int width
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] inverseTransform
com.lyokone.location.NotificationOptions: java.lang.String description
com.google.android.gms.tasks.Tasks$zzc: boolean zzak
com.google.zxing.pdf417.decoder.Codeword: int value
androidx.appcompat.widget.AppCompatSeekBarHelper: android.graphics.PorterDuff$Mode mTickMarkTintMode
androidx.appcompat.widget.ResourcesWrapper: android.content.res.Resources mResources
androidx.appcompat.R$attr: int colorAccent
androidx.appcompat.R$styleable: int AlertDialog_showTitle
com.google.firebase.database.DatabaseError: java.lang.String details
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mLastInnerInsets
com.google.firebase.database.android.AndroidEventTarget: android.os.Handler handler
com.google.firebase.database.core.Repo$9: com.google.android.gms.tasks.TaskCompletionSource val$source
androidx.lifecycle.LiveData$1: androidx.lifecycle.LiveData this$0
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode: com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode[] $VALUES
com.google.firebase.database.connection.PersistentConnectionImpl: com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState connectionState
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mHasYOffset
com.google.firebase.database.FirebaseDatabase: com.google.firebase.FirebaseApp app
com.google.firebase.database.snapshot.CompoundHash$1: com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder val$state
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel this$0
androidx.appcompat.R$styleable: int MenuItem_iconTintMode
androidx.exifinterface.media.ExifInterface: int mOrfThumbnailOffset
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowInfoTrackerImpl$Companion Companion
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: io.flutter.embedding.engine.systemchannels.AccessibilityChannel this$0
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuffColorFilter mTintFilter
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness statusBarIconBrightness
androidx.appcompat.widget.DropDownListView: boolean mListSelectionHidden
com.baseflow.geolocator.location.AndroidIconResource: java.lang.String defType
io.flutter.plugins.googlemaps.CircleController: boolean consumeTapEvents
com.google.android.gms.common.GooglePlayServicesUtilLight: boolean zzai
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
androidx.fragment.app.FragmentManager$2: androidx.fragment.app.FragmentManager this$0
androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureProgress
androidx.window.R$attr: int splitLayoutDirection
com.google.android.gms.common.api.internal.ApiKey: int zacy
com.google.zxing.pdf417.decoder.ec.ModulusGF: int modulus
kotlinx.coroutines.channels.AbstractSendChannel: java.util.concurrent.atomic.AtomicReferenceFieldUpdater onCloseHandler$FU
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State HALF_OPENED
com.google.firebase.database.core.RepoManager: com.google.firebase.database.core.RepoManager instance
androidx.core.widget.NestedScrollView: long mLastScroll
androidx.fragment.app.FragmentTransaction: boolean mAllowAddToBackStack
com.google.firebase.database.core.Context: boolean frozen
com.google.android.gms.common.internal.ResolveAccountResponse: com.google.android.gms.common.ConnectionResult zapo
com.google.firebase.database.core.Repo$TransactionData: com.google.firebase.database.snapshot.Node currentInputSnapshot
com.google.firebase.database.core.DatabaseConfig$1: int[] $SwitchMap$com$google$firebase$database$Logger$Level
androidx.appcompat.widget.ActivityChooserView$InnerLayout: int[] TINT_ATTRS
com.google.firebase.database.connection.PersistentConnectionImpl: java.lang.String appCheckToken
androidx.appcompat.view.menu.BaseMenuPresenter: android.content.Context mContext
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mWriteCache
androidx.appcompat.R$styleable: int[] ActionMenuItemView
com.google.firebase.database.core.Repo$10: long val$writeId
androidx.appcompat.widget.ScrollingTabContainerView: java.lang.Runnable mTabSelector
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: androidx.appcompat.view.ViewPropertyAnimatorCompatSet this$0
androidx.collection.LruCache: java.util.LinkedHashMap map
io.flutter.plugins.pathprovider.PathProviderPlugin: android.content.Context context
androidx.appcompat.widget.AppCompatImageHelper: androidx.appcompat.widget.TintInfo mImageTint
com.google.zxing.oned.rss.expanded.decoders.FieldParser: java.lang.Object VARIABLE_LENGTH
com.google.firebase.database.android.AndroidPlatform$1$1: java.lang.String val$message
kotlinx.coroutines.CancellableContinuationImpl: int _decision
com.google.firebase.database.core.utilities.DefaultRunLoop$1: com.google.firebase.database.core.utilities.DefaultRunLoop this$0
androidx.core.view.WindowInsetsCompat$BuilderImpl20: java.lang.reflect.Field sConsumedField
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.Result zacl
androidx.appcompat.widget.TooltipPopup: android.graphics.Rect mTmpDisplayFrame
androidx.appcompat.widget.SearchView: android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGFPoly one
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets
androidx.appcompat.widget.Toolbar: int mGravity
androidx.exifinterface.media.ExifInterface: byte[] HEIF_BRAND_HEIC
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable
io.flutter.plugins.googlemaps.PolylineController: boolean consumeTapEvents
com.google.android.gms.maps.model.TileOverlayOptions: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mExitTransition
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag TAG_RAF_IMAGE_SIZE
androidx.appcompat.widget.AppCompatSpinner: int mDropDownWidth
com.google.zxing.client.android.BeepManager: boolean vibrateEnabled
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_LEFT
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_HTML_ELEMENT
androidx.appcompat.widget.AppCompatImageButton: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
com.google.android.gms.location.LocationServices: com.google.android.gms.common.api.Api API
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: int mFinalVisibility
com.google.android.gms.tasks.Tasks$zzc: java.lang.Object mLock
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String label
com.journeyapps.barcodescanner.BarcodeView$DecodeMode: com.journeyapps.barcodescanner.BarcodeView$DecodeMode CONTINUOUS
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mVirtualDescendantId
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: java.util.List currentHashes
androidx.appcompat.widget.Toolbar: boolean mCollapsible
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: android.animation.AnimatorSet mAnimatorSet
io.flutter.embedding.android.FlutterView$1: io.flutter.embedding.android.FlutterView this$0
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.embedding.engine.FlutterJNI flutterJNI
androidx.fragment.app.Fragment: int mBackStackNesting
com.google.android.gms.internal.location.zzax: com.google.android.gms.common.api.internal.ListenerHolder zzda
com.google.android.gms.common.internal.BaseGmsClient$LegacyClientCallbackAdapter: com.google.android.gms.common.internal.BaseGmsClient zzct
io.flutter.plugins.googlemaps.CircleController: java.lang.String googleMapsCircleId
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: int mSlop
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo val$nextInfo
kotlinx.coroutines.channels.ArrayChannel: int head
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness systemNavigationBarIconBrightness
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: java.util.List zaja
androidx.core.app.NotificationCompat$Builder: boolean mColorized
androidx.fragment.app.FragmentHostCallback: android.app.Activity mActivity
androidx.core.widget.AutoScrollHelper: float[] mRelativeVelocity
androidx.core.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.google.firebase.database.connection.ConnectionContext: com.google.firebase.database.logging.Logger logger
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared
com.journeyapps.barcodescanner.camera.CameraSettings: boolean meteringEnabled
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType OPACITY
androidx.fragment.app.BackStackState: boolean mReorderingAllowed
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets
com.google.zxing.qrcode.detector.Detector: com.google.zxing.common.BitMatrix image
androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpIsPop
com.google.zxing.pdf417.decoder.BoundingBox: com.google.zxing.ResultPoint bottomRight
io.flutter.plugins.googlemaps.GoogleMapController: io.flutter.plugins.googlemaps.PolygonsController polygonsController
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry: android.content.res.ColorStateList value
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD
com.google.firebase.database.core.persistence.PruneForest$3: com.google.firebase.database.core.persistence.PruneForest this$0
com.journeyapps.barcodescanner.Decoder: java.util.List possibleResultPoints
com.google.android.gms.base.R$string: int common_open_on_phone
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode opaque
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat AZTEC
com.google.firebase.database.connection.WebsocketConnection: java.util.concurrent.ScheduledExecutorService executorService
androidx.appcompat.R$styleable: int SearchView_queryHint
kotlinx.coroutines.JobSupport$ChildCompletion: kotlinx.coroutines.JobSupport$Finishing state
com.google.zxing.aztec.detector.Detector: int[] EXPECTED_CORNER_BITS
androidx.appcompat.widget.SearchView: android.graphics.Rect mSearchSrcTextViewBounds
androidx.appcompat.widget.Toolbar: androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: long minDelayUntilStealableTaskNs
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Boolean mAllowReturnTransitionOverlap
androidx.appcompat.R$styleable: int SearchView_android_imeOptions
com.google.zxing.common.CharacterSetECI: int[] values
com.google.firebase.database.Query: com.google.firebase.database.core.Repo repo
com.google.firebase.database.core.SyncTree$1: com.google.firebase.database.snapshot.Node val$newDataUnresolved
androidx.exifinterface.media.ExifInterface: java.nio.charset.Charset ASCII
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: android.content.Context mResolvedContext
com.google.zxing.pdf417.decoder.Codeword: int endX
androidx.appcompat.R$styleable: int[] StateListDrawableItem
kotlinx.coroutines.internal.ExceptionsConstuctorKt: java.util.concurrent.locks.ReentrantReadWriteLock cacheLock
com.google.firebase.database.tubesock.WebSocket: java.nio.charset.Charset UTF8
com.google.firebase.database.core.view.Change: com.google.firebase.database.snapshot.IndexedNode indexedNode
com.google.zxing.qrcode.decoder.BitMatrixParser: boolean mirror
androidx.appcompat.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mNavIcon
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_MOVE_WINDOW
androidx.multidex.MultiDexExtractor: long sourceCrc
kotlin.internal.PlatformImplementations$ReflectThrowable: java.lang.reflect.Method addSuppressed
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable: androidx.appcompat.widget.ActionMenuPresenter this$0
kotlinx.coroutines.InvokeOnCancelling: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _invoked$FU
io.flutter.plugins.urllauncher.WebViewActivity: android.webkit.WebViewClient webViewClient
com.google.firebase.database.core.view.QueryParams: com.google.firebase.database.snapshot.ChildKey indexStartName
com.google.android.gms.common.api.internal.zaad: androidx.collection.ArraySet zafs
com.journeyapps.barcodescanner.CaptureManager$2: com.journeyapps.barcodescanner.CaptureManager this$0
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String previousValue
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.GmsClientSupervisor zzcb
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputMethodManager mImm
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.content.ComponentName componentName
com.google.firebase.database.core.operation.Merge: com.google.firebase.database.core.CompoundWrite children
androidx.fragment.app.FragmentManager$7: androidx.fragment.app.Fragment val$fragment
androidx.appcompat.view.menu.ListMenuItemView: android.graphics.drawable.Drawable mBackground
com.google.android.gms.internal.location.zzbd: java.lang.String moduleId
kotlinx.coroutines.internal.MainDispatcherLoader: boolean FAST_SERVICE_LOADER_ENABLED
androidx.core.app.RemoteActionCompat: androidx.core.graphics.drawable.IconCompat mIcon
com.google.firebase.database.core.SyncTree$ListenContainer: com.google.firebase.database.core.SyncTree this$0
kotlinx.coroutines.InvokeOnCancelling: kotlin.jvm.functions.Function1 handler
androidx.exifinterface.media.ExifInterface: boolean mIsExifDataOnly
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes locationServicesDisabled
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mShowTitle
androidx.multidex.MultiDex$V14$ICSElementConstructor: java.lang.reflect.Constructor elementConstructor
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler channelHandler
com.google.android.gms.tasks.Tasks$zzc: java.lang.Exception zzab
com.google.zxing.qrcode.detector.FinderPattern: int count
com.google.firebase.database.connection.util.RetryHelper$Builder: com.google.firebase.database.logging.LogWrapper logger
androidx.core.R$id: int tag_state_description
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: int retryCount
com.google.zxing.qrcode.decoder.FormatInformation: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel errorCorrectionLevel
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
com.google.zxing.pdf417.decoder.BoundingBox: int maxX
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int prevLeft
androidx.appcompat.R$styleable: int AppCompatSeekBar_tickMark
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode[] $VALUES
androidx.appcompat.app.ActionBar$LayoutParams: int gravity
androidx.appcompat.R$drawable: int abc_ratingbar_small_material
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Number downTime
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_UP
androidx.collection.SparseArrayCompat: java.lang.Object[] mValues
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: int id
kotlinx.coroutines.CompletedContinuation: kotlinx.coroutines.CancelHandler cancelHandler
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.Status zaic
androidx.collection.ArraySet: java.lang.Object[] mArray
io.flutter.plugins.googlemaps.PolygonController: com.google.android.gms.maps.model.Polygon polygon
com.google.firebase.database.core.utilities.ImmutableTree: com.google.firebase.database.collection.ImmutableSortedMap children
androidx.activity.result.IntentSenderRequest: int mFlagsValues
com.google.firebase.database.connection.PersistentConnectionImpl$6: java.lang.Long val$readId
androidx.appcompat.view.menu.ActionMenuItemView: int mMinWidth
com.google.firebase.database.connection.PersistentConnectionImpl$5: com.google.firebase.database.connection.PersistentConnectionImpl this$0
androidx.window.core.Version: androidx.window.core.Version$Companion Companion
androidx.appcompat.widget.ResourceManagerInternal: boolean mHasCheckedVectorDrawableSetup
com.google.firebase.database.snapshot.ChildrenNode$2: boolean passedPriorityKey
androidx.lifecycle.SingleGeneratedAdapterObserver: androidx.lifecycle.GeneratedAdapter mGeneratedAdapter
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.content.BroadcastReceiver broadcastReceiver
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: char[] TEXT_BASIC_SET_CHARS
androidx.appcompat.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection lastInputConnection
com.google.firebase.database.tubesock.WebSocket: java.util.concurrent.ThreadFactory threadFactory
com.google.firebase.database.tubesock.WebSocket: java.net.Socket socket
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
io.flutter.plugins.imagepicker.ImagePickerDelegate: java.io.File externalFilesDirectory
com.journeyapps.barcodescanner.ViewfinderView: int scannerAlpha
androidx.core.R$styleable: int GradientColorItem_android_color
com.google.android.gms.common.api.internal.TaskApiCall: com.google.android.gms.common.Feature[] zakh
androidx.multidex.MultiDexExtractor: java.nio.channels.FileLock cacheLock
androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] $VALUES
com.google.android.gms.location.zzp: com.google.android.gms.tasks.TaskCompletionSource zzab
androidx.fragment.app.DialogFragment: boolean mShownByMe
androidx.appcompat.R$styleable: int Toolbar_popupTheme
com.google.android.gms.common.zzc: java.lang.Object zzo
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient$1: io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient this$1
androidx.core.provider.FontsContractCompat$FontInfo: int mWeight
com.google.android.gms.location.LocationSettingsStates: boolean zzbr
com.journeyapps.barcodescanner.CameraPreview: android.view.SurfaceView surfaceView
com.google.zxing.oned.rss.expanded.RSSExpandedReader: int[] GSUM
com.google.android.gms.location.LocationSettingsStates: boolean zzbs
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: int bits
com.google.firebase.database.core.persistence.PruneForest: com.google.firebase.database.core.utilities.ImmutableTree pruneForest
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedPadding
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingAdapter adapter
androidx.appcompat.widget.SearchView$9: androidx.appcompat.widget.SearchView this$0
androidx.window.core.Bounds: int right
androidx.appcompat.widget.TintInfo: boolean mHasTintMode
androidx.appcompat.R$dimen: int abc_search_view_preferred_width
androidx.core.R$id: int accessibility_custom_action_6
androidx.fragment.app.Fragment: java.util.ArrayList mOnPreAttachedListeners
androidx.appcompat.view.menu.BaseMenuWrapper: androidx.collection.SimpleArrayMap mMenuItems
com.google.zxing.client.android.R$styleable: int[] FontFamily
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
androidx.fragment.app.Fragment$AnimationInfo: float mPostOnViewCreatedAlpha
com.google.android.gms.common.internal.zzf: int mState
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int mChangingConfigurations
com.google.android.gms.signin.internal.zai: int zali
androidx.appcompat.R$color: int abc_tint_default
com.google.firebase.database.connection.Connection: com.google.firebase.database.logging.LogWrapper logger
com.google.android.gms.common.internal.GetServiceRequest: android.os.Bundle zzdk
androidx.appcompat.R$styleable: int SearchView_android_inputType
com.google.common.util.concurrent.AbstractFuture: java.lang.Object value
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat mRootWindowInsets
com.google.android.gms.location.zzn: com.google.android.gms.common.api.internal.ListenerHolder zzz
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.animation.ArgbEvaluator mArgbEvaluator
com.google.firebase.database.util.GAuthToken: java.util.Map auth
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.internal.GoogleApiAvailabilityCache zaij
androidx.appcompat.widget.SearchView: android.widget.AdapterView$OnItemClickListener mOnItemClickListener
androidx.fragment.app.FragmentManager$1: androidx.fragment.app.FragmentManager this$0
com.google.android.gms.common.api.UnsupportedApiCallException: com.google.android.gms.common.Feature zzas
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner
com.google.android.gms.common.GooglePlayServicesUtilLight: java.util.concurrent.atomic.AtomicBoolean sCanceledAvailabilityNotification
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType LOCALE
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector PRE_API_29_HIDDEN_METHOD_INVOKER
com.google.android.gms.base.R$string: int common_google_play_services_updating_text
androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] $VALUES
androidx.fragment.app.FragmentAnim$3: android.view.ViewGroup val$container
androidx.appcompat.app.AppCompatDelegateImpl: int[] sWindowBackgroundStyleable
androidx.fragment.app.Fragment$AnimationInfo: int mExitAnim
io.flutter.plugins.googlemaps.CircleBuilder: float density
androidx.activity.ComponentActivity$2$2: int val$requestCode
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingDisconnect: java.lang.String action
com.google.android.gms.signin.internal.zai: com.google.android.gms.common.internal.ResolveAccountRequest zasz
com.google.android.gms.common.internal.BaseGmsClient: long zzbv
io.flutter.embedding.android.FlutterView: boolean isFlutterUiDisplayed
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_IN_MUTUALLY_EXCLUSIVE_GROUP
com.google.firebase.database.android.SqlPersistenceStorageEngine$2: com.google.firebase.database.core.utilities.ImmutableTree val$rowIdsToKeep
com.google.firebase.components.ComponentRuntime: java.util.Map lazySetMap
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] $VALUES
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_4
androidx.appcompat.R$styleable: int View_theme
androidx.appcompat.view.menu.CascadingMenuPopup: androidx.appcompat.widget.MenuItemHoverListener mMenuItemHoverListener
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.Class sFontFamily
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_KEYFRAME
com.google.firebase.database.android.AndroidAuthTokenProvider: java.util.concurrent.atomic.AtomicReference internalAuth
io.flutter.view.VsyncWaiter$1$1: io.flutter.view.VsyncWaiter$1 this$1
com.google.firebase.database.tubesock.WebSocketWriter: boolean stop
androidx.window.layout.DisplayCompatHelperApi17: androidx.window.layout.DisplayCompatHelperApi17 INSTANCE
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] $VALUES
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mEffectiveRampDown
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] $VALUES
io.flutter.plugins.googlemaps.CirclesController: java.util.Map circleIdToController
androidx.core.R$styleable: int GradientColor_android_gradientRadius
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat mInsets
androidx.activity.ComponentActivity$NonConfigurationInstances: java.lang.Object custom
com.google.android.gms.location.zzaj: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.ActivityFilter: java.lang.String intentAction
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission denied
androidx.collection.LongSparseArray: boolean mGarbage
androidx.appcompat.widget.SuggestionsAdapter: int mText2Col
io.flutter.plugins.imagepicker.CameraDevice: io.flutter.plugins.imagepicker.CameraDevice REAR
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$UpdatableTouchDelegate mTouchDelegate
androidx.multidex.MultiDex$V14$JBMR11ElementConstructor: java.lang.reflect.Constructor elementConstructor
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
com.google.zxing.pdf417.PDF417Common: int[] CODEWORD_TABLE
androidx.appcompat.widget.AppCompatBackgroundHelper: androidx.appcompat.widget.TintInfo mTmpInfo
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
androidx.appcompat.R$layout: int abc_tooltip
com.google.android.gms.maps.CameraUpdate: com.google.android.gms.dynamic.IObjectWrapper zze
com.google.zxing.oned.rss.AbstractRSSReader: int[] dataCharacterCounters
androidx.appcompat.view.menu.ActionMenuItemView: int mSavedPaddingLeft
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop
androidx.appcompat.widget.TooltipCompatHandler: int mAnchorY
com.google.android.gms.maps.model.LatLng: double longitude
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.InputMethodManager mImm
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: boolean mAnimating
com.google.firebase.database.core.SyncTree$1: boolean val$persist
com.google.firebase.database.core.SyncTree$14: com.google.firebase.database.core.view.QuerySpec val$query
io.flutter.embedding.android.FlutterView: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener
com.google.firebase.database.snapshot.IndexedNode: com.google.firebase.database.snapshot.Index index
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean itemChecked
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry: android.content.res.Configuration configuration
com.google.android.gms.signin.SignInOptions: boolean zasp
com.journeyapps.barcodescanner.DefaultDecoderFactory: java.util.Map hints
com.lyokone.location.NotificationOptions: java.lang.String title
androidx.core.provider.CallbackWithHandler: androidx.core.provider.FontsContractCompat$FontRequestCallback mCallback
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact ADDING
androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback mHost
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus NO_ACTIVITY
com.google.firebase.database.tubesock.WebSocket: com.google.firebase.database.tubesock.WebSocketEventHandler eventHandler
io.flutter.plugins.googlemaps.MarkersController: java.util.Map markerIdToController
io.flutter.plugin.common.MethodCall: java.lang.String method
com.baseflow.geolocator.location.LocationManagerClient: android.location.LocationManager locationManager
com.google.firebase.database.connection.PersistentConnectionImpl: long writeCounter
com.google.zxing.oned.ITFReader: int[] START_PATTERN
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: java.lang.String encodedName
androidx.fragment.app.Fragment: float mPostponedAlpha
io.flutter.plugins.imagepicker.ImagePickerDelegate$3: io.flutter.plugins.imagepicker.ImagePickerDelegate this$0
androidx.appcompat.R$styleable: int AppCompatTextView_drawableLeftCompat
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1: io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1 this$1
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar
androidx.appcompat.view.menu.MenuItemImpl: boolean mHasIconTint
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay TOP_OVERLAYS
androidx.fragment.app.DialogFragment: boolean mDismissed
androidx.savedstate.SavedStateRegistry$1: androidx.savedstate.SavedStateRegistry this$0
androidx.core.app.Person: java.lang.CharSequence mName
com.google.firebase.database.logging.LogWrapper: java.lang.String prefix
androidx.lifecycle.LiveData: java.lang.Object NOT_SET
androidx.appcompat.R$styleable: int[] AnimatedStateListDrawableCompat
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NONE
androidx.window.embedding.MatcherUtils: java.lang.String sMatchersTag
com.journeyapps.barcodescanner.camera.CameraManager: com.google.zxing.client.android.AmbientLightManager ambientLightManager
androidx.appcompat.widget.AppCompatCompoundButtonHelper: boolean mSkipNextApply
com.google.firebase.database.connection.HostInfo: boolean secure
androidx.core.view.LayoutInflaterCompat: java.lang.reflect.Field sLayoutInflaterFactory2Field
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean frameworkHasRequestedData
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mPath
com.google.firebase.database.core.persistence.TrackedQueryManager: long currentQueryId
com.google.firebase.database.core.Path$1: int offset
com.google.firebase.database.collection.RBTreeSortedMap$Builder: com.google.firebase.database.collection.LLRBValueNode leaf
com.journeyapps.barcodescanner.RawImageData: int width
androidx.appcompat.widget.ActionBarOverlayLayout: int mActionBarHeight
com.google.android.gms.common.api.internal.GoogleApiManager: long zaif
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DISMISS
com.google.firebase.database.core.Repo$TransactionData: boolean applyLocally
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mInnerInsets
androidx.appcompat.R$id: int contentPanel
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType ERROR_CORRECTION_LEVEL
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
androidx.appcompat.widget.ActionBarBackgroundDrawable: androidx.appcompat.widget.ActionBarContainer mContainer
androidx.appcompat.R$styleable: int CompoundButton_buttonTintMode
com.google.zxing.MultiFormatReader: java.util.Map hints
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
io.flutter.view.VsyncWaiter: long refreshPeriodNanos
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: android.view.View mHostView
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: io.flutter.plugin.common.BinaryMessenger$BinaryReply val$callback
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.view.TextureRegistry$SurfaceTextureEntry textureEntry
kotlinx.coroutines.internal.AtomicKt: java.lang.Object RETRY_ATOMIC
com.google.firebase.database.core.view.Event$EventType: com.google.firebase.database.core.view.Event$EventType CHILD_REMOVED
androidx.core.provider.FontRequestWorker$1: androidx.core.provider.FontRequest val$request
androidx.appcompat.app.AppCompatViewInflater: int[] sOnClickAttrs
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat CODE_39
androidx.core.app.NotificationManagerCompat: java.util.Set sEnabledNotificationListenerPackages
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.content.Context mContext
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: com.google.android.gms.common.api.internal.zaz zaiu
androidx.appcompat.R$string: int abc_action_bar_up_description
com.baseflow.geolocator.GeolocatorLocationService: com.baseflow.geolocator.location.GeolocationManager geolocationManager
com.google.firebase.database.core.Context: com.google.firebase.database.core.persistence.PersistenceManager forcedPersistenceManager
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] $VALUES
com.google.firebase.database.core.Repo$9: com.google.firebase.database.Query val$query
com.google.firebase.database.Query$2: com.google.firebase.database.core.EventRegistration val$registration
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: long motionEventId
androidx.core.app.ActivityCompat$1: int val$requestCode
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode: com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode ALPHA
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.camera.CameraInstance cameraInstance
androidx.core.app.NotificationCompat$Builder: android.graphics.Bitmap mLargeIcon
androidx.appcompat.app.AlertController: java.lang.CharSequence mButtonNegativeText
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: double newLogicalWidth
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.plugin.common.BasicMessageChannel channel
com.google.android.gms.internal.location.zzbl: java.lang.String zzdq
kotlinx.coroutines.channels.Channel$Factory: int CHANNEL_DEFAULT_CAPACITY
androidx.appcompat.widget.AppCompatSeekBarHelper: android.widget.SeekBar mView
com.google.zxing.client.android.InactivityTimer: android.os.Handler handler
com.google.firebase.database.core.Repo$TransactionData: int retryCount
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment mLifecycleFragment
androidx.appcompat.R$drawable: int abc_text_select_handle_middle_mtrl
io.flutter.plugin.common.StandardMessageCodec: io.flutter.plugin.common.StandardMessageCodec INSTANCE
androidx.appcompat.R$id: int search_go_btn
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: androidx.appcompat.view.menu.MenuItemImpl mCurrentExpandedItem
androidx.fragment.app.FragmentManagerState: androidx.fragment.app.BackStackState[] mBackStack
androidx.appcompat.app.AppCompatDelegateImpl$1: java.lang.Thread$UncaughtExceptionHandler val$defHandler
io.flutter.embedding.engine.FlutterEngine: java.util.Set engineLifecycleListeners
io.flutter.plugin.platform.PlatformViewsController: java.util.HashMap vdControllers
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence mTitle
com.google.zxing.oned.rss.RSS14Reader: java.util.List possibleRightPairs
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter: androidx.core.content.res.ResourcesCompat$FontCallback mFontCallback
androidx.appcompat.R$styleable: int Toolbar_menu
com.google.firebase.database.core.view.QueryParams: java.lang.Integer limit
com.google.zxing.aztec.detector.Detector: int shift
com.google.firebase.database.core.utilities.ImmutableTree$1: com.google.firebase.database.core.utilities.ImmutableTree this$0
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.MethodCodec codec
com.google.android.gms.common.internal.BaseGmsClient: int zzbx
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$3: java.lang.reflect.Constructor $constructor$inlined
com.google.firebase.components.RestrictedComponentContainer: com.google.firebase.components.ComponentContainer delegateContainer
androidx.exifinterface.media.ExifInterface: java.util.regex.Pattern sGpsTimestampPattern
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder$Callback mCallback
androidx.core.R$id: int accessibility_custom_action_7
androidx.core.R$id: int accessibility_custom_action_26
com.google.zxing.common.GridSampler: com.google.zxing.common.GridSampler gridSampler
com.google.common.base.MoreObjects$ToStringHelper$ValueHolder: java.lang.String name
androidx.core.R$attr: int nestedScrollViewStyle
com.google.firebase.database.connection.PersistentConnectionImpl: java.util.concurrent.ScheduledExecutorService executorService
com.google.android.gms.common.internal.ClientSettings$Builder: android.view.View zaoj
com.google.zxing.oned.MultiFormatUPCEANReader: com.google.zxing.oned.UPCEANReader[] readers
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
androidx.appcompat.widget.SearchView$3: androidx.appcompat.widget.SearchView this$0
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean isOverflowButton
androidx.exifinterface.media.ExifInterface: byte[] PNG_CHUNK_TYPE_IEND
androidx.core.app.ActivityRecreator$3: java.lang.Object val$activityThread
com.google.android.gms.maps.model.Tile: int width
kotlin.jvm.internal.CallableReference: boolean isTopLevel
com.google.android.gms.common.api.internal.zzc: int zzbg
com.google.android.gms.common.internal.zzp: int zzeq
androidx.appcompat.widget.AppCompatTextHelper$1: int val$style
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.Boolean mIsStateful
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 this$1
androidx.appcompat.R$styleable: int Toolbar_collapseContentDescription
androidx.collection.MapCollections$ArrayIterator: int mOffset
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: boolean mCanceled
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.CharSequence itemTitle
com.google.android.gms.common.internal.ClientSettings: java.lang.Integer zaoo
androidx.appcompat.R$styleable: int AppCompatTextView_lineHeight
com.google.zxing.datamatrix.decoder.Version: int dataRegionSizeColumns
androidx.appcompat.R$styleable: int TextAppearance_fontFamily
com.google.firebase.database.connection.PersistentConnectionImpl: com.google.firebase.database.connection.HostInfo hostInfo
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.StatusExceptionMapper zabn
androidx.appcompat.R$styleable: int[] ButtonBarLayout
androidx.appcompat.R$styleable: int TextAppearance_android_textColor
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType STANDARD
androidx.appcompat.widget.SearchView: android.view.View mDropDownAnchor
io.flutter.plugins.googlemaps.GoogleMapController: boolean disposed
com.baseflow.geolocator.GeolocatorLocationService: android.app.Activity activity
com.google.zxing.qrcode.detector.FinderPattern: float estimatedModuleSize
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
androidx.appcompat.view.SupportMenuInflater: java.lang.Object[] mActionViewConstructorArguments
com.google.android.gms.common.api.GoogleApi: int mId
androidx.appcompat.widget.LinearLayoutCompat: int mBaselineAlignedChildIndex
io.flutter.plugin.platform.VirtualDisplayController: int densityDpi
androidx.core.app.NotificationCompat$Builder: long mTimeout
com.google.firebase.database.core.view.ViewCache: com.google.firebase.database.core.view.CacheNode eventSnap
com.google.zxing.oned.EAN13Reader: int[] FIRST_DIGIT_ENCODINGS
com.google.firebase.database.core.Repo: com.google.firebase.database.connection.PersistentConnection connection
com.google.firebase.database.core.utilities.PushIdGenerator: long lastPushTime
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate delegate
com.google.zxing.oned.rss.RSS14Reader: int[] OUTSIDE_GSUM
androidx.appcompat.R$drawable: int abc_seekbar_tick_mark_material
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_PROPERTY_ANIMATOR
com.journeyapps.barcodescanner.camera.CameraInstance: boolean open
io.flutter.plugins.googlemaps.GoogleMapBuilder: boolean myLocationButtonEnabled
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mRampDownDuration
com.google.zxing.common.DetectorResult: com.google.zxing.ResultPoint[] points
com.google.firebase.database.core.utilities.ParsedUrl: com.google.firebase.database.core.RepoInfo repoInfo
kotlinx.coroutines.channels.Closed: java.lang.Throwable closeCause
com.google.firebase.database.core.SparseSnapshotTree$1: com.google.firebase.database.core.SparseSnapshotTree this$0
com.google.android.gms.internal.location.zzbd: java.util.List zzm
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$1: int[] $SwitchMap$com$google$zxing$pdf417$decoder$DecodedBitStreamParser$Mode
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] $VALUES
kotlinx.coroutines.internal.DispatchedContinuation: kotlinx.coroutines.CoroutineDispatcher dispatcher
androidx.loader.app.LoaderManagerImpl$LoaderInfo: android.os.Bundle mArgs
com.google.zxing.common.BitMatrix: int width
androidx.core.app.NotificationManagerCompat: java.lang.Object sLock
androidx.appcompat.app.AlertController$2: android.view.View val$bottom
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String aotSharedLibraryName
io.flutter.view.AccessibilityBridge$SemanticsNode: int scrollIndex
io.flutter.plugins.googlemaps.MarkerController: java.lang.String googleMapsMarkerId
androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews
androidx.appcompat.widget.DropDownListView: androidx.appcompat.widget.DropDownListView$GateKeeperDrawable mSelector
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_16
com.baseflow.geolocator.location.LocationManagerClient: android.location.Location currentBestLocation
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo: androidx.fragment.app.SpecialEffectsController$Operation mOperation
io.flutter.plugins.googlemaps.TileOverlayBuilder: com.google.android.gms.maps.model.TileOverlayOptions tileOverlayOptions
com.google.zxing.pdf417.decoder.ec.ModulusGF: com.google.zxing.pdf417.decoder.ec.ModulusPoly one
com.google.firebase.database.core.SyncTree$10: com.google.firebase.database.core.SyncTree this$0
com.google.android.gms.common.api.internal.zabo: com.google.android.gms.common.api.internal.GoogleApiManager$zab zajk
com.journeyapps.barcodescanner.CameraPreview: android.os.Handler$Callback stateCallback
androidx.fragment.app.FragmentTransitionCompat21$4: java.lang.Runnable val$transitionCompleteRunnable
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat CODE_93
com.google.android.gms.internal.maps.zzc: java.lang.ClassLoader zzd
com.google.android.gms.common.util.CrashUtils: java.lang.String[] zzgg
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingBottom
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mLoader
androidx.appcompat.R$styleable: int ActionBar_subtitleTextStyle
androidx.fragment.app.FragmentStore: java.util.ArrayList mAdded
com.google.android.gms.maps.model.TileProvider: com.google.android.gms.maps.model.Tile NO_TILE
com.google.firebase.database.snapshot.IndexedNode: com.google.firebase.database.collection.ImmutableSortedSet FALLBACK_INDEX
androidx.core.view.ContentInfoCompat$Builder: android.os.Bundle mExtras
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_weightSum
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuPopup mPopup
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String uniqueIdentifier
androidx.appcompat.R$styleable: int[] AnimatedStateListDrawableItem
com.journeyapps.barcodescanner.camera.CameraInstance$3: com.journeyapps.barcodescanner.camera.CameraInstance this$0
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] $VALUES
io.flutter.plugin.editing.InputConnectionAdaptor: boolean mMonitorCursorUpdate
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COLLAPSE
com.google.firebase.database.tubesock.MessageBuilderFactory$TextBuilder: java.nio.ByteBuffer carryOver
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousNodeId
androidx.appcompat.widget.AppCompatTextView: java.util.concurrent.Future mPrecomputedTextFuture
com.baseflow.geolocator.location.BackgroundNotification: androidx.core.app.NotificationCompat$Builder builder
com.journeyapps.barcodescanner.DecoderThread$1: com.journeyapps.barcodescanner.DecoderThread this$0
androidx.fragment.app.DialogFragment: android.content.DialogInterface$OnDismissListener mOnDismissListener
androidx.core.R$id: int tag_screen_reader_focusable
androidx.appcompat.widget.ListPopupWindow: java.lang.Runnable mShowDropDownRunnable
com.google.firebase.database.core.Context: com.google.firebase.database.core.TokenProvider authTokenProvider
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: java.util.List currentPaths
com.journeyapps.barcodescanner.camera.CameraInstance: com.journeyapps.barcodescanner.camera.DisplayConfiguration displayConfiguration
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformViewFactory viewFactory
com.google.zxing.client.android.InactivityTimer: java.lang.String TAG
androidx.window.embedding.SplitController: java.util.Set staticSplitRules
com.google.android.gms.internal.location.zzbd: java.lang.String tag
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.Api$ApiOptions zabj
com.google.android.gms.maps.model.VisibleRegion: com.google.android.gms.maps.model.LatLng nearLeft
androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int height
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect globalRect
com.google.android.gms.common.wrappers.PackageManagerWrapper: android.content.Context zzhx
androidx.fragment.app.FragmentState: java.lang.String mClassName
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$1: int[] $SwitchMap$com$google$zxing$datamatrix$decoder$DecodedBitStreamParser$Mode
androidx.appcompat.app.AlertController: java.lang.CharSequence mTitle
kotlinx.coroutines.UndispatchedMarker: kotlinx.coroutines.UndispatchedMarker INSTANCE
com.google.firebase.database.connection.Connection: com.google.firebase.database.connection.Connection$Delegate delegate
androidx.fragment.app.FragmentTransition$6: java.util.ArrayList val$sharedElementsIn
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY
androidx.fragment.app.FragmentTransition$5: android.view.View val$epicenterView
androidx.appcompat.app.AlertController$AlertParams: android.widget.ListAdapter mAdapter
androidx.core.app.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
io.flutter.plugins.imagepicker.ImagePickerDelegate$4: io.flutter.plugins.imagepicker.ImagePickerDelegate this$0
com.google.android.gms.common.api.internal.GoogleApiManager$zab: java.util.Set zajf
com.google.firebase.database.core.SyncTree$1: com.google.firebase.database.snapshot.Node val$newData
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemActionViewLayout
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType ASSUME_GS1
com.google.zxing.PlanarYUVLuminanceSource: int top
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: boolean mItalic
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: int mNumPostponed
com.google.zxing.oned.UPCEANReader: int[][] L_AND_G_PATTERNS
androidx.fragment.app.FragmentLayoutInflaterFactory$1: androidx.fragment.app.FragmentStateManager val$fragmentStateManager
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: boolean mStopQueued
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mNegativeButtonListener
com.google.zxing.LuminanceSource: int width
com.google.firebase.database.core.WriteTreeRef: com.google.firebase.database.core.WriteTree writeTree
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuPresenter mPresenter
androidx.fragment.app.BackStackState: java.lang.CharSequence mBreadCrumbTitleText
com.google.firebase.database.tubesock.WebSocketMessage: byte[] byteMessage
com.google.firebase.database.core.Repo$6: com.google.firebase.database.core.Repo this$0
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState editState
androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionMode
androidx.appcompat.widget.Toolbar: int mTitleMarginStart
com.google.android.gms.common.internal.zaj: com.google.android.gms.common.api.Response zapg
com.google.android.gms.internal.common.zzb: com.google.android.gms.internal.common.zzd zzc
androidx.core.app.NotificationManagerCompat$NotifyTask: int id
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int y
androidx.window.layout.WindowInfoTracker$Companion: boolean DEBUG
androidx.fragment.app.FragmentStateManager: int mFragmentManagerState
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.CharSequence itemContentDescription
com.google.android.gms.common.api.internal.zace: com.google.android.gms.signin.zac zagf
androidx.appcompat.widget.ListPopupWindow: android.database.DataSetObserver mObserver
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
kotlinx.coroutines.scheduling.LimitingDispatcher: int parallelism
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType EMAIL_ADDRESS
androidx.core.provider.CallbackWithHandler$2: int val$reason
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets mTappableElementInsets
androidx.appcompat.R$attr: int autoCompleteTextViewStyle
androidx.activity.result.ActivityResultRegistry$LifecycleContainer: androidx.lifecycle.Lifecycle mLifecycle
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: com.google.android.gms.common.api.Api$AnyClient zait
androidx.fragment.app.DefaultSpecialEffectsController$1: androidx.fragment.app.DefaultSpecialEffectsController this$0
com.google.firebase.database.android.SqlPersistenceStorageEngine: com.google.firebase.database.logging.LogWrapper logger
com.google.firebase.database.connection.Connection: com.google.firebase.database.connection.Connection$State state
androidx.core.widget.PopupWindowCompat: java.lang.reflect.Method sSetWindowLayoutTypeMethod
androidx.appcompat.view.menu.MenuItemImpl: android.view.View mActionView
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: float xPrecision
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy lowest
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_7
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map contentProviderAwarePlugins
androidx.exifinterface.media.ExifInterface: java.text.SimpleDateFormat sFormatter
androidx.appcompat.R$dimen: int tooltip_y_offset_touch
androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mTintLists
io.flutter.plugin.editing.TextInputPlugin$2: io.flutter.plugin.editing.TextInputPlugin this$0
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI UnicodeBigUnmarked
com.google.zxing.qrcode.decoder.Decoder: com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable
net.touchcapture.qr.flutterqr.QRView: boolean isTorchOn
com.google.firebase.database.core.SparseSnapshotTree$2: com.google.firebase.database.core.Path val$prefixPath
androidx.appcompat.widget.ActionMenuPresenter: boolean mPendingOverflowIconSet
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State$Companion Companion
com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$zzb: int zzit
com.google.firebase.database.connection.PersistentConnectionImpl$9: com.google.firebase.database.connection.PersistentConnectionImpl this$0
com.google.android.gms.common.util.CrashUtils: int zzgl
androidx.core.app.RemoteActionCompat: java.lang.CharSequence mTitle
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion
com.google.common.util.concurrent.AbstractFuture$Waiter: java.lang.Thread thread
androidx.appcompat.R$styleable: int ActionBar_icon
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COPY
com.google.firebase.database.DataSnapshot: com.google.firebase.database.DatabaseReference query
com.google.zxing.FormatException: com.google.zxing.FormatException INSTANCE
com.google.android.gms.location.LocationSettingsRequest: com.google.android.gms.location.zzae zzbj
androidx.appcompat.R$id: int group_divider
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$OnSuggestionListener mOnSuggestionListener
com.google.zxing.oned.rss.expanded.decoders.DecodedChar: char value
com.google.firebase.database.core.view.CacheNode: com.google.firebase.database.snapshot.IndexedNode indexedNode
androidx.appcompat.R$drawable: int abc_ab_share_pack_mtrl_alpha
kotlin.ranges.IntProgression: int step
io.flutter.plugin.editing.TextInputPlugin$1: io.flutter.plugin.editing.TextInputPlugin this$0
com.google.firebase.database.core.view.Change: com.google.firebase.database.core.view.Event$EventType eventType
io.flutter.plugins.googlemaps.GoogleMapController: com.google.android.gms.maps.GoogleMapOptions options
androidx.appcompat.R$drawable: int abc_ic_ab_back_material
com.google.firebase.database.snapshot.DoubleNode: java.lang.Double value
io.flutter.plugins.firebase.database.TransactionExecutor$1: io.flutter.plugins.firebase.database.TransactionExecutor this$0
androidx.appcompat.widget.ListPopupWindow: java.lang.reflect.Method sSetEpicenterBoundsMethod
com.google.android.gms.common.api.internal.zaj: androidx.collection.ArrayMap zacz
com.google.firebase.components.CycleDetector$Dep: java.lang.Class anInterface
androidx.exifinterface.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: android.graphics.SurfaceTexture$OnFrameAvailableListener onFrameListener
androidx.appcompat.graphics.drawable.StateListDrawable: boolean mMutated
com.google.firebase.database.core.ValueProvider$DeferredValueProvider: com.google.firebase.database.core.Path path
com.google.zxing.oned.rss.Pair: int count
androidx.core.app.NotificationCompatJellybean: java.lang.reflect.Field sExtrasField
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.google.firebase.FirebaseApp: com.google.firebase.components.ComponentRuntime componentRuntime
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler textInputMethodHandler
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric: int firstDigit
com.google.android.gms.internal.location.zzbf: int zzcg
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate this$0
androidx.core.content.ContextCompat: java.lang.Object sSync
androidx.appcompat.widget.SuggestionsAdapter: android.content.Context mProviderContext
com.google.firebase.database.core.view.QueryParams$ViewFrom: com.google.firebase.database.core.view.QueryParams$ViewFrom RIGHT
androidx.window.core.Bounds: int top
androidx.core.widget.AutoScrollHelper: float[] mRelativeEdges
androidx.exifinterface.media.ExifInterface$ExifTag: int secondaryFormat
androidx.exifinterface.media.ExifInterface: int mThumbnailOffset
com.baseflow.geolocator.location.FusedLocationClient: com.google.android.gms.location.LocationCallback locationCallback
com.journeyapps.barcodescanner.camera.DisplayConfiguration: java.lang.String TAG
androidx.core.view.ViewCompat: boolean sMinHeightFieldFetched
androidx.versionedparcelable.ParcelImpl: androidx.versionedparcelable.VersionedParcelable mParcel
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock$3: com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock this$1
androidx.appcompat.widget.SearchView$SearchAutoComplete$1: androidx.appcompat.widget.SearchView$SearchAutoComplete this$0
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_12
com.google.firebase.database.core.SyncTree$ListenContainer: com.google.firebase.database.core.view.View view
androidx.fragment.app.DefaultSpecialEffectsController$6: androidx.collection.ArrayMap val$lastInViews
com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator: float average
androidx.core.app.NotificationCompat$Style: androidx.core.app.NotificationCompat$Builder mBuilder
androidx.appcompat.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mIcon
io.flutter.embedding.engine.dart.DartMessenger$Reply: java.util.concurrent.atomic.AtomicBoolean done
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode TEXT_ENCODE
androidx.window.R$styleable: int SplitPairFilter_primaryActivityName
com.baseflow.geolocator.location.LocationOptions: long distanceFilter
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: int color
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.concurrent.atomic.AtomicReferenceArray array
com.lyokone.location.NotificationOptions: java.lang.String channelName
androidx.appcompat.view.menu.ActionMenuItem: android.graphics.PorterDuff$Mode mIconTintMode
androidx.appcompat.R$styleable: int[] Fragment
com.google.zxing.client.android.R$layout: int zxing_capture
androidx.appcompat.widget.ListPopupWindow: boolean mDropDownAlwaysVisible
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.plugin.editing.ListenableEditingState mEditable
com.google.android.gms.maps.model.PolygonOptions: int zzea
androidx.fragment.app.FragmentTransition$6: androidx.fragment.app.FragmentTransitionImpl val$impl
androidx.core.view.ViewCompat: java.util.WeakHashMap sViewPropertyAnimatorMap
androidx.appcompat.R$dimen: int abc_dropdownitem_text_padding_left
androidx.window.R$id: int rtl
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: android.content.SharedPreferences sharedPreferences
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: boolean isDecimal
androidx.collection.LongSparseArray: java.lang.Object DELETED
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: android.view.View mChild
com.google.firebase.database.core.Repo$7: com.google.firebase.database.DatabaseReference val$ref
kotlinx.coroutines.channels.ArrayChannel$WhenMappings: int[] $EnumSwitchMapping$0
com.google.android.gms.tasks.zzn: com.google.android.gms.tasks.zzm zzq
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation: boolean remaining
com.google.firebase.database.core.utilities.Predicate: com.google.firebase.database.core.utilities.Predicate TRUE
kotlin.jvm.internal.ClassReference: java.util.Map simpleNames
com.google.firebase.FirebaseApp: java.util.concurrent.atomic.AtomicBoolean automaticResourceManagementEnabled
androidx.core.app.NotificationCompat$Action: int mSemanticAction
com.google.firebase.database.collection.RBTreeSortedMap$Builder: java.util.List keys
io.flutter.plugins.imagepicker.ImagePickerDelegate: java.lang.String fileProviderName
io.flutter.embedding.android.FlutterView: io.flutter.view.AccessibilityBridge accessibilityBridge
com.google.zxing.client.android.R$styleable: int[] zxing_camera_preview
androidx.appcompat.widget.Toolbar: int mTitleMarginEnd
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean mayHaveLocalTasks
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.TextView mText2
com.google.firebase.FirebaseOptions: java.lang.String gcmSenderId
androidx.fragment.app.BackStackState: int mTransition
androidx.window.R$id: int ltr
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] mEntries
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_HTML_ELEMENT
com.google.android.gms.common.internal.BaseGmsClient: java.util.ArrayList zzch
io.flutter.view.AccessibilityBridge: java.lang.Integer embeddedInputFocusedNodeId
androidx.appcompat.app.AlertController$AlertParams: boolean mCancelable
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.graphics.Insets[] mInsetsTypeMask
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder this$1
com.google.android.gms.maps.model.MarkerOptions: float zzdu
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat[] $VALUES
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int[] mThemeAttrs
androidx.window.layout.ActivityCompatHelperApi30: androidx.window.layout.ActivityCompatHelperApi30 INSTANCE
com.google.firebase.database.snapshot.DeferredValueNode: java.util.Map value
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: java.util.concurrent.atomic.AtomicReference activeSink
com.google.android.gms.tasks.Tasks$zza: java.util.concurrent.CountDownLatch zzaf
com.google.android.gms.common.internal.ClientSettings: java.util.Set zaog
androidx.core.widget.AutoScrollHelper: boolean mAnimating
androidx.appcompat.R$drawable: int abc_cab_background_top_material
com.journeyapps.barcodescanner.camera.CameraManager: java.lang.String defaultParameters
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: java.nio.ByteBuffer params
com.google.zxing.qrcode.decoder.BitMatrixParser: com.google.zxing.common.BitMatrix bitMatrix
com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long VALUE_OFFSET
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType UPC_EAN_EXTENSION
com.google.zxing.oned.rss.expanded.RSSExpandedReader: boolean startFromEven
com.google.firebase.database.Query: boolean orderByCalled
kotlinx.coroutines.channels.ConflatedChannel: java.util.concurrent.locks.ReentrantLock lock
com.journeyapps.barcodescanner.camera.CameraManager: android.hardware.Camera$CameraInfo cameraInfo
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] PEF_TAGS
androidx.appcompat.R$styleable: int CompoundButton_buttonTint
androidx.appcompat.widget.AppCompatImageView: androidx.appcompat.widget.AppCompatImageHelper mImageHelper
com.google.android.gms.dynamic.zab: com.google.android.gms.dynamic.DeferredLifecycleHelper zart
com.lyokone.location.FlutterLocation: com.google.android.gms.location.LocationSettingsRequest mLocationSettingsRequest
com.google.firebase.database.android.AndroidPlatform: java.util.Set createdPersistenceCaches
io.flutter.plugin.common.MethodCall: java.lang.Object arguments
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
androidx.appcompat.app.AlertController$1: androidx.appcompat.app.AlertController this$0
androidx.fragment.app.FragmentTransition$3: androidx.fragment.app.FragmentTransition$Callback val$callback
com.google.firebase.database.logging.Logger$Level: com.google.firebase.database.logging.Logger$Level INFO
io.flutter.plugin.common.StringCodec: io.flutter.plugin.common.StringCodec INSTANCE
androidx.appcompat.widget.ActionBarContainer: android.view.View mContextView
com.google.firebase.database.tubesock.WebSocketReceiver: byte[] inputHeader
androidx.appcompat.R$styleable: int PopupWindow_android_popupBackground
com.google.firebase.database.core.view.EventGenerator$1: com.google.firebase.database.core.view.EventGenerator this$0
androidx.appcompat.R$styleable: int MenuItem_showAsAction
androidx.fragment.app.SpecialEffectsController$3: int[] $SwitchMap$androidx$fragment$app$SpecialEffectsController$Operation$State
androidx.appcompat.R$styleable: int MenuItem_android_onClick
io.flutter.view.AccessibilityBridge$SemanticsNode: int flags
com.google.firebase.components.ComponentDiscovery: java.lang.Object context
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int rngState
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons COROUTINE_SUSPENDED
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType PDF417_EXTRA_METADATA
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: android.graphics.Rect mActualBounds
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: android.app.Activity mActivity
androidx.core.view.NestedScrollingChildHelper: boolean mIsNestedScrollingEnabled
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl PLATFORM_IMPL
androidx.window.layout.SidecarAdapter: java.lang.String TAG
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuPresenter$Callback mCallback
com.google.android.gms.common.internal.GetServiceRequest: boolean zzdo
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart DEFAULT
com.google.android.gms.common.zzh: com.google.android.gms.common.zze[] zzx
com.google.android.gms.maps.model.Cap: java.lang.String TAG
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SELECT
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType PHONE
io.flutter.plugins.flutterexifrotation.FlutterExifRotationPlugin: android.app.Activity activity
com.google.zxing.qrcode.detector.FinderPatternFinder: boolean hasSkipped
androidx.appcompat.R$styleable: int TextAppearance_fontVariationSettings
io.flutter.embedding.engine.systemchannels.KeyEventChannel: io.flutter.plugin.common.BasicMessageChannel channel
com.google.firebase.database.core.Repo$5$1: com.google.firebase.database.core.Repo$5 this$1
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater mInflater
androidx.appcompat.widget.ForwardingListener: int[] mTmpLocation
com.google.firebase.components.Component: java.util.Set providedInterfaces
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String isolateServiceId
com.google.firebase.database.collection.LLRBBlackValueNode: int size
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: kotlinx.coroutines.internal.ThreadContextKt$findOne$1 INSTANCE
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int prevTop
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: int mChangingConfigurations
com.google.firebase.components.CycleDetector$ComponentNode: com.google.firebase.components.Component component
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: androidx.core.view.ViewPropertyAnimatorCompat mVpa
androidx.core.app.NotificationCompat$Style: java.lang.CharSequence mBigContentTitle
com.google.firebase.database.core.Repo$18$1: com.google.firebase.database.core.Repo$TransactionData val$txn
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistryImpl registry
com.google.firebase.database.android.SqlPersistenceStorageEngine: android.database.sqlite.SQLiteDatabase database
com.google.firebase.database.connection.PersistentConnectionImpl: boolean forceAppCheckTokenRefresh
com.google.firebase.database.core.Repo$20: com.google.firebase.database.core.Repo this$0
androidx.appcompat.content.res.AppCompatResources: java.lang.Object sColorStateCacheLock
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: io.flutter.plugin.common.MethodChannel channel
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission[] $VALUES
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.common.MessageCodec createArgsCodec
androidx.appcompat.R$styleable: int ButtonBarLayout_allowStacking
androidx.fragment.app.Fragment: boolean mFromLayout
com.google.android.gms.internal.location.zzm: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler handler
androidx.fragment.app.DefaultSpecialEffectsController$6: boolean val$isPop
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _state
io.flutter.embedding.android.FlutterSurfaceView: boolean renderTransparently
androidx.fragment.app.FragmentAnim$2: androidx.fragment.app.FragmentTransition$Callback val$callback
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int physicalTouchSlop
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask DATA_MASK_100
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation: int remainingValue
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_EXIF_TAGS
com.google.firebase.database.core.utilities.Tree: com.google.firebase.database.snapshot.ChildKey name
androidx.exifinterface.media.ExifInterface: java.util.Set mAttributesOffsets
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI EUC_KR
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider: androidx.appcompat.widget.ListPopupWindow this$0
androidx.appcompat.R$style: int Animation_AppCompat_Tooltip
com.google.firebase.database.OnDisconnect$1: com.google.firebase.database.core.utilities.Pair val$wrapped
androidx.appcompat.widget.ToolbarWidgetWrapper: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter
com.google.firebase.database.core.utilities.DefaultRunLoop$FirebaseThreadFactory: com.google.firebase.database.core.utilities.DefaultRunLoop this$0
androidx.core.graphics.TypefaceCompatBaseImpl$1: androidx.core.graphics.TypefaceCompatBaseImpl this$0
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion
androidx.core.R$styleable: int FontFamilyFont_android_fontStyle
io.flutter.plugins.googlemaps.GoogleMapController: boolean myLocationEnabled
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATOR_SET
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color BLACK
androidx.appcompat.app.AlertController: androidx.appcompat.app.AppCompatDialog mDialog
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object mKey
io.flutter.plugins.imagepicker.ImagePickerPlugin: io.flutter.plugins.imagepicker.ImagePickerDelegate delegate
com.google.firebase.database.connection.PersistentConnectionImpl$3: com.google.firebase.database.connection.RequestResultCallback val$onComplete
com.google.android.gms.common.internal.BaseGmsClient$zzf: android.os.IBinder zzcy
com.google.android.gms.maps.model.PolylineOptions: int color
androidx.core.app.RemoteActionCompat: java.lang.CharSequence mContentDescription
com.google.zxing.aztec.AztecDetectorResult: int nbDatablocks
androidx.core.os.ExecutorCompat$HandlerExecutor: android.os.Handler mHandler
androidx.versionedparcelable.VersionedParcelParcel: int mCurrentField
kotlin.jvm.internal.FunctionReference: int flags
androidx.appcompat.R$attr: int ratingBarStyle
com.google.android.gms.location.LocationServices: com.google.android.gms.location.SettingsApi SettingsApi
androidx.collection.ArraySet: java.lang.Object[] sBaseCache
com.google.android.gms.maps.model.CircleOptions: double zzcq
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.FlutterView flutterView
com.google.zxing.pdf417.decoder.ec.ModulusGF: com.google.zxing.pdf417.decoder.ec.ModulusGF PDF417_GF
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
androidx.appcompat.app.AlertDialog: androidx.appcompat.app.AlertController mAlert
androidx.appcompat.R$layout: int abc_list_menu_item_checkbox
androidx.appcompat.widget.RtlSpacingHelper: int mRight
kotlinx.coroutines.EventLoop: kotlinx.coroutines.internal.ArrayQueue unconfinedQueue
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_CHARACTER
com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult: com.google.zxing.oned.rss.expanded.decoders.DecodedInformation decodedInformation
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState: int position
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission deniedForever
androidx.core.graphics.drawable.IconCompat: int mType
io.flutter.embedding.android.FlutterView: java.util.Set flutterEngineAttachmentListeners
com.google.android.gms.common.util.DeviceProperties: java.lang.Boolean zzgp
androidx.appcompat.graphics.drawable.DrawableContainer: int mAlpha
androidx.appcompat.widget.ScrollingTabContainerView$TabView: android.widget.TextView mTextView
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State: com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State[] $VALUES
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action INCREASE
androidx.core.R$styleable: int GradientColor_android_endColor
androidx.appcompat.view.menu.MenuItemImpl: android.content.res.ColorStateList mIconTintList
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportHeight
io.flutter.plugin.platform.PlatformPlugin$3: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$Brightness
kotlin.collections.EmptyList: kotlin.collections.EmptyList INSTANCE
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory taskQueueFactory
io.flutter.plugins.googlemaps.PolygonBuilder: float density
com.google.android.gms.common.api.internal.zak: java.util.concurrent.atomic.AtomicReference zadi
androidx.core.widget.NestedScrollView: boolean mIsLaidOut
com.google.android.gms.maps.model.MapStyleOptions: java.lang.String TAG
com.google.zxing.client.android.R$styleable: int[] zxing_finder
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String decreasedValue
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets mStableInsets
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int x
com.google.firebase.database.core.SyncTree: com.google.firebase.database.core.persistence.PersistenceManager persistenceManager
com.google.firebase.database.core.Repo: com.google.firebase.database.core.Context ctx
com.google.zxing.pdf417.PDF417ResultMetadata: long fileSize
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: com.google.zxing.pdf417.decoder.ec.ErrorCorrection errorCorrection
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int action
com.google.android.gms.common.api.internal.zabu: com.google.android.gms.common.api.internal.zac zajx
androidx.appcompat.R$id: int submenuarrow
io.flutter.plugin.editing.ListenableEditingState: android.view.inputmethod.BaseInputConnection mDummyConnection
com.google.zxing.common.BitMatrix: int rowSize
androidx.fragment.app.FragmentTransition$4: java.lang.Object val$enterTransition
io.flutter.embedding.engine.dart.DartMessenger: java.util.concurrent.atomic.AtomicBoolean enableBufferingIncomingMessages
androidx.fragment.app.Fragment: boolean mRestored
com.google.firebase.database.core.persistence.TrackedQueryManager$6: com.google.firebase.database.core.persistence.TrackedQueryManager this$0
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.zzb zzcq
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$TextDirection textDirection
com.google.android.gms.common.api.internal.zabn: com.google.android.gms.common.api.GoogleApi zajj
com.google.android.gms.dynamic.zab: android.os.Bundle zary
com.google.firebase.database.core.ServerValues$1: com.google.firebase.database.core.ValueProvider val$existing
androidx.core.graphics.drawable.IconCompat: int mInt1
androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonNegativeIcon
kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 updateState
com.google.firebase.database.snapshot.ChildrenNode: com.google.firebase.database.snapshot.Node priority
androidx.appcompat.view.SupportMenuInflater: java.lang.Object[] mActionProviderConstructorArguments
com.google.firebase.database.connection.PersistentConnectionImpl: long lastConnectionEstablishedTime
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: int viewId
kotlin.jvm.internal.ClassReference: java.util.HashMap classFqNames
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_COLOR_CONTROL_ACTIVATED
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets mPlatformInsets
com.google.android.gms.common.internal.zag: com.google.android.gms.common.api.internal.OnConnectionFailedListener zapc
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: java.lang.Object mTransition
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener: androidx.appcompat.view.menu.ActionMenuItemView this$0
androidx.appcompat.widget.AppCompatSeekBarHelper: android.graphics.drawable.Drawable mTickMark
androidx.appcompat.app.AppCompatDelegateImpl: boolean mCreated
androidx.appcompat.R$drawable: int abc_star_half_black_48dp
androidx.fragment.app.DialogFragment: android.os.Handler mHandler
com.google.firebase.database.tubesock.WebSocket: int clientId
androidx.appcompat.widget.Toolbar: int mContentInsetStartWithNavigation
com.google.android.gms.common.internal.GmsClientSupervisor$zza: java.lang.String zzdr
androidx.fragment.app.FragmentTransitionCompat21$1: androidx.fragment.app.FragmentTransitionCompat21 this$0
com.google.firebase.database.core.Repo$16: com.google.firebase.database.Transaction$Handler val$handler
net.touchcapture.qr.flutterqr.QRView$startScan$2: net.touchcapture.qr.flutterqr.QRView this$0
io.flutter.plugin.common.JSONMethodCodec: io.flutter.plugin.common.JSONMethodCodec INSTANCE
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.Class mFontFamily
androidx.lifecycle.LiveData$AlwaysActiveObserver: androidx.lifecycle.LiveData this$0
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver: androidx.appcompat.widget.ListPopupWindow this$0
androidx.core.view.WindowInsetsControllerCompat$Impl20: android.view.Window mWindow
com.google.firebase.database.android.SqlPersistenceStorageEngine: long transactionStart
androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpRecords
com.google.zxing.ChecksumException: com.google.zxing.ChecksumException INSTANCE
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder: int index
com.google.firebase.database.connection.util.RetryHelper: long minRetryDelayAfterFailure
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_13
androidx.appcompat.app.AppCompatDelegateImpl: boolean mSubDecorInstalled
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: androidx.appcompat.view.menu.ListMenuPresenter this$0
androidx.core.provider.RequestExecutor$ReplyRunnable: androidx.core.util.Consumer mConsumer
androidx.fragment.app.FragmentManager$PopBackStackState: java.lang.String mName
com.google.firebase.database.connection.PersistentConnectionImpl: java.util.HashSet interruptReasons
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Listener listeners
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportWidth
kotlinx.coroutines.flow.AbstractFlow$collect$1: int label
com.google.firebase.database.OnDisconnect$2: java.util.Map val$parsedUpdate
com.google.zxing.pdf417.decoder.BarcodeMetadata: int rowCountLowerPart
com.google.android.gms.location.LocationSettingsRequest: java.util.List zzbg
androidx.appcompat.view.menu.ListMenuPresenter: android.view.LayoutInflater mInflater
com.journeyapps.barcodescanner.Size: int height
io.flutter.embedding.android.KeyChannelResponder: io.flutter.embedding.engine.systemchannels.KeyEventChannel keyEventChannel
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetTop
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: io.flutter.plugin.common.MethodChannel channel
com.google.android.gms.location.zzaj: int zzar
com.google.firebase.database.core.Constants: com.google.firebase.database.snapshot.ChildKey DOT_INFO_CONNECTED
com.google.firebase.database.logging.DefaultLogger$1: int[] $SwitchMap$com$google$firebase$database$logging$Logger$Level
com.google.firebase.database.core.view.Change: com.google.firebase.database.snapshot.ChildKey prevName
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
androidx.appcompat.R$styleable: int[] View
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] transform
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: kotlinx.coroutines.flow.internal.DownstreamExceptionElement$Key Key
com.google.zxing.client.android.R$id: int zxing_decode
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher
androidx.core.view.NestedScrollingParentHelper: int mNestedScrollAxesNonTouch
kotlinx.coroutines.internal.FastServiceLoader: kotlinx.coroutines.internal.FastServiceLoader INSTANCE
com.google.firebase.database.snapshot.LongNode: long value
androidx.appcompat.view.menu.MenuBuilder: int[] sCategoryToOrder
com.google.android.gms.signin.SignInOptions: boolean zasm
androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager INSTANCE
com.journeyapps.barcodescanner.SourceData: android.graphics.Rect cropRect
androidx.core.app.NotificationCompat$Builder: int mNumber
androidx.appcompat.app.AlertController: android.os.Message mButtonPositiveMessage
com.google.android.gms.common.internal.zzf: com.google.android.gms.common.internal.zze zzec
com.google.firebase.database.core.CompoundWrite: com.google.firebase.database.core.CompoundWrite EMPTY
androidx.fragment.app.FragmentStateManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mDispatcher
io.flutter.plugins.googlemaps.GoogleMapController: java.util.List initialTileOverlays
androidx.appcompat.R$dimen: int abc_action_bar_stacked_max_height
androidx.fragment.app.FragmentTransitionImpl$1: androidx.fragment.app.FragmentTransitionImpl this$0
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: float mAutoSizeMinTextSizeInPx
androidx.appcompat.widget.ScrollingTabContainerView: androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener mTabClickListener
com.google.android.gms.common.GoogleApiAvailability: java.lang.String zaap
com.google.firebase.database.core.Repo$14: java.util.List val$events
androidx.appcompat.widget.SearchView$4: androidx.appcompat.widget.SearchView this$0
androidx.appcompat.resources.R$styleable: int[] StateListDrawable
com.google.zxing.pdf417.decoder.ec.ModulusGF: com.google.zxing.pdf417.decoder.ec.ModulusPoly zero
com.google.firebase.database.core.ServerValues$1: java.util.Map val$serverValues
com.google.android.gms.common.internal.zzf: com.google.android.gms.common.internal.GmsClientSupervisor$zza zzeb
androidx.appcompat.widget.TooltipPopup: android.view.WindowManager$LayoutParams mLayoutParams
androidx.appcompat.app.AppCompatDialog: androidx.core.view.KeyEventDispatcher$Component mKeyDispatcher
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAbortCreation
com.google.firebase.database.core.persistence.TrackedQueryManager: com.google.firebase.database.core.utilities.Predicate IS_QUERY_UNPRUNABLE_PREDICATE
androidx.appcompat.view.menu.MenuPopupHelper: android.content.Context mContext
androidx.appcompat.widget.ActionBarContextView: android.view.View mCloseButton
kotlinx.coroutines.channels.ArrayChannel: java.lang.Object[] buffer
androidx.appcompat.app.AlertController$AlertParams$4: androidx.appcompat.app.AlertController val$dialog
com.google.common.util.concurrent.ThreadFactoryBuilder$1: java.lang.String val$nameFormat
androidx.appcompat.R$styleable: int Toolbar_titleMargins
com.journeyapps.barcodescanner.CameraPreview: android.view.TextureView textureView
com.google.zxing.qrcode.detector.AlignmentPattern: float estimatedModuleSize
com.google.firebase.database.core.Repo$7: com.google.firebase.database.core.Repo this$0
com.google.firebase.database.core.operation.AckUserWrite: com.google.firebase.database.core.utilities.ImmutableTree affectedTree
com.google.android.gms.signin.internal.zab: android.content.Intent zasw
androidx.core.R$styleable: int GradientColor_android_startColor
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy best
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: java.text.SimpleDateFormat FORMATTER
androidx.appcompat.R$dimen: int abc_star_small
androidx.activity.result.ActivityResultRegistry$3: java.lang.String val$key
io.flutter.embedding.android.DrawableSplashScreen: android.widget.ImageView$ScaleType scaleType
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener: androidx.appcompat.widget.ScrollingTabContainerView this$0
androidx.appcompat.app.AppCompatDelegateImpl: android.widget.TextView mTitleView
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType ALLOWED_EAN_EXTENSIONS
com.google.android.gms.common.api.internal.RegisterListenerMethod: boolean zajw
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
com.journeyapps.barcodescanner.ViewfinderView: java.lang.String TAG
androidx.appcompat.R$layout: int abc_popup_menu_header_item_layout
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CUT
androidx.appcompat.app.AlertController$AlertParams$2: androidx.appcompat.app.AlertController val$dialog
androidx.fragment.app.FragmentManager$6: java.lang.String val$requestKey
com.google.android.gms.common.api.internal.zzd: com.google.android.gms.common.api.internal.zzc zzbl
androidx.appcompat.widget.ScrollingTabContainerView: int mStackedTabMaxWidth
androidx.lifecycle.ViewModel: boolean mCleared
kotlinx.coroutines.scheduling.Task: long submissionTime
androidx.appcompat.widget.ActionBarContainer: int mHeight
com.google.android.gms.internal.location.zzad: com.google.android.gms.common.api.Status zzbl
androidx.core.view.ViewCompat$Api21Impl$1: android.view.View val$v
com.google.firebase.database.core.SyncTree: java.util.Map tagToQueryMap
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3: android.view.ViewTreeObserver$OnGlobalLayoutListener val$layoutListener
androidx.core.widget.TextViewCompat$OreoCallback: java.lang.reflect.Method mMenuBuilderRemoveItemAtMethod
kotlinx.coroutines.internal.ArrayQueue: java.lang.Object[] elements
androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStackChangeListeners
com.google.zxing.oned.rss.expanded.ExpandedPair: boolean mayBeLast
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: java.util.List displayFeatures
androidx.appcompat.R$color: int abc_tint_seek_thumb
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeMinTextSize
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: int mAdvanceKey
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.app.AppCompatDelegate mDelegate
androidx.appcompat.widget.SearchView: java.lang.CharSequence mUserQuery
androidx.core.graphics.PathParser$ExtractFloatResult: int mEndPosition
androidx.window.R$styleable: int SplitPairRule_splitLayoutDirection
io.flutter.plugin.platform.PlatformViewsController: boolean synchronizeToNativeViewHierarchy
com.google.firebase.FirebaseOptions$Builder: java.lang.String storageBucket
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol OFFER_SUCCESS
com.google.zxing.common.detector.WhiteRectangleDetector: int height
androidx.core.app.NotificationCompat$Builder: boolean mUseChronometer
com.google.firebase.database.connection.PersistentConnectionImpl: java.lang.String authToken
com.google.common.util.concurrent.ThreadFactoryBuilder: java.lang.String nameFormat
kotlinx.coroutines.JobSupport$ChildCompletion: java.lang.Object proposedUpdate
androidx.fragment.app.SpecialEffectsController: java.util.ArrayList mRunningOperations
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.TaskExecutor mDefaultTaskExecutor
androidx.exifinterface.media.ExifInterface: byte[] PNG_CHUNK_TYPE_IHDR
androidx.core.app.ActivityCompat$1: java.lang.String[] val$permissions
com.google.android.gms.common.api.internal.zaj: int zadb
com.google.zxing.qrcode.detector.AlignmentPatternFinder: int[] crossCheckStateCount
androidx.appcompat.widget.LinearLayoutCompat: int mBaselineChildTop
com.google.android.gms.common.internal.GmsClientSupervisor$zza: int zzdt
androidx.appcompat.R$id: int search_src_text
com.google.zxing.datamatrix.detector.Detector: com.google.zxing.common.BitMatrix image
androidx.appcompat.R$id: int shortcut
androidx.lifecycle.LiveData: java.lang.Runnable mPostValueRunnable
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
com.google.zxing.oned.CodaBarReader: char[] STARTEND_ENCODING
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.reflect.Constructor sFontFamilyCtor
io.flutter.embedding.engine.loader.FlutterLoader$1: io.flutter.embedding.engine.loader.FlutterLoader this$0
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance
androidx.appcompat.R$styleable: int Toolbar_contentInsetStart
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill autofill
androidx.fragment.app.FragmentHostCallback: android.os.Handler mHandler
androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1
androidx.window.embedding.EmbeddingCompat: java.lang.String TAG
com.google.zxing.client.android.R$styleable: int zxing_camera_preview_zxing_preview_scaling_strategy
androidx.collection.LongSparseArray: java.lang.Object[] mValues
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback
com.google.zxing.pdf417.PDF417ResultMetadata: boolean lastSegment
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
androidx.appcompat.R$drawable: int abc_textfield_search_default_mtrl_alpha
com.google.zxing.client.android.BeepManager: android.content.Context context
io.flutter.embedding.engine.loader.FlutterLoader: java.util.concurrent.Future initResultFuture
kotlinx.coroutines.InvokeOnCompletion: kotlin.jvm.functions.Function1 handler
com.google.zxing.aztec.detector.Detector: int nbCenterLayers
com.google.firebase.database.DatabaseError: java.util.Map errorCodes
androidx.appcompat.view.menu.BaseMenuPresenter: android.view.LayoutInflater mSystemInflater
com.google.android.gms.signin.zab: com.google.android.gms.common.api.Api$ClientKey CLIENT_KEY
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel channel
androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sSetLayoutDirectionMethod
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModelStore mViewModelStore
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: androidx.appcompat.widget.AppCompatSpinner this$0
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: java.lang.StringBuilder optHashValueBuilder
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.core.view.ViewPropertyAnimatorListenerAdapter mProxyListener
androidx.appcompat.R$styleable: int ActionBar_displayOptions
androidx.appcompat.widget.SearchView: android.os.Bundle mAppSearchData
androidx.activity.result.ActivityResultRegistry$1: java.lang.String val$key
androidx.core.widget.NestedScrollView: int mNestedYOffset
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.Feature[] zzbt
com.google.android.gms.maps.model.MapStyleOptions: java.lang.String zzdl
androidx.fragment.app.FragmentTransitionImpl$3: java.util.Map val$nameOverrides
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_WORD
com.google.android.gms.maps.model.PolygonOptions: java.util.List zzcv
com.google.android.gms.location.zzaj: long zzat
androidx.appcompat.view.menu.MenuItemImpl: int mId
com.lyokone.location.LocationPlugin: io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding activityBinding
androidx.appcompat.view.menu.StandardMenuPopup: boolean mWasDismissed
androidx.fragment.app.FragmentAnim$2$1: androidx.fragment.app.FragmentAnim$2 this$0
com.google.firebase.database.core.operation.OperationSource: com.google.firebase.database.core.operation.OperationSource$Source source
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1 INSTANCE
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$2: io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper this$0
com.google.firebase.database.core.utilities.Tree$1: com.google.firebase.database.core.utilities.Tree$TreeVisitor val$visitor
androidx.appcompat.R$styleable: int LinearLayoutCompat_dividerPadding
androidx.fragment.app.FragmentManager$11: androidx.fragment.app.FragmentManager this$0
io.flutter.plugins.firebase.database.TransactionHandler: int transactionKey
com.google.firebase.database.logging.DefaultLogger: java.util.Set enabledComponents
androidx.core.provider.FontsContractCompat$FontInfo: android.net.Uri mUri
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: androidx.arch.core.internal.SafeIterableMap$Entry mCurrent
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler mouseCursorMethodHandler
com.journeyapps.barcodescanner.CaptureManager: boolean showDialogIfMissingCameraPermission
androidx.appcompat.view.menu.StandardMenuPopup: android.widget.PopupWindow$OnDismissListener mOnDismissListener
androidx.core.app.NotificationCompat$Builder: java.lang.String mCategory
com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long WAITER_NEXT_OFFSET
androidx.appcompat.widget.ActionMenuPresenter: int mMaxItems
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.plugin.common.MethodChannel channel
com.google.firebase.database.Query: com.google.firebase.database.core.Path path
com.google.firebase.database.core.Repo$5: com.google.firebase.database.core.Repo this$0
androidx.window.R$styleable: int[] ActivityRule
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter$DisplayListener listener
androidx.fragment.app.FragmentTransaction: int mBreadCrumbTitleRes
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: android.net.Uri mLinkUri
com.google.firebase.database.connection.WebsocketConnection: java.util.concurrent.ScheduledFuture keepAlive
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback mCallback
com.google.android.gms.common.internal.ClientIdentity: android.os.Parcelable$Creator CREATOR
androidx.activity.result.ActivityResult: int mResultCode
androidx.appcompat.app.AlertController$AlertParams: boolean mRecycleOnMeasure
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String hintText
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.View mTabView
com.google.zxing.aztec.decoder.Decoder$Table: com.google.zxing.aztec.decoder.Decoder$Table MIXED
io.flutter.plugins.flutterexifrotation.FlutterExifRotationPlugin: io.flutter.plugin.common.MethodChannel$Result result
com.google.zxing.pdf417.PDF417ResultMetadata: java.lang.String fileName
com.journeyapps.barcodescanner.DecoderThread: android.os.Handler$Callback callback
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: java.lang.String encodedName
androidx.core.provider.FontsContractCompat$FontFamilyResult: int mStatusCode
com.journeyapps.barcodescanner.ViewfinderView: int resultColor
com.google.android.gms.maps.model.PolygonOptions: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.SavedStateHandleController: java.lang.String mKey
androidx.appcompat.R$attr: int actionBarPopupTheme
com.google.firebase.database.snapshot.CompoundHash$SimpleSizeSplitStrategy: long splitThreshold
androidx.fragment.app.DialogFragment: int mStyle
com.google.android.gms.common.internal.GmsClientSupervisor$zza: android.content.ComponentName mComponentName
androidx.fragment.app.FragmentState: boolean mDetached
androidx.appcompat.R$styleable: int MenuItem_android_menuCategory
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: io.flutter.plugin.common.MethodChannel methodChannel
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.dart.DartExecutor dartExecutor
com.google.common.util.concurrent.AbstractFuture$Cancellation: java.lang.Throwable cause
com.google.firebase.database.core.Repo: com.google.firebase.database.core.utilities.Tree transactionQueueTree
androidx.appcompat.R$styleable: int Toolbar_titleMargin
androidx.appcompat.R$styleable: int[] RecycleListView
com.lyokone.location.NotificationOptions: java.lang.String subtitle
androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs
io.flutter.plugins.firebase.database.EventStreamHandler: com.google.firebase.database.ChildEventListener childEventListener
com.google.android.gms.common.internal.GetServiceRequest: com.google.android.gms.common.Feature[] zzdn
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets mMandatorySystemGestureInsets
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.Symbol REMOVE_FROZEN
androidx.fragment.app.FragmentTransition$6: android.view.View val$nonExistentView
com.google.android.gms.location.zzj: long zzu
io.flutter.plugin.editing.ListenableEditingState$1: android.text.Editable val$self
androidx.appcompat.R$styleable: int MenuItem_android_visible
androidx.core.provider.FontRequestWorker$TypefaceResult: int mResult
com.google.zxing.client.android.InactivityTimer: boolean registered
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedDispatcher this$0
com.google.zxing.oned.CodaBarReader: java.lang.StringBuilder decodeRowResult
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: int label
com.google.android.gms.tasks.zzr: java.lang.Object mLock
com.baseflow.geolocator.LocationServiceHandlerImpl: io.flutter.plugin.common.EventChannel channel
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes permissionDefinitionsNotFound
com.google.firebase.components.RestrictedComponentContainer: java.util.Set allowedDeferredInterfaces
com.google.firebase.components.RestrictedComponentContainer: java.util.Set allowedSetProviderInterfaces
com.google.firebase.database.DataSnapshot$1$1: com.google.firebase.database.DataSnapshot$1 this$1
com.google.firebase.database.connection.PersistentConnectionImpl$2: com.google.firebase.database.connection.PersistentConnectionImpl this$0
androidx.appcompat.widget.AppCompatSeekBarHelper: boolean mHasTickMarkTintMode
androidx.fragment.app.Fragment: androidx.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData
com.baseflow.geolocator.GeolocatorPlugin: io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding pluginBinding
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_toId
com.google.zxing.Result: java.util.Map resultMetadata
kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 countAll
com.google.firebase.database.collection.ImmutableSortedSet: com.google.firebase.database.collection.ImmutableSortedMap map
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAddFontFromBuffer
androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$OnScrollChangeListener mOnScrollChangeListener
com.google.android.gms.internal.location.zzas: com.google.android.gms.internal.location.zzbj zzcb
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DID_LOSE_ACCESSIBILITY_FOCUS
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_VM_SNAPSHOT_DATA_KEY
androidx.fragment.app.FragmentTransitionCompat21$3: java.lang.Object val$sharedElementTransition
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_1
androidx.fragment.app.DefaultSpecialEffectsController$2: androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo val$animationInfo
io.flutter.FlutterInjector: io.flutter.FlutterInjector instance
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0
com.google.firebase.database.collection.ArraySortedMap$1: boolean val$reverse
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter mOuterActionMenuPresenter
com.google.android.gms.maps.model.LatLng: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes[] $VALUES
androidx.appcompat.view.menu.MenuWrapperICS: androidx.core.internal.view.SupportMenu mWrappedObject
com.google.firebase.database.DataSnapshot: com.google.firebase.database.snapshot.IndexedNode node
com.google.zxing.qrcode.decoder.Version: int[] alignmentPatternCenters
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE
com.google.firebase.database.core.RepoManager: java.util.Map repos
androidx.appcompat.app.AppCompatViewInflater: java.lang.String[] sClassPrefixList
com.google.firebase.database.connection.PersistentConnectionImpl$2: com.google.android.gms.tasks.TaskCompletionSource val$taskCompletionSource
androidx.appcompat.R$styleable: int MenuView_android_itemBackground
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask DATA_MASK_000
androidx.exifinterface.media.ExifInterface: boolean mHasThumbnailStrips
kotlin.jvm.internal.ClassReference: java.lang.Class jClass
io.flutter.FlutterInjector$Builder$NamedThreadFactory: io.flutter.FlutterInjector$Builder this$0
com.google.zxing.common.detector.WhiteRectangleDetector: int rightInit
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.CameraPreview$StateListener fireState
androidx.appcompat.app.TwilightManager$TwilightState: long todaySunrise
androidx.appcompat.R$attr: int panelMenuListTheme
com.google.firebase.database.core.Context: com.google.firebase.database.logging.Logger$Level logLevel
com.google.firebase.database.core.persistence.PruneForest: com.google.firebase.database.core.utilities.Predicate PRUNE_PREDICATE
androidx.fragment.app.DialogFragment$1: androidx.fragment.app.DialogFragment this$0
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_RIGHT
androidx.exifinterface.media.ExifInterface: java.lang.String mFilename
androidx.appcompat.R$styleable: int LinearLayoutCompat_divider
androidx.appcompat.view.SupportActionModeWrapper: android.content.Context mContext
androidx.core.R$styleable: int FontFamilyFont_fontStyle
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean autocorrect
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuView mMenuView
io.flutter.view.VsyncWaiter: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
kotlin.internal.PlatformImplementations$ReflectThrowable: kotlin.internal.PlatformImplementations$ReflectThrowable INSTANCE
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingListen: com.google.firebase.database.connection.PersistentConnectionImpl$QuerySpec query
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean mColorFilterSet
androidx.appcompat.graphics.drawable.DrawableContainer: long mExitAnimationEnd
com.google.zxing.pdf417.PDF417ResultMetadata: java.lang.String fileId
androidx.appcompat.app.AlertController: android.view.View mCustomTitleView
androidx.appcompat.widget.ListPopupWindow: boolean mOverlapAnchorSet
androidx.appcompat.widget.ActionBarOverlayLayout: int mHideOnContentScrollReference
androidx.appcompat.R$dimen: int abc_star_big
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int source
com.google.android.gms.maps.model.CameraPosition: float bearing
androidx.fragment.app.DialogFragment: java.lang.Runnable mDismissRunnable
androidx.appcompat.widget.ForwardingListener: android.view.View mSrc
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: char[] C40_SHIFT2_SET_CHARS
com.google.firebase.database.connection.PersistentConnectionImpl: long lastWriteTimestamp
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore mViewModelStore
com.google.firebase.database.collection.RBTreeSortedMap: com.google.firebase.database.collection.LLRBNode root
com.baseflow.geolocator.location.LocationServiceStatusReceiver: com.baseflow.geolocator.location.ServiceStatus lastKnownServiceStatus
androidx.appcompat.R$drawable: int abc_spinner_mtrl_am_alpha
androidx.appcompat.view.menu.CascadingMenuPopup$1: androidx.appcompat.view.menu.CascadingMenuPopup this$0
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mEnterTransition
androidx.fragment.app.FragmentAnim$3: android.view.View val$viewToAnimate
io.flutter.plugins.googlemaps.PolylinesController: java.util.Map googleMapsPolylineIdToDartPolylineId
androidx.lifecycle.LiveData: int mVersion
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.FlutterEngine flutterEngine
com.google.android.gms.tasks.Tasks$zzc: int zzag
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler mPlatformMessageHandler
androidx.appcompat.widget.DrawableUtils: int[] CHECKED_STATE_SET
io.flutter.view.AccessibilityBridge$SemanticsNode: int maxValueLength
com.google.zxing.qrcode.decoder.Version$ECBlocks: int ecCodewordsPerBlock
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.DropDownListView mDropDownList
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: android.support.v4.app.INotificationSideChannel service
net.touchcapture.qr.flutterqr.Shared: net.touchcapture.qr.flutterqr.Shared INSTANCE
androidx.appcompat.widget.ListPopupWindow: int mDropDownHorizontalOffset
kotlinx.coroutines.internal.AtomicOp: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _consensus$FU
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback imeSyncCallback
com.google.android.gms.maps.model.MarkerOptions: float zzds
androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToCallback
com.google.firebase.database.core.Repo$11: com.google.firebase.database.core.Repo this$0
com.google.firebase.database.core.SyncTree$9: com.google.firebase.database.snapshot.Node val$snap
androidx.appcompat.view.menu.CascadingMenuPopup$2: androidx.appcompat.view.menu.CascadingMenuPopup this$0
androidx.fragment.app.FragmentManagerState: int mBackStackIndex
androidx.appcompat.widget.Toolbar: boolean mEatingTouch
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_UP
androidx.appcompat.view.menu.ActionMenuItem: android.content.Intent mIntent
com.journeyapps.barcodescanner.camera.CameraManager$CameraPreviewCallback: com.journeyapps.barcodescanner.Size resolution
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.Continuation continuation
com.google.firebase.database.core.Repo$18: com.google.firebase.database.core.Path val$path
com.google.firebase.database.core.utilities.Tree: com.google.firebase.database.core.utilities.TreeNode node
io.flutter.plugins.googlemaps.CircleController: float density
com.google.android.gms.internal.location.zzbd: boolean zzdh
com.journeyapps.barcodescanner.RawImageData: byte[] data
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetricsCalculator$Companion Companion
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_SELECTED
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: java.lang.CharSequence mPrompt
com.google.android.gms.common.zzg: java.lang.ref.WeakReference zzw
com.google.zxing.client.android.DecodeFormatManager: java.util.Set DATA_MATRIX_FORMATS
androidx.core.widget.AutoScrollHelper$ClampedScroller: long mStopTime
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean zzas
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder mMenu
com.baseflow.geolocator.permission.PermissionManager: com.baseflow.geolocator.errors.ErrorCallback errorCallback
androidx.appcompat.widget.DrawableUtils: java.lang.Class sInsetsClazz
com.google.firebase.components.Dependency: int injection
kotlinx.coroutines.CommonPool: java.util.concurrent.Executor pool
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mCachedAutoMirrored
androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParentNonTouch
androidx.core.content.FileProvider: java.lang.String[] COLUMNS
androidx.window.embedding.ActivityRule: boolean alwaysExpand
androidx.appcompat.widget.AppCompatSpinner$1: androidx.appcompat.widget.AppCompatSpinner$DropdownPopup val$popup
io.flutter.plugins.urllauncher.UrlLauncherPlugin: io.flutter.plugins.urllauncher.UrlLauncher urlLauncher
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation: androidx.fragment.app.FragmentStateManager mFragmentStateManager
androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingParentHelper mParentHelper
androidx.appcompat.widget.SearchView$SearchAutoComplete: java.lang.Runnable mRunShowSoftInputIfNecessary
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: androidx.appcompat.widget.Toolbar this$0
com.baseflow.geolocator.LocationServiceHandlerImpl: android.content.Context context
androidx.appcompat.R$styleable: int[] MenuItem
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray platformViewParent
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: kotlin.text.StringsKt__IndentKt$getIndentFunction$1 INSTANCE
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemIconResId
androidx.fragment.app.FragmentTransitionImpl$3: androidx.fragment.app.FragmentTransitionImpl this$0
androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.io.OutputStream mOutputStream
androidx.fragment.app.FragmentTransaction$Op: androidx.lifecycle.Lifecycle$State mOldMaxState
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: long timeNow
androidx.appcompat.view.menu.BaseMenuPresenter: android.content.Context mSystemContext
io.flutter.plugins.googlemaps.TileProviderController$Worker: java.util.Map result
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU
com.google.firebase.database.core.ServerValues$1: com.google.firebase.database.core.SnapshotHolder val$holder
com.google.firebase.database.connection.PersistentConnectionImpl$6: com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingGet val$get
androidx.activity.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD
com.google.firebase.database.core.view.filter.ChildChangeAccumulator: java.util.Map changeMap
io.flutter.plugins.googlemaps.PolygonBuilder: boolean consumeTapEvents
com.google.android.gms.tasks.zzl: com.google.android.gms.tasks.Task zzg
androidx.core.view.WindowInsetsCompat$Impl20: java.lang.reflect.Field sAttachInfoField
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: boolean mAnimEndCalled
androidx.fragment.app.SpecialEffectsController$1: androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation val$operation
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getChildId
com.google.firebase.database.core.utilities.Utilities$1: com.google.android.gms.tasks.TaskCompletionSource val$source
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock$4: com.google.firebase.database.tubesock.WebSocketException val$e
com.google.firebase.FirebaseOptions: java.lang.String apiKey
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PASTE
androidx.exifinterface.media.ExifInterface: java.util.HashMap sExifPointerTagMap
androidx.appcompat.R$styleable: int Toolbar_subtitleTextAppearance
androidx.appcompat.app.AlertController$AlertParams$2: int mLabelIndex
androidx.fragment.app.FragmentTransition$3: androidx.fragment.app.Fragment val$outFragment
androidx.appcompat.R$attr: int imageButtonStyle
io.flutter.plugins.imagepicker.ImagePickerPlugin: androidx.lifecycle.Lifecycle lifecycle
com.journeyapps.barcodescanner.camera.CameraManager: java.lang.String TAG
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mAutoMirrored
androidx.cursoradapter.widget.CursorAdapter: android.database.Cursor mCursor
io.flutter.plugins.googlemaps.TileOverlaysController: com.google.android.gms.maps.GoogleMap googleMap
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: kotlinx.coroutines.channels.Receive receive
com.google.firebase.database.connection.WebsocketConnection: com.google.firebase.database.connection.WebsocketConnection$Delegate delegate
com.journeyapps.barcodescanner.ViewfinderView: int resultPointColor
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: java.lang.String locale
com.google.zxing.oned.UPCEANReader: int[][] L_PATTERNS
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
io.flutter.embedding.android.AndroidTouchProcessor: boolean trackMotionEvents
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper
androidx.exifinterface.media.ExifInterface: int[] BITS_PER_SAMPLE_GREYSCALE_2
com.google.android.gms.internal.location.zzbf: com.google.android.gms.location.zzx zzdm
androidx.core.view.WindowInsetsControllerCompat$Impl30: androidx.core.view.WindowInsetsControllerCompat mCompatController
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] $VALUES
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
com.google.android.gms.maps.model.CircleOptions: int fillColor
io.flutter.view.AccessibilityBridge$4: android.view.accessibility.AccessibilityManager val$accessibilityManager
androidx.core.content.res.ResourcesCompat$FontCallback$2: androidx.core.content.res.ResourcesCompat$FontCallback this$0
com.google.android.gms.common.api.internal.zag: com.google.android.gms.common.api.internal.RegisterListenerMethod zact
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: kotlin.coroutines.CoroutineContext$Key key
com.google.firebase.database.snapshot.ChildKey: java.lang.String key
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory: java.util.concurrent.ExecutorService executorService
com.google.firebase.database.core.Repo$25: com.google.firebase.database.DatabaseError val$abortError
com.google.firebase.database.collection.ImmutableSortedMapIterator: boolean isReverse
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: kotlinx.coroutines.internal.ThreadContextKt$countAll$1 INSTANCE
com.google.zxing.oned.CodaBarReader: int[] counters
androidx.core.R$id: int tag_accessibility_clickable_spans
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType VISIBLE_PASSWORD
com.google.firebase.database.core.utilities.encoding.CustomClassMapper: java.util.concurrent.ConcurrentMap mappers
io.flutter.plugins.flutterexifrotation.FlutterExifRotationPlugin: io.flutter.plugin.common.MethodCall call
com.lyokone.location.FlutterLocation: android.util.SparseArray mapFlutterAccuracy
androidx.window.R$styleable: int[] SplitPairRule
androidx.core.view.WindowInsetsControllerCompat$Impl30: androidx.collection.SimpleArrayMap mListeners
io.flutter.plugins.firebase.database.FlutterDataSnapshotPayload: java.util.Map payloadMap
com.google.firebase.database.core.ValueEventRegistration: com.google.firebase.database.core.view.QuerySpec spec
com.google.android.gms.common.util.CrashUtils: android.os.DropBoxManager zzgh
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE
androidx.collection.ContainerHelpers: long[] EMPTY_LONGS
com.google.firebase.database.core.Repo$TransactionStatus: com.google.firebase.database.core.Repo$TransactionStatus NEEDS_ABORT
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder: java.lang.String firstAIdigits
androidx.window.R$styleable: int ActivityFilter_activityName
com.google.android.gms.common.zzf: byte[] zzu
com.google.firebase.components.ComponentRuntime: java.util.concurrent.atomic.AtomicReference eagerComponentsInitializedWith
androidx.fragment.app.FragmentManager: boolean mStopped
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty EMPTY_ACTIVE
com.google.firebase.database.DataSnapshot$1: com.google.firebase.database.DataSnapshot this$0
io.flutter.plugins.firebase.database.TransactionExecutor: com.google.android.gms.tasks.TaskCompletionSource completion
androidx.appcompat.R$id: int textSpacerNoTitle
com.google.android.gms.maps.model.PolylineOptions: java.util.List zzdx
androidx.appcompat.app.AlertController$AlertParams$2: int mIsCheckedIndex
com.google.firebase.database.tubesock.WebSocketHandshake: java.lang.String nonce
io.flutter.view.AccessibilityBridge: android.view.View rootAccessibilityView
com.google.zxing.common.HybridBinarizer: com.google.zxing.common.BitMatrix matrix
com.google.zxing.aztec.decoder.Decoder: java.lang.String[] MIXED_TABLE
androidx.core.widget.NestedScrollView: int mTouchSlop
com.google.android.gms.common.api.internal.BackgroundDetector: boolean zzax
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
com.google.firebase.database.connection.util.RetryHelper$Builder: java.util.concurrent.ScheduledExecutorService service
com.google.android.gms.common.api.internal.BackgroundDetector: java.util.ArrayList zzaw
androidx.appcompat.app.AlertController$AlertParams: java.lang.String mIsCheckedColumn
com.google.firebase.database.core.WriteTree: com.google.firebase.database.core.utilities.Predicate DEFAULT_FILTER
androidx.fragment.app.BackStackRecord: int mIndex
androidx.core.R$id: int accessibility_custom_action_15
androidx.appcompat.R$styleable: int MenuView_preserveIconSpacing
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingPut: java.lang.String action
androidx.appcompat.widget.TintContextWrapper: java.lang.Object CACHE_LOCK
com.journeyapps.barcodescanner.CaptureManager: com.google.zxing.client.android.InactivityTimer inactivityTimer
androidx.appcompat.widget.DropDownListView: int mSelectionTopPadding
com.baseflow.geolocator.GeolocatorPlugin: com.baseflow.geolocator.MethodCallHandlerImpl methodCallHandler
androidx.core.widget.AutoScrollHelper$ClampedScroller: float mTargetVelocityX
androidx.fragment.app.Fragment: boolean mInLayout
androidx.exifinterface.media.ExifInterface: byte[] JPEG_SIGNATURE
androidx.appcompat.view.ActionBarPolicy: android.content.Context mContext
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: io.flutter.plugin.common.MethodChannel$Result val$result
com.google.firebase.database.core.Repo: long transactionOrder
androidx.appcompat.R$styleable: int[] ActionMode
io.flutter.plugins.googlemaps.TileProviderController: java.lang.String tileOverlayId
androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory mDefaultSpecialEffectsControllerFactory
androidx.appcompat.R$styleable: int SearchView_searchIcon
androidx.activity.contextaware.ContextAwareHelper: android.content.Context mContext
com.google.firebase.database.connection.PersistentConnectionImpl$QuerySpec: java.util.List path
com.google.zxing.pdf417.PDF417ResultMetadata: java.lang.String sender
com.google.android.gms.tasks.zzk: com.google.android.gms.tasks.OnFailureListener zzn
net.touchcapture.qr.flutterqr.QRView: boolean isPaused
androidx.appcompat.widget.ActionMenuView: int mGeneratedItemPadding
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness dark
com.google.android.gms.internal.location.zzau: com.google.android.gms.location.LocationResult zzdb
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_UP
com.google.android.gms.maps.model.VisibleRegion: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.SuggestionsAdapter: androidx.appcompat.widget.SearchView mSearchView
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2: androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo: io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler handler
com.google.firebase.database.core.persistence.TrackedQueryManager: com.google.firebase.database.core.utilities.ImmutableTree trackedQueryTree
com.google.firebase.database.core.SyncTree$9: com.google.firebase.database.core.SyncTree this$0
com.google.android.gms.location.FusedLocationProviderClient$zza: com.google.android.gms.tasks.TaskCompletionSource zzac
com.google.android.gms.common.internal.zzf: boolean zzea
androidx.appcompat.R$styleable: int AlertDialog_android_layout
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int buttonState
com.google.zxing.qrcode.detector.FinderPatternFinder: com.google.zxing.ResultPointCallback resultPointCallback
androidx.appcompat.widget.DropDownListView: androidx.core.view.ViewPropertyAnimatorCompat mClickAnimation
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: int viewId
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer
com.google.firebase.database.core.WriteTree: java.util.List allWrites
kotlinx.coroutines.scheduling.TasksKt: int MAX_POOL_SIZE
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView
androidx.window.embedding.SplitPairRule: boolean clearTop
androidx.fragment.app.FragmentState: boolean mRemoving
kotlinx.coroutines.android.HandlerContext: java.lang.String name
androidx.core.R$styleable: int FontFamilyFont_fontWeight
androidx.appcompat.widget.ForwardingListener$TriggerLongPress: androidx.appcompat.widget.ForwardingListener this$0
com.google.firebase.database.core.SnapshotHolder: com.google.firebase.database.snapshot.Node rootNode
com.google.firebase.database.snapshot.ChildKey: com.google.firebase.database.snapshot.ChildKey PRIORITY_CHILD_KEY
androidx.fragment.app.FragmentTransaction$Op: androidx.lifecycle.Lifecycle$State mCurrentMaxState
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] restorationData
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mChangingConfigurations
androidx.fragment.app.Fragment: java.lang.Runnable mPostponedDurationRunnable
com.google.firebase.components.ComponentRuntime: com.google.firebase.inject.Provider EMPTY_PROVIDER
kotlin.jvm.internal.ClassReference: kotlin.jvm.internal.ClassReference$Companion Companion
com.google.android.gms.internal.location.zza: java.lang.String zzb
com.google.firebase.database.core.Tag: long tagNumber
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_SLIDER
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean mMutated
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol OFFER_FAILED
com.google.zxing.qrcode.detector.FinderPatternInfo: com.google.zxing.qrcode.detector.FinderPattern topLeft
com.google.firebase.database.connection.PersistentConnectionImpl: java.util.Map outstandingPuts
androidx.appcompat.graphics.drawable.DrawableContainer: boolean mMutated
androidx.appcompat.R$styleable: int ActionBar_titleTextStyle
com.google.android.gms.maps.model.Cap: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.platform.VirtualDisplayController: android.view.View$OnFocusChangeListener focusChangeListener
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_AT_MOVEMENT_GRANULARITY
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int gravity
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$inNames
androidx.appcompat.R$styleable: int View_android_theme
androidx.appcompat.R$styleable: int Toolbar_collapseIcon
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder BIG_ENDIAN
com.google.android.gms.common.api.GoogleApi: android.content.Context mContext
androidx.fragment.app.FragmentManager$4: androidx.fragment.app.FragmentManager this$0
com.google.firebase.database.core.view.DataEvent: com.google.firebase.database.core.view.Event$EventType eventType
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarDeviceState lastDeviceState
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: java.lang.String encodedName
com.google.android.gms.signin.internal.zak: com.google.android.gms.common.ConnectionResult zapo
com.google.android.gms.common.Feature: long zzl
com.google.firebase.components.RestrictedComponentContainer: java.util.Set allowedSetDirectInterfaces
androidx.fragment.app.FragmentTransitionCompat21$3: java.lang.Object val$exitTransition
com.google.android.gms.common.internal.BaseGmsClient: android.content.Context mContext
androidx.appcompat.widget.ActionMenuView: int mMinCellSize
androidx.appcompat.R$styleable: int SearchView_iconifiedByDefault
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isAttached
io.flutter.view.AccessibilityBridge: boolean isReleased
androidx.lifecycle.FullLifecycleObserverAdapter: androidx.lifecycle.LifecycleEventObserver mLifecycleEventObserver
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0
net.touchcapture.qr.flutterqr.QRView$1: net.touchcapture.qr.flutterqr.QRView this$0
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX
io.flutter.plugins.googlemaps.GoogleMapController: com.google.android.gms.maps.GoogleMap googleMap
com.google.firebase.database.core.Repo$TransactionData: com.google.firebase.database.core.Path path
com.google.firebase.database.Transaction$Result: boolean success
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension
androidx.fragment.app.FragmentTransaction: int mTransition
androidx.activity.OnBackPressedCallback: java.util.concurrent.CopyOnWriteArrayList mCancellables
kotlin.coroutines.CoroutineContext$plus$1: kotlin.coroutines.CoroutineContext$plus$1 INSTANCE
androidx.fragment.app.Fragment$3: androidx.fragment.app.SpecialEffectsController val$controller
com.google.firebase.database.core.CompoundWrite$2: java.util.Map val$writes
com.google.android.gms.common.api.internal.zaae: com.google.android.gms.common.api.internal.ApiKey zaft
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: androidx.appcompat.widget.MenuPopupWindow window
androidx.appcompat.widget.AppCompatPopupWindow: boolean COMPAT_OVERLAP_ANCHOR
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityName
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: java.util.Map registeredPlugins
androidx.appcompat.R$string: int abc_menu_space_shortcut_label
com.google.android.gms.maps.model.CircleOptions: com.google.android.gms.maps.model.LatLng zzcp
io.flutter.plugins.urllauncher.WebViewActivity: android.content.IntentFilter closeIntentFilter
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback: androidx.appcompat.widget.ActionMenuView this$0
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle currentTheme
androidx.cursoradapter.widget.CursorAdapter: boolean mDataValid
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1 INSTANCE
com.google.android.gms.common.api.Scope: int zzg
kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object LIST_EMPTY
com.baseflow.geolocator.location.LocationManagerClient: android.content.Context context
androidx.cursoradapter.widget.CursorAdapter: android.database.DataSetObserver mDataSetObserver
io.flutter.Log: int ASSERT
androidx.appcompat.widget.AppCompatTextHelper: android.graphics.Typeface mFontTypeface
kotlin.text.DelimitedRangesSequence$iterator$1: int nextSearchIndex
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_6
com.google.firebase.database.core.Repo$3: com.google.firebase.database.core.Repo this$0
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterUiDisplayed
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: boolean mEnabled
com.google.android.gms.common.stats.ConnectionTracker: java.util.List zzfd
androidx.appcompat.widget.SearchView$SavedState: boolean isIconified
com.journeyapps.barcodescanner.CaptureActivity: com.journeyapps.barcodescanner.DecoratedBarcodeView barcodeScannerView
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher Unconfined
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_PROGRESS
com.google.android.gms.common.GooglePlayServicesUtil: int GOOGLE_PLAY_SERVICES_VERSION_CODE
com.journeyapps.barcodescanner.camera.CameraManager$CameraPreviewCallback: com.journeyapps.barcodescanner.camera.CameraManager this$0
com.google.firebase.database.core.Repo: com.google.firebase.database.logging.LogWrapper operationLogger
com.google.firebase.database.core.Repo$12: com.google.firebase.database.core.Path val$path
androidx.appcompat.widget.ThemeUtils: int[] CHECKED_STATE_SET
kotlin.jvm.internal.CallableReference$NoReceiver: kotlin.jvm.internal.CallableReference$NoReceiver INSTANCE
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: int mExpandedIndex
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder: java.lang.reflect.Field sViewAttachInfoField
androidx.appcompat.app.AppCompatDelegateImpl: int mInvalidatePanelMenuFeatures
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mNegativeButtonText
androidx.core.app.RemoteActionCompat: boolean mEnabled
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode: com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode CONTINUOUS
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingLeft
io.flutter.plugins.googlemaps.GoogleMapBuilder: android.graphics.Rect padding
androidx.core.view.ViewCompat$Api21Impl$1: androidx.core.view.WindowInsetsCompat mLastInsets
com.google.firebase.database.android.AndroidPlatform$2: com.google.firebase.database.android.AndroidPlatform this$0
com.google.firebase.database.core.view.CancelEvent: com.google.firebase.database.DatabaseError error
com.journeyapps.barcodescanner.CaptureManager: boolean finishWhenClosed
io.flutter.embedding.android.FlutterView: androidx.core.util.Consumer windowInfoListener
com.google.zxing.client.android.R$string: int zxing_app_name
androidx.appcompat.view.menu.CascadingMenuPopup: int mPopupStyleAttr
androidx.interpolator.view.animation.FastOutSlowInInterpolator: float[] VALUES
io.flutter.plugin.editing.TextEditingDelta: int deltaStart
androidx.appcompat.app.WindowDecorActionBar: boolean mContentAnimations
com.google.firebase.database.OnDisconnect$2: java.util.Map val$update
androidx.fragment.app.FragmentManager: boolean mNeedMenuInvalidate
com.baseflow.geolocator.StreamHandlerImpl: com.baseflow.geolocator.GeolocatorLocationService foregroundLocationService
androidx.fragment.app.DialogFragment: boolean mCancelable
androidx.core.provider.CallbackWithHandler$1: androidx.core.provider.FontsContractCompat$FontRequestCallback val$callback
androidx.core.view.ActionProvider: android.content.Context mContext
com.google.android.gms.maps.zzd: com.google.android.gms.maps.GoogleMap$OnInfoWindowClickListener zzl
io.flutter.plugin.localization.LocalizationPlugin: io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler localizationMessageHandler
androidx.appcompat.widget.ActionMenuPresenter: boolean mWidthLimitSet
kotlinx.coroutines.Empty: boolean isActive
androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.HandlerThread mHandlerThread
com.google.zxing.oned.Code39Reader: boolean usingCheckDigit
com.lyokone.location.BackgroundNotification: int notificationId
androidx.appcompat.widget.ToolbarWidgetWrapper: int mNavigationMode
androidx.appcompat.R$styleable: int Toolbar_titleTextColor
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: androidx.core.util.Consumer $consumer
androidx.appcompat.graphics.drawable.DrawableContainer$1: androidx.appcompat.graphics.drawable.DrawableContainer this$0
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Object rawPointerPropertiesList
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures
com.google.zxing.client.android.InactivityTimer: boolean onBattery
androidx.appcompat.widget.TooltipPopup: android.view.View mContentView
com.google.android.gms.location.LocationAvailability: android.os.Parcelable$Creator CREATOR
com.google.zxing.datamatrix.decoder.Version: int versionNumber
androidx.fragment.R$id: int special_effects_controller_view_tag
androidx.appcompat.app.WindowDecorActionBar: android.content.Context mThemedContext
io.flutter.plugin.editing.TextInputPlugin: android.util.SparseArray mAutofillConfigurations
androidx.appcompat.R$styleable: int ActionBar_height
androidx.lifecycle.Lifecycle$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object onCloseHandler
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_WORD
io.flutter.embedding.android.FlutterImageView: android.graphics.Bitmap currentBitmap
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mActionItems
com.baseflow.geolocator.MethodCallHandlerImpl: android.app.Activity activity
com.google.android.gms.common.api.internal.zzd: com.google.android.gms.common.api.internal.LifecycleCallback zzbi
com.google.android.gms.common.internal.BaseGmsClient: android.os.Handler mHandler
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: com.google.android.gms.common.api.internal.GoogleApiManager zaia
com.google.zxing.common.reedsolomon.GenericGFPoly: int[] coefficients
com.baseflow.geolocator.location.GeolocationManager: java.util.List locationClients
androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_ANMF
com.lyokone.location.FlutterLocation: com.google.android.gms.location.LocationCallback mLocationCallback
com.google.zxing.BinaryBitmap: com.google.zxing.Binarizer binarizer
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty EMPTY_NEW
com.google.android.gms.common.internal.BaseGmsClient$zzd: int zzcx
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy PREFER_LOCAL
com.google.android.gms.dynamite.DynamiteModule: java.lang.Boolean zzif
com.google.zxing.common.BitArray: int size
com.google.firebase.components.ComponentDiscovery: com.google.firebase.components.ComponentDiscovery$RegistrarNameRetriever retriever
kotlinx.coroutines.channels.ChannelResult$Closed: java.lang.Throwable cause
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int background
com.google.android.gms.common.api.internal.zzc: java.util.WeakHashMap zzbe
androidx.appcompat.widget.Toolbar$SavedState: boolean isOverflowOpen
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isHandled
androidx.cursoradapter.widget.CursorFilter: androidx.cursoradapter.widget.CursorFilter$CursorFilterClient mClient
androidx.lifecycle.LiveData: boolean mChangingActiveState
androidx.appcompat.R$dimen: int tooltip_precise_anchor_threshold
androidx.arch.core.executor.DefaultTaskExecutor: android.os.Handler mMainHandler
androidx.appcompat.app.AlertController$AlertParams: java.lang.String mLabelColumn
com.google.zxing.client.android.DecodeFormatManager: java.util.Set PRODUCT_FORMATS
androidx.core.R$styleable: int[] FontFamilyFont
androidx.appcompat.app.AlertController$AlertParams$3: androidx.appcompat.app.AlertController$AlertParams this$0
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher$FragmentLifecycleCallbacksHolder: boolean mRecursive
com.google.firebase.database.core.SyncTree$16: com.google.firebase.database.snapshot.Node val$resolvedServerCache
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingDisconnect: java.util.List path
com.lyokone.location.StreamHandlerImpl: io.flutter.plugin.common.EventChannel channel
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode FNC1_FIRST_POSITION
com.google.zxing.pdf417.PDF417ResultMetadata: java.lang.String addressee
androidx.appcompat.R$id: int title_template
androidx.appcompat.app.WindowDecorActionBar: android.app.Activity mActivity
com.google.firebase.database.core.view.Change: com.google.firebase.database.snapshot.IndexedNode oldIndexedNode
androidx.appcompat.R$string: int abc_menu_enter_shortcut_label
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type FRAMEWORK_CLIENT
io.flutter.plugin.platform.VirtualDisplayController$1: android.view.View val$embeddedView
androidx.appcompat.R$drawable: int abc_ratingbar_material
androidx.exifinterface.media.ExifInterface: boolean mXmpIsFromSeparateMarker
androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect
com.journeyapps.barcodescanner.CameraPreview: android.graphics.Rect previewFramingRect
androidx.customview.view.AbsSavedState: android.os.Parcelable mSuperState
com.google.android.gms.common.internal.ClientSettings: android.accounts.Account account
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnDismissListener mOnDismissListener
com.google.zxing.datamatrix.decoder.DataBlock: int numDataCodewords
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentContainer mContainer
com.google.firebase.database.core.view.filter.LimitedFilter: boolean reverse
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.RotationCallback rotationCallback
com.google.android.gms.common.stats.ConnectionTracker: java.util.List zzfc
androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableCompat
androidx.appcompat.app.AlertController$RecycleListView: int mPaddingTopNoTitle
com.google.android.gms.common.api.internal.zaj: boolean zadc
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$SearchAutoComplete mSearchSrcTextView
com.google.android.gms.maps.model.PolygonOptions: float zzcr
com.google.zxing.client.android.R$id: int zxing_camera_closed
androidx.appcompat.view.StandaloneActionMode: androidx.appcompat.view.ActionMode$Callback mCallback
androidx.activity.OnBackPressedCallback: boolean mEnabled
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener
io.flutter.plugins.imagepicker.ImagePickerDelegate$1: android.app.Activity val$activity
androidx.lifecycle.ViewModelStore: java.util.HashMap mMap
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mReturnTransition
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Waiter waiters
com.google.android.gms.location.LocationResult: android.os.Parcelable$Creator CREATOR
androidx.appcompat.R$styleable: int[] Toolbar
com.google.android.gms.common.ConnectionResult: java.lang.String zzj
com.google.firebase.database.connection.ConnectionContext: java.util.concurrent.ScheduledExecutorService executorService
kotlinx.coroutines.scheduling.LimitingDispatcher: int inFlightTasks
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_ENABLED_STATE
io.flutter.embedding.engine.FlutterEngine$1: io.flutter.embedding.engine.FlutterEngine this$0
com.google.android.gms.location.LocationSettingsResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.api.internal.zabv: com.google.android.gms.common.api.internal.UnregisterListenerMethod zakd
com.google.android.gms.maps.model.CameraPosition: com.google.android.gms.maps.model.LatLng target
com.google.android.gms.location.LocationAvailability: int zzar
androidx.fragment.app.FragmentManager: boolean USE_STATE_MANAGER
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2: int length
com.google.common.util.concurrent.AbstractFuture: boolean GENERATE_CANCELLATION_CAUSES
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23: boolean sRebaseMethodFetched
androidx.core.app.NotificationCompat$Builder: int mProgressMax
com.google.firebase.database.core.Repo$TransactionData: com.google.firebase.database.snapshot.Node currentOutputSnapshotResolved
com.google.zxing.client.android.AmbientLightManager: android.hardware.Sensor lightSensor
com.google.android.gms.auth.api.signin.internal.Storage: android.content.SharedPreferences zaal
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SET_TEXT
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
androidx.appcompat.widget.ActionMenuPresenter: int mMinCellSize
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader imageReader
androidx.appcompat.R$styleable: int Toolbar_titleMarginBottom
net.touchcapture.qr.flutterqr.QRView: java.util.HashMap params
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: int mChangingConfigurations
io.flutter.embedding.android.FlutterActivity: androidx.lifecycle.LifecycleRegistry lifecycle
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mCreateFromFamiliesWithDefault
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.android.FlutterImageView$SurfaceKind kind
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat RSS_14
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle$State mMaxState
com.google.zxing.datamatrix.decoder.Version$ECB: int dataCodewords
androidx.fragment.R$animator: int fragment_fade_exit
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy PREFER_HIGHEST_OR_LOCAL_VERSION
io.flutter.plugin.common.JSONMessageCodec: io.flutter.plugin.common.JSONMessageCodec INSTANCE
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] $VALUES
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: kotlinx.coroutines.channels.AbstractChannel this$0
kotlinx.coroutines.JobNode: kotlinx.coroutines.JobSupport job
androidx.appcompat.R$id: int parentPanel
com.google.zxing.client.android.DecodeFormatManager: java.util.Map FORMATS_FOR_MODE
com.google.firebase.database.core.view.QueryParams: com.google.firebase.database.snapshot.ChildKey indexEndName
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler accessibilityMessageHandler
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.net.Uri zaj
io.flutter.embedding.android.FlutterTextureView$1: io.flutter.embedding.android.FlutterTextureView this$0
net.touchcapture.qr.flutterqr.CustomFramingRectBarcodeView: int bottomOffset
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAddFontFromAssetManager
com.google.android.gms.internal.location.zzm: java.lang.String tag
com.google.android.gms.maps.model.CustomCap: float refWidth
com.google.android.gms.common.api.GoogleApi$Settings: com.google.android.gms.common.api.internal.StatusExceptionMapper zabp
com.google.android.gms.common.internal.ClientSettings: boolean zaon
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mChildFragmentManager
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.widget.CompoundButton mView
com.google.firebase.database.connection.ConnectionContext: com.google.firebase.database.connection.ConnectionTokenProvider appCheckTokenProvider
com.google.android.gms.common.api.internal.zace: android.content.Context mContext
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: androidx.appcompat.view.menu.MenuBuilder menu
com.google.firebase.database.OnDisconnect$3: com.google.firebase.database.OnDisconnect this$0
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus[] $VALUES
androidx.appcompat.R$attr: int radioButtonStyle
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isWaitingForActivityReattachment
com.google.android.gms.common.internal.BaseGmsClient$zzd: com.google.android.gms.common.internal.BaseGmsClient zzcw
androidx.lifecycle.SavedStateHandleController$1: androidx.savedstate.SavedStateRegistry val$registry
com.google.zxing.maxicode.MaxiCodeReader: com.google.zxing.ResultPoint[] NO_POINTS
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: kotlin.jvm.functions.Function2 $this_createCoroutineUnintercepted$inlined
androidx.core.view.ContentInfoCompat: int mFlags
androidx.appcompat.view.menu.ActionMenuItem: char mShortcutNumericChar
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat this$0
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$4: java.lang.reflect.Constructor $constructor$inlined
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType ALERT
com.google.android.gms.common.internal.SimpleClientAdapter: com.google.android.gms.common.api.Api$SimpleClient zapu
androidx.fragment.app.FragmentManagerState: java.util.ArrayList mResults
com.google.firebase.database.core.view.EventGenerator: com.google.firebase.database.snapshot.Index index
com.google.firebase.database.core.SyncTree: com.google.firebase.database.core.SyncTree$ListenProvider listenProvider
io.flutter.plugin.editing.ListenableEditingState: int mComposingEndWhenBeginBatchEdit
com.google.firebase.database.FirebaseDatabase$1: com.google.firebase.database.FirebaseDatabase this$0
androidx.fragment.app.FragmentManager: java.util.concurrent.CopyOnWriteArrayList mOnAttachListeners
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$1: java.lang.Object val$result
androidx.appcompat.widget.SearchView: android.widget.ImageView mVoiceButton
com.google.firebase.FirebaseApp: java.lang.String name
androidx.fragment.app.FragmentManager: boolean mExecutingActions
androidx.appcompat.R$styleable: int SearchView_defaultQueryHint
androidx.appcompat.widget.AppCompatTextHelper: int mStyle
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingChildHelper mChildHelper
com.google.android.gms.tasks.zzu: java.lang.Exception zzab
kotlinx.coroutines.CancelledContinuation: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _resumed$FU
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: int mRetreatKey
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.fragment.app.Fragment mFragment
com.google.firebase.database.core.persistence.TrackedQueryManager: com.google.firebase.database.core.persistence.PersistenceStorageEngine storageLayer
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.Continuation delegate
androidx.appcompat.R$attr: int textColorSearchUrl
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType ALLOWED_LENGTHS
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
androidx.appcompat.view.menu.ActionMenuItem: int mOrdering
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
androidx.appcompat.widget.ListPopupWindow: int mDropDownVerticalOffset
com.google.zxing.oned.Code93Reader: int ASTERISK_ENCODING
io.flutter.FlutterInjector$Builder: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenBySystem
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mNonActionItems
com.google.android.gms.common.api.GoogleApi$Settings: com.google.android.gms.common.api.GoogleApi$Settings DEFAULT_SETTINGS
com.google.android.gms.location.LocationSettingsRequest$Builder: boolean zzbh
androidx.lifecycle.LifecycleRegistry: androidx.arch.core.internal.FastSafeIterableMap mObserverMap
kotlinx.coroutines.scheduling.NonBlockingContext: int taskMode
androidx.appcompat.widget.Toolbar: java.lang.CharSequence mCollapseDescription
androidx.fragment.R$styleable: int[] GradientColorItem
androidx.fragment.R$animator: int fragment_fade_enter
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATOR
androidx.core.view.ViewCompat$UnhandledKeyEventManager: java.lang.ref.WeakReference mLastDispatchedPreViewKeyEvent
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] $VALUES
com.google.firebase.components.Lazy: java.lang.Object instance
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int mTtcIndex
androidx.appcompat.view.menu.ActionMenuItemView: android.graphics.drawable.Drawable mIcon
kotlinx.coroutines.CoroutineName: java.lang.String name
androidx.appcompat.R$styleable: int SearchView_goIcon
androidx.lifecycle.ClassesInfoCache$MethodReference: java.lang.reflect.Method mMethod
androidx.core.view.NestedScrollingChildHelper: android.view.View mView
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets[] mOverriddenInsets
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
com.google.android.gms.common.internal.StringResourceValueReader: android.content.res.Resources zzeu
androidx.collection.MapCollections: androidx.collection.MapCollections$KeySet mKeySet
com.google.firebase.database.core.SparseSnapshotTree: com.google.firebase.database.snapshot.Node value
kotlinx.coroutines.LazyStandaloneCoroutine: kotlin.coroutines.Continuation continuation
androidx.appcompat.R$id: int action_bar
androidx.appcompat.view.menu.MenuItemImpl: int mShortcutNumericModifiers
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: android.app.Activity $activity
androidx.appcompat.view.ContextThemeWrapper: android.view.LayoutInflater mInflater
com.google.android.gms.maps.zzo: com.google.android.gms.maps.GoogleMap$OnCircleClickListener zzw
androidx.appcompat.widget.ActionMenuPresenter: int mActionItemWidthLimit
io.flutter.plugins.googlemaps.PolylinesController: io.flutter.plugin.common.MethodChannel methodChannel
androidx.core.provider.FontRequest: java.util.List mCertificates
com.google.android.gms.common.api.internal.zzd: java.lang.String zzbj
com.google.zxing.qrcode.decoder.Version: com.google.zxing.qrcode.decoder.Version$ECBlocks[] ecBlocks
androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext
androidx.core.app.ActivityRecreator$2: android.app.Application val$application
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean mMutated
com.google.zxing.common.detector.WhiteRectangleDetector: int leftInit
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence mSubtitle
androidx.fragment.app.FragmentTransitionCompat21$1: android.graphics.Rect val$epicenter
com.google.common.util.concurrent.AbstractFuture: java.lang.Object NULL
com.google.firebase.database.core.Repo$TransactionData: long currentWriteId
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: androidx.fragment.app.Fragment firstOut
com.google.android.gms.internal.location.zzas: android.content.Context zzcu
com.google.firebase.database.core.SyncPoint: com.google.firebase.database.core.persistence.PersistenceManager persistenceManager
com.google.firebase.database.tubesock.WebSocketHandshake: java.net.URI url
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.common.BinaryMessenger binaryMessenger
com.google.android.gms.common.api.internal.zacd: com.google.android.gms.common.api.internal.zace zakl
com.google.android.gms.common.internal.BaseGmsClient$zza: int statusCode
androidx.appcompat.view.menu.ListMenuItemView: android.widget.LinearLayout mContent
com.google.zxing.qrcode.decoder.BitMatrixParser: com.google.zxing.qrcode.decoder.FormatInformation parsedFormatInfo
androidx.core.app.ActivityRecreator$1: java.lang.Object val$token
com.google.firebase.database.core.operation.OperationSource$Source: com.google.firebase.database.core.operation.OperationSource$Source User
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String zag
androidx.fragment.app.FragmentTransitionImpl$2: java.util.ArrayList val$sharedElementsIn
com.google.firebase.database.collection.ArraySortedMap: java.util.Comparator comparator
androidx.multidex.MultiDexExtractor: java.io.RandomAccessFile lockRaf
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mLength
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarCompat$Companion Companion
androidx.appcompat.widget.TooltipCompatHandler: java.lang.Runnable mShowRunnable
androidx.appcompat.view.menu.MenuItemImpl: boolean mIsActionViewExpanded
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1: kotlinx.coroutines.internal.LockFreeLinkedListNode $node
com.google.common.util.concurrent.AbstractFuture$Listener: com.google.common.util.concurrent.AbstractFuture$Listener next
com.google.firebase.database.core.SyncTree$3: boolean val$persist
androidx.core.app.NotificationCompat$Builder: android.app.PendingIntent mFullScreenIntent
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String value
com.google.firebase.database.core.operation.OperationSource: com.google.firebase.database.core.view.QueryParams queryParams
com.google.zxing.common.PerspectiveTransform: float a13
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: java.lang.String encodedName
androidx.appcompat.R$styleable: int MenuItem_actionProviderClass
com.google.android.gms.location.LocationSettingsStates: boolean zzbp
com.google.android.gms.maps.zzr: com.google.android.gms.maps.GoogleMap$SnapshotReadyCallback zzz
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean expanded
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.view.TextureRegistry textureRegistry
com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater
com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper$ValueHolder holderHead
com.google.firebase.database.snapshot.PriorityIndex: com.google.firebase.database.snapshot.PriorityIndex INSTANCE
androidx.appcompat.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mDefaultNavigationIcon
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel
com.google.android.gms.common.stats.ConnectionTracker: java.lang.Object zzdp
androidx.fragment.app.FragmentTransaction: boolean mAddToBackStack
com.google.zxing.pdf417.decoder.BarcodeMetadata: int rowCountUpperPart
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$2: java.lang.Object val$errorDetails
com.google.android.gms.common.internal.GoogleApiAvailabilityCache: com.google.android.gms.common.GoogleApiAvailabilityLight zape
com.google.zxing.ResultPoint: float x
com.google.firebase.database.connection.PersistentConnectionImpl: com.google.firebase.database.connection.ConnectionContext context
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.google.firebase.database.core.utilities.OffsetClock: long offset
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol ENQUEUE_FAILED
com.google.firebase.components.Dependency: java.lang.Class anInterface
kotlinx.coroutines.channels.AbstractSendChannel: kotlin.jvm.functions.Function1 onUndeliveredElement
com.journeyapps.barcodescanner.DecoderThread: java.lang.Object LOCK
com.journeyapps.barcodescanner.camera.CameraInstance: java.lang.Runnable opener
com.lyokone.location.StreamHandlerImpl: com.lyokone.location.FlutterLocation location
androidx.appcompat.app.ResourcesFlusher: java.lang.reflect.Field sDrawableCacheField
com.google.firebase.components.ComponentRuntime$Builder: java.util.List lazyRegistrars
androidx.appcompat.view.SupportMenuInflater: android.content.Context mContext
androidx.fragment.app.Fragment: int mContainerId
com.google.firebase.FirebaseOptions: java.lang.String storageBucket
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String increasedValue
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_LONG_CLICK
com.journeyapps.barcodescanner.camera.CameraInstance: com.journeyapps.barcodescanner.camera.CameraManager cameraManager
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean waitForRestorationData
com.google.firebase.database.core.utilities.encoding.CustomClassMapper$BeanMapper: java.lang.Class clazz
androidx.appcompat.widget.Toolbar: androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback
androidx.core.graphics.drawable.WrappedDrawableApi14: int mCurrentColor
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: float screenDensity
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map activityAwarePlugins
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference hiddenLifecycleReference
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathEnd
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mDeltaY
androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes
androidx.appcompat.R$drawable: int abc_btn_borderless_material
androidx.appcompat.R$styleable: int SearchView_closeIcon
com.google.android.gms.common.internal.BaseGmsClient$zze: int zzcx
com.google.android.gms.common.internal.zzb: com.google.android.gms.common.Feature[] zzdb
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI Cp1252
kotlinx.coroutines.internal.DispatchedContinuation: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _reusableCancellableContinuation$FU
com.google.firebase.database.core.Repo$24: com.google.firebase.database.core.Repo this$0
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean engineHasProvidedData
com.google.firebase.database.logging.Logger$Level: com.google.firebase.database.logging.Logger$Level DEBUG
androidx.core.provider.FontRequestWorker: androidx.collection.LruCache sTypefaceCache
com.journeyapps.barcodescanner.CaptureManager: android.os.Handler handler
com.google.android.gms.tasks.Tasks$zzc: com.google.android.gms.tasks.zzu zza
com.google.android.gms.common.api.internal.BasePendingResult: java.lang.Object zadp
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: int mClickableSpanActionId
androidx.appcompat.R$id: int decor_content_parent
kotlin.Result: kotlin.Result$Companion Companion
com.google.firebase.database.connection.util.RetryHelper$Builder: double retryExponent
androidx.core.provider.FontRequest: java.lang.String mIdentifier
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.Integer inputAction
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.internal.Symbol NOT_IN_STACK
com.google.zxing.oned.CodaBarReader: int counterLength
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler windowManagerHandler
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks
androidx.appcompat.view.menu.MenuBuilder: android.graphics.drawable.Drawable mHeaderIcon
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mSharedElementEnterTransition
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.drawable.Drawable mIconDrawable
kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol UNDEFINED
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean zzay
com.baseflow.geolocator.location.ForegroundNotificationOptions: boolean enableWifiLock
androidx.lifecycle.LiveData$LifecycleBoundObserver: androidx.lifecycle.LifecycleOwner mOwner
com.google.android.gms.maps.model.PolylineOptions: boolean zzct
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
io.flutter.embedding.android.FlutterView$2: io.flutter.embedding.android.FlutterView this$0
androidx.core.view.KeyEventDispatcher: java.lang.reflect.Field sDialogKeyListenerField
com.google.zxing.pdf417.detector.Detector: int[] STOP_PATTERN
com.google.zxing.oned.rss.RSS14Reader: int[] INSIDE_GSUM
androidx.core.R$id: int tag_unhandled_key_event_manager
com.google.zxing.common.GlobalHistogramBinarizer: int[] buckets
com.google.zxing.oned.rss.expanded.ExpandedRow: int rowNumber
androidx.appcompat.view.menu.MenuBuilder: boolean mIsClosing
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy low
kotlinx.coroutines.channels.AbstractChannel$Itr: kotlinx.coroutines.channels.AbstractChannel channel
androidx.core.app.ActivityCompat$2: android.app.Activity val$activity
com.journeyapps.barcodescanner.camera.FitXYStrategy: java.lang.String TAG
com.google.firebase.database.android.AndroidPlatform$1$1: com.google.firebase.database.android.AndroidPlatform$1 this$1
com.google.firebase.database.Query$4: boolean val$keepSynced
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock
kotlin.text.StringsKt__StringsKt$splitToSequence$1: java.lang.CharSequence $this_splitToSequence
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility INTERNAL
com.google.zxing.oned.UPCEANExtension2Support: int[] decodeMiddleCounters
com.google.firebase.database.Logger$Level: com.google.firebase.database.Logger$Level INFO
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] $VALUES
com.google.firebase.database.snapshot.Node$HashVersion: com.google.firebase.database.snapshot.Node$HashVersion V2
androidx.appcompat.widget.LinearLayoutCompat: int mShowDividers
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType CHARACTER_SET
androidx.appcompat.app.TwilightManager$TwilightState: long tomorrowSunrise
androidx.appcompat.resources.R$styleable: int[] FontFamily
androidx.appcompat.R$dimen: int abc_action_bar_stacked_tab_max_width
com.google.firebase.database.core.WriteTree: java.lang.Long lastWriteId
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object result
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetRight
androidx.versionedparcelable.VersionedParcelParcel: java.lang.String mPrefix
com.journeyapps.barcodescanner.camera.PreviewScalingStrategy: java.lang.String TAG
com.google.zxing.oned.CodaBarReader: char[] ALPHABET
com.google.android.gms.maps.model.PolylineOptions: boolean zzdz
com.google.android.gms.maps.model.BitmapDescriptor: com.google.android.gms.dynamic.IObjectWrapper zze
androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect1
com.google.android.gms.common.ConnectionResult: com.google.android.gms.common.ConnectionResult RESULT_SUCCESS
com.google.firebase.database.core.Repo: com.google.firebase.database.core.SnapshotHolder infoData
androidx.core.R$styleable: int[] ColorStateListItem
com.google.zxing.oned.rss.expanded.RSSExpandedReader: int[] SYMBOL_WIDEST
androidx.activity.result.ActivityResultRegistry: java.util.Random mRandom
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_visible
com.google.firebase.database.core.utilities.Pair: java.lang.Object second
com.google.android.gms.maps.model.PatternItem: java.lang.String TAG
io.flutter.embedding.engine.dart.DartMessenger: java.util.Map bufferedMessages
androidx.appcompat.R$styleable: int Toolbar_subtitle
com.google.android.gms.common.api.internal.GoogleApiManager: android.os.Handler handler
com.google.android.gms.base.R$string: int common_google_play_services_notification_channel_name
androidx.core.view.WindowInsetsControllerCompat$Impl30: android.view.WindowInsetsController mInsetsController
androidx.core.widget.AutoScrollHelper: int mEdgeType
androidx.appcompat.R$styleable: int ActionBar_popupTheme
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.content.Context listPresenterContext
com.google.zxing.pdf417.decoder.Codeword: int rowNumber
com.google.android.gms.common.api.internal.zace: com.google.android.gms.common.api.internal.zacf zakn
androidx.appcompat.app.AlertController: android.widget.ListAdapter mAdapter
androidx.appcompat.app.TwilightManager$TwilightState: boolean isNight
androidx.fragment.app.FragmentTransition$2: java.util.ArrayList val$exitingViews
androidx.appcompat.widget.AppCompatTextHelper: android.widget.TextView mView
com.google.common.util.concurrent.AbstractFuture$Cancellation: boolean wasInterrupted
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mMutated
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] $VALUES
androidx.appcompat.R$dimen: int abc_star_medium
com.google.firebase.database.core.Repo$8: com.google.firebase.database.core.Repo this$0
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: java.lang.Object $element
androidx.appcompat.app.TwilightManager$TwilightState: long todaySunset
com.baseflow.geolocator.location.FusedLocationClient: int activityRequestCode
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity
androidx.appcompat.R$id: int search_voice_btn
androidx.core.app.NotificationCompatBuilder: android.widget.RemoteViews mHeadsUpContentView
androidx.appcompat.R$id: int action_menu_presenter
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _removedRef$FU
androidx.appcompat.R$styleable: int[] SwitchCompat
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int left
com.google.android.gms.signin.SignInOptions: java.lang.String zasq
com.google.android.gms.common.util.CrashUtils: int zzgk
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1: kotlinx.coroutines.channels.AbstractChannel this$0
com.google.zxing.oned.ITFReader: int narrowLineWidth
com.google.firebase.database.connection.PersistentConnectionImpl: java.util.Map listens
kotlin.coroutines.AbstractCoroutineContextKey: kotlin.jvm.functions.Function1 safeCast
kotlin.text.DelimitedRangesSequence$iterator$1: int counter
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: androidx.activity.OnBackPressedDispatcher this$0
androidx.versionedparcelable.VersionedParcelParcel: int mOffset
com.journeyapps.barcodescanner.DefaultDecoderFactory: int scanType
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes permissionDenied
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_FOCUS
com.google.common.util.concurrent.ThreadFactoryBuilder$1: java.lang.Integer val$priority
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionToIndex
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener accessibilityStateChangeListener
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus OK
com.google.firebase.database.snapshot.ChildrenNode$NamedNodeIterator: java.util.Iterator iterator
androidx.appcompat.app.AlertController$4: android.view.View val$bottom
com.google.firebase.database.core.UserWriteRecord: long writeId
io.flutter.view.AccessibilityBridge$3: io.flutter.view.AccessibilityBridge this$0
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState mCachedConstantStateDelegate
androidx.activity.result.IntentSenderRequest: int mFlagsMask
com.journeyapps.barcodescanner.CameraPreview: boolean previewActive
kotlinx.coroutines.scheduling.TasksKt: int CORE_POOL_SIZE
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.model.CameraPosition zzal
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode ANSIX12_ENCODE
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
androidx.fragment.app.DialogFragment$5: androidx.fragment.app.FragmentContainer val$fragmentContainer
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_5
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int mask
androidx.appcompat.widget.TintInfo: android.content.res.ColorStateList mTintList
androidx.collection.MapCollections: androidx.collection.MapCollections$EntrySet mEntrySet
androidx.core.view.ContentInfoCompat: android.os.Bundle mExtras
androidx.appcompat.app.WindowDecorActionBar$1: androidx.appcompat.app.WindowDecorActionBar this$0
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
androidx.fragment.app.FragmentManager: int mCurState
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons UNDECIDED
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: com.google.android.gms.common.api.internal.zace zaiy
androidx.appcompat.R$attr: int actionBarStyle
androidx.appcompat.widget.ButtonBarLayout: boolean mAllowStacking
androidx.core.widget.NestedScrollView$SavedState: int scrollPosition
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnMultiChoiceClickListener mOnCheckboxClickListener
androidx.fragment.app.DefaultSpecialEffectsController$8: java.util.ArrayList val$transitioningViews
com.google.android.gms.maps.model.CircleOptions: boolean zzct
androidx.core.provider.FontRequestWorker$3: android.content.Context val$context
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_HIDE_TOOLTIP
androidx.fragment.app.FragmentContainerView: java.util.ArrayList mTransitioningFragmentViews
androidx.core.R$styleable: int GradientColor_android_endX
androidx.activity.ComponentActivity$3: androidx.activity.ComponentActivity this$0
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat ITF
com.google.firebase.components.Lazy: java.lang.Object UNINITIALIZED
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat CONSUMED
androidx.appcompat.R$styleable: int TextAppearance_android_textColorHint
kotlinx.coroutines.DebugKt: boolean DEBUG
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState POSTURE_FLAT
com.google.android.gms.internal.maps.zza: java.lang.String zzb
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isDisplayingFlutterUi
com.google.firebase.database.collection.LLRBEmptyNode: com.google.firebase.database.collection.LLRBEmptyNode INSTANCE
androidx.core.R$styleable: int FontFamily_fontProviderPackage
com.google.firebase.database.logging.Logger$Level: com.google.firebase.database.logging.Logger$Level WARN
androidx.appcompat.app.AppCompatDelegateImpl$5: androidx.appcompat.app.AppCompatDelegateImpl this$0
io.flutter.plugins.imagepicker.ImagePickerDelegate: io.flutter.plugins.imagepicker.CameraDevice cameraDevice
com.google.zxing.pdf417.PDF417Common: int[] SYMBOL_TABLE
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State: com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State NUMERIC
androidx.exifinterface.media.ExifInterface: java.util.List ROTATION_ORDER
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue
androidx.window.layout.FoldingFeature$Orientation: java.lang.String description
androidx.appcompat.R$styleable: int Toolbar_contentInsetEndWithActions
com.google.android.gms.common.R$string: int common_google_play_services_unknown_issue
kotlinx.coroutines.scheduling.CoroutineScheduler: int corePoolSize
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: java.lang.String label
androidx.appcompat.app.AlertController$3: android.view.View val$top
com.journeyapps.barcodescanner.DecoratedBarcodeView: com.journeyapps.barcodescanner.BarcodeView barcodeView
com.google.android.gms.internal.location.zzad: com.google.android.gms.internal.location.zzad zzcr
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23: java.lang.Object sRebaseMethodLock
com.google.zxing.oned.EANManufacturerOrgSupport: java.util.List ranges
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int windowAnimations
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_ACCESSIBILITY_FOCUS
com.google.android.gms.common.api.internal.GoogleApiManager: java.util.concurrent.atomic.AtomicInteger zaik
kotlinx.coroutines.CoroutineExceptionHandler$Key: kotlinx.coroutines.CoroutineExceptionHandler$Key $$INSTANCE
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: android.widget.ListAdapter mAdapter
kotlin.ranges.IntProgressionIterator: int finalElement
androidx.fragment.app.DefaultSpecialEffectsController$4$1: androidx.fragment.app.DefaultSpecialEffectsController$4 this$1
com.google.firebase.database.connection.PersistentConnectionImpl: boolean hasOnDisconnects
com.google.firebase.database.connection.PersistentConnectionImpl: com.google.firebase.database.connection.Connection realtime
androidx.appcompat.app.AlertController: android.content.Context mContext
com.google.firebase.database.core.SyncTree$12: com.google.firebase.database.core.view.QuerySpec val$query
io.flutter.plugins.googlemaps.TileProviderController: android.os.Handler handler
androidx.appcompat.widget.AppCompatSeekBarHelper: boolean mHasTickMarkTint
com.google.android.gms.common.internal.ResolveAccountRequest: android.os.Parcelable$Creator CREATOR
androidx.appcompat.R$id: int split_action_bar
kotlin.jvm.internal.Lambda: int arity
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseWidth
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Boolean systemNavigationBarContrastEnforced
kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object CONDITION_FALSE
com.google.firebase.database.core.SyncTree: com.google.firebase.database.core.WriteTree pendingWriteTree
kotlinx.coroutines.JobSupport$Finishing: kotlinx.coroutines.NodeList list
com.google.android.gms.common.api.ApiException: com.google.android.gms.common.api.Status mStatus
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: io.flutter.embedding.engine.systemchannels.PlatformChannel this$0
androidx.appcompat.app.AppCompatDelegate: int sDefaultNightMode
androidx.appcompat.R$styleable: int AppCompatSeekBar_tickMarkTintMode
kotlin.UNINITIALIZED_VALUE: kotlin.UNINITIALIZED_VALUE INSTANCE
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onUserLeaveHintListeners
androidx.appcompat.app.TwilightManager$TwilightState: long nextUpdate
androidx.window.R$styleable: int SplitPlaceholderRule_placeholderActivityName
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterJNI flutterJNI
com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GenericGF field
androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo: int replyId
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int capacity
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization CHARACTERS
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CONTEXT_CLICK
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState: com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State encoding
com.google.common.util.concurrent.ThreadFactoryBuilder: java.util.concurrent.ThreadFactory backingThreadFactory
androidx.core.view.KeyEventDispatcher: java.lang.reflect.Method sActionBarOnMenuKeyMethod
androidx.collection.MapCollections$ArrayIterator: androidx.collection.MapCollections this$0
androidx.appcompat.R$attr: int listMenuViewStyle
androidx.appcompat.view.SupportActionModeWrapper: androidx.appcompat.view.ActionMode mWrappedObject
com.google.android.gms.location.zzj: float zzv
com.google.firebase.database.snapshot.ChildrenNode: java.lang.String lazyHash
com.google.android.gms.common.internal.ResolveAccountResponse: boolean zapp
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$OnQueryTextListener mOnQueryChangeListener
com.google.android.gms.common.api.internal.BasePendingResult: java.lang.ThreadLocal zado
com.google.android.gms.common.api.internal.zabo: com.google.android.gms.common.ConnectionResult zajc
androidx.exifinterface.media.ExifInterface: byte[] WEBP_SIGNATURE_2
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat CODE_128
androidx.fragment.app.Fragment: boolean mDeferStart
com.journeyapps.barcodescanner.BarcodeView$DecodeMode: com.journeyapps.barcodescanner.BarcodeView$DecodeMode NONE
com.google.android.gms.common.internal.ResolveAccountResponse: android.os.IBinder zapn
androidx.appcompat.view.menu.ActionMenuItem: android.content.Context mContext
com.google.firebase.database.snapshot.ChildrenNode: com.google.firebase.database.collection.ImmutableSortedMap children
androidx.appcompat.widget.SearchView: java.lang.CharSequence mQueryHint
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker INSTANCE
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState CPU_ACQUIRED
androidx.core.R$styleable: int FontFamily_fontProviderQuery
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_KEYBOARD_KEY
com.google.zxing.pdf417.PDF417Common: int[] EMPTY_INT_ARRAY
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.BitmapDescriptor zzdp
com.lyokone.location.LocationPlugin: com.lyokone.location.FlutterLocationService locationService
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_gravity
com.google.firebase.events.Event: java.lang.Object payload
com.google.android.gms.maps.zzx: com.google.android.gms.maps.GoogleMap$OnCameraIdleListener zzaf
androidx.appcompat.R$styleable: int AppCompatImageView_tint
com.google.zxing.client.android.R$id: int zxing_barcode_scanner
androidx.appcompat.R$drawable: int abc_edit_text_material
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterLoader$Settings settings
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: java.util.regex.Pattern SEMICOLON
androidx.fragment.app.FragmentManager: java.util.ArrayList mBackStack
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.text.DelimitedRangesSequence this$0
com.google.android.gms.maps.model.PatternItem: java.lang.Float zzdv
com.google.android.gms.common.internal.GoogleApiAvailabilityCache: android.util.SparseIntArray zapd
com.google.android.gms.common.GooglePlayServicesUtilLight: int GOOGLE_PLAY_SERVICES_VERSION_CODE
androidx.core.provider.FontsContractCompat$FontInfo: int mResultCode
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation VERTICAL
com.google.common.base.MoreObjects$ToStringHelper$ValueHolder: java.lang.Object value
com.google.firebase.database.core.RepoInfo: java.lang.String host
com.google.firebase.database.util.GAuthToken: java.lang.String token
androidx.collection.LruCache: int putCount
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler this$1
androidx.appcompat.widget.SearchView: android.app.SearchableInfo mSearchable
com.google.zxing.client.android.DecodeFormatManager: java.util.Set INDUSTRIAL_FORMATS
androidx.appcompat.widget.ForwardingListener: java.lang.Runnable mTriggerLongPress
androidx.window.R$id: int androidx_window_activity_scope
io.flutter.plugin.editing.InputConnectionAdaptor: int mClient
com.google.android.gms.common.internal.ClientSettings$Builder: java.lang.String zaok
androidx.appcompat.R$drawable: int abc_cab_background_internal_bg
kotlinx.coroutines.UndispatchedCoroutine: kotlin.coroutines.CoroutineContext savedContext
androidx.appcompat.view.menu.CascadingMenuPopup: int ITEM_LAYOUT
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
kotlinx.coroutines.JobSupport$ChildCompletion: kotlinx.coroutines.ChildHandleNode child
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations
androidx.appcompat.widget.AppCompatPopupWindow: boolean mOverlapAnchor
androidx.fragment.app.FragmentManager$8: androidx.fragment.app.Fragment val$parent
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean zzaj
androidx.appcompat.R$id: int search_edit_frame
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long id
com.google.firebase.database.core.Context: com.google.firebase.database.logging.Logger logger
com.google.zxing.client.android.R$id: int zxing_decode_failed
com.google.android.gms.maps.model.PolygonOptions: int fillColor
androidx.appcompat.widget.SearchView: boolean mVoiceButtonEnabled
com.google.android.gms.common.api.internal.LifecycleActivity: java.lang.Object zzbd
com.google.firebase.database.Logger$Level: com.google.firebase.database.Logger$Level[] $VALUES
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int mAutoSizeTextType
io.flutter.embedding.android.MotionEventTracker$MotionEventId: java.util.concurrent.atomic.AtomicLong ID_COUNTER
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$4$1: kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$4$1 INSTANCE
androidx.core.view.OneShotPreDrawListener: java.lang.Runnable mRunnable
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.CharSequence itemTitleCondensed
com.baseflow.geolocator.GeolocatorLocationService: java.lang.String WIFILOCK_TAG
io.flutter.plugins.googlemaps.GoogleMapController: java.util.List initialPolygons
androidx.core.view.ViewCompat$UnhandledKeyEventManager: android.util.SparseArray mCapturedKeys
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: androidx.fragment.app.FragmentManager mFragmentManager
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0
androidx.fragment.app.FragmentManagerState: java.lang.String mPrimaryNavActiveWho
com.google.android.gms.common.internal.Objects$ToStringHelper: java.lang.Object zzes
com.google.android.gms.auth.api.signin.internal.Storage: java.util.concurrent.locks.Lock zaak
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_SELECTION
androidx.appcompat.app.AlertController$AlertParams$4: androidx.appcompat.app.AlertController$AlertParams this$0
com.google.android.gms.location.zzn: com.google.android.gms.internal.location.zzbd zzy
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: int top
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: java.lang.String mMethodName
com.google.android.gms.base.R$string: int common_google_play_services_update_button
com.google.android.gms.common.api.internal.zaz: java.util.Map zafm
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_FOCUSED
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.FlutterEngine flutterEngine
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources mResources
com.google.zxing.oned.rss.DataCharacter: int checksumPortion
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State: com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State ALPHA
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode opaque
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean itemEnabled
com.google.zxing.aztec.decoder.Decoder$Table: com.google.zxing.aztec.decoder.Decoder$Table BINARY
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingLeft
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol DISPOSED_TASK
androidx.appcompat.widget.DropDownListView: int mSelectionRightPadding
androidx.fragment.app.DefaultSpecialEffectsController$2: android.view.View val$viewToAnimate
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
androidx.appcompat.widget.SearchView: boolean mQueryRefinement
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: android.graphics.Rect bounds
com.google.android.gms.location.LocationServices: com.google.android.gms.common.api.Api$ClientKey CLIENT_KEY
com.journeyapps.barcodescanner.camera.CameraInstance: boolean cameraClosed
androidx.fragment.app.DefaultSpecialEffectsController$2: android.view.ViewGroup val$container
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.TextPaint mTempTextPaint
androidx.collection.SparseArrayCompat: boolean mGarbage
androidx.appcompat.R$drawable: int abc_text_select_handle_right_mtrl
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedOpacity
androidx.appcompat.R$styleable: int AppCompatTextView_drawableTopCompat
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode STRUCTURED_APPEND
kotlinx.coroutines.internal.ThreadContextKt: kotlinx.coroutines.internal.Symbol NO_THREAD_ELEMENTS
com.google.zxing.pdf417.decoder.BoundingBox: com.google.zxing.ResultPoint topLeft
androidx.core.provider.FontProvider: java.util.Comparator sByteArrayComparator
com.google.android.gms.internal.location.zzbd: boolean zzdk
androidx.appcompat.R$attr: int colorControlHighlight
kotlinx.coroutines.scheduling.DefaultScheduler: kotlinx.coroutines.scheduling.DefaultScheduler INSTANCE
com.google.android.gms.common.internal.ClientSettings$Builder: com.google.android.gms.signin.SignInOptions zaom
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy PREFER_REMOTE
androidx.appcompat.view.menu.MenuBuilder: boolean mOptionalIconsVisible
com.google.android.gms.common.internal.BaseGmsClient$zza: com.google.android.gms.common.internal.BaseGmsClient zzct
androidx.appcompat.app.AppCompatDelegateImpl: boolean mInvalidatePanelMenuPosted
androidx.appcompat.widget.SearchView: android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener
io.flutter.plugin.platform.PlatformViewsController: java.util.HashMap contextToPlatformView
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher IO
androidx.core.content.ContextCompat: java.lang.Object sLock
com.lyokone.location.MethodCallHandlerImpl: com.lyokone.location.FlutterLocationService locationService
androidx.appcompat.view.menu.CascadingMenuPopup: int mPopupStyleRes
com.google.firebase.events.Event: java.lang.Class type
androidx.appcompat.app.AlertController$5: android.view.View val$top
com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper$ValueHolder holderTail
com.google.firebase.database.core.persistence.NoopPersistenceManager: boolean insideTransaction
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.graphics.PorterDuff$Mode mButtonTintMode
io.flutter.plugins.firebase.database.FlutterFirebaseDatabaseException: java.lang.String code
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView flutterImageView
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean groupEnabled
com.google.firebase.database.core.Repo$20: com.google.firebase.database.core.Repo$TransactionData val$transaction
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode$Callback mDeferredModeDestroyCallback
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: io.flutter.plugin.common.MethodChannel$Result callback
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: android.view.ActionMode$Callback mWrappedCallback
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: boolean obscureText
androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String zai
com.google.android.gms.maps.model.Polyline: com.google.android.gms.internal.maps.zzz zzeb
com.google.firebase.database.core.view.QueryParams: com.google.firebase.database.core.view.QueryParams DEFAULT_PARAMS
androidx.appcompat.widget.ActionMenuPresenter: boolean mReserveOverflow
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity
com.google.firebase.FirebaseApp: java.util.List backgroundStateChangeListeners
com.google.android.gms.location.zzj: android.os.Parcelable$Creator CREATOR
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemAlphabeticModifiers
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemNumericModifiers
com.google.firebase.database.core.EventRegistration: com.google.firebase.database.core.EventRegistrationZombieListener listener
kotlin.SynchronizedLazyImpl: java.lang.Object _value
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
androidx.fragment.R$styleable: int Fragment_android_id
com.baseflow.geolocator.GeolocatorLocationService: android.net.wifi.WifiManager$WifiLock wifiLock
com.journeyapps.barcodescanner.DecoderThread: android.os.Handler resultHandler
com.google.android.gms.maps.model.PatternItem: int type
com.google.firebase.database.core.SyncTree$14: com.google.firebase.database.core.EventRegistration val$eventRegistration
io.flutter.embedding.android.DrawableSplashScreen: io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView splashView
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: java.lang.String encodedName
androidx.appcompat.view.menu.StandardMenuPopup: androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback
androidx.core.app.NotificationCompatJellybean: boolean sExtrasFieldAccessFailed
androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor sMainThreadExecutor
com.journeyapps.barcodescanner.SourceData: boolean previewMirrored
com.google.android.gms.internal.location.zzbf: com.google.android.gms.internal.location.zzbd zzdl
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGF DATA_MATRIX_FIELD_256
com.google.android.gms.maps.UiSettings: com.google.android.gms.maps.internal.IUiSettingsDelegate zzcj
androidx.core.view.WindowInsetsCompat$BuilderImpl20: java.lang.reflect.Constructor sConstructor
com.google.android.gms.location.LocationRequest: long zzba
androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
io.flutter.view.AccessibilityBridge$Action: int value
com.google.android.gms.base.R$string: int common_google_play_services_install_button
androidx.core.widget.AutoScrollHelper: java.lang.Runnable mRunnable
com.google.android.gms.tasks.zzu: boolean zzy
com.journeyapps.barcodescanner.camera.CameraSurface: android.graphics.SurfaceTexture surfaceTexture
com.google.android.gms.internal.location.zzbf: com.google.android.gms.location.zzu zzdn
com.google.android.gms.dynamic.zad: android.content.Context val$context
androidx.core.app.NotificationCompat$Style: java.lang.CharSequence mSummaryText
com.google.android.gms.auth.api.signin.internal.Storage: java.util.concurrent.locks.Lock zaai
com.google.zxing.datamatrix.decoder.Version: com.google.zxing.datamatrix.decoder.Version[] VERSIONS
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mContentInsets
com.google.zxing.oned.rss.expanded.RSSExpandedReader: int[][] WEIGHTS
com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder: com.google.zxing.common.BitArray information
androidx.core.R$id: int accessibility_custom_action_11
com.google.zxing.client.android.R$raw: int zxing_beep
androidx.appcompat.widget.ActionMenuPresenter: int mWidthLimit
androidx.fragment.app.SpecialEffectsController: java.util.ArrayList mPendingOperations
com.google.firebase.database.snapshot.LeafNode$LeafType: com.google.firebase.database.snapshot.LeafNode$LeafType Number
com.google.firebase.database.core.view.QueryParams: com.google.firebase.database.snapshot.Node indexStartValue
androidx.appcompat.R$drawable: int abc_btn_radio_material_anim
androidx.appcompat.widget.VectorEnabledTintResources: java.lang.ref.WeakReference mContextRef
androidx.appcompat.widget.ResourceManagerInternal: android.util.TypedValue mTypedValue
androidx.core.content.res.ResourcesCompat$FontCallback$2: int val$reason
io.flutter.embedding.android.KeyboardManager: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent placeholderIntent
com.google.zxing.datamatrix.decoder.BitMatrixParser: com.google.zxing.common.BitMatrix readMappingMatrix
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable mDrawable
androidx.core.content.res.ResourcesCompat$FontCallback$1: androidx.core.content.res.ResourcesCompat$FontCallback this$0
androidx.appcompat.R$styleable: int TextAppearance_android_typeface
androidx.collection.ArraySet: java.lang.Object[] OBJECT
androidx.appcompat.R$styleable: int ViewBackgroundHelper_backgroundTint
com.google.android.gms.common.api.Status: com.google.android.gms.common.api.Status RESULT_INTERNAL_ERROR
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd
androidx.appcompat.R$styleable: int MenuGroup_android_visible
com.google.firebase.database.core.EventRegistration: java.util.concurrent.atomic.AtomicBoolean zombied
com.google.firebase.database.core.SyncTree: long nextQueryTag
androidx.fragment.app.FragmentManager: java.util.concurrent.atomic.AtomicInteger mBackStackIndex
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock
com.google.firebase.database.android.AndroidAuthTokenProvider: com.google.firebase.inject.Deferred deferredAuthProvider
kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Companion Companion
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.Status zaib
androidx.appcompat.app.TwilightManager: android.content.Context mContext
androidx.appcompat.widget.ContentFrameLayout: androidx.appcompat.widget.ContentFrameLayout$OnAttachListener mAttachListener
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel this$0
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String dataDirPath
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollExtentMin
androidx.collection.LruCache: int createCount
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
androidx.appcompat.app.AlertController: int mButtonPanelSideLayout
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_SELECTION
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type HC_PLATFORM_VIEW
androidx.window.R$styleable: int SplitPairRule_splitMinSmallestWidth
com.lyokone.location.FlutterLocationService: com.lyokone.location.BackgroundNotification backgroundNotification
androidx.appcompat.widget.ActionBarOverlayLayout$2: androidx.appcompat.widget.ActionBarOverlayLayout this$0
kotlinx.coroutines.CompletedContinuation: java.lang.Throwable cancelCause
androidx.appcompat.widget.ScrollingTabContainerView$TabView: android.view.View mCustomView
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler this$1
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int composingEnd
com.google.firebase.database.connection.util.RetryHelper$Builder: long minRetryDelayAfterFailure
com.google.android.gms.common.internal.zzh: java.lang.String mPackageName
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
androidx.appcompat.R$id: int action_bar_subtitle
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType STRUCTURED_APPEND_PARITY
com.google.android.gms.maps.zzc: com.google.android.gms.maps.GoogleMap$OnMarkerDragListener zzk
com.google.firebase.database.core.persistence.DefaultPersistenceManager: com.google.firebase.database.logging.LogWrapper logger
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sHField
com.google.firebase.database.connection.util.RetryHelper: double retryExponent
androidx.appcompat.widget.LinearLayoutCompat: boolean mUseLargestChild
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type
com.google.zxing.client.android.R$color: int zxing_viewfinder_laser
androidx.appcompat.widget.ActionBarContainer: android.graphics.drawable.Drawable mStackedBackground
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock globalLock
com.google.firebase.database.connection.WebsocketConnection: long connectionId
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: java.lang.Object $receiver$inlined
com.journeyapps.barcodescanner.DecoratedBarcodeView: com.journeyapps.barcodescanner.DecoratedBarcodeView$TorchListener torchListener
androidx.appcompat.widget.ActionBarOverlayLayout: int[] ATTRS
androidx.appcompat.content.res.AppCompatResources: java.util.WeakHashMap sColorStateCaches
com.journeyapps.barcodescanner.camera.AutoFocusManager$1: com.journeyapps.barcodescanner.camera.AutoFocusManager this$0
com.google.android.gms.maps.model.MarkerOptions: boolean zzct
androidx.appcompat.view.menu.MenuItemImpl: boolean mNeedToApplyIconTint
androidx.appcompat.view.StandaloneActionMode: java.lang.ref.WeakReference mCustomView
com.google.firebase.database.core.Repo$TransactionData: com.google.firebase.database.snapshot.Node currentOutputSnapshotRaw
io.flutter.embedding.android.FlutterSurfaceView$1: io.flutter.embedding.android.FlutterSurfaceView this$0
com.baseflow.geolocator.GeolocatorPlugin: com.baseflow.geolocator.LocationServiceHandlerImpl locationServiceHandler
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence mContentDescription
com.google.android.gms.location.LocationServices: com.google.android.gms.common.api.Api$AbstractClientBuilder CLIENT_BUILDER
com.google.android.gms.internal.location.zzl: com.google.android.gms.internal.location.zzk zzcc
com.google.android.gms.common.api.internal.zacg: com.google.android.gms.common.api.internal.zace zakl
androidx.fragment.app.FragmentManager$6: androidx.lifecycle.Lifecycle val$lifecycle
com.google.firebase.database.collection.RBTreeSortedMap$Builder$BooleanChunk: int chunkSize
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map broadcastReceiverAwarePlugins
com.google.firebase.database.core.Context: java.lang.String persistenceKey
com.journeyapps.barcodescanner.RotationListener$1: com.journeyapps.barcodescanner.RotationListener this$0
io.flutter.plugin.localization.LocalizationPlugin: android.content.Context context
com.google.android.gms.common.internal.BaseGmsClient$zze: com.google.android.gms.common.internal.BaseGmsClient zzct
androidx.appcompat.R$attr: int spinnerStyle
androidx.fragment.app.FragmentManagerState: java.util.ArrayList mActive
com.google.firebase.database.core.view.View$OperationResult: java.util.List events
com.baseflow.geolocator.location.LocationManagerClient: com.baseflow.geolocator.errors.ErrorCallback errorCallback
io.flutter.FlutterInjector: boolean accessed
com.google.common.base.MoreObjects$ToStringHelper: java.lang.String className
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.content.Context mActionModeContext
androidx.lifecycle.LiveData$LifecycleBoundObserver: androidx.lifecycle.LiveData this$0
com.google.android.gms.common.api.internal.zaag: java.lang.String zafx
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED
androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.ActivityResultCallback val$callback
kotlinx.coroutines.internal.ConcurrentKt: java.lang.reflect.Method REMOVE_FUTURE_ON_CANCEL
com.google.firebase.database.core.view.filter.RangedFilter: com.google.firebase.database.snapshot.NamedNode startPost
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks
androidx.core.app.RemoteActionCompat: boolean mShouldShowIcon
androidx.collection.ContainerHelpers: java.lang.Object[] EMPTY_OBJECTS
androidx.appcompat.widget.ScrollingTabContainerView$1: android.view.View val$tabView
kotlinx.coroutines.scheduling.CoroutineScheduler: int maxPoolSize
io.flutter.plugin.editing.TextEditingDelta: int newSelectionStart
androidx.appcompat.app.ResourcesFlusher: boolean sDrawableCacheFieldFetched
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: java.lang.reflect.Method mResolvedMethod
androidx.fragment.app.FragmentManager: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher
com.google.zxing.Result: long timestamp
androidx.fragment.app.FragmentTransitionCompat21$2: java.util.ArrayList val$exitingViews
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: androidx.collection.SimpleArrayMap mMenus
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color RED
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType OTHER
androidx.fragment.app.DefaultSpecialEffectsController$4: android.view.ViewGroup val$container
androidx.appcompat.view.menu.MenuItemWrapperICS: androidx.core.internal.view.SupportMenuItem mWrappedObject
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousTextSelectionBase
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons RESUMED
com.google.android.gms.internal.location.zzo: com.google.android.gms.location.zzr zzci
com.google.android.gms.common.internal.GmsClientSupervisor$zza: java.lang.String zzds
com.journeyapps.barcodescanner.camera.CameraSettings: boolean autoTorchEnabled
androidx.core.widget.AutoScrollHelper$ClampedScroller: long mStartTime
io.flutter.plugins.firebase.database.EventStreamHandler: io.flutter.plugins.firebase.database.OnDispose onDispose
com.google.zxing.qrcode.detector.AlignmentPatternFinder: com.google.zxing.common.BitMatrix image
androidx.appcompat.R$bool: int abc_action_bar_embed_tabs
androidx.appcompat.app.WindowDecorActionBar: int mSavedTabPosition
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext immediate
com.baseflow.geolocator.location.LocationManagerClient$1: int[] $SwitchMap$com$baseflow$geolocator$location$LocationAccuracy
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType type
com.google.android.gms.common.GooglePlayServicesUtilLight: boolean zzak
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: java.lang.Object currentlyRecreatingToken
androidx.core.graphics.TypefaceCompat: androidx.core.graphics.TypefaceCompatBaseImpl sTypefaceCompatImpl
com.google.firebase.database.core.persistence.TrackedQueryManager: com.google.firebase.database.core.utilities.Predicate HAS_DEFAULT_COMPLETE_PREDICATE
com.google.android.gms.common.api.internal.zae: com.google.android.gms.tasks.TaskCompletionSource zacq
androidx.fragment.app.FragmentStateManager$1: android.view.View val$fragmentView
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper windowInfoRepo
androidx.appcompat.R$styleable: int MenuItem_alphabeticModifiers
com.google.android.gms.location.LocationSettingsRequest$Builder: java.util.ArrayList zzbk
com.google.firebase.database.core.ValueProvider$ExistingValueProvider: com.google.firebase.database.snapshot.Node node
androidx.appcompat.view.menu.CascadingMenuPopup$3: androidx.appcompat.view.menu.CascadingMenuPopup this$0
io.flutter.plugins.imagepicker.ImagePickerDelegate: io.flutter.plugin.common.MethodChannel$Result pendingResult
androidx.exifinterface.media.ExifInterface: int mThumbnailCompression
com.google.firebase.database.core.view.CacheNode: boolean filtered
io.flutter.FlutterInjector$Builder: io.flutter.embedding.engine.FlutterJNI$Factory flutterJniFactory
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.Status mStatus
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: androidx.window.layout.SidecarCompat this$0
com.google.android.gms.common.util.ProcessUtils: int zzhg
com.google.firebase.database.core.view.filter.RangedFilter: com.google.firebase.database.snapshot.NamedNode endPost
com.google.firebase.database.core.SyncTree$2: com.google.firebase.database.core.CompoundWrite val$children
androidx.activity.result.ActivityResultRegistry: java.util.Map mRcToKey
com.google.common.util.concurrent.AbstractFuture$Waiter: com.google.common.util.concurrent.AbstractFuture$Waiter next
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingCompat$Companion Companion
androidx.core.view.ActionProvider: androidx.core.view.ActionProvider$VisibilityListener mVisibilityListener
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollExtentMax
com.google.android.gms.common.internal.ClientSettings: java.lang.String zaok
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: int mFillRule
androidx.fragment.app.Fragment: int mState
com.google.android.gms.common.internal.GmsClient: android.accounts.Account zax
androidx.appcompat.widget.ListPopupWindow: android.graphics.Rect mTempRect
com.lyokone.location.FlutterLocation: android.location.LocationManager locationManager
com.google.android.gms.maps.model.Tile: int height
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
io.flutter.embedding.android.DrawableSplashScreen: android.graphics.drawable.Drawable drawable
com.google.android.gms.common.GoogleApiAvailability$zaa: com.google.android.gms.common.GoogleApiAvailability zaat
com.google.common.base.Throwables: java.lang.reflect.Method getStackTraceElementMethod
androidx.appcompat.R$styleable: int[] ActionMenuView
kotlinx.coroutines.DispatchedCoroutine: int _decision
androidx.appcompat.widget.SearchView: android.graphics.Rect mSearchSrtTextViewBoundsExpanded
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo: io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue taskQueue
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] $VALUES
com.google.firebase.components.ComponentRuntime$Builder: java.util.concurrent.Executor defaultExecutor
com.google.common.base.Throwables: java.lang.reflect.Method getStackTraceDepthMethod
com.google.zxing.pdf417.PDF417ResultMetadata: int segmentIndex
com.lyokone.location.FlutterLocation: java.lang.Integer locationAccuracy
kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Failed failed
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean zzat
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mLastBaseInnerInsets
androidx.fragment.app.Fragment$3: androidx.fragment.app.Fragment this$0
androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManager mFragmentManager
com.google.zxing.common.PerspectiveTransform: float a33
androidx.core.widget.AutoScrollHelper: float[] mMaximumVelocity
com.google.firebase.database.core.Repo$17: com.google.firebase.database.core.Repo this$0
com.google.android.gms.common.api.internal.zaac: com.google.android.gms.common.api.internal.BasePendingResult zafr
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType DATETIME
io.flutter.embedding.engine.renderer.FlutterRenderer: android.os.Handler handler
androidx.core.app.ActivityRecreator: java.lang.reflect.Method performStopActivity2ParamsMethod
androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
com.journeyapps.barcodescanner.camera.AutoFocusManager: boolean focusing
com.google.zxing.client.android.DecodeFormatManager: java.util.Set PDF417_FORMATS
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable: androidx.core.widget.AutoScrollHelper this$0
kotlin.KotlinVersion: int version
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGFPoly zero
io.flutter.plugins.googlemaps.GoogleMapBuilder: java.lang.Object initialCircles
androidx.appcompat.view.menu.MenuAdapter: boolean mForceShowIcon
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousActions
com.journeyapps.barcodescanner.CameraPreview: boolean useTextureView
com.google.android.gms.maps.model.TileOverlayOptions: com.google.android.gms.internal.maps.zzaf zzei
com.google.zxing.aztec.decoder.Decoder$1: int[] $SwitchMap$com$google$zxing$aztec$decoder$Decoder$Table
com.google.firebase.database.FirebaseDatabase: com.google.firebase.database.core.DatabaseConfig config
androidx.window.core.Bounds: int left
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener flutterEngineAttachmentListener
com.google.firebase.database.connection.util.StringListReader: boolean closed
androidx.core.widget.NestedScrollView: int mLastMotionY
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE
com.google.android.gms.internal.location.zzbd: com.google.android.gms.location.LocationRequest zzdg
kotlin.sequences.TransformingSequence: kotlin.jvm.functions.Function1 transformer
com.google.firebase.database.connection.PersistentConnectionImpl: int invalidAppCheckTokenCount
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: boolean mIsBack
androidx.core.view.ContentInfoCompat: android.content.ClipData mClip
androidx.appcompat.R$styleable: int[] ListPopupWindow
androidx.appcompat.widget.SearchView: java.lang.Runnable mUpdateDrawableStateRunnable
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String tooltip
com.journeyapps.barcodescanner.CameraPreview: java.util.List stateListeners
com.google.android.gms.maps.model.VisibleRegion: com.google.android.gms.maps.model.LatLng farLeft
com.google.firebase.emulators.EmulatedServiceSettings: int port
com.google.firebase.components.OptionalProvider: com.google.firebase.inject.Provider delegate
com.google.firebase.database.core.utilities.TreeNode: java.util.Map children
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean mCreatingLoader
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2: long value
com.lyokone.location.FlutterLocation$2: com.lyokone.location.FlutterLocation this$0
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET
com.journeyapps.barcodescanner.CameraPreview: android.graphics.Rect framingRect
androidx.core.view.WindowInsetsCompat$Impl20: java.lang.reflect.Method sGetViewRootImplMethod
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
com.google.android.gms.common.internal.zzb: android.os.Bundle zzda
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: int unrepliedCount
com.google.zxing.common.BitMatrix: int height
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.ForwardingListener: boolean mForwarding
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager sAccessibilityPaneVisibilityManager
com.google.firebase.database.core.Repo$18: java.util.List val$queue
androidx.core.app.Person: boolean mIsBot
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] mNodes
com.google.zxing.common.detector.WhiteRectangleDetector: int upInit
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler
kotlinx.coroutines.DispatchedTask: int resumeMode
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate DEFAULT_DELEGATE
com.google.android.gms.common.internal.zzh: java.lang.String zzej
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType OTHER
androidx.appcompat.widget.ListPopupWindow$3: androidx.appcompat.widget.ListPopupWindow this$0
androidx.appcompat.view.menu.MenuAdapter: int mExpandedIndex
androidx.core.R$id: int accessibility_custom_action_12
androidx.appcompat.app.AlertController$AlertParams$1: androidx.appcompat.app.AlertController$AlertParams this$0
com.google.android.gms.common.internal.zze: android.os.Handler mHandler
androidx.appcompat.app.WindowDecorActionBar: boolean mLastMenuVisibility
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object mValue
com.google.firebase.database.core.persistence.DefaultPersistenceManager: com.google.firebase.database.core.persistence.CachePolicy cachePolicy
io.flutter.embedding.android.AndroidTouchProcessor: io.flutter.embedding.engine.renderer.FlutterRenderer renderer
com.google.zxing.client.android.R$styleable: int[] FontFamilyFont
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean mMenuPrepared
com.baseflow.geolocator.location.LocationOptions: com.baseflow.geolocator.location.LocationAccuracy accuracy
com.google.android.gms.common.internal.BaseGmsClient: int zzbu
androidx.appcompat.widget.ToolbarWidgetWrapper: androidx.appcompat.widget.Toolbar mToolbar
androidx.appcompat.view.StandaloneActionMode: androidx.appcompat.widget.ActionBarContextView mContextView
androidx.fragment.app.DefaultSpecialEffectsController$7: androidx.fragment.app.DefaultSpecialEffectsController this$0
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mBatchTextEditingDeltas
com.google.firebase.database.tubesock.WebSocketMessage: java.lang.String stringMessage
androidx.appcompat.app.AlertController: int mButtonIconDimen
androidx.fragment.app.DialogFragment: boolean mCreatingDialog
androidx.fragment.app.FragmentTransitionCompat21$5: androidx.fragment.app.FragmentTransitionCompat21 this$0
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean preventEdgeOffset
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode LEAN_BACK
com.google.firebase.database.core.SyncTree: java.util.Set keepSyncedQueries
com.google.firebase.internal.DataCollectionConfigStorage: boolean dataCollectionDefaultEnabled
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_HIDDEN
com.google.android.gms.internal.maps.zza: android.os.IBinder zza
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore mFragmentStore
androidx.appcompat.widget.AppCompatTextHelper$2: int val$style
androidx.appcompat.widget.ActionBarContainer: android.view.View mActionBarView
com.google.firebase.database.core.utilities.TreeNode: java.lang.Object value
androidx.appcompat.widget.Toolbar: android.content.res.ColorStateList mTitleTextColor
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat EAN_8
androidx.appcompat.view.menu.MenuBuilder: android.view.View mHeaderView
com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$zzb: int zzir
com.google.zxing.qrcode.decoder.DataBlock: int numDataCodewords
androidx.fragment.app.FragmentManager: boolean mHavePendingDeferredStart
androidx.appcompat.app.AlertController: boolean mShowTitle
com.google.zxing.oned.ITFReader: int[][] END_PATTERN_REVERSED
androidx.core.provider.CallbackWithHandler$2: androidx.core.provider.FontsContractCompat$FontRequestCallback val$callback
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: androidx.appcompat.view.menu.MenuBuilder mMenu
com.google.firebase.database.tubesock.WebSocketReceiver: java.io.DataInputStream input
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
com.google.firebase.database.core.persistence.PruneForest: com.google.firebase.database.core.utilities.Predicate KEEP_PREDICATE
io.flutter.embedding.engine.dart.DartMessenger: java.util.WeakHashMap createdTaskQueues
androidx.appcompat.R$styleable: int[] MenuView
com.google.android.gms.tasks.zzr: boolean zzu
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: io.flutter.plugins.urllauncher.UrlLauncher urlLauncher
io.flutter.plugin.platform.PlatformViewsController: io.flutter.view.TextureRegistry textureRegistry
com.google.firebase.database.connection.PersistentConnectionImpl$7: com.google.firebase.database.connection.PersistentConnectionImpl this$0
com.google.zxing.oned.rss.RSS14Reader: int[] INSIDE_ODD_TOTAL_SUBSET
androidx.exifinterface.media.ExifInterface: int mOrfThumbnailLength
com.google.android.gms.tasks.Tasks$zzc: int zzaj
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: boolean mBeforeStart
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation$Companion Companion
androidx.fragment.app.DefaultSpecialEffectsController$1: androidx.fragment.app.SpecialEffectsController$Operation val$operation
io.flutter.embedding.android.FlutterSplashView: java.lang.String previousCompletedSplashIsolate
androidx.appcompat.widget.ForwardingListener: float mScaledTouchSlop
androidx.appcompat.view.menu.MenuPopupHelper: boolean mForceShowIcon
com.google.android.gms.internal.location.zzaz: com.google.android.gms.internal.location.zzas zzde
androidx.exifinterface.media.ExifInterface: int mMimeType
androidx.appcompat.view.menu.MenuPopupHelper: boolean mOverflowOnly
androidx.core.R$styleable: int FontFamilyFont_ttcIndex
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List childrenInTraversalOrder
com.google.firebase.DataCollectionDefaultChange: boolean enabled
com.google.android.gms.dynamic.zaa: com.google.android.gms.dynamic.DeferredLifecycleHelper zart
com.google.firebase.database.core.SyncTree$3: boolean val$revert
com.google.firebase.database.core.persistence.TrackedQueryManager: com.google.firebase.database.core.utilities.Predicate HAS_ACTIVE_DEFAULT_PREDICATE
com.google.firebase.database.connection.Connection$DisconnectReason: com.google.firebase.database.connection.Connection$DisconnectReason[] $VALUES
com.google.android.gms.tasks.zzu: com.google.android.gms.tasks.zzr zzx
androidx.appcompat.widget.ScrollingTabContainerView$TabView: android.widget.ImageView mIconView
com.google.android.gms.base.R$string: int common_google_play_services_install_title
com.journeyapps.barcodescanner.DecoderThread: com.journeyapps.barcodescanner.camera.CameraInstance cameraInstance
com.google.android.gms.common.util.DeviceProperties: java.lang.Boolean zzgs
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo mAnimationInfo
androidx.loader.app.LoaderManagerImpl$LoaderInfo: int mId
androidx.fragment.app.FragmentTransition$5: androidx.fragment.app.Fragment val$outFragment
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact NONE
com.google.firebase.database.core.Repo$10: com.google.firebase.database.DatabaseReference$CompletionListener val$onComplete
com.google.firebase.database.collection.ImmutableSortedSet$WrappedEntryIterator: java.util.Iterator iterator
com.google.android.gms.common.internal.PendingResultUtil: com.google.android.gms.common.internal.PendingResultUtil$zaa zapf
com.google.android.gms.internal.location.zzo: com.google.android.gms.internal.location.zzaj zzcj
androidx.fragment.app.FragmentTransition$3: androidx.core.os.CancellationSignal val$signal
androidx.exifinterface.media.ExifInterface: java.util.HashMap[] sExifTagMapsForReading
androidx.appcompat.widget.ActionMenuPresenter: android.util.SparseBooleanArray mActionButtonGroups
com.google.zxing.client.android.R$styleable: int zxing_camera_preview_zxing_framing_rect_height
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mBridge
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.BinaryMessenger messenger
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_11
androidx.core.R$styleable: int GradientColor_android_centerColor
com.google.firebase.database.snapshot.Node$HashVersion: com.google.firebase.database.snapshot.Node$HashVersion V1
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: java.lang.reflect.Method mDoBeforeTextChanged
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType ISSUE_NUMBER
androidx.appcompat.widget.DropDownListView: int mSelectionBottomPadding
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NAME
androidx.fragment.app.BackStackState: java.util.ArrayList mSharedElementSourceNames
com.google.firebase.components.RestrictedComponentContainer: java.util.Set allowedDirectInterfaces
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0
io.flutter.embedding.android.FlutterTextureView: boolean isSurfaceAvailableForRendering
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup
androidx.appcompat.R$styleable: int Spinner_android_entries
androidx.core.R$styleable: int FontFamily_fontProviderAuthority
androidx.appcompat.R$string: int abc_menu_shift_shortcut_label
io.flutter.plugins.urllauncher.WebViewActivity: android.content.BroadcastReceiver broadcastReceiver
com.google.firebase.database.snapshot.LeafNode$LeafType: com.google.firebase.database.snapshot.LeafNode$LeafType String
com.google.firebase.database.core.utilities.encoding.CustomClassMapper$BeanMapper: boolean throwOnUnknownProperties
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag HAS_TOGGLED_STATE
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mOps
androidx.core.app.NotificationCompat$Builder: boolean mShowWhen
com.google.firebase.database.android.SqlPersistenceStorageEngine$2: com.google.firebase.database.core.Path val$relativePath
androidx.core.R$styleable: int ColorStateListItem_alpha
androidx.window.embedding.SplitRule: float splitRatio
com.google.zxing.client.android.R$styleable: int zxing_finder_zxing_viewfinder_laser_visibility
com.google.android.gms.common.api.internal.BasePendingResult: java.lang.ref.WeakReference zadr
com.baseflow.geolocator.permission.PermissionManager: android.app.Activity activity
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver: androidx.cursoradapter.widget.CursorAdapter this$0
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence mContentDescription
com.google.firebase.database.collection.RBTreeSortedMap$Builder: com.google.firebase.database.collection.LLRBValueNode root
com.google.common.util.concurrent.AbstractFuture$Listener: com.google.common.util.concurrent.AbstractFuture$Listener TOMBSTONE
androidx.appcompat.R$style: int Theme_AppCompat_CompactMenu
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric: int secondDigit
io.flutter.plugins.imagepicker.ImagePickerDelegate: io.flutter.plugins.imagepicker.ImagePickerDelegate$PermissionManager permissionManager
androidx.core.app.NotificationCompat$Builder: android.app.Notification mPublicVersion
androidx.core.app.NotificationCompat$Builder: int mGroupAlertBehavior
androidx.window.layout.DisplayCompatHelperApi28: androidx.window.layout.DisplayCompatHelperApi28 INSTANCE
io.flutter.embedding.engine.dart.DartMessenger: int nextReplyId
com.google.zxing.pdf417.decoder.ec.ModulusGF: int[] expTable
androidx.appcompat.R$drawable: int abc_cab_background_top_mtrl_alpha
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: int corePoolSize
com.google.android.gms.tasks.zzj: com.google.android.gms.tasks.Task zzg
com.google.zxing.datamatrix.decoder.Version: int symbolSizeColumns
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean mAllowCaching
androidx.core.R$id: int accessibility_custom_action_19
androidx.core.R$id: int accessibility_custom_action_9
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mTempShortcutItemList
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String zap
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: io.flutter.embedding.engine.systemchannels.MouseCursorChannel this$0
com.google.android.gms.maps.model.CircleOptions: android.os.Parcelable$Creator CREATOR
androidx.collection.ContainerHelpers: int[] EMPTY_INTS
androidx.appcompat.R$styleable: int[] ActionBarLayout
com.google.android.gms.internal.common.zza: android.os.IBinder zza
com.google.firebase.components.CycleDetector$ComponentNode: java.util.Set dependents
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock: com.google.firebase.database.tubesock.WebSocket ws
com.google.firebase.database.OnDisconnect: com.google.firebase.database.core.Repo repo
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry mEnd
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel restorationChannel
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_RIGHT
androidx.appcompat.R$styleable: int TextAppearance_android_fontFamily
com.google.firebase.FirebaseOptions$Builder: java.lang.String apiKey
com.google.android.gms.common.api.internal.GoogleApiManager$zac: com.google.android.gms.common.api.internal.ApiKey zajh
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean zzan
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI Cp437
com.google.zxing.pdf417.decoder.BoundingBox: com.google.zxing.common.BitMatrix image
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: androidx.appcompat.widget.ActionMenuPresenter this$0
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMajor
androidx.exifinterface.media.ExifInterface: boolean mModified
androidx.appcompat.widget.ListPopupWindow: int mPromptPosition
com.google.firebase.database.core.operation.Operation$OperationType: com.google.firebase.database.core.operation.Operation$OperationType ListenComplete
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.camera.CameraSettings cameraSettings
androidx.appcompat.widget.ContentFrameLayout: android.graphics.Rect mDecorPadding
androidx.exifinterface.media.ExifInterface: byte[] HEIF_BRAND_MIF1
com.google.android.gms.maps.model.Cap: com.google.android.gms.maps.model.BitmapDescriptor bitmapDescriptor
androidx.appcompat.view.menu.MenuItemImpl: int mCategoryOrder
androidx.appcompat.R$styleable: int AppCompatTheme_android_windowAnimationStyle
androidx.appcompat.widget.ActionMenuPresenter: boolean mMaxItemsSet
com.google.android.gms.maps.model.MarkerOptions: android.os.Parcelable$Creator CREATOR
com.google.zxing.PlanarYUVLuminanceSource: int left
androidx.fragment.app.SpecialEffectsController$Operation: androidx.fragment.app.SpecialEffectsController$Operation$State mFinalState
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: int[] TINT_ATTRS
io.flutter.plugin.editing.ListenableEditingState: int mBatchEditNestDepth
androidx.appcompat.view.menu.StandardMenuPopup: android.view.View$OnAttachStateChangeListener mAttachStateChangeListener
com.google.android.gms.tasks.TaskExecutors: java.util.concurrent.Executor MAIN_THREAD
androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_8
com.google.android.gms.internal.common.zze: com.google.android.gms.internal.common.zzf zziu
com.google.firebase.database.tubesock.WebSocket: com.google.firebase.database.tubesock.WebSocketWriter writer
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.GoogleApiAvailability zaii
androidx.appcompat.widget.SearchView: boolean mSubmitButtonEnabled
androidx.core.R$styleable: int FontFamilyFont_fontVariationSettings
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedTextRequest mExtractRequest
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask DATA_MASK_101
com.google.firebase.database.android.AndroidPlatform$1: com.google.firebase.database.logging.LogWrapper val$logger
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.common.GoogleApiAvailability zaao
androidx.core.app.NotificationCompat$Action: android.app.PendingIntent actionIntent
io.flutter.plugins.imagepicker.ImageResizer: java.io.File externalFilesDirectory
com.google.firebase.database.core.persistence.TrackedQueryManager$5: com.google.firebase.database.core.persistence.TrackedQueryManager this$0
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: java.util.concurrent.ThreadFactory THREAD_FACTORY
com.journeyapps.barcodescanner.camera.CameraInstance: com.journeyapps.barcodescanner.camera.CameraSettings cameraSettings
kotlinx.coroutines.Job: kotlinx.coroutines.Job$Key Key
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater
com.google.firebase.database.DatabaseError: int code
com.google.zxing.aztec.decoder.Decoder: java.lang.String[] PUNCT_TABLE
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition
com.google.firebase.database.connection.util.RetryHelper: long maxRetryDelay
androidx.core.view.ViewCompat$AccessibilityViewProperty: int mTagKey
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable mDivider
com.google.firebase.internal.DataCollectionConfigStorage: com.google.firebase.events.Publisher publisher
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action TAP
com.google.firebase.database.collection.ArraySortedMap: java.lang.Object[] values
androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenByApp
androidx.core.view.ViewCompat$Api21Impl$1: androidx.core.view.OnApplyWindowInsetsListener val$listener
androidx.fragment.app.FragmentAnim$3: androidx.fragment.app.FragmentTransition$Callback val$callback
com.google.firebase.database.MutableData: com.google.firebase.database.core.SnapshotHolder holder
com.google.firebase.database.android.SqlPersistenceStorageEngine: boolean insideTransaction
com.google.firebase.components.Component$Builder: java.util.Set publishedEvents
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: java.util.ArrayList mAnimators
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.plugin.editing.FlutterTextUtils flutterTextUtils
com.google.android.gms.common.internal.zzg: android.net.Uri zzee
androidx.core.app.NotificationCompat$Builder: boolean mColorizedSet
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicIntegerFieldUpdater consumerIndex$FU
com.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: java.lang.Class discoveryService
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_PATH
com.google.android.gms.internal.location.zzbd: boolean zzdi
com.google.zxing.common.reedsolomon.GenericGFPoly: com.google.zxing.common.reedsolomon.GenericGF field
com.google.firebase.components.LazySet: java.util.Set actualSet
androidx.window.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
kotlinx.coroutines.flow.internal.NoOpContinuation: kotlin.coroutines.CoroutineContext context
com.google.android.gms.maps.model.MarkerOptions: boolean zzdq
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: java.util.Set consumers
com.google.firebase.database.connection.util.StringListReader: int markedCharPos
com.google.firebase.database.core.persistence.DefaultPersistenceManager: com.google.firebase.database.core.persistence.PersistenceStorageEngine storageLayer
com.google.zxing.client.android.R$string: int zxing_msg_camera_framework_bug
androidx.appcompat.R$styleable: int ActionMenuItemView_android_minWidth
androidx.appcompat.R$string: int abc_menu_meta_shortcut_label
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
com.google.common.util.concurrent.AbstractFuture$Listener: java.lang.Runnable task
kotlin.sequences.TransformingSequence: kotlin.sequences.Sequence sequence
com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode: com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode[] $VALUES
com.google.android.gms.common.api.internal.zzb: com.google.android.gms.common.api.internal.zza zzbk
com.google.firebase.database.connection.Connection$DisconnectReason: com.google.firebase.database.connection.Connection$DisconnectReason OTHER
androidx.appcompat.R$styleable: int ActionBar_title
com.google.firebase.database.FirebaseDatabase: com.google.firebase.database.core.Repo repo
kotlinx.coroutines.CoroutineDispatcher$Key$1: kotlinx.coroutines.CoroutineDispatcher$Key$1 INSTANCE
kotlinx.coroutines.CompletedExceptionally: java.lang.Throwable cause
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.android.ExclusiveAppComponent exclusiveActivity
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.util.concurrent.atomic.AtomicLongFieldUpdater _state$FU
com.google.android.gms.tasks.zzm: java.util.concurrent.Executor zzd
com.google.android.gms.internal.location.zzbf: com.google.android.gms.internal.location.zzaj zzcj
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$3: io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper this$0
com.google.firebase.database.connection.Connection$State: com.google.firebase.database.connection.Connection$State[] $VALUES
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] $VALUES
androidx.appcompat.app.AlertController: android.widget.Button mButtonNeutral
androidx.fragment.R$id: int visible_removing_fragment_view_tag
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler this$1
androidx.appcompat.graphics.drawable.DrawableContainer: int mCurIndex
com.google.android.gms.internal.location.zzm: java.util.List zzcd
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
com.google.firebase.database.core.view.QueryParams$1: int[] $SwitchMap$com$google$firebase$database$core$view$QueryParams$ViewFrom
com.google.firebase.database.connection.PersistentConnectionImpl$5: com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingPut val$put
com.google.android.gms.common.util.CrashUtils: int zzgj
androidx.window.layout.SidecarCompat$TranslatingCallback: androidx.window.layout.SidecarCompat this$0
androidx.appcompat.R$styleable: int Toolbar_titleTextAppearance
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler platformMessageHandler
androidx.window.R$attr: int alwaysExpand
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
androidx.core.R$id: int accessibility_custom_action_21
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean zzak
androidx.exifinterface.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor
androidx.appcompat.widget.AppCompatProgressBarHelper: int[] TINT_ATTRS
com.google.firebase.database.core.Repo$7: com.google.firebase.database.DatabaseError val$error
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock
kotlinx.coroutines.EventLoopImplBase$DelayedTask: long nanoTime
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int deviceId
io.flutter.plugins.googlemaps.MarkersController: io.flutter.plugin.common.MethodChannel methodChannel
androidx.core.app.NotificationManagerCompat: android.app.NotificationManager mNotificationManager
kotlinx.coroutines.flow.internal.SafeCollector: kotlinx.coroutines.flow.FlowCollector collector
androidx.core.app.NotificationManagerCompat$NotifyTask: android.app.Notification notif
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mOpacity
androidx.fragment.app.Fragment$AnimationInfo: androidx.core.app.SharedElementCallback mExitTransitionCallback
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks zzcf
com.google.firebase.database.connection.PersistentConnectionImpl$7: com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingListen val$listen
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.View mCustomView
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemId
com.google.zxing.datamatrix.decoder.Version: int symbolSizeRows
androidx.fragment.app.BackStackState: int mBreadCrumbTitleRes
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: java.util.Map message
io.flutter.plugin.editing.TextEditingDelta: java.lang.CharSequence oldText
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy medium
androidx.appcompat.R$styleable: int[] AppCompatTheme
com.google.firebase.database.core.view.filter.RangedFilter: com.google.firebase.database.snapshot.Index index
com.google.android.gms.common.internal.zad: int val$requestCode
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask DATA_MASK_110
com.google.zxing.pdf417.detector.Detector: int[] INDEXES_START_PATTERN
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.reflect.Method mSetExclusiveCheckableMethod
androidx.core.app.ComponentActivity: androidx.collection.SimpleArrayMap mExtraDataMap
com.google.firebase.database.core.persistence.DefaultPersistenceManager: com.google.firebase.database.core.persistence.TrackedQueryManager trackedQueryManager
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzi zzig
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.StandardMessageCodec messageCodec
kotlinx.coroutines.JobSupport$ChildCompletion: kotlinx.coroutines.JobSupport parent
com.journeyapps.barcodescanner.camera.FitCenterStrategy: java.lang.String TAG
com.google.android.gms.common.util.zzb: java.util.regex.Pattern zzgx
androidx.appcompat.resources.R$styleable: int[] GradientColorItem
androidx.multidex.MultiDex$V14: androidx.multidex.MultiDex$V14$ElementConstructor elementConstructor
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int mFrames
com.google.android.gms.maps.model.CameraPosition: float zoom
androidx.fragment.app.Fragment$1: androidx.fragment.app.Fragment this$0
androidx.fragment.app.FragmentAnim$AnimationOrAnimator: android.view.animation.Animation animation
com.google.android.gms.maps.model.Tile: byte[] data
androidx.fragment.app.Fragment: boolean mAdded
com.google.android.gms.tasks.TaskCompletionSource: com.google.android.gms.tasks.zzu zza
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mNeutralButtonIcon
androidx.window.core.Version: kotlin.Lazy bigInteger$delegate
com.journeyapps.barcodescanner.DecoderThread: com.journeyapps.barcodescanner.Decoder decoder
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback
com.google.firebase.database.collection.StandardComparator: com.google.firebase.database.collection.StandardComparator INSTANCE
androidx.fragment.app.FragmentTransitionCompat21$4: androidx.fragment.app.FragmentTransitionCompat21 this$0
androidx.appcompat.widget.AppCompatSpinner$SavedState: boolean mShowDropdown
androidx.fragment.app.FragmentManagerState: java.util.ArrayList mAdded
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: android.view.MenuItem$OnActionExpandListener mObject
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMajor
androidx.core.graphics.drawable.IconCompat: java.lang.String mTintModeStr
com.google.android.gms.tasks.zzg: java.lang.Object mLock
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.ForwardingListener mForwardingListener
com.google.zxing.oned.ITFReader: int[][] PATTERNS
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String hint
kotlin.jvm.internal.ClassReference: java.util.Map FUNCTION_CLASSES
androidx.appcompat.widget.SearchView$1: androidx.appcompat.widget.SearchView this$0
androidx.appcompat.view.menu.MenuAdapter: android.view.LayoutInflater mInflater
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow SUSPEND
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper
androidx.exifinterface.media.ExifInterface$ExifAttribute: int format
com.google.firebase.database.collection.ArraySortedMap: java.lang.Object[] keys
androidx.appcompat.app.ResourcesFlusher: java.lang.reflect.Field sResourcesImplField
androidx.window.embedding.ActivityFilter: android.content.ComponentName componentName
androidx.core.view.WindowInsetsCompat$Impl20: android.view.WindowInsets mPlatformInsets
io.flutter.embedding.engine.dart.DartExecutor: android.content.res.AssetManager assetManager
kotlinx.coroutines.InactiveNodeList: kotlinx.coroutines.NodeList list
androidx.core.graphics.Insets: int right
com.journeyapps.barcodescanner.RotationListener: int lastRotation
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasColorFilter
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mContentInfo
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType POSSIBLE_COUNTRY
com.google.firebase.database.core.Repo$25: com.google.firebase.database.core.Repo$TransactionData val$transaction
androidx.appcompat.view.menu.ActionMenuItem: android.content.res.ColorStateList mIconTintList
com.google.zxing.common.DecoderResult: int numBits
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType FOLD
com.google.firebase.database.tubesock.WebSocketReceiver: com.google.firebase.database.tubesock.WebSocketEventHandler eventHandler
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode: com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode PUNCT
kotlin.ranges.IntProgressionIterator: int step
androidx.cursoradapter.widget.CursorAdapter: android.content.Context mContext
androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.concurrent.locks.ReentrantLock lock
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NUMBER
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$BuilderImpl mImpl
io.flutter.plugin.mouse.MouseCursorPlugin$2: io.flutter.plugin.mouse.MouseCursorPlugin this$0
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method longArrayGetIndex
androidx.appcompat.view.menu.CascadingMenuPopup: int mRawDropDownGravity
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action PASTE
com.google.android.gms.common.api.internal.GoogleApiManager: java.util.Map zaim
kotlinx.coroutines.internal.ThreadState: java.lang.Object[] values
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.zack zaea
androidx.collection.SimpleArrayMap: int mSize
com.google.android.gms.dynamic.zag: com.google.android.gms.dynamic.DeferredLifecycleHelper zart
io.flutter.plugins.googlemaps.TileProviderController$Worker: int y
androidx.fragment.app.Fragment$AnimationInfo: android.view.View mAnimatingAway
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.ListPopupWindow$PopupScrollListener mScrollListener
com.google.firebase.database.core.operation.Operation$OperationType: com.google.firebase.database.core.operation.Operation$OperationType Merge
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
com.google.android.gms.internal.location.zzm: com.google.android.gms.location.zzj zzcf
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.lifecycle.LifecycleOwner mLifecycleOwner
androidx.exifinterface.media.ExifInterface$Rational: long denominator
com.google.firebase.components.DependencyCycleException: java.util.List componentsInCycle
com.google.zxing.aztec.decoder.Decoder$Table: com.google.zxing.aztec.decoder.Decoder$Table UPPER
androidx.appcompat.widget.SuggestionsAdapter: int mFlagsCol
io.flutter.FlutterInjector: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
com.google.firebase.database.core.view.CancelEvent: com.google.firebase.database.core.Path path
androidx.fragment.app.FragmentTransaction: java.lang.ClassLoader mClassLoader
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int mId
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: android.view.View view
androidx.window.R$styleable: int SplitPairRule_clearTop
com.google.zxing.oned.rss.expanded.ExpandedPair: com.google.zxing.oned.rss.DataCharacter rightChar
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
androidx.fragment.app.BackStackRecord: boolean mCommitted
androidx.fragment.app.SpecialEffectsController$Operation: java.util.List mCompletionListeners
androidx.appcompat.R$drawable: int abc_seekbar_thumb_material
kotlinx.coroutines.internal.ExceptionsConstuctorKt: int throwableFields
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] $VALUES
com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: com.google.android.gms.common.api.Api mApi
com.google.android.gms.maps.model.zzt: com.google.android.gms.maps.model.TileProvider zzen
androidx.appcompat.view.menu.ListMenuItemView: boolean mForceShowIcon
androidx.appcompat.view.menu.ActionMenuItem: int mShortcutNumericModifiers
androidx.fragment.app.FragmentManagerViewModel: boolean mHasBeenCleared
androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry
com.google.firebase.database.logging.Logger$Level: com.google.firebase.database.logging.Logger$Level ERROR
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
androidx.appcompat.view.menu.ActionMenuItemView: boolean mAllowTextWithIcon
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String mId
com.google.android.gms.tasks.Tasks$zzc: int zzai
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel mNonConfig
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentFactory mFragmentFactory
androidx.fragment.app.FragmentFactory: androidx.collection.SimpleArrayMap sClassCacheMap
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.View mAnchorView
com.google.zxing.client.android.R$styleable: int[] zxing_view
androidx.fragment.app.FragmentLayoutInflaterFactory$1: androidx.fragment.app.FragmentLayoutInflaterFactory this$0
com.lyokone.location.FlutterLocationService: com.lyokone.location.FlutterLocationService$LocalBinder binder
androidx.appcompat.view.SupportMenuInflater: java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean zzap
com.google.android.gms.maps.Projection: com.google.android.gms.maps.internal.IProjectionDelegate zzbn
com.journeyapps.barcodescanner.DefaultDecoderFactory: java.lang.String characterSet
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.util.concurrent.ExecutorService executor
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: java.util.Queue zair
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mListeners
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_LINK
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: java.lang.String name
androidx.tracing.Trace: long sTraceTagApp
com.google.android.gms.common.internal.ClientSettings: com.google.android.gms.signin.SignInOptions zaom
androidx.appcompat.widget.MenuPopupWindow: androidx.appcompat.widget.MenuItemHoverListener mHoverListener
com.google.firebase.database.snapshot.LeafNode$LeafType: com.google.firebase.database.snapshot.LeafNode$LeafType DeferredValue
com.google.firebase.database.core.operation.OperationSource$Source: com.google.firebase.database.core.operation.OperationSource$Source Server
androidx.appcompat.widget.SearchView: android.view.View mSearchEditFrame
io.flutter.embedding.android.FlutterTextureView: android.view.TextureView$SurfaceTextureListener surfaceTextureListener
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastInnerInsetsRect
androidx.appcompat.widget.TintTypedArray: android.util.TypedValue mTypedValue
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.view.ViewTreeObserver$OnPreDrawListener activePreDrawListener
com.google.android.gms.location.LocationRequest: float zzaz
androidx.fragment.app.DefaultSpecialEffectsController$6: androidx.fragment.app.DefaultSpecialEffectsController this$0
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath
androidx.collection.SimpleArrayMap: int[] mHashes
com.google.firebase.database.core.SyncTree$11: com.google.firebase.database.core.view.QuerySpec val$query
kotlinx.coroutines.CompletedWithCancellation: java.lang.Object result
com.baseflow.geolocator.location.FusedLocationClient: com.baseflow.geolocator.location.LocationOptions locationOptions
androidx.core.widget.TextViewCompat$OreoCallback: android.view.ActionMode$Callback mCallback
com.google.firebase.database.core.SyncTree$8: com.google.firebase.database.core.SyncTree this$0
androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup
com.journeyapps.barcodescanner.CaptureManager: android.app.Activity activity
com.google.android.gms.signin.internal.SignInClientImpl: java.lang.Integer zaoo
androidx.core.view.ViewPropertyAnimatorCompat$1: android.view.View val$view
com.google.firebase.database.core.view.filter.RangedFilter: com.google.firebase.database.core.view.filter.IndexedFilter indexedFilter
androidx.core.R$id: int accessibility_custom_action_2
io.flutter.view.AccessibilityBridge: io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate platformViewsAccessibilityDelegate
com.journeyapps.barcodescanner.CameraPreview$1: com.journeyapps.barcodescanner.CameraPreview this$0
com.google.zxing.oned.UPCEANExtension5Support: java.lang.StringBuilder decodeRowStringBuffer
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.Class sFontFamily
androidx.appcompat.R$layout: int abc_list_menu_item_icon
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext$Element element
com.journeyapps.barcodescanner.DecoderThread: android.graphics.Rect cropRect
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$1: java.lang.reflect.Constructor $constructor$inlined
androidx.appcompat.app.WindowDecorActionBar: android.view.animation.Interpolator sShowInterpolator
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache: java.lang.reflect.Method nameMethod
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mShouldCloseImmediately
kotlin.collections.EmptyIterator: kotlin.collections.EmptyIterator INSTANCE
com.google.firebase.database.snapshot.EmptyNode: com.google.firebase.database.snapshot.EmptyNode empty
com.google.firebase.database.core.Path: int end
com.google.firebase.database.connection.RangeMerge: java.util.List optInclusiveEnd
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag SCOPES_ROUTE
androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontInfo[] mFonts
com.google.android.gms.common.api.internal.zza: java.util.WeakHashMap zzbe
kotlin.coroutines.AbstractCoroutineContextKey: kotlin.coroutines.CoroutineContext$Key topmostKey
com.lyokone.location.FlutterLocation: android.location.OnNmeaMessageListener mMessageListener
io.flutter.view.AccessibilityBridge: int previousRouteId
androidx.exifinterface.media.ExifInterface: byte[] WEBP_VP8_SIGNATURE
androidx.core.graphics.drawable.IconCompat: byte[] mData
com.google.firebase.database.core.SyncTree: com.google.firebase.database.core.utilities.ImmutableTree syncPointTree
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mDeltaX
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: android.graphics.drawable.Animatable mA
androidx.fragment.app.Fragment$AnimationInfo: boolean mIsHideReplaced
androidx.appcompat.widget.SearchView$6: androidx.appcompat.widget.SearchView this$0
com.google.android.gms.location.zzaj: long zzbt
com.google.android.gms.common.api.internal.GoogleApiManager: java.util.Set zaip
com.google.firebase.database.core.RepoManager$2: com.google.firebase.database.core.Repo val$repo
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int width
com.google.firebase.database.snapshot.ChildKey: com.google.firebase.database.snapshot.ChildKey MIN_KEY
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter mSuggestionsAdapter
com.google.firebase.database.core.ValidationPath: java.util.List parts
androidx.appcompat.view.menu.BaseMenuWrapper: androidx.collection.SimpleArrayMap mSubMenus
com.google.android.gms.common.internal.GmsClient: com.google.android.gms.common.internal.ClientSettings zafa
androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal INSTANCE
androidx.fragment.app.SpecialEffectsController: boolean mOperationDirectionIsPop
androidx.window.layout.SidecarCompat$FirstAttachAdapter: java.lang.ref.WeakReference activityWeakReference
androidx.core.app.NotificationCompat$Builder: int mVisibility
com.google.firebase.database.core.ZombieEventManager: com.google.firebase.database.core.ZombieEventManager defaultInstance
androidx.appcompat.widget.ActionMenuPresenter: int mOpenSubMenuId
com.google.android.gms.internal.maps.zzb: com.google.android.gms.internal.maps.zzd zzc
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mParentVirtualDescendantId
androidx.appcompat.view.menu.MenuItemImpl: int mGroup
androidx.appcompat.R$styleable: int MenuItem_android_alphabeticShortcut
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType CUTOUT
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: int position
androidx.fragment.app.FragmentTransition$6: java.lang.Object val$finalSharedElementTransition
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
io.flutter.embedding.android.FlutterView: io.flutter.plugin.mouse.MouseCursorPlugin mouseCursorPlugin
com.google.android.gms.common.internal.IGmsServiceBroker$Stub$zza: android.os.IBinder zza
androidx.appcompat.widget.RtlSpacingHelper: int mStart
net.touchcapture.qr.flutterqr.QRView: net.touchcapture.qr.flutterqr.CustomFramingRectBarcodeView barcodeView
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart ATOMIC
com.journeyapps.barcodescanner.camera.CameraInstance: android.os.Handler mainHandler
androidx.window.R$attr: int activityName
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
io.flutter.plugins.imagepicker.ImagePickerPlugin: io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding activityBinding
androidx.fragment.app.FragmentTransaction: java.lang.CharSequence mBreadCrumbTitleText
androidx.exifinterface.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_2
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.collection.ArrayMap mVGTargetsMap
androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mStartIntentSenderForResult
androidx.fragment.app.FragmentTransitionCompat21$3: java.util.ArrayList val$exitingViews
androidx.appcompat.R$styleable: int Toolbar_android_gravity
io.flutter.embedding.android.FlutterSplashView$1: io.flutter.embedding.android.FlutterSplashView this$0
com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: sun.misc.Unsafe UNSAFE
com.google.android.gms.common.internal.ResolveAccountRequest: int zali
androidx.activity.ComponentActivity$NonConfigurationInstances: androidx.lifecycle.ViewModelStore viewModelStore
com.google.firebase.database.tubesock.WebSocketWriter: java.util.concurrent.BlockingQueue pendingBuffers
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23: java.lang.reflect.Method sRebaseMethod
androidx.core.view.ViewPropertyAnimatorCompat$1: androidx.core.view.ViewPropertyAnimatorListener val$listener
androidx.appcompat.R$id: int buttonPanel
androidx.fragment.app.Fragment: boolean mRemoving
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.plugin.common.MethodChannel channel
com.google.firebase.database.core.Context: com.google.firebase.FirebaseApp firebaseApp
androidx.core.view.ViewCompat: java.util.concurrent.atomic.AtomicInteger sNextGeneratedId
com.google.firebase.components.Component$Builder: int type
io.flutter.embedding.android.AndroidTouchProcessor: android.graphics.Matrix IDENTITY_TRANSFORM
com.google.firebase.database.connection.Connection: com.google.firebase.database.connection.HostInfo hostInfo
androidx.appcompat.view.menu.MenuBuilder: boolean mIsActionItemsStale
androidx.appcompat.R$styleable: int MenuGroup_android_enabled
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: android.view.KeyEvent keyEvent
com.google.android.gms.common.internal.ConnectionErrorMessages: androidx.collection.SimpleArrayMap zaor
androidx.core.view.WindowInsetsCompat$BuilderImpl20: boolean sConsumedFieldFetched
com.google.android.gms.maps.model.PolygonOptions: boolean zzcu
com.google.android.gms.base.R$string: int common_google_play_services_update_text
androidx.core.app.NotificationCompatBuilder: android.os.Bundle mExtras
androidx.appcompat.R$layout: int abc_search_dropdown_item_icons_2line
io.flutter.plugins.googlemaps.GoogleMapFactory: io.flutter.plugins.googlemaps.LifecycleProvider lifecycleProvider
androidx.cursoradapter.widget.ResourceCursorAdapter: int mDropDownLayout
androidx.lifecycle.MethodCallsLogger: java.util.Map mCalledMethods
androidx.core.app.RemoteActionCompat: android.app.PendingIntent mActionIntent
androidx.appcompat.app.AlertController: int mViewSpacingTop
androidx.appcompat.widget.SearchView: boolean mExpandedInActionView
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_LEFT
androidx.appcompat.widget.ListPopupWindow: java.lang.reflect.Method sGetMaxAvailableHeightMethod
com.google.firebase.database.DatabaseReference$3: com.google.firebase.database.core.CompoundWrite val$merge
kotlinx.coroutines.internal.Removed: kotlinx.coroutines.internal.LockFreeLinkedListNode ref
androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState mStateListState
androidx.fragment.app.SpecialEffectsController$Operation$1: androidx.fragment.app.SpecialEffectsController$Operation this$0
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1: io.flutter.embedding.engine.systemchannels.LocalizationChannel this$0
kotlinx.coroutines.ThreadLocalEventLoop: java.lang.ThreadLocal ref
androidx.fragment.app.FragmentStore: java.util.HashMap mActive
androidx.appcompat.app.AlertController$AlertParams$3: androidx.appcompat.app.AlertController val$dialog
com.google.android.gms.auth.api.signin.GoogleSignInAccount: int versionCode
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollExtentMin
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Boolean mAllowEnterTransitionOverlap
androidx.core.widget.AutoScrollHelper: android.view.View mTarget
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: int encodedValue
androidx.lifecycle.FullLifecycleObserverAdapter$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event
androidx.activity.result.ActivityResult: android.content.Intent mData
kotlinx.coroutines.NonDisposableHandle: kotlinx.coroutines.NonDisposableHandle INSTANCE
kotlin.sequences.TransformingSequence$iterator$1: kotlin.sequences.TransformingSequence this$0
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode IMMERSIVE
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: com.google.android.gms.common.api.internal.ApiKey zaft
androidx.appcompat.view.menu.ActionMenuItemView: boolean mExpandedFormat
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean expandable
androidx.appcompat.R$id: int alertTitle
com.baseflow.geolocator.location.ForegroundNotificationOptions: boolean enableWakeLock
com.google.firebase.database.core.ThreadInitializer: com.google.firebase.database.core.ThreadInitializer defaultInstance
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Paint mTempPaint
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode KANJI
com.google.firebase.FirebaseOptions$Builder: java.lang.String databaseUrl
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: java.util.Set zaiv
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$zza zzil
androidx.appcompat.R$id: int action_bar_activity_content
androidx.core.app.NotificationCompatBuilder: android.widget.RemoteViews mBigContentView
androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_ANIM
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingListen: com.google.firebase.database.connection.ListenHashProvider hashFunction
io.flutter.plugins.imagepicker.ImagePickerDelegate$2$1: io.flutter.plugins.imagepicker.ImagePickerDelegate$2 this$1
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String previousLabel
androidx.lifecycle.LifecycleRegistry: int mAddingObserverCounter
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup fakeWindowViewGroup
io.flutter.embedding.android.DrawableSplashScreen: long crossfadeDurationInMillis
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_DISMISS
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.lifecycle.Lifecycle mLifecycle
androidx.appcompat.R$styleable: int TextAppearance_android_textColorLink
com.google.firebase.FirebaseOptions: java.lang.String applicationId
com.google.firebase.database.connection.PersistentConnectionImpl: boolean forceAuthTokenRefresh
io.flutter.plugins.googlemaps.GoogleMapController$1: io.flutter.plugin.common.MethodChannel$Result val$_result
kotlinx.coroutines.DefaultExecutor: long KEEP_ALIVE_NANOS
androidx.lifecycle.ReflectiveGenericLifecycleObserver: androidx.lifecycle.ClassesInfoCache$CallbackInfo mInfo
com.google.firebase.database.core.persistence.TrackedQuery: boolean active
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Rect rect
com.google.firebase.database.android.AndroidPlatform$1$1: java.lang.Throwable val$e
com.journeyapps.barcodescanner.CaptureManager: com.journeyapps.barcodescanner.CameraPreview$StateListener stateListener
com.google.android.gms.common.util.ProcessUtils: java.lang.String zzhf
androidx.appcompat.widget.SearchView: boolean mIconifiedByDefault
com.google.android.gms.common.api.internal.zaab: com.google.android.gms.tasks.TaskCompletionSource zafp
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState DORMANT
com.baseflow.geolocator.MethodCallHandlerImpl: com.baseflow.geolocator.location.GeolocationManager geolocationManager
androidx.core.graphics.PathParser$ExtractFloatResult: boolean mEndWithNegOrDot
androidx.appcompat.view.menu.BaseMenuWrapper: android.content.Context mContext
androidx.appcompat.R$styleable: int AppCompatImageView_tintMode
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State FLAT
androidx.cursoradapter.widget.ResourceCursorAdapter: android.view.LayoutInflater mInflater
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: float[] mOffsets
com.google.firebase.database.core.Repo$22: com.google.firebase.database.core.Repo this$0
io.flutter.plugin.common.StandardMessageCodec: java.nio.charset.Charset UTF8
com.google.android.gms.maps.model.Cap: int type
com.journeyapps.barcodescanner.camera.CameraSettings: boolean barcodeSceneModeEnabled
androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.Observer mObserver
com.journeyapps.barcodescanner.DecoderThread: boolean running
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mCacheDirty
com.google.android.gms.dynamic.DeferredLifecycleHelper: java.util.LinkedList zarw
com.google.firebase.database.core.Repo: com.google.firebase.database.core.utilities.OffsetClock serverClock
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources$Theme mTheme
com.google.firebase.database.core.SparseSnapshotTree: java.util.Map children
com.journeyapps.barcodescanner.camera.CameraSettings: int requestedCameraId
com.google.android.gms.common.internal.GmsClient: java.util.Set mScopes
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State INVISIBLE
androidx.fragment.app.DialogFragment: boolean mViewDestroyed
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: kotlin.jvm.functions.Function1 $this_bindCancellationFun
com.google.firebase.database.core.utilities.ImmutableTree: com.google.firebase.database.core.utilities.ImmutableTree EMPTY
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger binaryMessenger
androidx.core.app.NotificationManagerCompat: java.lang.String sEnabledNotificationListeners
androidx.appcompat.R$styleable: int Toolbar_title
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode: com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode LOWER
com.google.firebase.database.core.Repo: com.google.firebase.database.core.SyncTree infoSyncTree
androidx.appcompat.R$id: int action_context_bar
com.google.android.gms.dynamic.ObjectWrapper: java.lang.Object zzib
androidx.core.app.NotificationCompat$Builder: android.os.Bundle mExtras
io.flutter.plugin.platform.VirtualDisplayController$1$1: io.flutter.plugin.platform.VirtualDisplayController$1 this$1
com.google.android.gms.common.internal.ClientSettings$Builder: androidx.collection.ArraySet zaop
com.journeyapps.barcodescanner.camera.AutoFocusManager: java.lang.String TAG
androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext
com.google.firebase.components.Component: int type
androidx.core.R$id: int accessibility_custom_action_22
io.flutter.plugins.googlemaps.GoogleMapBuilder: boolean indoorEnabled
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mFixedHeightMinor
androidx.appcompat.widget.Toolbar: android.content.res.ColorStateList mSubtitleTextColor
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.FlutterApplicationInfo flutterApplicationInfo
androidx.appcompat.widget.ActionMenuView: int mFormatItemsWidth
com.google.firebase.database.core.utilities.encoding.CustomClassMapper$BeanMapper: java.util.Map setters
androidx.core.R$styleable: int[] Capability
androidx.appcompat.R$id: int search_plate
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mNeutralButtonText
com.google.android.gms.dynamic.DeferredLifecycleHelper: com.google.android.gms.dynamic.LifecycleDelegate zaru
androidx.savedstate.SavedStateRegistry: androidx.arch.core.internal.SafeIterableMap mComponents
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] $VALUES
io.flutter.plugins.googlemaps.GoogleMapBuilder: java.lang.Object initialPolygons
com.baseflow.geolocator.errors.ErrorCodes$1: int[] $SwitchMap$com$baseflow$geolocator$errors$ErrorCodes
io.flutter.plugins.googlemaps.MarkerBuilder: boolean consumeTapEvents
androidx.core.app.NotificationCompat$Action: androidx.core.graphics.drawable.IconCompat mIcon
androidx.versionedparcelable.VersionedParcelParcel: android.util.SparseIntArray mPositionLookup
androidx.appcompat.view.menu.ListMenuItemView: android.widget.ImageView mSubMenuArrowView
androidx.collection.LongSparseArray: long[] mKeys
kotlin.KotlinVersion: int patch
com.google.android.gms.location.LocationSettingsResult: com.google.android.gms.common.api.Status zzbl
com.google.android.gms.maps.model.BitmapDescriptorFactory: com.google.android.gms.internal.maps.zze zzcm
androidx.appcompat.app.AlertController$AlertParams: int mIconAttrId
androidx.appcompat.app.AppCompatDelegateImpl: boolean sInstalledExceptionHandler
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth
androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Executor sExecutor
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.WorkQueue localQueue
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode PAD_ENCODE
androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache COLOR_FILTER_CACHE
androidx.exifinterface.media.ExifInterface: boolean DEBUG
androidx.lifecycle.LifecycleRegistry: java.util.ArrayList mParentStates
androidx.appcompat.widget.Toolbar: int[] mTempMargins
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: android.view.KeyEvent event
androidx.arch.core.internal.FastSafeIterableMap: java.util.HashMap mHashMap
com.google.android.gms.common.GoogleApiAvailabilityLight: int GOOGLE_PLAY_SERVICES_VERSION_CODE
com.google.android.gms.dynamite.DynamiteModule: java.lang.String zzii
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: android.view.MenuItem mHoveredMenuItem
com.google.firebase.database.connection.PersistentConnectionImpl: com.google.firebase.database.logging.LogWrapper logger
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack secondaryActivityStack
androidx.fragment.app.FragmentManager$10: androidx.fragment.app.FragmentManager this$0
androidx.appcompat.view.SupportMenuInflater$MenuState: androidx.appcompat.view.SupportMenuInflater this$0
androidx.appcompat.R$attr: int buttonStyle
com.google.android.gms.common.GooglePlayServicesUtilLight: boolean zzah
androidx.appcompat.view.menu.CascadingMenuPopup: android.os.Handler mSubMenuHoverHandler
androidx.appcompat.app.AlertController: int mViewSpacingBottom
androidx.fragment.app.FragmentTransitionCompat21$3: java.lang.Object val$enterTransition
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom
com.google.firebase.database.core.view.QueryParams: com.google.firebase.database.snapshot.Index index
kotlinx.coroutines.AbstractCoroutine: kotlin.coroutines.CoroutineContext context
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mIcon
com.google.firebase.database.snapshot.ChildrenNode: java.util.Comparator NAME_ONLY_COMPARATOR
com.google.android.gms.common.internal.GetServiceRequest: int zzdh
com.google.firebase.database.core.Repo: com.google.firebase.database.FirebaseDatabase database
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.PorterDuff$Mode mCachedTintMode
com.google.android.gms.common.api.internal.zag: com.google.android.gms.common.api.internal.UnregisterListenerMethod zacu
com.google.firebase.database.core.Context: boolean stopped
com.google.android.gms.common.api.internal.GoogleApiManager: long zaie
androidx.collection.MapCollections$ArrayIterator: int mSize
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView
com.google.firebase.database.DatabaseReference$4: com.google.firebase.database.Transaction$Handler val$handler
com.google.firebase.database.tubesock.WebSocket: com.google.firebase.database.tubesock.WebSocketReceiver receiver
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.DisposableHandle parentHandle
androidx.appcompat.widget.ActionBarContainer: android.view.View mTabContainer
androidx.appcompat.widget.ActionMenuView: int mPopupTheme
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mParentFragment
com.google.firebase.database.core.view.QueryParams: java.lang.String jsonSerialization
androidx.core.content.FileProvider$SimplePathStrategy: java.lang.String mAuthority
androidx.core.widget.PopupWindowCompat: java.lang.reflect.Field sOverlapAnchorField
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
com.google.firebase.database.connection.PersistentConnectionImpl: java.util.Map outstandingGets
com.google.zxing.qrcode.detector.AlignmentPatternFinder: int width
androidx.lifecycle.LifecycleRegistry: java.lang.ref.WeakReference mLifecycleOwner
kotlin.coroutines.ContinuationInterceptor: kotlin.coroutines.ContinuationInterceptor$Key Key
kotlinx.coroutines.YieldContext: kotlinx.coroutines.YieldContext$Key Key
com.google.firebase.database.core.persistence.TrackedQuery: long lastUse
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: android.app.Activity activity
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
com.journeyapps.barcodescanner.CaptureManager: boolean returnBarcodeImagePath
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnCancelListener mOnCancelListener
com.google.firebase.database.DatabaseError: java.lang.String message
com.google.zxing.oned.UPCEANExtensionSupport: com.google.zxing.oned.UPCEANExtension2Support twoSupport
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel
androidx.collection.LruCache: int maxSize
androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext
com.journeyapps.barcodescanner.CameraPreview: boolean torchOn
kotlinx.coroutines.DispatchedCoroutine: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _decision$FU
com.google.android.gms.maps.model.CustomCap: com.google.android.gms.maps.model.BitmapDescriptor bitmapDescriptor
com.google.firebase.database.connection.Connection$DisconnectReason: com.google.firebase.database.connection.Connection$DisconnectReason SERVER_RESET
androidx.fragment.app.DefaultSpecialEffectsController$7: android.graphics.Rect val$lastInEpicenterRect
androidx.appcompat.view.menu.ExpandedMenuView: int[] TINT_ATTRS
com.google.zxing.client.android.AmbientLightManager: android.content.Context context
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mNegativeButtonIcon
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition
com.google.firebase.database.core.view.View: java.util.List eventRegistrations
com.google.android.gms.common.api.internal.GoogleApiManager: java.util.concurrent.atomic.AtomicInteger zail
com.google.android.gms.maps.model.PolylineOptions: float zzcs
androidx.appcompat.view.menu.ListMenuItemView: android.widget.ImageView mGroupDivider
com.google.firebase.database.collection.RBTreeSortedMap: java.util.Comparator comparator
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] $VALUES
com.google.android.gms.dynamite.DynamiteModule: android.content.Context zzin
com.google.firebase.database.core.view.ViewProcessor$2: int[] $SwitchMap$com$google$firebase$database$core$operation$Operation$OperationType
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingDisconnect: com.google.firebase.database.connection.RequestResultCallback onComplete
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack mutatorsStack
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean globalGeometryDirty
androidx.core.app.NotificationManagerCompat: java.lang.Object sEnabledNotificationListenersLock
com.journeyapps.barcodescanner.camera.AutoFocusManager: android.hardware.Camera$AutoFocusCallback autoFocusCallback
androidx.appcompat.widget.SearchView: int mSuggestionRowLayout
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode texture
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicLongFieldUpdater parkedWorkersStack$FU
com.google.firebase.database.core.SyncTree$4: com.google.firebase.database.core.SyncTree this$0
com.google.firebase.database.connection.util.RetryHelper$1: java.lang.Runnable val$runnable
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.View mShownAnchorView
com.google.android.gms.common.internal.GmsClientSupervisor: java.lang.Object zzdp
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableItem_android_id
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: android.view.WindowManager delegate
com.google.android.gms.common.internal.zad: android.app.Activity val$activity
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_2
com.google.firebase.database.core.view.filter.IndexedFilter: com.google.firebase.database.snapshot.Index index
kotlinx.coroutines.flow.AbstractFlow$collect$1: java.lang.Object result
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String mVariationSettings
androidx.core.graphics.PathParser$PathDataNode: char mType
androidx.appcompat.widget.ButtonBarLayout: int mMinimumHeight
androidx.collection.SimpleArrayMap: java.lang.Object[] mBaseCache
com.google.firebase.FirebaseApp: java.util.concurrent.atomic.AtomicBoolean deleted
androidx.fragment.app.DialogFragment: int mBackStackId
androidx.appcompat.R$styleable: int[] LinearLayoutCompat
kotlinx.coroutines.ExecutorCoroutineDispatcher: kotlinx.coroutines.ExecutorCoroutineDispatcher$Key Key
androidx.appcompat.R$drawable: int abc_spinner_textfield_background_material
com.google.firebase.FirebaseOptions$Builder: java.lang.String applicationId
io.flutter.plugin.common.FlutterException: java.lang.String code
io.flutter.view.AccessibilityBridge: java.util.Map flutterSemanticsTree
com.google.zxing.datamatrix.decoder.Decoder: com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder
io.flutter.view.AccessibilityBridge$SemanticsNode: int id
androidx.fragment.app.FragmentTransaction$Op: int mExitAnim
com.google.android.gms.common.internal.BaseGmsClient: java.lang.Object mLock
androidx.appcompat.R$layout: int abc_action_menu_item_layout
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.MessageCodec codec
com.google.firebase.database.snapshot.ChildrenNode$2: com.google.firebase.database.snapshot.ChildrenNode this$0
com.google.zxing.aztec.detector.Detector: int nbDataBlocks
com.google.common.util.concurrent.Futures$CallbackListener: com.google.common.util.concurrent.FutureCallback callback
com.google.zxing.oned.rss.AbstractRSSReader: float[] evenRoundingErrors
androidx.appcompat.app.WindowDecorActionBar: boolean mDisplayHomeAsUpSet
com.google.android.gms.internal.location.zzbf: android.app.PendingIntent zzbv
com.google.android.gms.common.util.CrashUtils: boolean zzgi
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] mDataOnlyRemoteInputs
io.flutter.view.AccessibilityBridge$SemanticsNode: float top
com.google.android.gms.common.api.internal.zaj: com.google.android.gms.tasks.TaskCompletionSource zada
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence mTitle
io.flutter.plugins.googlemaps.GoogleMapController: boolean trackCameraPosition
androidx.appcompat.widget.Toolbar: int mSubtitleTextAppearance
androidx.core.graphics.TypefaceCompatBaseImpl: java.util.concurrent.ConcurrentHashMap mFontFamilies
com.google.android.gms.internal.location.zzbd: android.os.Parcelable$Creator CREATOR
androidx.appcompat.view.menu.StandardMenuPopup: boolean mHasContentWidth
androidx.appcompat.view.menu.StandardMenuPopup: android.view.ViewTreeObserver mTreeObserver
androidx.appcompat.widget.Toolbar: int mButtonGravity
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingPut: java.util.Map request
com.journeyapps.barcodescanner.camera.CameraManager: boolean previewing
androidx.appcompat.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
com.google.firebase.database.connection.WebsocketConnection$1: com.google.firebase.database.connection.WebsocketConnection this$0
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureFinalizerRunnable: long id
io.flutter.view.AccessibilityBridge$AccessibilityFeature: int value
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int index
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableItem_android_drawable
com.google.android.gms.maps.model.PolylineOptions: boolean zzcu
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterSurfaceView flutterSurfaceView
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: double newLogicalHeight
androidx.core.R$styleable: int GradientColor_android_startY
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode ALPHANUMERIC
com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState: com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState[] $VALUES
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingBottom
kotlinx.coroutines.CompletedExceptionally: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _handled$FU
com.google.firebase.database.FirebaseDatabaseComponent: java.util.Map instances
kotlinx.coroutines.IncompleteStateBox: kotlinx.coroutines.Incomplete state
com.google.firebase.database.core.operation.Operation$OperationType: com.google.firebase.database.core.operation.Operation$OperationType AckUserWrite
androidx.core.app.NotificationCompat$Builder: android.graphics.drawable.Icon mSmallIcon
net.touchcapture.qr.flutterqr.QRView: int id
com.google.firebase.database.core.SyncTree$2: com.google.firebase.database.core.CompoundWrite val$unresolvedChildren
io.flutter.view.AccessibilityBridge: int accessibilityFeatureFlags
com.google.android.gms.location.LocationSettingsRequest: android.os.Parcelable$Creator CREATOR
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.CharSequence itemTooltipText
com.google.firebase.database.core.SyncTree$10: java.util.Map val$changedChildren
androidx.fragment.app.DefaultSpecialEffectsController$5: androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo val$animationInfo
com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate zzf
io.flutter.plugins.imagepicker.ImagePickerPlugin: android.app.Activity activity
com.journeyapps.barcodescanner.DecoderThread$2: com.journeyapps.barcodescanner.DecoderThread this$0
androidx.fragment.app.FragmentActivity: boolean mStopped
com.google.firebase.database.FirebaseDatabaseComponent: com.google.firebase.database.core.TokenProvider authProvider
androidx.window.core.Version: java.lang.String VERSION_PATTERN_STRING
androidx.appcompat.view.menu.StandardMenuPopup: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.appcompat.resources.R$drawable: int abc_vector_test
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener: androidx.appcompat.widget.ListPopupWindow this$0
androidx.appcompat.R$styleable: int CompoundButton_buttonCompat
com.google.android.gms.common.ErrorDialogFragment: android.content.DialogInterface$OnCancelListener zaaq
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartMessenger dartMessenger
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: androidx.activity.OnBackPressedCallback mOnBackPressedCallback
androidx.appcompat.app.AppCompatDelegate: java.lang.Object sActivityDelegatesLock
androidx.appcompat.view.menu.MenuDialogHelper: androidx.appcompat.view.menu.ListMenuPresenter mPresenter
com.google.firebase.database.snapshot.ChildrenNode$2: com.google.firebase.database.snapshot.ChildrenNode$ChildVisitor val$visitor
com.google.android.gms.maps.GoogleMap: com.google.android.gms.maps.internal.IGoogleMapDelegate zzg
androidx.cursoradapter.widget.CursorAdapter: boolean mAutoRequery
com.google.android.gms.common.GoogleApiAvailability$zaa: android.content.Context zaas
androidx.appcompat.R$styleable: int SearchView_searchHintIcon
com.google.android.gms.common.api.internal.zabi: com.google.android.gms.common.api.internal.GoogleApiManager$zaa zaiq
com.google.zxing.oned.rss.expanded.decoders.FieldParser: java.lang.Object[][] TWO_DIGIT_DATA_LENGTH
androidx.arch.core.executor.DefaultTaskExecutor$1: androidx.arch.core.executor.DefaultTaskExecutor this$0
androidx.appcompat.view.menu.MenuBuilder: android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo
com.google.android.gms.signin.SignInOptions: boolean zass
com.google.android.gms.location.zzae: java.lang.String zzbe
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mFixedHeightMajor
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mPrimaryNav
com.google.android.gms.common.api.internal.BasePendingResult$zaa: com.google.android.gms.common.api.internal.BasePendingResult zaeg
androidx.appcompat.widget.ActionBarContextView$1: androidx.appcompat.view.ActionMode val$mode
com.google.firebase.database.tubesock.WebSocket$State: com.google.firebase.database.tubesock.WebSocket$State CONNECTED
io.flutter.plugin.platform.SingleViewPresentation: int viewId
androidx.appcompat.widget.ActionMenuPresenter: boolean mExpandedActionViewsExclusive
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
androidx.multidex.MultiDexExtractor$ExtractedDex: long crc
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterTextureView flutterTextureView
androidx.core.R$id: int accessibility_custom_action_30
androidx.appcompat.R$attr: int dialogTheme
androidx.appcompat.app.TwilightCalculator: long sunset
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
io.flutter.plugin.platform.SingleViewPresentation: java.lang.Object createParams
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantSize
com.google.android.gms.maps.model.TileOverlayOptions: float zzda
androidx.fragment.app.DefaultSpecialEffectsController$4: androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo val$animationInfo
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: java.util.Map streamHandlers
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List valueAttributes
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen
com.google.firebase.database.core.persistence.TrackedQueryManager: com.google.firebase.database.core.utilities.Clock clock
com.google.android.gms.common.internal.BaseGmsClient$zzc: java.lang.Object zzcu
androidx.appcompat.R$dimen: int tooltip_precise_anchor_extra_offset
androidx.fragment.app.FragmentTransition$4: java.util.ArrayList val$sharedElementsIn
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor
androidx.core.view.ViewPropertyAnimatorCompat: java.lang.ref.WeakReference mView
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: boolean mHasReversibleFlag
io.flutter.embedding.engine.loader.FlutterApplicationInfo: boolean automaticallyRegisterPlugins
com.journeyapps.barcodescanner.camera.CameraThread: com.journeyapps.barcodescanner.camera.CameraThread instance
com.google.firebase.database.core.RepoInfo: boolean secure
com.google.android.gms.maps.GoogleMapOptions: java.lang.Float zzaw
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String nativeLibraryDir
androidx.fragment.R$styleable: int FragmentContainerView_android_tag
androidx.fragment.app.FragmentManager$7: android.view.ViewGroup val$container
androidx.core.provider.RequestExecutor$ReplyRunnable$1: java.lang.Object val$result
com.lyokone.location.LocationPlugin$1: com.lyokone.location.LocationPlugin this$0
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.R$styleable: int[] SearchView
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: kotlinx.coroutines.internal.ThreadContextKt$updateState$1 INSTANCE
androidx.appcompat.widget.AppCompatImageButton: androidx.appcompat.widget.AppCompatImageHelper mImageHelper
com.lyokone.location.MethodCallHandlerImpl: io.flutter.plugin.common.MethodChannel channel
com.google.android.gms.maps.model.CircleOptions: int strokeColor
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: java.lang.Throwable e
com.google.android.gms.common.internal.zzp: java.lang.Object sLock
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2$1: int current
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.view.inputmethod.InputContentInfo mObject
androidx.window.embedding.ActivityStack: boolean isEmpty
com.baseflow.geolocator.location.FusedLocationClient$1: com.baseflow.geolocator.location.FusedLocationClient this$0
com.google.firebase.database.connection.PersistentConnectionImpl$4: com.google.firebase.database.connection.PersistentConnectionImpl this$0
androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_EXIF
androidx.appcompat.R$styleable: int AlertDialog_listItemLayout
androidx.core.app.Person: java.lang.String mUri
androidx.window.R$styleable: int SplitPlaceholderRule_splitRatio
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat UPC_A
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_COLOR_CONTROL_STATE_LIST
kotlinx.coroutines.internal.Symbol: java.lang.String symbol
androidx.appcompat.widget.ScrollingTabContainerView$1: androidx.appcompat.widget.ScrollingTabContainerView this$0
io.flutter.plugins.firebase.database.FlutterFirebaseDatabaseException: java.lang.String message
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets mSystemGestureInsets
kotlinx.coroutines.AbstractTimeSourceKt: kotlinx.coroutines.AbstractTimeSource timeSource
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility PUBLIC
com.google.firebase.database.connection.RangeMerge: java.lang.Object snap
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat PDF_417
androidx.fragment.app.FragmentManager$3: androidx.fragment.app.FragmentManager this$0
androidx.core.app.ActivityRecreator: java.lang.reflect.Field mainThreadField
com.google.zxing.client.android.R$id: int zxing_possible_result_points
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission whileInUse
com.journeyapps.barcodescanner.camera.CameraManager: com.journeyapps.barcodescanner.Size requestedPreviewSize
androidx.appcompat.app.WindowDecorActionBar: android.view.animation.Interpolator sHideInterpolator
com.google.android.gms.dynamic.zaf: com.google.android.gms.dynamic.DeferredLifecycleHelper zart
androidx.core.view.NestedScrollingChildHelper: int[] mTempNestedScrollConsumed
androidx.fragment.app.FragmentTransition$5: boolean val$inIsPop
com.google.zxing.datamatrix.decoder.Version$ECB: int count
com.google.firebase.database.connection.PersistentConnectionImpl$1: com.google.android.gms.tasks.TaskCompletionSource val$taskCompletionSource
androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.ActivityResultRegistry this$0
com.google.firebase.database.core.UserWriteRecord: com.google.firebase.database.core.Path path
androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.PorterDuff$Mode mTintMode
com.google.firebase.database.core.Repo: com.google.firebase.database.logging.LogWrapper dataLogger
com.google.android.gms.common.api.internal.zaab: com.google.android.gms.common.api.internal.zaz zafq
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: android.app.Activity activity
com.google.android.gms.auth.api.signin.GoogleSignInAccount: long zal
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView platformView
io.flutter.plugin.platform.PlatformViewsController: boolean flutterViewConvertedToImageView
androidx.appcompat.R$dimen: int tooltip_y_offset_non_touch
com.journeyapps.barcodescanner.camera.CameraSettings: boolean scanInverted
androidx.appcompat.widget.SearchView: android.content.Intent mVoiceAppSearchIntent
androidx.lifecycle.viewmodel.R$id: int view_tree_view_model_store_owner
com.google.android.gms.common.api.internal.GoogleApiManager$zab: com.google.android.gms.common.api.internal.GoogleApiManager zaia
androidx.exifinterface.media.ExifInterface: byte[] mThumbnailBytes
com.google.android.gms.dynamic.zad: android.content.Intent zasa
androidx.core.R$id: int tag_accessibility_heading
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.reflect.Method sCreateFromFamiliesWithDefault
androidx.fragment.app.Fragment: boolean mRetainInstance
androidx.appcompat.view.StandaloneActionMode: boolean mFocusable
androidx.multidex.MultiDex: java.util.Set installedApk
androidx.fragment.app.FragmentManager: java.util.ArrayList mCreatedMenus
com.google.zxing.pdf417.decoder.ec.ModulusPoly: com.google.zxing.pdf417.decoder.ec.ModulusGF field
androidx.appcompat.widget.AppCompatAutoCompleteTextView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.widget.TextView mTextView
com.google.firebase.database.DatabaseReference$4: com.google.firebase.database.DatabaseReference this$0
com.journeyapps.barcodescanner.camera.CameraInstance: com.journeyapps.barcodescanner.camera.CameraThread cameraThread
androidx.core.app.Person: androidx.core.graphics.drawable.IconCompat mIcon
androidx.appcompat.view.menu.ListMenuItemView: android.graphics.drawable.Drawable mSubMenuArrow
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: android.view.ActionProvider mInner
com.google.firebase.database.core.RepoManager$1: com.google.firebase.database.core.Repo val$repo
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode IMMERSIVE_STICKY
com.google.zxing.pdf417.decoder.DetectionResult: com.google.zxing.pdf417.decoder.BoundingBox boundingBox
com.google.zxing.pdf417.decoder.BoundingBox: com.google.zxing.ResultPoint bottomLeft
com.journeyapps.barcodescanner.CaptureManager: int orientationLock
androidx.core.widget.NestedScrollView: int mMaximumVelocity
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mSharedElementTargetNames
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
androidx.lifecycle.LifecycleRegistry: boolean mEnforceMainThread
androidx.appcompat.widget.SearchView: android.widget.TextView$OnEditorActionListener mOnEditorActionListener
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] $VALUES
androidx.core.view.ViewCompat$UnhandledKeyEventManager: java.util.ArrayList sViewsWithListeners
io.flutter.plugins.googlemaps.GoogleMapController: com.google.android.gms.maps.MapView mapView
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
androidx.core.provider.RequestExecutor$DefaultThreadFactory: java.lang.String mThreadName
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1: boolean val$response
com.google.firebase.database.core.utilities.Validation: java.util.regex.Pattern INVALID_KEY_REGEX
androidx.appcompat.widget.AbsActionBarView: android.content.Context mPopupContext
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: java.lang.String encodedName
androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState
androidx.core.widget.TextViewCompat$OreoCallback: boolean mInitializedMenuBuilderReferences
androidx.activity.result.ActivityResultRegistry: android.os.Bundle mPendingResults
com.google.android.gms.tasks.Tasks$zzc: int zzah
com.google.firebase.database.core.SyncTree$5: com.google.firebase.database.snapshot.Node val$newData
androidx.collection.ArrayMap$1: androidx.collection.ArrayMap this$0
androidx.core.R$id: int tag_window_insets_animation_callback
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeAlpha
androidx.collection.LruCache: int missCount
androidx.appcompat.R$string: int abc_menu_function_shortcut_label
com.google.firebase.database.core.RepoInfo: java.lang.String namespace
androidx.appcompat.widget.RtlSpacingHelper: int mLeft
com.google.zxing.pdf417.decoder.DetectionResultColumn: com.google.zxing.pdf417.decoder.BoundingBox boundingBox
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.SplashScreen splashScreen
com.google.android.gms.maps.model.VisibleRegion: com.google.android.gms.maps.model.LatLng nearRight
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode ASCII_ENCODE
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1: androidx.appcompat.widget.AppCompatSpinner val$this$0
io.flutter.embedding.android.FlutterSurfaceView: boolean isAttachedToFlutterRenderer
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean zzaq
androidx.core.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow
io.flutter.plugins.googlemaps.GoogleMapController: io.flutter.plugins.googlemaps.MarkersController markersController
androidx.fragment.app.FragmentTransaction: int mBreadCrumbShortTitleRes
androidx.appcompat.view.menu.MenuBuilder: android.content.res.Resources mResources
androidx.appcompat.R$drawable: int abc_text_select_handle_left_mtrl
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback
androidx.appcompat.R$drawable: int abc_dialog_material_background
androidx.appcompat.R$attr: int colorButtonNormal
com.google.firebase.database.core.WriteTree: com.google.firebase.database.core.CompoundWrite visibleWrites
com.google.android.gms.common.api.internal.zace: android.os.Handler mHandler
com.google.android.gms.internal.location.zzbc: com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder zzdf
com.google.firebase.database.core.Repo$24: int val$reason
androidx.appcompat.widget.ActionBarContextView$1: androidx.appcompat.widget.ActionBarContextView this$0
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.ListPopupWindow$ListSelectorHider mHideSelector
androidx.lifecycle.ViewModel: java.util.Map mBagOfTags
com.google.android.gms.maps.zzb: com.google.android.gms.maps.GoogleMap$OnMarkerClickListener zzj
com.google.android.gms.maps.model.LatLngBounds: com.google.android.gms.maps.model.LatLng southwest
androidx.core.R$id: int accessibility_custom_action_5
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: java.lang.String encodedName
androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: androidx.core.util.Consumer $consumer$inlined
androidx.appcompat.widget.AppCompatAutoCompleteTextView: int[] TINT_ATTRS
com.journeyapps.barcodescanner.CaptureActivity: com.journeyapps.barcodescanner.CaptureManager capture
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.String itemActionProviderClassName
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: io.flutter.plugin.common.BasicMessageChannel this$0
androidx.appcompat.R$attr: int actionBarTabTextStyle
kotlinx.coroutines.internal.LockFreeTaskQueue: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _cur$FU
com.google.zxing.pdf417.PDF417ResultMetadata: int segmentCount
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy zzim
com.baseflow.geolocator.GeolocatorPlugin: com.baseflow.geolocator.GeolocatorLocationService foregroundLocationService
androidx.appcompat.widget.ListPopupWindow: int mDropDownHeight
androidx.appcompat.R$styleable: int MenuGroup_android_orderInCategory
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton this$1
com.google.zxing.PlanarYUVLuminanceSource: int dataWidth
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String mGroupName
androidx.appcompat.app.AlertController: int mCheckedItem
com.google.android.gms.internal.location.zzbd: boolean zzdj
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingAdapter adapter
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] $VALUES
com.google.firebase.database.core.SyncTree: java.util.Map queryToTagMap
androidx.appcompat.view.menu.ExpandedMenuView: int mAnimations
androidx.appcompat.app.AppCompatDelegateImpl$3: androidx.appcompat.app.AppCompatDelegateImpl this$0
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType SPELLOUT
androidx.appcompat.app.AlertController: int mMultiChoiceItemLayout
androidx.appcompat.R$styleable: int MenuView_subMenuArrow
androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sGetLayoutDirectionMethod
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHasNonEmbeddedTabs
androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: boolean zaiz
com.google.android.gms.common.internal.BaseGmsClient: int zzcm
androidx.appcompat.view.menu.ActionMenuItem: int mShortcutAlphabeticModifiers
com.google.android.gms.internal.location.zzk: java.lang.String zzca
com.google.zxing.aztec.detector.Detector$Point: int x
com.google.firebase.database.OnDisconnect$2: com.google.firebase.database.OnDisconnect this$0
androidx.appcompat.app.AppCompatDelegateImpl: boolean mHandleNativeActionModes
androidx.core.text.PrecomputedTextCompat: java.lang.Object sLock
com.lyokone.location.MethodCallHandlerImpl: com.lyokone.location.FlutterLocation location
androidx.appcompat.R$color: int abc_tint_edittext
com.journeyapps.barcodescanner.SourceData: int scalingFactor
androidx.appcompat.R$attr: int colorControlActivated
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.ApiKey zabk
androidx.core.widget.NestedScrollView: int mLastScrollerY
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: kotlin.jvm.functions.Function2 $this_createCoroutineUnintercepted$inlined
androidx.exifinterface.media.ExifInterface: boolean mHasThumbnail
androidx.fragment.app.FragmentState: int mFragmentId
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: android.view.View mView
androidx.activity.result.ActivityResultRegistry$1: androidx.activity.result.contract.ActivityResultContract val$contract
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType NONE
com.google.android.gms.common.internal.zae: int val$requestCode
com.google.android.gms.maps.GoogleMap: com.google.android.gms.maps.UiSettings zzh
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicReferenceArray buffer
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.PorterDuff$Mode mCurrentMode
androidx.core.content.res.ResourcesCompat$FontCallback$1: android.graphics.Typeface val$typeface
androidx.appcompat.widget.ActionBarContextView: int mTitleStyleRes
androidx.appcompat.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State mState
androidx.fragment.app.FragmentTransitionCompat21$3: androidx.fragment.app.FragmentTransitionCompat21 this$0
com.google.firebase.database.core.view.QueryParams: com.google.firebase.database.core.view.QueryParams$ViewFrom viewFrom
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
androidx.core.widget.AutoScrollHelper: float[] mMinimumVelocity
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode BASE256_ENCODE
io.flutter.embedding.engine.dart.DartMessenger: java.lang.Object handlersLock
com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$zzb: int zzis
androidx.core.R$id: int accessibility_custom_action_1
com.google.android.gms.common.api.GoogleApi$Settings$Builder: com.google.android.gms.common.api.internal.StatusExceptionMapper zabn
androidx.arch.core.internal.SafeIterableMap: int mSize
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController platformViewsController
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel M
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$1: io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper this$0
com.google.android.gms.signin.internal.zab: android.os.Parcelable$Creator CREATOR
androidx.appcompat.R$styleable: int AppCompatTextView_drawableBottomCompat
androidx.core.provider.FontRequestWorker$3: int val$style
androidx.appcompat.app.AppCompatViewInflater: java.lang.Class[] sConstructorSignature
androidx.fragment.app.FragmentTransaction$Op: int mPopEnterAnim
com.google.firebase.database.core.utilities.ImmutableTree$2: com.google.firebase.database.core.utilities.ImmutableTree this$0
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: com.google.android.gms.common.ConnectionResult zajb
com.google.firebase.database.connection.Connection: com.google.firebase.database.connection.WebsocketConnection conn
androidx.appcompat.app.WindowDecorActionBar$3: androidx.appcompat.app.WindowDecorActionBar this$0
com.google.firebase.database.core.utilities.encoding.CustomClassMapper$BeanMapper: java.util.Map properties
com.journeyapps.barcodescanner.CaptureManager$1: com.journeyapps.barcodescanner.CaptureManager this$0
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.Window$Callback mWindowCallback
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableEnd
com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState: com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState Connecting
io.flutter.plugin.editing.TextInputPlugin: boolean isInputConnectionLocked
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: int mRequestCode
androidx.fragment.app.Fragment$AnimationInfo: android.view.View mFocusedView
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater mInflater
io.flutter.plugins.googlemaps.GoogleMapController: boolean zoomControlsEnabled
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode FNC1_SECOND_POSITION
com.google.firebase.database.connection.PersistentConnectionImpl: long readCounter
com.journeyapps.barcodescanner.CameraPreview: double marginFraction
androidx.core.widget.AutoScrollHelper: float[] mMaximumEdges
io.flutter.embedding.android.FlutterSplashView: java.lang.Runnable onTransitionComplete
com.google.zxing.pdf417.PDF417ResultMetadata: long timestamp
androidx.window.embedding.MatcherUtils: boolean sDebugMatchers
androidx.appcompat.app.WindowDecorActionBar: android.view.View mContentView
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
io.flutter.embedding.engine.systemchannels.NavigationChannel$1: io.flutter.embedding.engine.systemchannels.NavigationChannel this$0
androidx.core.app.NotificationCompat$Builder: int mProgress
kotlin.jvm.internal.CallableReference: java.lang.String signature
androidx.appcompat.widget.SearchView$10: androidx.appcompat.widget.SearchView this$0
com.google.firebase.database.snapshot.KeyIndex: com.google.firebase.database.snapshot.KeyIndex INSTANCE
androidx.appcompat.R$styleable: int RecycleListView_paddingBottomNoButtons
com.google.android.gms.common.api.internal.GoogleApiManager: java.lang.Object lock
androidx.versionedparcelable.VersionedParcelParcel: android.os.Parcel mParcel
androidx.appcompat.app.WindowDecorActionBar: int mCurWindowVisibility
io.flutter.embedding.android.MotionEventTracker: java.util.PriorityQueue unusedEvents
io.flutter.plugins.firebase.database.TransactionHandler: com.google.android.gms.tasks.TaskCompletionSource transactionCompletionSource
com.google.firebase.database.snapshot.NamedNode: com.google.firebase.database.snapshot.ChildKey name
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] $VALUES
androidx.fragment.app.Fragment$AnimationInfo: boolean mIsPop
androidx.core.provider.RequestExecutor$ReplyRunnable$1: androidx.core.provider.RequestExecutor$ReplyRunnable this$0
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature DISABLE_ANIMATIONS
androidx.fragment.app.DialogFragment$3: androidx.fragment.app.DialogFragment this$0
com.google.zxing.common.PerspectiveTransform: float a22
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.content.res.ColorStateList mCachedTint
com.google.android.gms.common.api.internal.zace: com.google.android.gms.common.api.Api$AbstractClientBuilder zaaw
com.journeyapps.barcodescanner.BarcodeResult: int mScaleFactor
androidx.appcompat.app.WindowDecorActionBar$2: androidx.appcompat.app.WindowDecorActionBar this$0
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
androidx.fragment.app.FragmentTransition$4: java.util.ArrayList val$exitingViews
com.google.android.gms.common.api.internal.zak: com.google.android.gms.common.GoogleApiAvailability zace
androidx.core.content.res.ComplexColorCompat: android.graphics.Shader mShader
androidx.appcompat.widget.LinearLayoutCompat: int mDividerHeight
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mFixedWidthMinor
androidx.lifecycle.ClassesInfoCache$MethodReference: int mCallType
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean inverseTransformDirty
androidx.appcompat.R$layout: int abc_dialog_title_material
androidx.core.view.ViewPropertyAnimatorCompat$2: android.view.View val$view
androidx.exifinterface.media.ExifInterface: java.util.HashMap[] sExifTagMapsForWriting
androidx.window.layout.WindowLayoutInfo: java.util.List displayFeatures
com.google.firebase.database.core.Context: java.lang.String userAgent
com.baseflow.geolocator.GeolocatorLocationService: java.lang.String WAKELOCK_TAG
androidx.appcompat.widget.AppCompatSeekBar: androidx.appcompat.widget.AppCompatSeekBarHelper mAppCompatSeekBarHelper
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_orientation
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.appcompat.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
androidx.appcompat.widget.SearchView: int mSuggestionCommitIconResId
androidx.appcompat.widget.ButtonBarLayout: int mLastWidthSize
com.google.zxing.client.android.DecodeHintManager: java.lang.String TAG
io.flutter.embedding.android.FlutterTextureView: boolean isAttachedToFlutterRenderer
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper: androidx.appcompat.view.menu.MenuItemWrapperICS this$0
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: com.google.zxing.ResultPoint from
com.journeyapps.barcodescanner.BarcodeView$1: com.journeyapps.barcodescanner.BarcodeView this$0
com.journeyapps.barcodescanner.camera.CameraInstance: android.os.Handler readyHandler
androidx.core.widget.NestedScrollView: int mMinimumVelocity
androidx.core.provider.FontRequestWorker$1: int val$style
androidx.appcompat.widget.SearchView: android.view.View$OnKeyListener mTextKeyListener
androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsFloating
com.google.firebase.database.collection.RBTreeSortedMap$Builder$BooleanChunk: boolean isOne
io.flutter.plugins.imagepicker.ImagePickerDelegate: io.flutter.plugins.imagepicker.ImagePickerDelegate$FileUriResolver fileUriResolver
androidx.appcompat.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.WeakHashMap mActivityWindowLayoutInfo
kotlinx.coroutines.flow.internal.NoOpContinuation: kotlinx.coroutines.flow.internal.NoOpContinuation INSTANCE
androidx.appcompat.app.AlertController: boolean mViewSpacingSpecified
com.journeyapps.barcodescanner.camera.PreviewScalingStrategy$1: com.journeyapps.barcodescanner.camera.PreviewScalingStrategy this$0
com.google.firebase.database.core.ZombieEventManager: java.util.HashMap globalEventRegistrations
com.google.android.gms.common.internal.GmsClientSupervisor: com.google.android.gms.common.internal.GmsClientSupervisor zzdq
com.google.zxing.qrcode.decoder.Version: int[] VERSION_DECODE_INFO
com.google.firebase.database.core.Context: com.google.firebase.database.core.EventTarget eventTarget
androidx.appcompat.R$styleable: int ActionMode_background
androidx.appcompat.R$id: int action_mode_bar_stub
androidx.fragment.app.DefaultSpecialEffectsController$5: androidx.fragment.app.DefaultSpecialEffectsController this$0
androidx.core.widget.NestedScrollView: int[] mScrollOffset
androidx.appcompat.widget.DropDownListView: androidx.core.widget.ListViewAutoScrollHelper mScrollHelper
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.platform.PlatformViewsController platformViewsController
androidx.savedstate.Recreator: androidx.savedstate.SavedStateRegistryOwner mOwner
androidx.lifecycle.LiveData: java.lang.Object mDataLock
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int edgeFlags
com.google.zxing.common.reedsolomon.GenericGF: int generatorBase
com.google.common.util.concurrent.AbstractFuture$Failure: com.google.common.util.concurrent.AbstractFuture$Failure FALLBACK_INSTANCE
kotlinx.coroutines.channels.Channel$Factory: kotlinx.coroutines.channels.Channel$Factory $$INSTANCE
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation: java.lang.String newString
com.google.firebase.database.collection.ImmutableSortedMap$Builder: com.google.firebase.database.collection.ImmutableSortedMap$Builder$KeyTranslator IDENTITY_TRANSLATOR
androidx.appcompat.app.AlertController$4: androidx.appcompat.app.AlertController this$0
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mBaseInnerInsets
androidx.fragment.R$styleable: int Fragment_android_tag
com.google.zxing.pdf417.decoder.DetectionResultColumn: com.google.zxing.pdf417.decoder.Codeword[] codewords
com.baseflow.geolocator.location.BackgroundNotification: android.content.Context context
kotlinx.coroutines.scheduling.Task: kotlinx.coroutines.scheduling.TaskContext taskContext
androidx.appcompat.view.menu.MenuPopupHelper: android.view.View mAnchorView
kotlinx.coroutines.internal.ArrayQueue: int head
io.flutter.plugins.googlemaps.PolygonController: boolean consumeTapEvents
io.flutter.plugins.googlemaps.CircleController: com.google.android.gms.maps.model.Circle circle
com.google.firebase.database.core.utilities.Pair: java.lang.Object first
androidx.appcompat.R$attr: int alertDialogTheme
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable: androidx.appcompat.widget.ListPopupWindow this$0
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List decreasedValueAttributes
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DID_GAIN_ACCESSIBILITY_FOCUS
androidx.core.widget.NestedScrollView: float mVerticalScrollFactor
com.google.android.gms.common.GooglePlayServicesNotAvailableException: int errorCode
com.google.firebase.database.snapshot.PathIndex: com.google.firebase.database.core.Path indexPath
com.google.firebase.database.core.SyncTree$16: com.google.firebase.database.core.WriteTreeRef val$writesCache
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingGet: boolean sent
com.google.firebase.components.Component$Builder: java.util.Set providedInterfaces
com.google.android.gms.location.LocationRequest: long zzax
androidx.appcompat.R$attr: int searchViewStyle
com.lyokone.location.FlutterLocation: com.google.android.gms.location.FusedLocationProviderClient mFusedLocationClient
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: io.flutter.embedding.engine.systemchannels.RestorationChannel this$0
androidx.core.widget.NestedScrollView: boolean mSmoothScrollingEnabled
com.google.android.gms.tasks.zzr: java.util.Queue zzt
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$1
androidx.fragment.app.DialogFragment$4: androidx.fragment.app.DialogFragment this$0
androidx.fragment.app.FragmentState: java.lang.String mTag
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List customAccessibilityActions
io.flutter.plugin.common.MethodChannel: java.lang.String name
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mContentText
com.journeyapps.barcodescanner.DecoratedBarcodeView$WrappedCallback: com.journeyapps.barcodescanner.DecoratedBarcodeView this$0
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: android.content.Context applicationContext
androidx.appcompat.view.menu.MenuItemImpl: androidx.appcompat.view.menu.SubMenuBuilder mSubMenu
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType BYTE_SEGMENTS
androidx.core.app.TaskStackBuilder: android.content.Context mSourceContext
androidx.appcompat.view.ActionMode: boolean mTitleOptionalHint
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: android.content.ClipDescription mDescription
com.google.android.gms.common.api.internal.zabk: com.google.android.gms.common.api.internal.GoogleApiManager$zaa zaiq
androidx.window.layout.SidecarCompat: java.util.Map componentCallbackMap
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener engineLifecycleListener
androidx.appcompat.app.AlertController$AlertParams: android.view.View mView
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_BUTTON
com.google.zxing.pdf417.decoder.DetectionResult: com.google.zxing.pdf417.decoder.DetectionResultColumn[] detectionResultColumns
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_FOCUS
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType SUGGESTED_PRICE
com.google.android.gms.common.GoogleApiAvailabilityLight: com.google.android.gms.common.GoogleApiAvailabilityLight zzm
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: int listenerCount
androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Class mType
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_TEXT
androidx.appcompat.widget.LinearLayoutCompat: int mDividerPadding
com.google.android.gms.common.zze: int zzt
kotlinx.coroutines.internal.ScopeCoroutine: kotlin.coroutines.Continuation uCont
com.journeyapps.barcodescanner.camera.CenterCropStrategy: java.lang.String TAG
androidx.window.R$attr: int splitMinWidth
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder LITTLE_ENDIAN
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: int direction
com.google.firebase.database.tubesock.WebSocketWriter: java.util.Random random
com.google.android.gms.common.internal.ClientSettings: java.util.Set zaof
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: kotlinx.coroutines.internal.LockFreeLinkedListNode newNode
com.google.android.gms.common.internal.BaseGmsClient: android.os.Looper zzca
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode hoveredObject
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGF AZTEC_PARAM
com.journeyapps.barcodescanner.CameraPreview: int openedOrientation
com.google.zxing.qrcode.detector.AlignmentPatternFinder: int height
com.journeyapps.barcodescanner.ViewfinderView: com.journeyapps.barcodescanner.Size previewSize
com.google.firebase.database.snapshot.RangeMerge: com.google.firebase.database.snapshot.Node snap
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action LONG_PRESS
androidx.appcompat.widget.ActionBarOverlayLayout$3: androidx.appcompat.widget.ActionBarOverlayLayout this$0
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.GlobalQueue globalBlockingQueue
io.flutter.plugins.imagepicker.ImagePickerDelegate$2: android.app.Activity val$activity
com.google.android.gms.common.api.internal.zaf: com.google.android.gms.common.api.internal.StatusExceptionMapper zacs
androidx.appcompat.widget.SuggestionsAdapter: int mIconName1Col
androidx.appcompat.widget.ScrollingTabContainerView: androidx.appcompat.widget.LinearLayoutCompat mTabLayout
androidx.fragment.app.Fragment: java.lang.Boolean mSavedUserVisibleHint
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiMode
com.google.android.gms.maps.model.Polygon: com.google.android.gms.internal.maps.zzw zzdw
androidx.appcompat.R$styleable: int AppCompatTextView_drawableEndCompat
androidx.appcompat.view.SupportMenuInflater$MenuState: char itemNumericShortcut
com.journeyapps.barcodescanner.camera.CameraManager: com.journeyapps.barcodescanner.camera.AutoFocusManager autoFocusManager
androidx.core.content.res.ComplexColorCompat: android.content.res.ColorStateList mColorStateList
io.flutter.plugins.firebase.database.EventsProxy: io.flutter.plugin.common.EventChannel$EventSink eventSink
io.flutter.view.AccessibilityBridge: java.lang.Integer embeddedAccessibilityFocusedNodeId
com.google.android.gms.common.api.internal.zak: android.os.Handler zadj
androidx.appcompat.R$layout: int abc_expanded_menu_layout
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: boolean bound
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_CHECKED
androidx.core.app.NotificationCompat$Action: int icon
androidx.appcompat.view.SupportMenuInflater: java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE
io.flutter.embedding.engine.systemchannels.NavigationChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler defaultHandler
com.google.zxing.Result: java.lang.String text
com.google.zxing.Result: com.google.zxing.ResultPoint[] resultPoints
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: kotlinx.coroutines.channels.AbstractChannel$Itr iterator
net.touchcapture.qr.flutterqr.QRView: io.flutter.plugin.common.MethodChannel channel
androidx.appcompat.view.menu.CascadingMenuPopup: int mXOffset
androidx.appcompat.view.menu.SubMenuBuilder: androidx.appcompat.view.menu.MenuItemImpl mItem
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets mRootViewVisibleInsets
com.google.android.gms.common.internal.zze: long zzdy
com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waitersUpdater
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners
androidx.appcompat.app.AlertController: int mListLayout
com.google.firebase.database.tubesock.WebSocket$2: com.google.firebase.database.tubesock.WebSocket this$0
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask DATA_MASK_111
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathStart
io.flutter.plugin.platform.PlatformViewRegistryImpl: java.util.Map viewFactories
com.google.firebase.database.connection.PersistentConnectionImpl: java.util.concurrent.ScheduledFuture inactivityTimer
com.google.firebase.database.core.ValueProvider$DeferredValueProvider: com.google.firebase.database.core.SyncTree syncTree
com.google.android.gms.common.internal.BaseGmsClient$zza: android.os.Bundle zzcs
androidx.window.embedding.ActivityRule: java.util.Set filters
io.flutter.view.AccessibilityBridge: android.database.ContentObserver animationScaleObserver
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl mItemData
com.google.firebase.database.core.Repo$TransactionStatus: com.google.firebase.database.core.Repo$TransactionStatus[] $VALUES
io.flutter.embedding.android.FlutterView: java.util.Set flutterUiDisplayListeners
com.journeyapps.barcodescanner.BarcodeView: com.journeyapps.barcodescanner.BarcodeView$DecodeMode decodeMode
io.flutter.plugin.editing.TextEditingDelta: int newComposingEnd
androidx.appcompat.widget.ScrollingTabContainerView$TabView: int[] BG_ATTRS
kotlinx.coroutines.internal.ThreadState: int i
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo: boolean mLoadedAnim
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mRemoveActionBarHideOffset
androidx.appcompat.widget.AppCompatBackgroundHelper: android.view.View mView
androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanApplyOverrideConfiguration
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart UNDISPATCHED
androidx.fragment.app.DefaultSpecialEffectsController$1: java.util.List val$awaitingContainerChanges
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SHOW_ON_SCREEN
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseInnerInsetsRect
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.DeferredComponentChannel deferredComponentChannel
androidx.fragment.app.DefaultSpecialEffectsController$10: int[] $SwitchMap$androidx$fragment$app$SpecialEffectsController$Operation$State
com.google.zxing.common.DecoderResult: java.util.List byteSegments
com.lyokone.location.FlutterLocationService: android.app.Activity activity
androidx.appcompat.widget.ActionMenuPresenter: boolean mReserveOverflowSet
androidx.window.R$styleable: int[] SplitPlaceholderRule
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu: androidx.appcompat.widget.ActionMenuPresenter this$0
com.google.zxing.common.DecoderResult: java.lang.String text
androidx.fragment.app.FragmentTransition$4: android.view.View val$nonExistentView
com.google.zxing.qrcode.decoder.Version$ECB: int dataCodewords
io.flutter.embedding.engine.loader.FlutterLoader: long initStartTimestampMillis
kotlinx.coroutines.DebugKt: boolean RECOVER_STACK_TRACES
com.google.android.gms.signin.internal.zak: int versionCode
com.google.firebase.database.connection.ConnectionContext: java.lang.String userAgent
kotlinx.coroutines.internal.ThreadState: kotlin.coroutines.CoroutineContext context
androidx.appcompat.view.menu.CascadingMenuPopup: androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback
androidx.core.provider.FontRequestWorker: androidx.collection.SimpleArrayMap PENDING_REPLIES
io.flutter.embedding.android.FlutterView: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
com.google.firebase.database.core.WriteTreeRef: com.google.firebase.database.core.Path treePath
androidx.core.R$styleable: int FontFamily_fontProviderCerts
androidx.appcompat.app.AlertController$3: androidx.appcompat.app.AlertController this$0
androidx.fragment.app.FragmentAnim$3: androidx.core.os.CancellationSignal val$signal
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.collection.SparseArrayCompat mLoaders
androidx.window.embedding.SplitRule: int layoutDirection
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SystemChannel systemChannel
androidx.fragment.app.LogWriter: java.lang.String mTag
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String zam
com.google.android.gms.common.api.Status: com.google.android.gms.common.api.Status RESULT_DEAD_CLIENT
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String mFileName
com.google.firebase.database.core.utilities.PushIdGenerator: java.util.Random randGen
androidx.appcompat.widget.AppCompatCompoundButtonHelper: boolean mHasButtonTintMode
com.google.firebase.database.connection.PersistentConnectionImpl$8: com.google.firebase.database.connection.PersistentConnectionImpl this$0
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate mDelegate
com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterNextUpdater
androidx.appcompat.widget.SuggestionsAdapter: android.content.res.ColorStateList mUrlColor
io.flutter.plugin.editing.TextInputPlugin$InputTarget: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type type
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.View$OnAttachStateChangeListener mAttachStateChangeListener
androidx.window.core.Version: int minor
androidx.collection.SparseArrayCompat: int mSize
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.layout.SidecarAdapter sidecarAdapter
com.google.zxing.common.BitMatrix: int[] bits
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent: android.content.ComponentName componentName
io.flutter.plugins.urllauncher.WebViewActivity$2: io.flutter.plugins.urllauncher.WebViewActivity this$0
androidx.appcompat.widget.TooltipPopup: android.widget.TextView mMessageView
com.google.common.util.concurrent.AbstractFuture$Cancellation: com.google.common.util.concurrent.AbstractFuture$Cancellation CAUSELESS_INTERRUPTED
androidx.fragment.app.FragmentTransition$6: boolean val$inIsPop
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.ranges.IntRange nextItem
com.google.firebase.database.connection.PersistentConnectionImpl: java.lang.String cachedHost
com.google.zxing.oned.rss.AbstractRSSReader: int[] oddCounts
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState PARKING
kotlinx.coroutines.scheduling.LimitingDispatcher: java.util.concurrent.ConcurrentLinkedQueue queue
com.google.android.gms.maps.model.TileOverlay: com.google.android.gms.internal.maps.zzac zzeh
androidx.appcompat.app.AppCompatDelegateImpl$6$1: androidx.appcompat.app.AppCompatDelegateImpl$6 this$1
androidx.window.core.Version: androidx.window.core.Version UNKNOWN
com.google.zxing.oned.rss.RSS14Reader: java.util.List possibleLeftPairs
com.google.android.gms.internal.base.zar: com.google.android.gms.internal.base.zaq zasi
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.plugin.common.MethodChannel channel
com.google.firebase.FirebaseOptions: java.lang.String gaTrackingId
com.google.android.gms.maps.model.MarkerOptions: float zzdt
androidx.appcompat.R$styleable: int[] ActionBar
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel H
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry mActivityResultRegistry
androidx.fragment.app.Fragment: java.lang.Object USE_DEFAULT_TRANSITION
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PRESS_AND_HOLD
io.flutter.plugin.editing.ListenableEditingState: int mSelectionStartWhenBeginBatchEdit
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo: long messageData
com.google.firebase.database.connection.WebsocketConnection$2: com.google.firebase.database.connection.WebsocketConnection this$0
com.google.common.util.concurrent.AbstractFuture$SetFuture: com.google.common.util.concurrent.AbstractFuture owner
androidx.appcompat.R$id: int title
androidx.core.graphics.drawable.DrawableCompat: boolean sGetLayoutDirectionMethodFetched
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_TIFF_TAGS
com.baseflow.geolocator.GeolocatorLocationService: com.baseflow.geolocator.GeolocatorLocationService$LocalBinder binder
androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8
androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureIndeterminateProgress
io.flutter.plugins.googlemaps.GoogleMapBuilder: boolean trackCameraPosition
androidx.appcompat.R$styleable: int AppCompatTextView_drawableStartCompat
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$BubbleMetadata mBubbleMetadata
androidx.appcompat.R$styleable: int ActionMode_height
com.google.zxing.pdf417.decoder.BoundingBox: int minX
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets flutterAssets
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI Cp1250
com.google.zxing.oned.rss.FinderPattern: int value
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.Rect mTmpBounds
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int sClickableSpanId
androidx.appcompat.widget.AppCompatImageHelper: androidx.appcompat.widget.TintInfo mInternalImageTint
io.flutter.plugins.googlemaps.GoogleMapController: java.util.List initialPolylines
androidx.appcompat.R$id: int content
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility PRIVATE
androidx.appcompat.widget.SearchView: android.widget.ImageView mSearchButton
com.google.android.gms.common.api.internal.BasePendingResult: boolean zadw
androidx.appcompat.R$layout: int abc_action_mode_close_item_material
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ToolbarWidgetWrapper mWrapper
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$0
com.google.common.util.concurrent.AbstractFuture$SetFuture: com.google.common.util.concurrent.ListenableFuture future
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.app.Service service
androidx.appcompat.view.menu.ActionMenuItemView: int mMaxIconSize
com.google.firebase.database.core.operation.OperationSource$Source: com.google.firebase.database.core.operation.OperationSource$Source[] $VALUES
io.flutter.plugins.urllauncher.WebViewActivity: java.lang.String ACTION_CLOSE
com.google.firebase.database.connection.WebsocketConnection: com.google.firebase.database.connection.WebsocketConnection$WSClient conn
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mSettingsText
androidx.core.view.WindowInsetsCompat$Impl20: java.lang.reflect.Field sVisibleInsetsField
androidx.appcompat.widget.AbsActionBarView: int mContentHeight
com.google.firebase.database.core.SyncTree$1: com.google.firebase.database.core.Path val$path
com.google.zxing.qrcode.decoder.BitMatrixParser: com.google.zxing.qrcode.decoder.Version parsedVersion
com.google.android.gms.common.api.internal.zabv: com.google.android.gms.common.api.internal.RegisterListenerMethod zakc
androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable$ConstantState mDrawableState
androidx.appcompat.R$dimen: int abc_search_view_preferred_height
androidx.appcompat.R$styleable: int AppCompatTextView_drawableRightCompat
com.google.zxing.maxicode.decoder.DecodedBitStreamParser: java.lang.String[] SETS
androidx.appcompat.view.menu.ActionMenuItem: boolean mHasIconTintMode
kotlin.ranges.IntRange: kotlin.ranges.IntRange EMPTY
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableLeft
androidx.core.view.inputmethod.InputConnectionCompat$1: androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener val$listener
com.google.zxing.client.android.InactivityTimer$PowerStatusReceiver: com.google.zxing.client.android.InactivityTimer this$0
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock$2: java.lang.String val$str
com.google.firebase.database.core.Repo$8: com.google.firebase.database.core.Path val$path
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments
io.flutter.view.AccessibilityBridge$SemanticsNode: float right
io.flutter.plugin.platform.PlatformViewsController: android.content.Context context
androidx.appcompat.R$color: int abc_tint_spinner
androidx.appcompat.widget.SearchView: android.content.Intent mVoiceWebSearchIntent
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.String baseContinuationImplClassName
com.google.firebase.database.core.view.View: com.google.firebase.database.core.view.ViewCache viewCache
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mAddActionBarHideOffset
androidx.appcompat.R$styleable: int Toolbar_titleMarginStart
androidx.core.R$styleable: int ColorStateListItem_android_color
androidx.fragment.app.FragmentActivity$2: androidx.fragment.app.FragmentActivity this$0
com.google.android.gms.maps.MapView$zzb: android.view.ViewGroup zzbj
androidx.multidex.MultiDexExtractor: java.io.File dexDir
androidx.fragment.app.FragmentTransaction: boolean mReorderingAllowed
androidx.fragment.app.FragmentTransition$6: java.util.ArrayList val$sharedElementsOut
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat mHost
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat CONSUMED
androidx.appcompat.view.menu.MenuItemImpl: char mShortcutAlphabeticChar
androidx.appcompat.view.SupportMenuInflater$MenuState: android.graphics.PorterDuff$Mode itemIconTintMode
androidx.fragment.app.FragmentHostCallback: android.content.Context mContext
androidx.appcompat.app.AlertController$AlertParams: boolean mIsSingleChoice
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
android.support.v4.app.INotificationSideChannel$Stub$Proxy: android.os.IBinder mRemote
com.google.android.gms.common.internal.GetServiceRequest: com.google.android.gms.common.api.Scope[] zzdj
androidx.core.R$id: int accessibility_custom_action_4
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: io.flutter.plugin.common.MethodChannel channel
androidx.window.core.Version: androidx.window.core.Version VERSION_0_1
com.google.firebase.database.logging.LogWrapper: com.google.firebase.database.logging.Logger logger
androidx.appcompat.view.menu.MenuItemImpl: int mOrdering
io.flutter.Log: int INFO
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManager mManager
androidx.core.graphics.drawable.WrappedDrawableApi21: java.lang.reflect.Method sIsProjectedDrawableMethod
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State GONE
androidx.appcompat.R$styleable: int MenuItem_actionLayout
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$sharedElementsOut
androidx.appcompat.app.AppCompatViewInflater: androidx.collection.SimpleArrayMap sConstructorMap
com.google.firebase.database.collection.LLRBValueNode: java.lang.Object value
androidx.appcompat.R$styleable: int[] ColorStateListItem
com.google.android.gms.internal.location.zzc: java.lang.ClassLoader zzd
androidx.core.view.inputmethod.InputConnectionCompat$2: androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener val$listener
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler handler
com.google.firebase.components.ComponentRuntime: java.util.Map lazyInstanceMap
com.google.zxing.common.PerspectiveTransform: float a23
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
androidx.appcompat.R$styleable: int Toolbar_contentInsetLeft
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface callback
com.google.android.gms.common.internal.zzh: int zzdt
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mNeutralButtonListener
androidx.appcompat.widget.TooltipCompatHandler$2: androidx.appcompat.widget.TooltipCompatHandler this$0
com.google.firebase.database.core.SyncTree$14: com.google.firebase.database.DatabaseError val$cancelError
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mForceShowIcon
androidx.window.layout.SidecarCompat$DistinctElementCallback: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicReferenceFieldUpdater lastScheduledTask$FU
com.google.android.gms.maps.model.MarkerOptions: java.lang.String zzdo
androidx.window.core.Version: int patch
io.flutter.FlutterInjector: java.util.concurrent.ExecutorService executorService
androidx.fragment.app.BackStackState: int mBreadCrumbShortTitleRes
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding
com.google.zxing.client.android.R$layout: int zxing_barcode_scanner
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: androidx.appcompat.view.menu.MenuItemWrapperICS this$0
com.google.android.gms.maps.model.Gap: float length
com.google.android.gms.dynamite.DynamiteModule$zzb: int zzip
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingGet: com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionRequestCallback onComplete
com.google.firebase.database.connection.Connection$State: com.google.firebase.database.connection.Connection$State REALTIME_DISCONNECTED
com.google.firebase.database.core.view.CancelEvent: com.google.firebase.database.core.EventRegistration eventRegistration
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertController$AlertParams P
androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel
com.google.android.gms.common.internal.zzp: java.lang.String zzep
io.flutter.plugins.imagepicker.ImagePickerPlugin: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding pluginBinding
androidx.appcompat.app.AppCompatDelegateImpl: boolean mStarted
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetBottom
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] $VALUES
com.google.firebase.components.EventBus: java.util.Queue pendingEvents
com.baseflow.geolocator.GeolocatorPlugin: com.baseflow.geolocator.location.GeolocationManager geolocationManager
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableStartTint
io.flutter.plugins.googlemaps.PolylineBuilder: boolean consumeTapEvents
androidx.appcompat.view.menu.MenuDialogHelper: androidx.appcompat.view.menu.MenuBuilder mMenu
com.google.firebase.database.core.SyncTree$13: com.google.firebase.database.core.SyncTree this$0
androidx.appcompat.widget.SuggestionsAdapter: boolean mClosed
androidx.window.R$styleable: int SplitPairRule_splitMinWidth
com.google.zxing.oned.rss.RSS14Reader: int[] INSIDE_ODD_WIDEST
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: java.lang.Character complexCharacter
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: androidx.appcompat.widget.MenuItemHoverListener mHoverListener
com.google.android.gms.common.api.internal.zaac: com.google.android.gms.common.api.internal.zaz zafq
com.google.firebase.database.core.Repo: boolean hijackHash
androidx.window.R$styleable: int SplitPairRule_splitRatio
androidx.appcompat.R$styleable: int ActionBar_contentInsetEnd
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: int mOriginalHorizontalOffset
com.google.zxing.pdf417.PDF417ResultMetadata: int[] optionalData
androidx.appcompat.view.SupportMenuInflater$MenuState: android.view.Menu menu
androidx.appcompat.app.TwilightManager: androidx.appcompat.app.TwilightManager$TwilightState mTwilightState
androidx.fragment.app.FragmentManager: androidx.activity.result.ActivityResultLauncher mStartActivityForResult
com.google.zxing.pdf417.decoder.BoundingBox: com.google.zxing.ResultPoint topRight
androidx.appcompat.R$styleable: int Toolbar_navigationContentDescription
com.google.common.util.concurrent.AbstractFuture$Failure: java.lang.Throwable exception
com.google.zxing.qrcode.detector.FinderPatternFinder: java.util.List possibleCenters
androidx.appcompat.widget.SearchView: boolean mClearingFocus
androidx.appcompat.view.menu.BaseMenuPresenter: int mId
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int flags
kotlinx.coroutines.channels.ConflatedChannel: java.lang.Object value
com.google.zxing.common.DecoderResult: java.lang.Integer erasures
androidx.appcompat.R$styleable: int ActionBar_hideOnContentScroll
androidx.window.core.Version: int major
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.plugin.common.MethodChannel channel
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mShowActionModePopup
androidx.appcompat.app.AppCompatDelegateImpl: boolean mEnableDefaultActionBarUp
androidx.appcompat.widget.ActionBarContextView: int mCloseItemLayout
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable
io.flutter.view.AccessibilityBridge$1: io.flutter.view.AccessibilityBridge this$0
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: android.graphics.Rect mTargetBounds
androidx.core.graphics.PathParser$PathDataNode: float[] mParams
com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState: com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState Disconnected
com.google.android.gms.maps.GoogleMapOptions: android.os.Parcelable$Creator CREATOR
androidx.appcompat.R$layout: int abc_list_menu_item_radio
com.google.android.gms.tasks.zzh: com.google.android.gms.tasks.zzg zzk
com.google.android.gms.common.internal.ResolveAccountResponse: boolean zapq
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus[] $VALUES
io.flutter.plugins.googlemaps.TileProviderController$Worker: int x
com.google.android.gms.signin.internal.SignInClientImpl: com.google.android.gms.common.internal.ClientSettings zafa
com.google.firebase.database.core.ChildEventRegistration: com.google.firebase.database.core.Repo repo
com.journeyapps.barcodescanner.DecoratedBarcodeView$WrappedCallback: com.journeyapps.barcodescanner.BarcodeCallback delegate
com.journeyapps.barcodescanner.camera.CameraSettings: boolean exposureEnabled
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable
com.journeyapps.barcodescanner.camera.CameraThread: java.lang.Object LOCK
androidx.core.app.NotificationCompat$Action: android.os.Bundle mExtras
com.google.firebase.components.ComponentRuntime: java.util.Map components
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper$ClampedScroller mScroller
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: android.content.Context mContext
com.google.firebase.database.android.SqlPersistenceStorageEngine$2: com.google.firebase.database.android.SqlPersistenceStorageEngine this$0
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
androidx.appcompat.R$styleable: int ActionBar_subtitle
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableBottomTint
com.google.firebase.database.core.Repo: long dataUpdateCount
com.google.android.gms.tasks.zzi: java.util.concurrent.Executor zzd
androidx.appcompat.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout
com.google.android.gms.internal.location.zzas: java.util.Map zzcz
com.google.zxing.common.BitSource: byte[] bytes
com.google.android.gms.common.internal.StringResourceValueReader: java.lang.String zzev
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mAnimatingForFling
androidx.collection.ArrayMap: androidx.collection.MapCollections mCollections
com.google.zxing.oned.UPCEANReader: com.google.zxing.oned.UPCEANExtensionSupport extensionReader
androidx.activity.ComponentActivity$5: androidx.activity.ComponentActivity this$0
io.flutter.embedding.android.FlutterTextureView: boolean isPaused
kotlinx.coroutines.scheduling.NonBlockingContext: kotlinx.coroutines.scheduling.NonBlockingContext INSTANCE
androidx.fragment.app.DefaultSpecialEffectsController$5: android.view.View val$viewToAnimate
kotlinx.coroutines.DefaultExecutor: int debugStatus
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView
kotlinx.coroutines.CompletedContinuation: kotlin.jvm.functions.Function1 onCancellation
com.google.android.gms.maps.zzv: com.google.android.gms.maps.GoogleMap$OnCameraMoveListener zzad
com.journeyapps.barcodescanner.CameraPreview: android.graphics.Rect surfaceRect
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.EmptyCoroutineContext INSTANCE
com.google.zxing.common.StringUtils: boolean ASSUME_SHIFT_JIS
androidx.core.provider.RequestExecutor$ReplyRunnable$1: androidx.core.util.Consumer val$consumer
androidx.appcompat.widget.AppCompatTextView: boolean mIsSetTypefaceProcessing
com.google.zxing.common.CharacterSetECI: java.util.Map VALUE_TO_ECI
kotlin.sequences.TransformingSequence$iterator$1: java.util.Iterator iterator
com.google.firebase.database.core.Repo$11: com.google.firebase.database.snapshot.Node val$newValue
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode NUMERIC
androidx.core.text.PrecomputedTextCompat: android.text.PrecomputedText mWrapped
androidx.appcompat.R$drawable: int abc_switch_track_mtrl_alpha
androidx.core.app.NotificationCompat$Builder: androidx.core.content.LocusIdCompat mLocusId
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _isTerminated$FU
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature ACCESSIBLE_NAVIGATION
androidx.appcompat.widget.ToolbarWidgetWrapper$2: androidx.appcompat.widget.ToolbarWidgetWrapper this$0
com.google.firebase.database.core.Repo$13: com.google.firebase.database.core.Path val$path
com.google.android.gms.common.api.internal.RegisterListenerMethod: com.google.android.gms.common.Feature[] zajv
com.google.android.gms.common.api.Status: com.google.android.gms.common.api.Status RESULT_SUCCESS
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener
androidx.core.app.NotificationCompat$Builder: boolean mGroupSummary
kotlinx.coroutines.CancellableContinuationImpl: java.util.concurrent.atomic.AtomicIntegerFieldUpdater _decision$FU
io.flutter.embedding.android.KeyboardManager: io.flutter.embedding.android.KeyboardManager$Responder[] responders
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: int label
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat CODABAR
androidx.appcompat.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
androidx.lifecycle.Lifecycling: java.util.Map sCallbackCache
com.google.firebase.database.OnDisconnect: com.google.firebase.database.core.Path path
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.content.ContentProvider contentProvider
com.google.zxing.datamatrix.DataMatrixReader: com.google.zxing.ResultPoint[] NO_POINTS
com.google.zxing.qrcode.detector.AlignmentPatternFinder: float moduleSize
androidx.appcompat.widget.ToolbarWidgetWrapper$1: androidx.appcompat.widget.ToolbarWidgetWrapper this$0
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: kotlin.coroutines.Continuation $completion
io.flutter.embedding.android.DrawableSplashScreen$1: java.lang.Runnable val$onTransitionComplete
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: boolean mOverlapAllowed
com.google.android.gms.common.internal.zak: com.google.android.gms.tasks.TaskCompletionSource zapi
com.google.firebase.database.connection.PersistentConnectionImpl: com.google.firebase.database.connection.PersistentConnection$Delegate delegate
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType PURE_BARCODE
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.String stackTraceRecoveryClassName
androidx.appcompat.widget.Toolbar: int mMaxButtonHeight
com.google.android.gms.internal.location.zzbl: com.google.android.gms.location.LocationSettingsRequest zzdp
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: android.animation.ObjectAnimator mAnim
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.google.zxing.Result: int numBits
com.google.zxing.ResultPoint: float y
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_ALREADY
androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI[] $VALUES
io.flutter.plugins.firebase.database.QueryBuilder: java.util.List modifiers
androidx.window.R$attr: int activityAction
net.touchcapture.qr.flutterqr.QRViewFactory: io.flutter.plugin.common.BinaryMessenger messenger
androidx.lifecycle.LiveData: androidx.arch.core.internal.SafeIterableMap mObservers
androidx.activity.result.IntentSenderRequest$Builder: android.content.IntentSender mIntentSender
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: android.view.View embeddedView
io.flutter.view.AccessibilityBridge$SemanticsNode: int actions
androidx.core.view.ViewCompat: int[] ACCESSIBILITY_ACTIONS_RESOURCE_IDS
androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat$Params mParams
androidx.appcompat.R$styleable: int MenuItem_android_icon
io.flutter.plugin.editing.ListenableEditingState: java.lang.String mTextWhenBeginBatchEdit
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: android.view.View val$mutatorView
androidx.appcompat.widget.DropDownListView: android.graphics.Rect mSelectorRect
io.flutter.FlutterInjector$Builder: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
androidx.appcompat.view.menu.CascadingMenuPopup: int mMenuMaxWidth
androidx.core.R$id: int tag_on_receive_content_listener
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener isolateServiceIdListener
com.google.zxing.MultiFormatReader: com.google.zxing.Reader[] readers
androidx.appcompat.widget.SearchView: int mMaxWidth
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: androidx.appcompat.view.menu.MenuItemWrapperICS this$0
androidx.appcompat.view.menu.CascadingMenuPopup: java.util.List mShowingMenus
kotlin.KotlinVersion: int major
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.ExpandedMenuView mMenuView
androidx.appcompat.widget.ActionBarContextView: boolean mTitleOptional
androidx.appcompat.R$color: int abc_tint_switch_track
androidx.appcompat.view.menu.MenuItemImpl$1: androidx.appcompat.view.menu.MenuItemImpl this$0
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.FlutterJNI flutterJNI
com.google.android.gms.common.internal.GetServiceRequest: com.google.android.gms.common.Feature[] zzdm
com.google.zxing.aztec.AztecDetectorResult: int nbLayers
com.google.android.gms.tasks.zzc: com.google.android.gms.tasks.zzu zzf
com.google.firebase.database.connection.CompoundHash: java.util.List hashes
androidx.appcompat.widget.TintContextWrapper: android.content.res.Resources mResources
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.Size currentSurfaceSize
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mPriorLoader
com.google.common.util.concurrent.AbstractFuture: java.util.logging.Logger log
com.google.firebase.database.Query$4: com.google.firebase.database.Query this$0
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mRotate
io.flutter.plugins.googlemaps.GoogleMapController: boolean trafficEnabled
io.flutter.plugins.googlemaps.TileProviderController$Worker: io.flutter.plugins.googlemaps.TileProviderController this$0
androidx.activity.ComponentActivity: int mContentLayoutId
com.google.firebase.database.connection.util.StringListReader: boolean frozen
androidx.appcompat.app.AlertController: int mListItemLayout
com.google.firebase.components.Component$Builder: int instantiation
com.google.firebase.emulators.EmulatedServiceSettings: java.lang.String host
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem$OnMenuItemClickListener mClickListener
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel platformViewsChannel
androidx.collection.MapCollections: androidx.collection.MapCollections$ValuesCollection mValues
androidx.appcompat.app.AlertController$5: androidx.appcompat.app.AlertController this$0
androidx.appcompat.widget.SearchView: android.view.View mSearchPlate
androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray overlayLayerViews
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List hintAttributes
androidx.core.R$id: int accessibility_custom_action_0
androidx.appcompat.graphics.drawable.DrawableContainer: java.lang.Runnable mAnimationRunnable
com.google.zxing.oned.UPCEReader: int[][] NUMSYS_AND_CHECK_DIGIT_PATTERNS
androidx.activity.ComponentActivity$2$2: android.content.IntentSender$SendIntentException val$e
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarInterface$SidecarCallback callbackInterface
com.google.firebase.components.ComponentRuntime$Builder: java.util.List additionalComponents
com.baseflow.geolocator.location.LocationOptions: long timeInterval
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mPositiveButtonText
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: java.util.Map plugins
androidx.core.R$styleable: int GradientColor_android_startX
com.google.firebase.database.core.SparseSnapshotTree$2: com.google.firebase.database.core.SparseSnapshotTree$SparseSnapshotTreeVisitor val$visitor
androidx.core.graphics.drawable.DrawableCompat: boolean sSetLayoutDirectionMethodFetched
androidx.collection.LruCache: int evictionCount
androidx.appcompat.widget.SearchView: android.text.TextWatcher mTextWatcher
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_THUMBNAIL_TAGS
com.google.zxing.oned.rss.expanded.decoders.FieldParser: java.lang.Object[][] THREE_DIGIT_DATA_LENGTH
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mOverlayMode
com.journeyapps.barcodescanner.camera.CameraManager: com.journeyapps.barcodescanner.camera.CameraManager$CameraPreviewCallback cameraPreviewCallback
com.google.firebase.database.FirebaseDatabaseComponent: com.google.firebase.database.core.TokenProvider appCheckProvider
com.google.android.gms.maps.GoogleMapOptions: int mapType
androidx.appcompat.widget.ScrollingTabContainerView: boolean mAllowCollapse
com.google.firebase.database.collection.ArraySortedMap$1: int currentPos
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] $VALUES
com.google.firebase.database.core.Repo$TransactionData: com.google.firebase.database.Transaction$Handler handler
androidx.core.widget.AutoScrollHelper: boolean mAlreadyDelayed
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode: com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode MIXED
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: boolean isCalled
com.google.android.gms.common.internal.BaseGmsClient: android.os.IInterface zzcg
androidx.appcompat.widget.SearchView: android.view.View$OnClickListener mOnClickListener
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mRampUpDuration
com.google.firebase.database.tubesock.MessageBuilderFactory$BinaryBuilder: int pendingByteCount
androidx.appcompat.view.SupportMenuInflater$MenuState: int groupOrder
io.flutter.plugin.editing.ListenableEditingState: int mComposingStartWhenBeginBatchEdit
com.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper zzhy
io.flutter.plugins.imagepicker.ImagePickerDelegate: io.flutter.plugins.imagepicker.ImagePickerCache cache
androidx.appcompat.R$id: int customPanel
androidx.appcompat.widget.Toolbar: int mContentInsetEndWithActions
com.journeyapps.barcodescanner.ViewfinderView: com.journeyapps.barcodescanner.CameraPreview cameraPreview
com.google.zxing.client.android.R$id: int zxing_preview_failed
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.Size containerSize
com.google.firebase.database.core.utilities.encoding.CustomClassMapper$BeanMapper: java.lang.reflect.Constructor constructor
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
androidx.appcompat.R$styleable: int[] StateListDrawable
androidx.appcompat.widget.ThemeUtils: java.lang.ThreadLocal TL_TYPED_VALUE
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: java.util.ArrayDeque taskQueue
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding pluginBinding
com.google.zxing.client.android.R$id: int zxing_prewiew_size_ready
androidx.lifecycle.SavedStateHandleController$1: androidx.lifecycle.Lifecycle val$lifecycle
com.google.android.gms.tasks.zzg: com.google.android.gms.tasks.OnCanceledListener zzj
com.google.android.gms.common.internal.zzh: boolean zzek
androidx.appcompat.R$drawable: int abc_text_cursor_material
androidx.multidex.MultiDex$V14: int EXTRACTED_SUFFIX_LENGTH
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.view.ViewTreeObserver$OnGlobalFocusChangeListener activeFocusListener
com.google.firebase.database.core.UserWriteRecord: com.google.firebase.database.snapshot.Node overwrite
androidx.appcompat.widget.ForwardingListener: java.lang.Runnable mDisallowIntercept
androidx.core.R$id: int accessibility_custom_action_18
androidx.core.text.PrecomputedTextCompat: android.text.Spannable mText
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int composingStart
com.google.zxing.client.android.AmbientLightManager: com.journeyapps.barcodescanner.camera.CameraManager cameraManager
androidx.appcompat.view.menu.CascadingMenuPopup: int mYOffset
com.google.firebase.database.core.persistence.PruneForest: com.google.firebase.database.core.utilities.ImmutableTree PRUNE_TREE
io.flutter.plugins.googlemaps.MarkerBuilder: com.google.android.gms.maps.model.MarkerOptions markerOptions
com.google.android.gms.common.internal.ClientSettings$Builder: android.accounts.Account account
androidx.appcompat.R$styleable: int[] AppCompatImageView
androidx.appcompat.widget.ForwardingListener: int mActivePointerId
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action COPY
io.flutter.plugins.googlemaps.GoogleMapController: boolean myLocationButtonEnabled
com.baseflow.geolocator.location.AndroidIconResource: java.lang.String name
com.google.android.gms.location.LocationRequest: long zzaf
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1: java.util.Iterator $this_asSequence$inlined
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mVisibleItems
androidx.core.R$id: int accessibility_custom_action_3
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: io.flutter.plugin.common.BasicMessageChannel$Reply callback
io.flutter.plugins.googlemaps.GoogleMapBuilder: boolean trafficEnabled
androidx.appcompat.R$styleable: int AppCompatTextView_drawableTint
androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView
androidx.core.app.NotificationCompat$Builder: java.util.ArrayList mPersonList
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: float devicePixelRatio
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode accessibilityFocusedSemanticsNode
com.google.android.gms.common.internal.BaseGmsClient: java.lang.Object zzcd
androidx.appcompat.widget.ThemeUtils: int[] EMPTY_STATE_SET
com.lyokone.location.FlutterLocation: com.google.android.gms.location.LocationRequest mLocationRequest
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String appStoragePath
androidx.appcompat.app.AlertController$2: androidx.appcompat.app.AlertController this$0
androidx.core.content.res.ComplexColorCompat: int mColor
androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents
androidx.appcompat.app.TwilightManager$TwilightState: long yesterdaySunset
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderPlatformThread: java.util.concurrent.Executor uiThreadExecutor
androidx.appcompat.view.menu.MenuPopupHelper: int mPopupStyleRes
com.google.android.gms.common.internal.GetServiceRequest: int zzdg
com.journeyapps.barcodescanner.ViewfinderView: int[] SCANNER_ALPHA
androidx.activity.ComponentActivity$2$1: androidx.activity.result.contract.ActivityResultContract$SynchronousResult val$synchronousResult
com.google.firebase.database.connection.WebsocketConnection: com.google.firebase.database.logging.LogWrapper logger
kotlinx.coroutines.CancelledContinuation: int _resumed
com.google.firebase.database.tubesock.WebSocketWriter: java.lang.Thread innerThread
androidx.appcompat.app.AlertController$2: android.view.View val$top
androidx.collection.MapCollections$MapIterator: int mEnd
com.google.firebase.components.Lazy: com.google.firebase.inject.Provider provider
androidx.appcompat.widget.AppCompatReceiveContentHelper$1: android.view.View val$view
androidx.appcompat.widget.AppCompatBackgroundHelper: androidx.appcompat.widget.TintInfo mBackgroundTint
com.google.firebase.components.OptionalProvider: com.google.firebase.inject.Provider EMPTY_PROVIDER
androidx.appcompat.view.menu.MenuAdapter: androidx.appcompat.view.menu.MenuBuilder mAdapterMenu
com.google.zxing.Result: byte[] rawBytes
androidx.core.app.NotificationCompatBuilder: android.content.Context mContext
com.google.android.gms.common.api.internal.BasePendingResult: boolean zady
com.google.android.gms.common.zzg: java.lang.ref.WeakReference zzv
androidx.core.app.ActivityRecreator$1: androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks val$callbacks
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: androidx.appcompat.view.ActionMode$Callback mCallback
androidx.appcompat.widget.TooltipPopup: int[] mTmpAnchorPos
com.google.android.gms.location.zzj: boolean zzt
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Constructor mFontFamilyCtor
com.google.android.gms.common.internal.ClientSettings: java.util.Map zaoh
com.google.zxing.client.android.R$styleable: int zxing_camera_preview_zxing_framing_rect_width
kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache notOnJava9
androidx.appcompat.widget.LinearLayoutCompat: int[] mMaxDescent
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatSpinner$1: androidx.appcompat.widget.AppCompatSpinner this$0
com.google.android.gms.common.internal.zze: com.google.android.gms.common.stats.ConnectionTracker zzdw
androidx.fragment.app.FragmentTransition$6: androidx.collection.ArrayMap val$nameOverrides
com.google.firebase.database.connection.WebsocketConnection: com.google.firebase.database.connection.util.StringListReader frameReader
com.google.firebase.database.tubesock.WebSocket: java.net.URI url
androidx.core.widget.TextViewCompat$OreoCallback: boolean mCanUseMenuBuilderReferences
com.google.zxing.DecodeHintType: java.lang.Class valueType
com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult: boolean finished
io.flutter.embedding.android.FlutterSurfaceView: boolean isPaused
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int mWeight
androidx.core.R$id: int accessibility_custom_action_25
androidx.appcompat.R$drawable: int abc_list_divider_mtrl_alpha
com.google.common.base.Throwables: java.lang.Object jla
com.google.android.gms.location.LocationAvailability: long zzat
androidx.appcompat.R$styleable: int AlertDialog_buttonIconDimen
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI UTF8
com.google.firebase.database.tubesock.WebSocket$State: com.google.firebase.database.tubesock.WebSocket$State[] $VALUES
androidx.core.R$id: int accessibility_custom_action_17
androidx.core.provider.FontRequestWorker$TypefaceResult: android.graphics.Typeface mTypeface
androidx.appcompat.R$styleable: int AppCompatTheme_windowActionModeOverlay
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
io.flutter.FlutterInjector: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
androidx.fragment.app.FragmentActivity$1: androidx.fragment.app.FragmentActivity this$0
androidx.core.app.NotificationCompat$Style: boolean mSummaryTextSet
com.google.android.gms.common.api.internal.ApiKey: com.google.android.gms.common.api.Api mApi
androidx.appcompat.widget.RtlSpacingHelper: int mExplicitLeft
androidx.appcompat.app.AlertController: java.lang.CharSequence mButtonPositiveText
androidx.fragment.app.Fragment$AnimationInfo: int mNextTransition
com.google.firebase.database.core.Path$1: com.google.firebase.database.core.Path this$0
androidx.appcompat.R$id: int action_bar_container
com.google.android.gms.signin.internal.SignInClientImpl: boolean zasx
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBNode left
androidx.appcompat.widget.ScrollingTabContainerView: int mSelectedTabIndex
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH
androidx.appcompat.R$style: int Theme_AppCompat_Empty
androidx.activity.result.IntentSenderRequest: android.content.IntentSender mIntentSender
androidx.window.layout.WindowMetricsCalculator$Companion: kotlin.jvm.functions.Function1 decorator
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth
com.google.zxing.ReaderException: boolean isStackTrace
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus disabled
androidx.fragment.app.FragmentTransition$4: androidx.fragment.app.Fragment val$inFragment
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetRight
com.google.android.gms.common.internal.zaf: com.google.android.gms.common.api.internal.ConnectionCallbacks zaou
com.google.firebase.database.core.operation.AckUserWrite: boolean revert
androidx.appcompat.R$attr: int toolbarStyle
androidx.core.provider.FontRequest: java.lang.String mQuery
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList mPendingListeners
com.google.android.gms.signin.internal.zab: int versionCode
com.google.firebase.database.connection.ConnectionContext: java.lang.String sslCacheDirectory
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
kotlinx.coroutines.JobImpl: boolean handlesException
com.google.android.gms.common.api.internal.TaskApiCall: boolean zako
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend globalInstance
com.google.firebase.database.core.Repo$22: java.util.List val$queue
androidx.appcompat.widget.TooltipCompatHandler: android.view.View mAnchor
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: kotlinx.coroutines.scheduling.CoroutineScheduler coroutineScheduler
com.google.android.gms.common.api.internal.zabq: com.google.android.gms.common.api.internal.zabp zajl
com.google.firebase.database.core.Repo$14: java.util.Map val$serverValues
com.google.zxing.oned.UPCEANReader: java.lang.StringBuilder decodeRowStringBuffer
com.journeyapps.barcodescanner.ViewfinderView: boolean laserVisibility
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinWidth
androidx.appcompat.R$string: int abc_menu_delete_shortcut_label
androidx.multidex.MultiDexExtractor: java.io.File sourceApk
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn: boolean isLeft
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat mAvd
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: java.util.HashMap databaseInstanceCache
androidx.appcompat.app.AlertController: int mViewSpacingRight
com.google.zxing.qrcode.detector.FinderPatternFinder: com.google.zxing.common.BitMatrix image
com.google.android.gms.common.api.internal.zabq: android.content.Context mContext
com.google.zxing.pdf417.detector.Detector: int[] INDEXES_STOP_PATTERN
io.flutter.embedding.android.FlutterView$4: io.flutter.embedding.engine.renderer.FlutterRenderer val$renderer
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.MethodCodec codec
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.ImageView mIcon2
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String LOGTAG
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides LEFT
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl handler
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mOnClickListener
androidx.tracing.Trace: java.lang.reflect.Method sIsTagEnabledMethod
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState mVectorState
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable$ConstantState mDelegateState
com.baseflow.geolocator.StreamHandlerImpl: io.flutter.plugin.common.EventChannel channel
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.PorterDuff$Mode mTintMode
androidx.appcompat.app.AlertController: int mIconId
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
com.google.android.gms.base.R$string: int common_google_play_services_notification_ticker
androidx.fragment.app.FragmentTransition$6: java.lang.Object val$enterTransition
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.graphics.RectF TEMP_RECTF
com.google.zxing.common.PerspectiveTransform: float a12
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mReadCache
com.google.android.gms.internal.location.zzo: int zzcg
com.google.android.gms.common.internal.zze: android.content.Context zzdv
com.google.firebase.database.core.utilities.encoding.CustomClassMapper$BeanMapper: boolean warnOnUnknownProperties
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.internal.zaad zain
androidx.fragment.app.Fragment$AnimationInfo: int mEnterAnim
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus reduced
androidx.appcompat.widget.SearchView: java.lang.CharSequence mOldQueryText
androidx.collection.ArraySet: int[] mHashes
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact REMOVING
io.flutter.embedding.engine.loader.FlutterLoader: boolean initialized
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetTop
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistry mRegistry
androidx.window.embedding.ActivityStack: java.util.List activities
io.flutter.plugins.googlemaps.GoogleMapController: boolean buildingsEnabled
androidx.core.provider.FontRequest: int mCertificatesArray
com.baseflow.geolocator.location.ForegroundNotificationOptions: java.lang.String notificationTitle
androidx.appcompat.widget.AppCompatBackgroundHelper: int mBackgroundResId
androidx.appcompat.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
com.google.android.gms.common.api.Api: com.google.android.gms.common.api.Api$AbstractClientBuilder zaaw
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory mHostFragmentFactory
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate this$0
androidx.appcompat.widget.TooltipPopup: android.content.Context mContext
androidx.fragment.app.FragmentTransitionImpl$1: int val$numSharedElements
androidx.exifinterface.media.ExifInterface$ExifTag: int number
com.google.android.gms.common.api.internal.zabm: com.google.android.gms.common.api.internal.GoogleApiManager$zaa zaiq
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.BaseGmsClient$BaseOnConnectionFailedListener zzcl
androidx.core.R$id: int accessibility_custom_action_27
androidx.appcompat.widget.AbsActionBarView: boolean mEatingHover
androidx.fragment.app.Fragment$AnimationInfo: androidx.core.app.SharedElementCallback mEnterTransitionCallback
io.flutter.plugins.imagepicker.ImagePickerDelegate$2$1: io.flutter.plugins.imagepicker.ImagePickerDelegate$OnPathReadyListener val$listener
androidx.fragment.app.DefaultSpecialEffectsController$3: androidx.fragment.app.DefaultSpecialEffectsController this$0
androidx.window.embedding.SplitPairFilter: android.content.ComponentName primaryActivityName
com.google.zxing.client.android.BeepManager: java.lang.String TAG
com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState: com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState Authenticating
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: java.lang.String schedulerName
com.google.android.gms.location.LocationAvailability: com.google.android.gms.location.zzaj[] zzav
androidx.appcompat.widget.ThemeUtils: int[] PRESSED_STATE_SET
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper
androidx.activity.ComponentActivity$2$1: int val$requestCode
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables
androidx.appcompat.view.menu.MenuPopup: android.graphics.Rect mEpicenterBounds
androidx.appcompat.resources.R$styleable: int[] FontFamilyFont
com.baseflow.geolocator.MethodCallHandlerImpl: io.flutter.plugin.common.MethodChannel channel
androidx.appcompat.view.menu.ActionMenuItem: int mGroup
androidx.appcompat.widget.AppCompatSpinner: android.content.Context mPopupContext
androidx.appcompat.widget.ListPopupWindow: boolean mModal
androidx.fragment.app.Fragment$AnimationInfo: android.animation.Animator mAnimator
androidx.core.graphics.TypefaceCompat: androidx.collection.LruCache sTypefaceCache
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode mDeferredDestroyActionMode
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_EXPAND
com.google.firebase.database.core.Repo$4$1: com.google.firebase.database.core.Repo$4 this$1
kotlin.jvm.internal.ClassReference: java.util.HashMap primitiveWrapperFqNames
com.google.android.gms.common.api.internal.zzc: android.os.Bundle zzbh
androidx.appcompat.widget.AppCompatCompoundButtonHelper: boolean mHasButtonTint
io.flutter.view.AccessibilityBridge: int FOCUSABLE_FLAGS
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType CLICK
com.google.firebase.database.core.CompoundWrite$1: com.google.firebase.database.core.Path val$path
androidx.appcompat.app.AppCompatDelegateImpl: boolean mBaseContextAttached
com.google.android.gms.common.api.internal.GoogleApiManager$zac: com.google.android.gms.common.Feature zaji
androidx.fragment.app.FragmentState: android.os.Bundle mArguments
com.google.firebase.FirebaseOptions: java.lang.String databaseUrl
androidx.fragment.app.BackStackState: int[] mOps
com.google.firebase.database.tubesock.WebSocket: com.google.firebase.database.tubesock.WebSocket$State state
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: kotlin.coroutines.CoroutineContext $context
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: androidx.core.view.AccessibilityDelegateCompat mCompat
com.google.firebase.database.core.Repo$23: int val$reason
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: android.content.res.Resources$Theme mTheme
androidx.core.app.NotificationCompat$Action: boolean mAllowGeneratedReplies
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String label
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType RETURN_CODABAR_START_END
com.google.zxing.oned.rss.RSS14Reader: int[] OUTSIDE_ODD_WIDEST
androidx.fragment.app.DefaultSpecialEffectsController$4: androidx.fragment.app.DefaultSpecialEffectsController this$0
androidx.appcompat.widget.ToolbarWidgetWrapper$1: androidx.appcompat.view.menu.ActionMenuItem mNavItem
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_PROPERTY_VALUES_HOLDER
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE
androidx.core.R$id: int accessibility_custom_action_10
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityViewEmbedder accessibilityViewEmbedder
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel
com.google.zxing.datamatrix.decoder.Version: int totalCodewords
androidx.appcompat.app.AlertController: int mViewSpacingLeft
com.google.firebase.database.core.utilities.encoding.CustomClassMapper$BeanMapper: java.util.Map getters
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder: java.lang.reflect.Field sContentInsets
androidx.appcompat.widget.SearchView: java.lang.CharSequence mDefaultQueryHint
io.flutter.Log: int WARN
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: androidx.appcompat.view.menu.MenuItemWrapperICS this$0
com.google.zxing.qrcode.decoder.FormatInformation: byte dataMask
androidx.appcompat.widget.AppCompatImageHelper: android.widget.ImageView mView
com.google.firebase.database.core.view.View: com.google.firebase.database.core.view.ViewProcessor processor
androidx.appcompat.app.AlertController$4: android.view.View val$top
androidx.core.app.NotificationCompat$Builder: boolean mProgressIndeterminate
androidx.appcompat.widget.TooltipCompatHandler: java.lang.Runnable mHideRunnable
com.google.android.gms.common.internal.ClientSettings: java.lang.String zaol
com.google.common.util.concurrent.AbstractFuture$Waiter: com.google.common.util.concurrent.AbstractFuture$Waiter TOMBSTONE
androidx.collection.SimpleArrayMap: java.lang.Object[] mTwiceBaseCache
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean groupVisible
androidx.appcompat.widget.ActionBarOverlayLayout: android.animation.AnimatorListenerAdapter mTopAnimatorListener
androidx.core.view.ContentInfoCompat: int mSource
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat UPC_EAN_EXTENSION
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper mAutoSizeTextHelper
androidx.appcompat.app.AppCompatDelegateImpl$7: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.fragment.R$animator: int fragment_open_enter
androidx.appcompat.widget.SearchView: android.view.View mSubmitArea
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean mNeedsAutoSizeText
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides RIGHT
androidx.appcompat.R$styleable: int SearchView_submitBackground
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.FlutterJNI flutterJNI
androidx.fragment.app.FragmentTransition$4: androidx.fragment.app.FragmentTransitionImpl val$impl
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.internal.GoogleApiManager zaig
com.google.android.gms.signin.zab: com.google.android.gms.common.api.Api$AbstractClientBuilder zapv
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission always
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat EAN_13
androidx.appcompat.view.menu.CascadingMenuPopup: android.content.Context mContext
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType HEAVY_IMPACT
com.google.android.gms.common.internal.BaseGmsClient: int zzcj
io.flutter.plugin.mouse.MouseCursorPlugin$1: io.flutter.plugin.mouse.MouseCursorPlugin this$0
androidx.appcompat.view.menu.ActionMenuItem: android.graphics.drawable.Drawable mIconDrawable
androidx.core.view.ContentInfoCompat$Builder: int mFlags
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingTop
androidx.fragment.app.SpecialEffectsController$Operation: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact mLifecycleImpact
com.google.firebase.database.core.RepoInfo: java.lang.String internalHost
androidx.appcompat.widget.ListPopupWindow: android.widget.AdapterView$OnItemClickListener mItemClickListener
androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect2
com.google.firebase.database.core.SyncTree$5: com.google.firebase.database.core.Path val$path
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView
io.flutter.plugins.googlemaps.CirclesController: com.google.android.gms.maps.GoogleMap googleMap
com.google.firebase.database.core.Repo$21: com.google.firebase.database.core.Repo this$0
androidx.appcompat.widget.AppCompatTextHelper$2: android.widget.TextView val$textView
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLayoutInflaterFactory mLayoutInflaterFactory
com.google.android.gms.maps.zzac: com.google.android.gms.maps.OnMapReadyCallback zzbc
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration configuration
com.google.firebase.database.core.utilities.ImmutableTree: com.google.firebase.database.collection.ImmutableSortedMap EMPTY_CHILDREN
com.google.zxing.client.android.R$color: int zxing_possible_result_points
io.flutter.view.AccessibilityBridge$StringAttribute: int end
androidx.appcompat.R$styleable: int SearchView_android_maxWidth
androidx.core.provider.FontRequest: java.lang.String mProviderPackage
androidx.core.app.NotificationCompat$Builder: java.util.ArrayList mPeople
androidx.appcompat.R$drawable: int abc_btn_radio_material
com.google.android.gms.location.LocationSettingsStates: boolean zzbo
com.google.android.gms.base.R$string: int common_google_play_services_update_title
com.google.zxing.aztec.decoder.Decoder$Table: com.google.zxing.aztec.decoder.Decoder$Table DIGIT
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object countOrElement
androidx.appcompat.widget.SearchView$SearchAutoComplete: int mThreshold
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_READ_ONLY
androidx.core.provider.FontRequestWorker$4: java.lang.String val$id
com.baseflow.geolocator.location.LocationManagerClient: com.baseflow.geolocator.location.PositionChangedCallback positionChangedCallback
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_dither
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.ExtensionsWindowLayoutInfoAdapter INSTANCE
androidx.appcompat.R$styleable: int AppCompatImageView_srcCompat
androidx.core.content.FileProvider: java.io.File DEVICE_ROOT
net.touchcapture.qr.flutterqr.Shared: android.app.Activity activity
com.journeyapps.barcodescanner.camera.CameraInstance: java.lang.Runnable configure
androidx.core.provider.CallbackWithHandler: android.os.Handler mCallbackHandler
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge accessibilityBridge
androidx.activity.result.ActivityResultRegistry$3: int val$requestCode
androidx.fragment.app.FragmentAnim$AnimationOrAnimator: android.animation.Animator animator
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.Bitmap mSampleTile
androidx.core.os.CancellationSignal: androidx.core.os.CancellationSignal$OnCancelListener mOnCancelListener
kotlinx.coroutines.CancellableContinuationImplKt: kotlinx.coroutines.internal.Symbol RESUME_TOKEN
androidx.fragment.app.FragmentContainerView: java.util.ArrayList mDisappearingFragmentChildren
androidx.appcompat.view.menu.MenuAdapter: int mItemLayoutRes
androidx.core.R$styleable: int ColorStateListItem_android_alpha
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: char[] TEXT_SHIFT3_SET_CHARS
com.google.android.gms.maps.model.CircleOptions: float zzcr
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.util.concurrent.ConcurrentHashMap sTextViewMethodByNameCache
io.flutter.plugins.googlemaps.GoogleMapController$1: io.flutter.plugins.googlemaps.GoogleMapController this$0
com.google.firebase.components.Component$Builder: com.google.firebase.components.ComponentFactory factory
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.view.ActionMode$Callback mWrapped
androidx.activity.result.IntentSenderRequest$Builder: android.content.Intent mFillInIntent
com.journeyapps.barcodescanner.SourceData: int rotation
androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.plugin.common.BasicMessageChannel channel
com.google.firebase.database.OnDisconnect$2: com.google.firebase.database.core.utilities.Pair val$wrapped
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: java.lang.String $indent
androidx.collection.LruCache: int size
io.flutter.plugins.googlemaps.MarkersController: java.util.Map googleMapsMarkerIdToDartMarkerId
androidx.fragment.app.FragmentManagerState: java.util.ArrayList mLaunchedFragments
io.flutter.view.AccessibilityBridge: int SCROLLABLE_ACTIONS
io.flutter.embedding.android.KeyChannelResponder: int combiningCharacter
androidx.appcompat.widget.AppCompatSpinner: int[] ATTRS_ANDROID_SPINNERMODE
io.flutter.view.AccessibilityBridge: java.util.Map customAccessibilityActions
com.google.firebase.database.connection.HostInfo: java.lang.String namespace
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: androidx.core.content.res.ComplexColorCompat mFillColor
com.google.firebase.database.core.SparseSnapshotTree$2: com.google.firebase.database.core.SparseSnapshotTree this$0
androidx.fragment.app.FragmentManager$8: androidx.fragment.app.FragmentManager this$0
io.flutter.embedding.android.FlutterTextureView: android.view.Surface renderSurface
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher Default
io.flutter.plugins.imagepicker.ImagePickerPlugin: io.flutter.plugin.common.MethodChannel channel
androidx.appcompat.app.TwilightCalculator: androidx.appcompat.app.TwilightCalculator sInstance
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: int label
androidx.appcompat.R$id: int spacer
androidx.core.widget.NestedScrollView: boolean mIsBeingDragged
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews mContentView
io.flutter.plugin.editing.InputConnectionAdaptor: io.flutter.embedding.android.KeyboardManager keyboardManager
androidx.appcompat.R$styleable: int AppCompatSeekBar_tickMarkTint
kotlinx.coroutines.CompletedContinuation: java.lang.Object idempotentResume
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int mCachedRootAlpha
com.google.zxing.oned.rss.expanded.ExpandedRow: boolean wasReversed
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus precise
com.google.firebase.database.DatabaseReference$1: com.google.firebase.database.core.utilities.Pair val$wrapped
androidx.fragment.app.FragmentManager: java.util.Map mResultListeners
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind background
com.google.firebase.database.core.Repo: com.google.firebase.database.core.view.EventRaiser eventRaiser
androidx.appcompat.widget.AppCompatSpinner$2: androidx.appcompat.widget.AppCompatSpinner this$0
androidx.fragment.app.DefaultSpecialEffectsController$3: android.animation.Animator val$animator
com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode: com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode INFINITY
com.google.android.gms.common.internal.GetServiceRequest: java.lang.String zzy
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost
androidx.core.widget.AutoScrollHelper: android.view.animation.Interpolator mEdgeInterpolator
com.google.firebase.database.tubesock.WebSocketWriter$1: com.google.firebase.database.tubesock.WebSocketWriter this$0
androidx.lifecycle.LiveData: int mActiveCount
com.google.firebase.components.ComponentRuntime: java.util.List unprocessedRegistrarProviders
androidx.appcompat.app.AppCompatDelegateImpl$6: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.appcompat.widget.Toolbar: int mPopupTheme
androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest
io.flutter.plugin.platform.VirtualDisplayController$1: io.flutter.plugin.platform.VirtualDisplayController this$0
androidx.core.graphics.Insets: androidx.core.graphics.Insets NONE
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence[] mRemoteInputHistory
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mOriginalDelegate
com.google.android.gms.common.internal.ClientSettings$Builder: int zaoi
androidx.appcompat.app.ResourcesFlusher: java.lang.reflect.Field sThemedResourceCache_mUnthemedEntriesField
androidx.core.app.NotificationManagerCompat: android.content.Context mContext
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action CUSTOM_ACTION
com.google.firebase.platforminfo.DefaultUserAgentPublisher: java.lang.String javaSDKVersionUserAgent
com.google.android.gms.maps.model.Cap: java.lang.Float zzcn
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.BaseGmsClient$zze zzci
androidx.collection.ArraySet$1: androidx.collection.ArraySet this$0
androidx.activity.ComponentActivity$2$1: androidx.activity.ComponentActivity$2 this$1
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: int maxPoolSize
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion Companion
com.google.firebase.database.snapshot.NamedNode: com.google.firebase.database.snapshot.NamedNode MIN_NODE
androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8X
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: kotlinx.coroutines.JobSupport this$0
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: androidx.appcompat.graphics.drawable.DrawableContainer mOwner
com.google.zxing.oned.UPCEANReader: int[] START_END_PATTERN
androidx.appcompat.widget.ScrollingTabContainerView$TabView: androidx.appcompat.app.ActionBar$Tab mTab
com.google.android.gms.tasks.zzj: com.google.android.gms.tasks.zzi zzm
androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback
com.google.android.gms.common.internal.BaseGmsClient$zzb: com.google.android.gms.common.internal.BaseGmsClient zzct
com.google.zxing.pdf417.PDF417ResultMetadata: int checksum
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.internal.ICancelToken zadz
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.core.view.ViewPropertyAnimatorListener mListener
androidx.appcompat.widget.ForwardingListener$DisallowIntercept: androidx.appcompat.widget.ForwardingListener this$0
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews mHeadsUpContentView
androidx.appcompat.R$styleable: int MenuItem_android_checked
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String mPathName
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngine flutterEngine
com.google.android.gms.location.LocationRequest: int priority
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: int lastLeafDepth
androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.LifecycleEventObserver mLifecycleObserver
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
androidx.core.app.NotificationManagerCompat$SideChannelManager: java.util.Map mRecordMap
androidx.appcompat.widget.ToolbarWidgetWrapper$2: int val$visibility
com.google.android.gms.common.ConnectionResult: int zzh
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.TextInputPlugin: android.view.View mView
kotlinx.coroutines.scheduling.CoroutineScheduler: java.lang.String schedulerName
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean qwertyMode
androidx.exifinterface.media.ExifInterface$1: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream val$in
androidx.appcompat.R$styleable: int ViewStubCompat_android_layout
androidx.appcompat.widget.ToolbarWidgetWrapper: int mDefaultNavigationContentDescription
androidx.appcompat.R$styleable: int TextAppearance_textAllCaps
androidx.core.widget.NestedScrollView: int[] mScrollConsumed
com.journeyapps.barcodescanner.camera.AutoFocusManager: android.os.Handler$Callback focusHandlerCallback
com.google.android.gms.common.api.internal.zacg: com.google.android.gms.signin.internal.zak zagu
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: java.lang.reflect.Method mEnsureImeVisible
com.google.zxing.pdf417.decoder.ec.ModulusGF: int[] logTable
com.google.firebase.database.core.Repo$8: long val$writeId
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.renderer.FlutterRenderer renderer
androidx.core.content.res.ResourcesCompat: java.lang.Object sColorStateCacheLock
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_TOGGLED
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.app.LoaderManagerImpl$LoaderObserver mObserver
androidx.appcompat.widget.SearchView$SearchAutoComplete: androidx.appcompat.widget.SearchView mSearchView
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL
io.flutter.plugins.imagepicker.ImagePickerDelegate: io.flutter.plugin.common.MethodCall methodCall
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: boolean mStarted
androidx.fragment.app.FragmentManager: java.util.ArrayList mPostponedTransactions
androidx.fragment.app.Fragment$AnimationInfo: java.util.ArrayList mSharedElementTargetNames
com.google.zxing.aztec.decoder.Decoder: java.lang.String[] DIGIT_TABLE
com.google.firebase.database.core.Repo$TransactionStatus: com.google.firebase.database.core.Repo$TransactionStatus COMPLETED
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int overrideId
com.google.firebase.database.core.view.EventRaiser: com.google.firebase.database.logging.LogWrapper logger
com.google.android.gms.common.api.Status: android.app.PendingIntent zzi
androidx.appcompat.widget.ListPopupWindow: int mDropDownWindowLayoutType
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.ViewModelStore mViewModelStore
com.google.android.gms.common.api.internal.BasePendingResult: java.util.concurrent.CountDownLatch zads
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$Result pendingFrameworkRestorationChannelRequest
androidx.core.text.PrecomputedTextCompat$Params$Builder: int mHyphenationFrequency
androidx.appcompat.app.AppCompatDelegateImpl: boolean mClosingActionMenu
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.BinaryMessenger$TaskQueue taskQueue
androidx.appcompat.widget.AppCompatTextHelper$2: android.graphics.Typeface val$typeface
androidx.core.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker
androidx.appcompat.widget.ActionMenuView: boolean mReserveOverflow
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.BinaryMessenger messenger
com.google.android.gms.common.api.Api: com.google.android.gms.common.api.Api$zaa zaax
androidx.exifinterface.media.ExifInterface: int mOrfMakerNoteOffset
androidx.collection.LruCache: int hitCount
com.google.firebase.database.tubesock.MessageBuilderFactory$TextBuilder: java.lang.ThreadLocal localEncoder
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight
androidx.appcompat.widget.AppCompatProgressBarHelper: android.widget.ProgressBar mView
com.google.android.gms.common.internal.BaseGmsClient: long zzby
androidx.window.layout.SidecarCompat: java.util.Map windowListenerRegisteredContexts
com.journeyapps.barcodescanner.RotationListener: android.view.WindowManager windowManager
com.google.android.gms.common.api.GoogleApiActivity: int zabr
androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.TaskExecutor mDelegate
androidx.appcompat.R$attr: int actionBarTabStyle
androidx.appcompat.view.menu.StandardMenuPopup: int mContentWidth
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: java.lang.String encodedName
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_WAITING_CHILDREN
io.flutter.plugin.editing.FlutterTextUtils: io.flutter.embedding.engine.FlutterJNI flutterJNI
com.journeyapps.barcodescanner.camera.DisplayConfiguration: int rotation
androidx.appcompat.R$styleable: int MenuItem_android_checkable
androidx.appcompat.resources.R$styleable: int[] ColorStateListItem
com.google.zxing.common.GlobalHistogramBinarizer: byte[] luminances
androidx.appcompat.R$styleable: int Toolbar_logoDescription
androidx.appcompat.view.menu.MenuItemImpl: int mShowAsAction
com.google.firebase.database.core.utilities.Tree$1: com.google.firebase.database.core.utilities.Tree this$0
com.google.zxing.oned.ITFReader: int[] DEFAULT_ALLOWED_LENGTHS
com.lyokone.location.FlutterLocation: long fastestUpdateIntervalMilliseconds
androidx.appcompat.app.AlertController$AlertParams: android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener
io.flutter.view.AccessibilityBridge$SemanticsNode: float scrollPosition
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode TERMINATOR
androidx.appcompat.view.menu.StandardMenuPopup: android.view.View mShownAnchorView
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action DECREASE
androidx.appcompat.widget.ScrollingTabContainerView: android.widget.Spinner mTabSpinner
androidx.fragment.app.FragmentTransaction: java.lang.CharSequence mBreadCrumbShortTitleText
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask DATA_MASK_010
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.String itemListenerMethodName
androidx.appcompat.widget.ListPopupWindow: boolean mDropDownVerticalOffsetSet
io.flutter.plugins.googlemaps.PolygonController: float density
androidx.core.view.DisplayCutoutCompat: java.lang.Object mDisplayCutout
com.google.firebase.database.connection.PersistentConnectionImpl$4: boolean val$restoreStateAfterComplete
androidx.core.provider.FontRequestWorker$1: java.lang.String val$id
androidx.activity.ComponentActivity: androidx.activity.contextaware.ContextAwareHelper mContextAwareHelper
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_DOWN
com.google.firebase.database.connection.util.StringListReader: int stringListPos
io.flutter.embedding.android.FlutterSurfaceView$2: io.flutter.embedding.android.FlutterSurfaceView this$0
io.flutter.plugins.imagepicker.ImagePickerDelegate: io.flutter.plugins.imagepicker.ImageResizer imageResizer
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: double logicalWidth
androidx.appcompat.app.AppCompatDelegateImpl: android.view.MenuInflater mMenuInflater
com.google.firebase.database.core.Repo$TransactionData: long order
androidx.appcompat.R$styleable: int ActionBar_logo
com.journeyapps.barcodescanner.camera.CameraInstance: com.journeyapps.barcodescanner.camera.CameraSurface surface
androidx.interpolator.view.animation.LookupTableInterpolator: float mStepSize
androidx.core.view.ViewPropertyAnimatorCompat$2: androidx.core.view.ViewPropertyAnimatorUpdateListener val$listener
kotlin.ranges.IntProgressionIterator: int next
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
androidx.window.layout.SidecarWindowBackend: boolean DEBUG
io.flutter.plugins.googlemaps.PolygonsController: java.util.Map googleMapsPolygonIdToDartPolygonId
io.flutter.plugin.editing.TextInputPlugin: boolean mRestartInputPending
androidx.appcompat.widget.ListPopupWindow: int mDropDownWidth
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mNext
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager this$1
kotlinx.coroutines.YieldContext: boolean dispatcherWasUnconfined
androidx.appcompat.widget.Toolbar$1: androidx.appcompat.widget.Toolbar this$0
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel
io.flutter.embedding.android.FlutterImageView: boolean isAttachedToFlutterRenderer
androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableItem
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes activityMissing
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.Fragment: android.view.View mView
androidx.appcompat.app.AlertController$AlertParams: int mViewLayoutResId
com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode: com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode AUTO
androidx.exifinterface.media.ExifInterface: int[] BITS_PER_SAMPLE_RGB
com.google.firebase.database.core.CompoundWrite$1: com.google.firebase.database.core.CompoundWrite this$0
com.google.firebase.database.core.SyncTree$16: com.google.firebase.database.core.operation.Operation val$operation
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules
androidx.core.widget.PopupWindowCompat: boolean sOverlapAnchorFieldAttempted
androidx.appcompat.view.menu.BaseMenuPresenter: android.view.LayoutInflater mInflater
androidx.core.view.ViewPropertyAnimatorCompat: int mOldLayerType
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderPlatformThread: io.flutter.plugins.pathprovider.PathProviderPlugin this$0
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.reflect.Constructor sFontFamilyCtor
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder: java.lang.reflect.Field sStableInsets
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither
com.google.firebase.database.DatabaseReference$4: boolean val$fireLocalEvents
androidx.appcompat.R$styleable: int ViewStubCompat_android_id
androidx.core.text.PrecomputedTextCompat$Params: int mBreakStrategy
androidx.appcompat.app.LayoutIncludeDetector: java.util.Deque mXmlParserStack
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator
androidx.appcompat.R$styleable: int SearchView_suggestionRowLayout
com.journeyapps.barcodescanner.ViewfinderView: java.util.List possibleResultPoints
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
io.flutter.Log: int DEBUG
androidx.core.widget.NestedScrollView: boolean mIsLayoutDirty
io.flutter.embedding.engine.FlutterOverlaySurface: int id
com.google.android.gms.location.LocationServices: com.google.android.gms.location.FusedLocationProviderApi FusedLocationApi
androidx.appcompat.R$attr: int actionBarTheme
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_CAMERA_SETTINGS_TAGS
androidx.fragment.app.DefaultSpecialEffectsController$2: androidx.fragment.app.DefaultSpecialEffectsController this$0
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer systemNavigationBarDividerColor
androidx.lifecycle.LifecycleRegistry: boolean mNewEventOccurred
androidx.core.R$styleable: int FontFamily_fontProviderSystemFontFamily
com.google.firebase.database.core.SyncTree$1: boolean val$visible
com.google.firebase.database.core.view.Change: com.google.firebase.database.snapshot.ChildKey childKey
com.google.firebase.database.snapshot.CompoundHash: java.util.List hashes
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mHasXOffset
androidx.fragment.app.SpecialEffectsController$Operation: java.util.HashSet mSpecialEffectsSignals
androidx.arch.core.executor.DefaultTaskExecutor: java.lang.Object mLock
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: java.util.concurrent.atomic.AtomicBoolean hasEnded
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.lyokone.location.FlutterLocation: io.flutter.plugin.common.MethodChannel$Result requestServiceResult
androidx.window.R$attr: int placeholderActivityName
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback: androidx.appcompat.widget.ActionMenuPresenter this$0
androidx.exifinterface.media.ExifInterface$ExifTag: int primaryFormat
com.google.zxing.common.DecoderResult: java.lang.String ecLevel
com.google.zxing.qrcode.decoder.FormatInformation: int[][] FORMAT_INFO_DECODE_LOOKUP
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup mPopup
com.google.firebase.database.tubesock.WebSocket$State: com.google.firebase.database.tubesock.WebSocket$State NONE
com.google.firebase.database.core.Context: java.util.List loggedComponents
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.editing.TextInputPlugin textInputPlugin
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost
androidx.appcompat.widget.AppCompatSpinner: boolean mPopupSet
com.google.android.gms.internal.location.zzav: com.google.android.gms.location.LocationAvailability zzdc
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean zzar
kotlinx.coroutines.EventLoop: boolean shared
com.google.zxing.common.PerspectiveTransform: float a32
com.google.firebase.database.android.AndroidPlatform$1: com.google.firebase.database.android.AndroidPlatform this$0
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean mMutated
androidx.appcompat.R$layout: int abc_cascading_menu_item_layout
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_GPS_TAGS
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Throwable cause
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getRecordSourceNodeId
androidx.appcompat.widget.AppCompatTextHelper: int mFontWeight
androidx.appcompat.R$styleable: int TextAppearance_android_textStyle
androidx.appcompat.widget.TintContextWrapper: java.util.ArrayList sCache
androidx.appcompat.R$styleable: int Spinner_android_dropDownWidth
com.google.zxing.oned.rss.expanded.RSSExpandedReader: int[][] FINDER_PATTERNS
com.google.firebase.components.EventBus: java.util.concurrent.Executor defaultExecutor
io.flutter.plugins.googlemaps.MarkersController: com.google.android.gms.maps.GoogleMap googleMap
com.baseflow.geolocator.GeolocatorPlugin: com.baseflow.geolocator.StreamHandlerImpl streamHandler
androidx.collection.MapCollections$MapIterator: boolean mEntryValid
androidx.core.provider.RequestExecutor$DefaultThreadFactory: int mPriority
com.google.firebase.database.core.Repo$12: java.util.Map val$newChildren
androidx.appcompat.view.menu.MenuBuilder: boolean mOverrideVisibleItems
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.content.res.ColorStateList mTint
androidx.core.R$id: int accessibility_custom_action_24
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: java.lang.ref.WeakReference mCustomView
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] $VALUES
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness light
androidx.appcompat.view.SupportMenuInflater: java.lang.Object mRealOwner
androidx.appcompat.app.AlertController: int mViewLayoutResId
io.flutter.plugin.platform.PlatformPlugin: int mEnabledOverlays
androidx.appcompat.app.AlertController$AlertParams: boolean mIsMultiChoice
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: android.graphics.Rect viewBounds
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: java.lang.String text
com.journeyapps.barcodescanner.camera.AutoFocusManager: int MESSAGE_FOCUS
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback
com.google.firebase.database.core.Repo$1: com.google.firebase.database.core.Repo this$0
io.flutter.plugin.editing.TextInputPlugin: android.view.autofill.AutofillManager afm
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
com.google.firebase.database.core.SyncTree$3: com.google.firebase.database.core.utilities.Clock val$serverClock
androidx.appcompat.R$id: int search_close_btn
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization WORDS
androidx.appcompat.R$attr: int colorControlNormal
androidx.core.view.ContentInfoCompat: android.net.Uri mLinkUri
androidx.appcompat.app.AlertController$5: android.view.View val$bottom
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState POSTURE_HALF_OPENED
com.google.android.gms.common.internal.ClientSettings$Builder: boolean zaoq
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicReferenceArray workers
com.google.android.gms.signin.SignInOptions: java.lang.String zaso
androidx.fragment.app.DefaultSpecialEffectsController$9: androidx.fragment.app.DefaultSpecialEffectsController this$0
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread: int mPriority
androidx.core.view.WindowInsetsCompat$BuilderImpl20: boolean sConstructorFetched
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: com.google.firebase.database.snapshot.CompoundHash$SplitStrategy splitStrategy
com.google.android.gms.common.api.GoogleApi$Settings: android.os.Looper zabq
com.google.android.gms.dynamite.DynamiteModule: java.lang.ThreadLocal zzik
com.google.firebase.database.connection.PersistentConnectionImpl: com.google.firebase.database.connection.ConnectionTokenProvider appCheckTokenProvider
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag NAMES_ROUTE
com.google.firebase.database.connection.util.RetryHelper$1: com.google.firebase.database.connection.util.RetryHelper this$0
androidx.fragment.app.DefaultSpecialEffectsController$5: android.view.ViewGroup val$container
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String zao
androidx.appcompat.widget.Toolbar: int mTitleMarginTop
androidx.appcompat.app.AlertController: int mAlertDialogLayout
androidx.appcompat.R$styleable: int ActionBar_backgroundStacked
androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonNeutralIcon
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int selectionStart
androidx.fragment.app.FragmentTransaction: int mPopEnterAnim
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String[] hints
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableEndTint
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
io.flutter.plugins.pathprovider.PathProviderPlugin$UiThreadExecutor: android.os.Handler handler
com.google.zxing.datamatrix.decoder.BitMatrixParser: com.google.zxing.datamatrix.decoder.Version version
androidx.fragment.app.FragmentManager$PopBackStackState: int mId
com.google.firebase.database.collection.LLRBValueNode: java.lang.Object key
androidx.appcompat.R$styleable: int SearchView_voiceIcon
androidx.appcompat.R$drawable: int abc_ratingbar_indicator_material
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_UP
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem$OnMenuItemClickListener mClickListener
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback: androidx.appcompat.widget.ActionMenuPresenter this$0
io.flutter.embedding.android.KeyboardManager: java.util.HashSet redispatchedEvents
com.google.firebase.database.core.view.filter.LimitedFilter: int limit
androidx.core.content.res.ColorStateListInflaterCompat: java.lang.ThreadLocal sTempTypedValue
androidx.fragment.app.FragmentAnim$2: androidx.core.os.CancellationSignal val$signal
com.google.firebase.database.core.Repo$TransactionStatus: com.google.firebase.database.core.Repo$TransactionStatus RUN
com.google.android.gms.maps.model.Marker: com.google.android.gms.internal.maps.zzt zzdm
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.KeyboardManager keyboardManager
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: android.widget.ListAdapter mListAdapter
com.google.android.gms.location.LocationResult: java.util.List zzbc
androidx.fragment.app.FragmentTransitionImpl$2: java.util.Map val$nameOverrides
androidx.fragment.app.FragmentTransaction$Op: int mPopExitAnim
com.google.firebase.database.core.view.EventRaiser$1: java.util.ArrayList val$eventsClone
kotlin.jvm.internal.Reflection: kotlin.jvm.internal.ReflectionFactory factory
com.google.android.gms.base.R$drawable: int common_full_open_on_phone
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: java.lang.Object mSharedElementTransition
com.google.firebase.database.core.SyncTree$6: com.google.firebase.database.core.SyncTree this$0
androidx.lifecycle.FullLifecycleObserverAdapter: androidx.lifecycle.FullLifecycleObserver mFullLifecycleObserver
com.google.android.gms.maps.zzy: com.google.android.gms.maps.GoogleMap$OnMapClickListener zzag
androidx.appcompat.view.menu.StandardMenuPopup$1: androidx.appcompat.view.menu.StandardMenuPopup this$0
androidx.core.app.NotificationCompatBuilder: int mGroupAlertBehavior
com.google.android.gms.maps.internal.zzbz: android.content.Context zzck
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingPut: boolean sent
com.journeyapps.barcodescanner.SourceData: int imageFormat
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl SUPPORT_IMPL
com.google.firebase.FirebaseApp$UiExecutor: android.os.Handler HANDLER
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: java.util.Map zaiw
kotlin.Pair: java.lang.Object first
com.google.zxing.common.PerspectiveTransform: float a11
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: androidx.appcompat.app.WindowDecorActionBar this$0
androidx.lifecycle.runtime.R$id: int view_tree_lifecycle_owner
androidx.core.widget.CompoundButtonCompat: boolean sButtonDrawableFieldFetched
androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanReturnDifferentContext
com.google.zxing.oned.EANManufacturerOrgSupport: java.util.List countryIdentifiers
androidx.multidex.MultiDex$V14$JBMR2ElementConstructor: java.lang.reflect.Constructor elementConstructor
com.google.android.gms.maps.model.Circle: com.google.android.gms.internal.maps.zzh zzco
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI Cp1256
com.google.firebase.database.logging.DefaultLogger: com.google.firebase.database.logging.Logger$Level minLevel
androidx.exifinterface.media.ExifInterface: java.util.List FLIPPED_ROTATION_ORDER
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.plugins.googlemaps.PolylinesController: float density
com.google.android.gms.tasks.zzd: com.google.android.gms.tasks.zzc zzh
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.widget.ForwardingListener mForwardingListener
androidx.appcompat.view.menu.BaseMenuPresenter: int mItemLayoutRes
androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$AtomicHelper ATOMIC_HELPER
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: java.lang.Class[] PARAM_TYPES
kotlinx.coroutines.android.HandlerDispatcherKt: kotlinx.coroutines.android.HandlerDispatcher Main
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMinor
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterEngineFromHost
com.google.firebase.database.connection.util.RetryHelper$Builder: long retryMaxDelay
androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipPopup mPopup
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow DROP_OLDEST
androidx.appcompat.R$drawable: int abc_popup_background_mtrl_mult
com.google.firebase.database.core.operation.Operation$OperationType: com.google.firebase.database.core.operation.Operation$OperationType Overwrite
com.google.android.gms.internal.location.zzm: com.google.android.gms.location.zzj zzce
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.ErrorDialogFragment: android.app.Dialog mDialog
kotlin.SynchronizedLazyImpl: kotlin.jvm.functions.Function0 initializer
com.baseflow.geolocator.location.FusedLocationClient$1: android.content.Context val$context
com.journeyapps.barcodescanner.camera.CameraManager: int rotationDegrees
com.google.common.base.MoreObjects$ToStringHelper: boolean omitNullValues
androidx.appcompat.view.menu.ListMenuPresenter: int mItemIndexOffset
com.google.firebase.database.core.SyncTree$7: com.google.firebase.database.core.SyncTree this$0
androidx.core.widget.AutoScrollHelper: int DEFAULT_ACTIVATION_DELAY
androidx.interpolator.view.animation.FastOutLinearInInterpolator: float[] VALUES
com.google.firebase.database.core.view.QueryParams: com.google.firebase.database.snapshot.Node indexEndValue
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
com.google.android.gms.common.api.internal.zace: com.google.android.gms.common.api.Api$AbstractClientBuilder zakm
androidx.core.R$id: int accessibility_custom_action_8
com.google.common.util.concurrent.Futures$CallbackListener: java.util.concurrent.Future future
com.google.firebase.database.MutableData: com.google.firebase.database.core.Path prefixPath
com.google.firebase.platforminfo.AutoValue_LibraryVersion: java.lang.String libraryName
com.google.android.gms.common.ConnectionResult: int zzg
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: int label
io.flutter.plugins.imagepicker.CameraDevice: io.flutter.plugins.imagepicker.CameraDevice FRONT
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String pathToBundle
androidx.appcompat.view.menu.ActionMenuItem: char mShortcutAlphabeticChar
com.baseflow.geolocator.location.LocationManagerClient: boolean isListening
com.google.android.gms.common.api.Api: com.google.android.gms.common.api.Api$zab zaaz
androidx.appcompat.widget.SearchView: java.util.WeakHashMap mOutsideDrawablesCache
com.google.android.gms.location.LocationSettingsStates: boolean zzbq
io.flutter.view.VsyncWaiter$1$1: long val$cookie
kotlinx.coroutines.CoroutineId: kotlinx.coroutines.CoroutineId$Key Key
com.google.firebase.database.tubesock.WebSocket$3: int[] $SwitchMap$com$google$firebase$database$tubesock$WebSocket$State
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: char[] C40_BASIC_SET_CHARS
kotlin.jvm.internal.PackageReference: java.lang.Class jClass
kotlinx.coroutines.InvokeOnCancelling: int _invoked
com.google.android.gms.internal.base.zad: java.lang.ClassLoader zad
androidx.appcompat.app.AlertController$AlertParams: int mCheckedItem
com.google.firebase.database.connection.PersistentConnectionImpl$6: com.google.firebase.database.connection.PersistentConnectionImpl this$0
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType POSSIBLE_FORMATS
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.Size previewSize
com.google.firebase.database.connection.util.RetryHelper: com.google.firebase.database.logging.LogWrapper logger
androidx.core.app.NotificationManagerCompat: androidx.core.app.NotificationManagerCompat$SideChannelManager sSideChannelManager
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState mAnimatedVectorState
androidx.window.R$styleable: int ActivityFilter_activityAction
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: long idleWorkerKeepAliveNs
com.google.android.gms.common.api.internal.ApiKey: com.google.android.gms.common.api.Api$ApiOptions zabj
io.flutter.embedding.engine.loader.FlutterLoader: java.util.concurrent.ExecutorService executorService
com.google.firebase.components.Component: java.util.Set publishedEvents
io.flutter.embedding.engine.dart.DartMessenger: java.util.Map pendingReplies
com.journeyapps.barcodescanner.camera.CameraSettings: com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode focusMode
androidx.core.app.NotificationCompat$Builder: boolean mSilent
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.BinaryMessenger messenger
androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment mFragment
com.journeyapps.barcodescanner.BarcodeView: android.os.Handler resultHandler
com.baseflow.geolocator.GeolocatorLocationService: com.baseflow.geolocator.location.LocationClient locationClient
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState mLastKnownFrameworkTextEditingState
androidx.collection.ArraySet: int[] INT
io.flutter.embedding.android.FlutterSplashView$2: io.flutter.embedding.android.FlutterSplashView this$0
androidx.appcompat.R$id: int custom
androidx.window.embedding.SplitPlaceholderRule: java.util.Set filters
androidx.appcompat.view.menu.StandardMenuPopup: android.view.View mAnchorView
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mInvalidatePanelMenuRunnable
com.google.firebase.FirebaseOptions$Builder: java.lang.String projectId
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$1: io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry this$1
androidx.appcompat.R$drawable: int abc_textfield_activated_mtrl_alpha
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_LIVE_REGION
io.flutter.view.AccessibilityBridge$StringAttribute: int start
androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipCompatHandler sPendingHandler
kotlinx.coroutines.channels.Channel: kotlinx.coroutines.channels.Channel$Factory Factory
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: android.graphics.Rect mVisibleRect
androidx.fragment.app.FragmentManager: java.util.ArrayList mPendingActions
androidx.appcompat.view.menu.StandardMenuPopup: int ITEM_LAYOUT
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_TAG
com.google.firebase.database.tubesock.WebSocketHandshake: java.lang.String protocol
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_COLOR_CONTROL_NORMAL
io.flutter.plugin.editing.TextInputPlugin: io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel
io.flutter.plugins.firebase.database.EventStreamHandler: com.google.firebase.database.Query query
androidx.appcompat.R$string: int abc_menu_sym_shortcut_label
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence mTitle
com.google.firebase.database.core.Repo$5$1: com.google.firebase.database.core.SyncTree$CompletionListener val$onListenComplete
androidx.appcompat.view.menu.StandardMenuPopup: int mDropDownGravity
com.google.android.gms.signin.SignInOptions: java.lang.Long zasu
io.flutter.view.AccessibilityBridge$SemanticsNode: float bottom
androidx.appcompat.widget.ListPopupWindow: android.view.View mDropDownAnchorView
androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor sIOThreadExecutor
androidx.fragment.app.Fragment: boolean mDetached
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableTopTint
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: io.flutter.plugin.common.BasicMessageChannel$MessageHandler handler
androidx.appcompat.widget.AppCompatBackgroundHelper: androidx.appcompat.widget.TintInfo mInternalBackgroundTint
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.String errorHint
androidx.appcompat.app.AlertController$AlertParams: boolean[] mCheckedItems
androidx.exifinterface.media.ExifInterface: byte[] WEBP_SIGNATURE_1
androidx.appcompat.widget.TooltipCompatHandler: boolean mFromTouch
io.flutter.plugin.editing.TextEditingDelta: int newSelectionEnd
androidx.fragment.app.DefaultSpecialEffectsController$2: androidx.fragment.app.SpecialEffectsController$Operation val$operation
com.journeyapps.barcodescanner.BarcodeView: com.journeyapps.barcodescanner.DecoderFactory decoderFactory
kotlinx.coroutines.scheduling.DefaultScheduler: kotlinx.coroutines.CoroutineDispatcher IO
com.journeyapps.barcodescanner.camera.CameraThread: android.os.Handler handler
androidx.lifecycle.ClassesInfoCache: java.util.Map mHasLifecycleMethods
androidx.activity.result.ActivityResultRegistry$LifecycleContainer: java.util.ArrayList mObservers
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_baselineAligned
com.google.android.gms.tasks.zzl: com.google.android.gms.tasks.zzk zzo
androidx.appcompat.R$styleable: int Spinner_popupTheme
androidx.exifinterface.media.ExifInterface: byte[] PNG_SIGNATURE
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl mItemData
com.google.zxing.oned.Code93Reader: java.lang.StringBuilder decodeRowResult
com.google.firebase.database.core.persistence.DefaultPersistenceManager: long serverCacheUpdatesSinceLastPruneCheck
androidx.appcompat.widget.ToolbarWidgetWrapper: int mDisplayOpts
com.google.firebase.database.core.utilities.ImmutableTree$2: java.util.List val$list
com.google.android.gms.common.internal.ClientSettings: int zaoi
com.google.firebase.database.core.SyncTree$14: com.google.firebase.database.core.SyncTree this$0
io.flutter.plugin.platform.PlatformPlugin$1: io.flutter.plugin.platform.PlatformPlugin this$0
androidx.appcompat.view.menu.CascadingMenuPopup: int mLastPosition
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: int mRecreatingHashCode
androidx.fragment.app.FragmentState: int mContainerId
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type VD_PLATFORM_VIEW
io.flutter.plugin.editing.ListenableEditingState: java.lang.String mToStringCache
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] $VALUES
androidx.appcompat.widget.Toolbar: int mTitleTextAppearance
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.concurrent.locks.ReentrantLock lock
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mTranslateY
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: io.flutter.embedding.android.KeyboardManager this$0
com.google.firebase.database.core.view.QuerySpec: com.google.firebase.database.core.view.QueryParams params
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: android.graphics.Rect mSlopBounds
androidx.appcompat.R$drawable: int abc_textfield_search_material
io.flutter.plugins.firebase.database.FlutterFirebaseDatabaseException: java.util.Map additionalData
androidx.appcompat.app.ResourcesFlusher: boolean sResourcesImplFieldFetched
androidx.appcompat.app.WindowDecorActionBar: boolean mHideOnContentScroll
com.google.firebase.database.core.Repo$TransactionData: com.google.firebase.database.core.Repo$TransactionStatus status
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_TEXT_FIELD
com.google.android.gms.maps.model.LatLngBounds: com.google.android.gms.maps.model.LatLng northeast
androidx.core.app.NotificationCompat$Builder: boolean mLocalOnly
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode: com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode ALPHA_SHIFT
androidx.window.R$attr: int finishSecondaryWithPrimary
com.google.firebase.database.core.Context: com.google.firebase.database.core.Platform platform
com.google.firebase.database.core.SyncTree$11: com.google.firebase.database.core.SyncTree this$0
com.google.android.gms.maps.model.MarkerOptions: java.lang.String zzdn
com.google.firebase.database.connection.ConnectionContext: java.lang.String applicationId
io.flutter.FlutterInjector: io.flutter.embedding.engine.FlutterJNI$Factory flutterJniFactory
androidx.appcompat.app.AlertController$RecycleListView: int mPaddingBottomNoButtons
com.google.android.gms.common.api.Status: int zzh
com.lyokone.location.NotificationOptions: java.lang.Integer color
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.String itemActionViewClassName
com.baseflow.geolocator.StreamHandlerImpl: com.baseflow.geolocator.permission.PermissionManager permissionManager
androidx.collection.MapCollections$MapIterator: int mIndex
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State mState
androidx.appcompat.app.AlertController: java.lang.CharSequence mButtonNeutralText
androidx.appcompat.app.AlertController$AlertParams$1: androidx.appcompat.app.AlertController$RecycleListView val$listView
androidx.appcompat.R$styleable: int MenuItem_numericModifiers
com.google.firebase.database.core.SyncTree$3: com.google.firebase.database.core.SyncTree this$0
kotlinx.coroutines.scheduling.TasksKt: int BLOCKING_DEFAULT_PARALLELISM
com.google.firebase.database.connection.util.RetryHelper: double jitterFactor
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: android.os.PowerManager mPowerManager
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat mNodeInfoCompat
com.google.firebase.database.core.Repo$11: com.google.firebase.database.DatabaseReference$CompletionListener val$onComplete
io.flutter.embedding.engine.dart.DartExecutor: boolean isApplicationRunning
androidx.core.os.CancellationSignal: java.lang.Object mCancellationSignalObj
kotlin.random.FallbackThreadLocalRandom: kotlin.random.FallbackThreadLocalRandom$implStorage$1 implStorage
androidx.fragment.app.BackStackState: java.util.ArrayList mFragmentWhos
com.google.android.gms.internal.location.zzk: com.google.android.gms.internal.location.zzbj zzcb
com.google.android.gms.maps.MapView: com.google.android.gms.maps.MapView$zzb zzbg
androidx.core.R$attr: int alpha
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: android.view.View mDelegateView
com.google.android.gms.base.R$string: int common_google_play_services_enable_text
com.google.zxing.client.android.R$styleable: int zxing_view_zxing_scanner_layout
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence mTitleCondensed
kotlinx.coroutines.internal.ContextScope: kotlin.coroutines.CoroutineContext coroutineContext
com.google.firebase.database.core.SyncTree$6: java.util.Map val$changedChildren
androidx.core.app.TaskStackBuilder: java.util.ArrayList mIntents
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_3
kotlin.jvm.internal.FunctionReference: int arity
com.google.zxing.qrcode.QRCodeReader: com.google.zxing.qrcode.decoder.Decoder decoder
androidx.appcompat.R$styleable: int MenuItem_android_title
androidx.fragment.app.DialogFragment: android.content.DialogInterface$OnCancelListener mOnCancelListener
com.baseflow.geolocator.location.ForegroundNotificationOptions: java.lang.String notificationText
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback mPopupCallback
com.google.android.gms.common.api.internal.GoogleApiManager$zab: com.google.android.gms.common.api.internal.ApiKey zaft
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure
androidx.appcompat.R$layout: int abc_screen_simple_overlay_action_mode
com.google.firebase.database.core.Repo: com.google.firebase.database.core.SyncTree serverSyncTree
com.google.firebase.database.core.utilities.ParsedUrl: com.google.firebase.database.core.Path path
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.view.WindowInsetsCompat CONSUMED
androidx.appcompat.graphics.drawable.DrawableContainer: long mEnterAnimationEnd
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
kotlinx.coroutines.android.HandlerContext: android.os.Handler handler
io.flutter.embedding.android.FlutterSplashView: android.os.Bundle splashScreenState
com.google.android.gms.signin.SignInOptions: java.lang.String zasr
com.google.firebase.database.core.view.DataEvent: com.google.firebase.database.core.EventRegistration eventRegistration
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mPositiveButtonIcon
io.flutter.embedding.engine.dart.DartExecutor$1: io.flutter.embedding.engine.dart.DartExecutor this$0
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: android.app.Activity $activity
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Object rawPointerCoords
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantState
com.google.firebase.database.tubesock.MessageBuilderFactory$TextBuilder: java.lang.StringBuilder builder
androidx.appcompat.R$layout: int abc_popup_menu_item_layout
androidx.appcompat.widget.ViewUtils: java.lang.reflect.Method sComputeFitSystemWindowsMethod
com.journeyapps.barcodescanner.CaptureManager: boolean askedPermission
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableTint
io.flutter.plugins.googlemaps.GoogleMapController: int id
io.flutter.embedding.android.FlutterSplashView$3: io.flutter.embedding.android.FlutterSplashView this$0
androidx.appcompat.R$styleable: int AppCompatTheme_windowActionBar
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager
com.google.firebase.database.android.SqlPersistenceStorageEngine$2: java.util.List val$rowsToResaveAccumulator
com.baseflow.geolocator.MethodCallHandlerImpl: com.baseflow.geolocator.GeolocatorLocationService foregroundLocationService
androidx.appcompat.R$drawable: int abc_ic_menu_cut_mtrl_alpha
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: kotlinx.coroutines.internal.LockFreeLinkedListNode $node
androidx.window.embedding.SplitInfo: float splitRatio
com.google.firebase.database.connection.PersistentConnectionImpl$5: com.google.firebase.database.connection.RequestResultCallback val$onComplete
kotlin.Result$Failure: java.lang.Throwable exception
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate mView
androidx.core.R$id: int accessibility_custom_action_13
kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever INSTANCE
androidx.fragment.app.BackStackState: int[] mCurrentMaxLifecycleStates
androidx.appcompat.app.AlertController$AlertParams: android.content.Context mContext
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable$Callback mCallback
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int mTotalDuration
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
androidx.appcompat.view.menu.ListMenuItemView: android.widget.CheckBox mCheckBox
androidx.appcompat.R$styleable: int[] FontFamilyFont
kotlinx.coroutines.CoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher$Key Key
androidx.appcompat.view.menu.MenuPopupHelper: android.widget.PopupWindow$OnDismissListener mInternalOnDismissListener
com.google.firebase.database.core.CompoundWrite: com.google.firebase.database.core.utilities.ImmutableTree writeTree
com.google.firebase.database.core.SyncTree$9: com.google.firebase.database.core.Tag val$tag
androidx.window.core.Version: java.lang.String description
androidx.fragment.app.FragmentManager: java.lang.Runnable mExecCommit
com.google.firebase.database.core.view.QueryParams$ViewFrom: com.google.firebase.database.core.view.QueryParams$ViewFrom LEFT
com.google.android.gms.common.api.internal.UnregisterListenerMethod: com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey zajo
androidx.fragment.R$styleable: int Fragment_android_name
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.PorterDuff$Mode mTintMode
com.google.android.gms.common.api.Scope: java.lang.String zzaq
com.google.common.util.concurrent.ThreadFactoryBuilder: java.lang.Integer priority
com.lyokone.location.FlutterLocation$1: com.lyokone.location.FlutterLocation this$0
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: android.widget.SpinnerAdapter mAdapter
com.journeyapps.barcodescanner.camera.AutoFocusManager$2: com.journeyapps.barcodescanner.camera.AutoFocusManager this$0
com.google.firebase.database.connection.PersistentConnectionImpl$QuerySpec: java.util.Map queryParams
com.google.android.gms.maps.model.PolylineOptions: java.util.List zzef
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews mBigContentView
androidx.core.provider.RequestExecutor$ReplyRunnable: android.os.Handler mHandler
androidx.core.provider.CallbackWithHandler$1: androidx.core.provider.CallbackWithHandler this$0
com.google.zxing.pdf417.decoder.ec.ErrorCorrection: com.google.zxing.pdf417.decoder.ec.ModulusGF field
androidx.core.R$styleable: int GradientColor_android_centerX
androidx.appcompat.widget.TooltipCompatHandler: java.lang.CharSequence mTooltipText
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: io.flutter.plugins.imagepicker.ImagePickerPlugin this$0
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.plugin.platform.PlatformPlugin platformPlugin
androidx.appcompat.widget.SuggestionsAdapter: int mQueryRefinement
com.google.zxing.client.android.InactivityTimer: java.lang.Runnable callback
androidx.fragment.app.FragmentTransitionImpl$2: androidx.fragment.app.FragmentTransitionImpl this$0
com.google.android.gms.location.LocationAvailability: int zzas
com.google.firebase.database.Transaction$Result: com.google.firebase.database.snapshot.Node data
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: androidx.collection.SparseArrayCompat mStateIds
androidx.fragment.app.FragmentManager$9: androidx.fragment.app.FragmentManager this$0
com.google.firebase.database.core.SyncTree$2: com.google.firebase.database.core.SyncTree this$0
com.google.zxing.pdf417.detector.PDF417DetectorResult: java.util.List points
androidx.fragment.app.FragmentTransaction: int mEnterAnim
androidx.appcompat.widget.AppCompatEditText: androidx.core.widget.TextViewOnReceiveContentListener mDefaultOnReceiveContentListener
androidx.appcompat.R$styleable: int SearchView_queryBackground
com.google.zxing.maxicode.decoder.Decoder: com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder
io.flutter.plugins.googlemaps.GoogleMapController: io.flutter.plugins.googlemaps.LifecycleProvider lifecycleProvider
androidx.appcompat.widget.SearchView$5: androidx.appcompat.widget.SearchView this$0
com.google.firebase.database.core.SparseSnapshotTree$1: com.google.firebase.database.core.Path val$path
io.flutter.plugin.platform.AccessibilityEventsDelegate: io.flutter.view.AccessibilityBridge accessibilityBridge
net.touchcapture.qr.flutterqr.CustomFramingRectBarcodeView: net.touchcapture.qr.flutterqr.CustomFramingRectBarcodeView$Companion Companion
com.journeyapps.barcodescanner.CaptureManager: boolean destroyed
com.journeyapps.barcodescanner.CameraPreview: android.view.SurfaceHolder$Callback surfaceCallback
androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState
androidx.core.view.ViewPropertyAnimatorCompat$1: androidx.core.view.ViewPropertyAnimatorCompat this$0
com.google.android.gms.maps.model.zzs: com.google.android.gms.internal.maps.zzaf zzel
com.google.firebase.database.core.UserWriteRecord: boolean visible
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock$2: com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock this$1
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter sidecarAdapter
com.google.firebase.database.android.AndroidAppCheckTokenProvider: java.util.concurrent.atomic.AtomicReference internalAppCheck
com.google.android.gms.common.api.Api: com.google.android.gms.common.api.Api$ClientKey zaay
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel
com.journeyapps.barcodescanner.DecoratedBarcodeView: com.journeyapps.barcodescanner.ViewfinderView viewFinder
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.reflect.Method sCreateFromFamiliesWithDefault
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.String mRootName
com.google.firebase.database.connection.ConnectionContext: com.google.firebase.database.connection.ConnectionTokenProvider authTokenProvider
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String dartEntrypointFunctionName
androidx.fragment.R$animator: int fragment_close_enter
kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings: int[] $EnumSwitchMapping$0
androidx.core.view.ViewPropertyAnimatorCompat$2: androidx.core.view.ViewPropertyAnimatorCompat this$0
com.google.firebase.database.connection.util.StringListReader: int charPos
com.google.firebase.database.core.WriteTree$1: java.util.List val$writeIdsToExclude
kotlinx.coroutines.internal.FastServiceLoaderKt: boolean ANDROID_DETECTED
androidx.savedstate.SavedStateRegistry: boolean mAllowingSavingState
com.baseflow.geolocator.MethodCallHandlerImpl: com.baseflow.geolocator.location.LocationAccuracyManager locationAccuracyManager
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingRight
androidx.fragment.app.Fragment$5: androidx.fragment.app.Fragment this$0
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: androidx.window.layout.WindowInfoTrackerImpl this$0
io.flutter.view.VsyncWaiter: io.flutter.embedding.engine.FlutterJNI flutterJNI
androidx.appcompat.app.AlertController: android.view.View mView
com.google.zxing.oned.Code93Reader: int[] CHARACTER_ENCODINGS
androidx.appcompat.R$styleable: int AppCompatTheme_windowNoTitle
androidx.appcompat.widget.SuggestionsAdapter: android.app.SearchableInfo mSearchable
androidx.appcompat.widget.AppCompatTextClassifierHelper: android.view.textclassifier.TextClassifier mTextClassifier
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.content.res.ColorStateList mButtonTintList
io.flutter.plugin.editing.TextEditingDelta: int newComposingStart
com.google.firebase.database.core.utilities.ImmutableTree$1: java.util.ArrayList val$list
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description
io.flutter.plugins.googlemaps.GoogleMapsPlugin$2: io.flutter.plugins.googlemaps.GoogleMapsPlugin this$0
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: androidx.appcompat.app.AlertDialog mPopup
androidx.core.view.inputmethod.InputContentInfoCompat: androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl mImpl
androidx.appcompat.R$layout: int abc_search_view
androidx.appcompat.widget.ListPopupWindow: int mDropDownGravity
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.Dispatchers INSTANCE
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onTapOverride
androidx.fragment.app.FragmentManager: boolean mDestroyed
androidx.activity.result.contract.ActivityResultContract$SynchronousResult: java.lang.Object mValue
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1: io.flutter.plugin.common.MethodChannel$Result val$result
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: io.flutter.plugin.common.BinaryMessenger messenger
com.google.firebase.database.snapshot.NamedNode: com.google.firebase.database.snapshot.NamedNode MAX_NODE
kotlinx.coroutines.scheduling.CoroutineScheduler: long idleWorkerKeepAliveNs
androidx.fragment.app.FragmentContainerView: android.view.View$OnApplyWindowInsetsListener mApplyWindowInsetsListener
androidx.appcompat.view.menu.ListMenuItemView: android.content.Context mTextAppearanceContext
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableTop
com.google.android.gms.maps.model.PatternItem: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.BackStackState: java.lang.CharSequence mBreadCrumbShortTitleText
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus enabled
io.flutter.embedding.engine.dart.PlatformTaskQueue: android.os.Handler handler
com.google.android.gms.tasks.zzm: com.google.android.gms.tasks.OnSuccessListener zzp
com.google.zxing.oned.Code93Reader: char[] ALPHABET
com.journeyapps.barcodescanner.RotationListener: android.view.OrientationEventListener orientationEventListener
com.google.firebase.database.core.SyncPoint: java.util.Map views
com.lyokone.location.LocationPlugin: com.lyokone.location.StreamHandlerImpl streamHandlerImpl
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: com.google.firebase.heartbeatinfo.HeartBeatInfoStorage instance
io.flutter.embedding.engine.dart.DartMessenger$Reply: io.flutter.embedding.engine.FlutterJNI flutterJNI
com.google.android.gms.maps.model.PolygonOptions: int strokeColor
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.MenuBuilder mMenu
com.journeyapps.barcodescanner.ViewfinderView: int laserColor
com.google.zxing.oned.UPCEANExtensionSupport: int[] EXTENSION_START_PATTERN
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.Size framingRectSize
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
androidx.appcompat.widget.ActionMenuView: android.content.Context mPopupContext
androidx.appcompat.view.menu.MenuBuilder: boolean mPreventDispatchingItemsChanged
androidx.fragment.app.FragmentManager$7: android.view.View val$animatingView
androidx.fragment.app.FragmentTransition$1: androidx.fragment.app.FragmentTransition$Callback val$callback
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_HEADER
com.google.android.gms.maps.model.MarkerOptions: float zzdb
androidx.core.view.WindowInsetsCompat$Impl20: java.lang.Class sViewRootImplClass
com.google.android.gms.common.api.internal.GoogleApiManager: java.util.Set zaio
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: boolean mDelegateTargeted
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: boolean isEventHandled
androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState
com.google.android.gms.common.SupportErrorDialogFragment: android.app.Dialog mDialog
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.Cap zzec
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuff$Mode DEFAULT_MODE
androidx.appcompat.view.menu.MenuBuilder: boolean mStructureChangedWhileDispatchPrevented
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.RenderSurface previousRenderSurface
com.google.zxing.PlanarYUVLuminanceSource: byte[] yuvData
androidx.fragment.app.FragmentActivity: boolean mResumed
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization textCapitalization
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.String actionLabel
com.google.zxing.oned.CodaBarReader: int[] CHARACTER_ENCODINGS
androidx.appcompat.R$dimen: int abc_cascading_menus_min_smallest_width
kotlinx.coroutines.scheduling.TasksKt: long WORK_STEALING_TIME_RESOLUTION_NS
com.baseflow.geolocator.location.FusedLocationClient: android.app.Activity activity
androidx.appcompat.widget.SearchView$8: androidx.appcompat.widget.SearchView this$0
com.journeyapps.barcodescanner.BarcodeResult: com.google.zxing.Result mResult
androidx.appcompat.view.SupportMenuInflater$MenuState: androidx.core.view.ActionProvider itemActionProvider
androidx.appcompat.R$string: int abc_prepend_shortcut_label
com.google.android.gms.maps.internal.zzbz: java.lang.String TAG
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence mHomeDescription
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_DOWN
com.google.zxing.oned.Code93Reader: int[] counters
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.StandardMethodCodec INSTANCE
androidx.appcompat.app.AppCompatDelegateImpl: boolean mActivityHandlesUiModeChecked
androidx.core.view.KeyEventDispatcher: boolean sActionBarFieldsFetched
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.util.concurrent.atomic.AtomicIntegerFieldUpdater workerCtl$FU
com.google.common.util.concurrent.ThreadFactoryBuilder: java.lang.Boolean daemon
kotlin.Unit: kotlin.Unit INSTANCE
com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: java.util.Set infos
androidx.core.app.NotificationCompat$Builder: java.lang.String mChannelId
com.google.firebase.database.core.Context: com.google.firebase.database.core.TokenProvider appCheckTokenProvider
io.flutter.plugins.googlemaps.GoogleMapBuilder: boolean buildingsEnabled
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion
com.google.android.gms.common.api.internal.ListenerHolder$zaa: com.google.android.gms.common.api.internal.ListenerHolder zajq
androidx.fragment.R$animator: int fragment_open_exit
com.google.android.gms.common.api.internal.zabu: com.google.android.gms.common.api.GoogleApi zajz
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.CoroutineScheduler this$0
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType MULTILINE
com.google.android.gms.location.LocationRequest: long zzaw
androidx.core.app.NotificationCompat$Builder: boolean mAllowSystemGeneratedContextualActions
androidx.core.R$styleable: int FontFamilyFont_android_font
androidx.core.view.ViewPropertyAnimatorCompat: java.lang.Runnable mStartAction
com.google.firebase.database.core.UserWriteRecord: com.google.firebase.database.core.CompoundWrite merge
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean zzao
androidx.lifecycle.ClassesInfoCache$CallbackInfo: java.util.Map mHandlerToEvent
kotlinx.coroutines.internal.MainDispatcherLoader: kotlinx.coroutines.MainCoroutineDispatcher dispatcher
com.google.zxing.pdf417.decoder.BarcodeMetadata: int rowCount
androidx.appcompat.view.menu.StandardMenuPopup: android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: float[] mTmpFloats
com.google.android.gms.maps.MapView$zzb: com.google.android.gms.maps.GoogleMapOptions zzbl
androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped
com.google.firebase.database.core.Repo$23: com.google.firebase.database.core.Repo this$0
com.baseflow.geolocator.location.ForegroundNotificationOptions: com.baseflow.geolocator.location.AndroidIconResource notificationIcon
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback mPopupCallback
com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder: com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder generalDecoder
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mScaleY
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: double logicalHeight
com.google.firebase.database.tubesock.MessageBuilderFactory$BinaryBuilder: java.util.List pendingBytes
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_9
androidx.appcompat.R$drawable: int abc_btn_check_material_anim
com.google.firebase.database.snapshot.ChildKey$IntegerChildKey: int intValue
androidx.core.widget.PopupWindowCompat: boolean sSetWindowLayoutTypeMethodAttempted
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.BinaryMessenger$TaskQueue taskQueue
androidx.core.view.OneShotPreDrawListener: android.view.View mView
kotlinx.coroutines.scheduling.LimitingDispatcher: java.lang.String name
io.flutter.plugin.editing.TextInputPlugin: android.graphics.Rect lastClientRect
com.google.firebase.database.core.Path: com.google.firebase.database.core.Path EMPTY_PATH
androidx.lifecycle.Lifecycling$1: androidx.lifecycle.LifecycleEventObserver val$observer
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.inject.Provider storageProvider
com.google.android.gms.location.LocationSettingsRequest: boolean zzbi
com.google.android.gms.base.R$string: int common_google_play_services_enable_button
com.google.zxing.maxicode.decoder.BitMatrixParser: com.google.zxing.common.BitMatrix bitMatrix
com.google.zxing.pdf417.decoder.BoundingBox: int minY
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler handler
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemShowAsAction
com.google.zxing.common.reedsolomon.GenericGF: int[] expTable
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState current
com.google.firebase.database.core.operation.OperationSource: com.google.firebase.database.core.operation.OperationSource USER
androidx.appcompat.widget.ScrollingTabContainerView: android.view.animation.Interpolator sAlphaInterpolator
androidx.appcompat.widget.ViewStubCompat: int mInflatedId
com.google.firebase.components.RestrictedComponentContainer$RestrictedPublisher: java.util.Set allowedPublishedEvents
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_PATH_INTERPOLATOR
io.flutter.plugins.googlemaps.CirclesController: java.util.Map googleMapsCircleIdToDartCircleId
com.google.firebase.database.tubesock.WebSocket: java.lang.Thread innerThread
androidx.appcompat.R$styleable: int MenuView_android_itemTextAppearance
com.google.android.gms.maps.model.MarkerOptions: float zzcs
androidx.core.app.NotificationCompatJellybean: java.lang.Object sExtrasLock
androidx.core.app.Person: boolean mIsImportant
androidx.appcompat.R$attr: int colorSwitchThumbNormal
com.journeyapps.barcodescanner.camera.CameraInstance$2: com.journeyapps.barcodescanner.camera.CameraInstance this$0
io.flutter.Log: int ERROR
com.google.zxing.oned.UPCEANExtension2Support: java.lang.StringBuilder decodeRowStringBuffer
com.google.zxing.pdf417.decoder.ec.ModulusPoly: int[] coefficients
io.flutter.plugins.googlemaps.PolylineController: java.lang.String googleMapsPolylineId
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingPut: com.google.firebase.database.connection.RequestResultCallback onComplete
androidx.appcompat.widget.AppCompatTextHelper: boolean mAsyncFontPending
kotlinx.coroutines.scheduling.TaskImpl: java.lang.Runnable block
com.google.firebase.database.core.view.View$OperationResult: java.util.List changes
androidx.appcompat.R$styleable: int Toolbar_logo
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType UNKNOWN
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence mTooltipText
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mSharedElementSourceNames
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: float[] radiis
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup mOverflowPopup
androidx.core.view.KeyEventDispatcher: boolean sDialogFieldsFetched
androidx.appcompat.view.menu.MenuItemImpl: int mShortcutAlphabeticModifiers
androidx.appcompat.R$styleable: int MenuItem_android_orderInCategory
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType ORIENTATION
com.google.android.gms.common.internal.zzg: android.net.Uri zzed
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: android.view.MenuItem val$item
androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SparseArrayCompat mKnownDrawableIdTags
kotlinx.coroutines.channels.ArrayChannel: kotlinx.coroutines.channels.BufferOverflow onBufferOverflow
com.journeyapps.barcodescanner.camera.AutoFocusManager: boolean useAutoFocus
com.baseflow.geolocator.LocationServiceHandlerImpl: com.baseflow.geolocator.location.LocationServiceStatusReceiver receiver
com.google.firebase.database.DatabaseReference$3: com.google.firebase.database.core.utilities.Pair val$wrapped
com.google.zxing.pdf417.decoder.BoundingBox: int maxY
androidx.window.embedding.SplitPairFilter: java.lang.String secondaryActivityIntentAction
androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE
androidx.appcompat.R$attr: int dropDownListViewStyle
androidx.appcompat.R$string: int abc_searchview_description_search
io.flutter.plugins.googlemaps.CirclesController: io.flutter.plugin.common.MethodChannel methodChannel
com.google.firebase.database.Logger$Level: com.google.firebase.database.Logger$Level ERROR
com.google.android.gms.common.internal.zak: com.google.android.gms.common.internal.PendingResultUtil$ResultConverter zapj
androidx.core.app.NotificationManagerCompat$SideChannelManager: android.os.Handler mHandler
androidx.appcompat.view.ActionMode: java.lang.Object mTag
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_DOWN
com.google.firebase.database.core.SyncTree$7: com.google.firebase.database.core.Path val$path
androidx.core.view.ContentInfoCompat$Builder: android.net.Uri mLinkUri
com.google.firebase.internal.DataCollectionConfigStorage: android.content.SharedPreferences sharedPreferences
androidx.appcompat.widget.RtlSpacingHelper: int mEnd
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1 INSTANCE
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix IDENTITY_MATRIX
io.flutter.plugins.googlemaps.PolygonsController: float density
androidx.fragment.app.Fragment: boolean mPerformedCreateView
androidx.window.layout.FoldingFeature$State: java.lang.String description
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat QR_CODE
androidx.appcompat.view.StandaloneActionMode: android.content.Context mContext
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader
com.google.android.gms.maps.model.CircleOptions: java.util.List zzcv
androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_XMP_APP1
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.GoogleApiClient zabm
com.journeyapps.barcodescanner.CameraPreview$2: com.journeyapps.barcodescanner.CameraPreview this$0
com.google.zxing.pdf417.decoder.DecodedBitStreamParser: char[] PUNCT_CHARS
com.google.firebase.FirebaseApp: android.content.Context applicationContext
androidx.appcompat.R$styleable: int AlertDialog_singleChoiceItemLayout
com.google.android.gms.maps.MapView$zzb: java.util.List zzbf
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGF MAXICODE_FIELD_64
androidx.appcompat.app.ResourcesFlusher: java.lang.Class sThemedResourceCacheClazz
androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType
com.google.firebase.database.tubesock.WebSocketReceiver: com.google.firebase.database.tubesock.WebSocket websocket
androidx.fragment.app.SpecialEffectsController$Operation: boolean mIsCanceled
io.flutter.embedding.android.FlutterSurfaceView: android.view.SurfaceHolder$Callback surfaceCallback
com.google.android.gms.maps.model.PolylineOptions: float width
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment mParent
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_ENABLED
androidx.appcompat.view.StandaloneActionMode: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.appcompat.app.AppCompatActivity$2: androidx.appcompat.app.AppCompatActivity this$0
androidx.core.view.ViewCompat: java.lang.reflect.Field sAccessibilityDelegateField
com.google.android.gms.signin.zab: com.google.android.gms.common.api.Api$ClientKey zasj
androidx.appcompat.R$styleable: int Spinner_android_popupBackground
com.google.firebase.database.core.view.Event$EventType: com.google.firebase.database.core.view.Event$EventType CHILD_ADDED
androidx.fragment.app.FragmentTransaction: java.lang.String mName
com.google.firebase.database.snapshot.ChildKey: com.google.firebase.database.snapshot.ChildKey INFO_CHILD_KEY
kotlin.internal.PlatformImplementationsKt: kotlin.internal.PlatformImplementations IMPLEMENTATIONS
androidx.window.core.Bounds: int bottom
kotlin.KotlinVersion: kotlin.KotlinVersion CURRENT
androidx.appcompat.app.AlertController: android.view.View$OnClickListener mButtonHandler
kotlin.Pair: java.lang.Object second
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingListen: com.google.firebase.database.connection.RequestResultCallback resultCallback
com.google.firebase.internal.DataCollectionConfigStorage: android.content.Context deviceProtectedContext
androidx.fragment.app.FragmentTransitionCompat21$2: android.view.View val$fragmentView
androidx.appcompat.widget.LinearLayoutCompat: boolean mBaselineAligned
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewPropertyAnimator mCurrentActionBarTopAnimator
io.flutter.plugins.googlemaps.PolylineController: com.google.android.gms.maps.model.Polyline polyline
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.Cap zzed
com.google.firebase.database.core.Repo$16: com.google.firebase.database.DatabaseError val$innerClassError
androidx.appcompat.widget.SearchView$2: androidx.appcompat.widget.SearchView this$0
com.lyokone.location.BackgroundNotification: java.lang.String channelId
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: android.view.inputmethod.InputMethodManager inputMethodManager
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean mHasPresetAutoSizeValues
com.google.zxing.aztec.decoder.Decoder: java.lang.String[] LOWER_TABLE
com.google.android.gms.maps.internal.zzbz: com.google.android.gms.maps.internal.zze zzcl
androidx.appcompat.view.menu.CascadingMenuPopup: android.widget.PopupWindow$OnDismissListener mOnDismissListener
io.flutter.plugin.platform.PlatformPlugin$3: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$HapticFeedbackType
androidx.appcompat.R$drawable: int abc_ic_menu_share_mtrl_alpha
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mPositiveButtonListener
com.google.firebase.database.core.view.QuerySpec: com.google.firebase.database.core.Path path
androidx.exifinterface.media.ExifInterface: int mThumbnailLength
androidx.fragment.app.FragmentTransition: int[] INVERSE_OPS
kotlinx.coroutines.CommonPool: int requestedParallelism
androidx.window.layout.SidecarCompat: java.lang.String TAG
com.google.android.gms.common.api.internal.zzc: java.util.Map zzbf
com.google.firebase.database.snapshot.BooleanNode: boolean value
androidx.appcompat.R$drawable: int abc_star_black_48dp
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_GROUP
androidx.interpolator.view.animation.LookupTableInterpolator: float[] mValues
com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey: java.lang.String zajp
com.google.android.gms.common.util.DeviceProperties: java.lang.Boolean zzgq
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int pointerCount
com.google.common.util.concurrent.AbstractFuture$Cancellation: com.google.common.util.concurrent.AbstractFuture$Cancellation CAUSELESS_CANCELLED
androidx.fragment.app.FragmentManager$6: androidx.fragment.app.FragmentManager this$0
com.baseflow.geolocator.location.FusedLocationClient: com.baseflow.geolocator.errors.ErrorCallback errorCallback
com.google.android.gms.common.internal.zad: android.content.Intent zaos
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: io.flutter.plugin.common.BinaryMessenger$BinaryReply val$reply
androidx.appcompat.widget.RtlSpacingHelper: boolean mIsRelative
kotlinx.coroutines.Active: kotlinx.coroutines.Active INSTANCE
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
androidx.fragment.app.FragmentManagerViewModel: boolean mHasSavedSnapshot
com.google.android.gms.internal.location.zza: android.os.IBinder zza
androidx.core.widget.NestedScrollView: int mActivePointerId
androidx.appcompat.widget.ActionBarContextView: android.view.View mClose
androidx.fragment.app.DefaultSpecialEffectsController$7: android.view.View val$lastInEpicenterView
androidx.appcompat.view.menu.ListMenuPresenter: android.content.Context mContext
com.google.android.gms.tasks.zzu: java.lang.Object zzaa
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: int currentPathDepth
com.google.firebase.components.RestrictedComponentContainer$RestrictedPublisher: com.google.firebase.events.Publisher delegate
androidx.appcompat.app.AlertController$AlertParams$2: androidx.appcompat.app.AlertController$RecycleListView val$listView
kotlin.coroutines.jvm.internal.CompletedContinuation: kotlin.coroutines.jvm.internal.CompletedContinuation INSTANCE
com.journeyapps.barcodescanner.CaptureManager: java.lang.String TAG
com.journeyapps.barcodescanner.ViewfinderView: android.graphics.Paint paint
com.journeyapps.barcodescanner.camera.CameraThread: java.lang.String TAG
com.google.android.gms.common.SupportErrorDialogFragment: android.content.DialogInterface$OnCancelListener zaaq
androidx.fragment.app.FragmentManagerViewModel: boolean mStateAutomaticallySaved
com.google.firebase.database.snapshot.RangeMerge: com.google.firebase.database.core.Path optExclusiveStart
com.baseflow.geolocator.location.LocationManagerClient: java.lang.String currentLocationProvider
com.baseflow.geolocator.permission.LocationPermission$1: int[] $SwitchMap$com$baseflow$geolocator$permission$LocationPermission
com.google.android.gms.maps.MapView$zzb: android.content.Context zzbk
com.google.zxing.oned.Code39Reader: int[] counters
com.google.android.gms.common.api.internal.ListenerHolder: java.lang.Object zajn
io.flutter.plugins.flutterexifrotation.FlutterExifRotationPlugin: io.flutter.plugins.flutterexifrotation.FlutterExifRotationPlugin$PermissionManager permissionManager
androidx.core.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.appcompat.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
com.google.firebase.database.connection.PersistentConnectionImpl: boolean firstConnection
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: int zaix
androidx.core.R$styleable: int FontFamilyFont_android_fontWeight
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Bundle frozenActionViewState
androidx.fragment.app.Fragment: boolean mHidden
com.google.android.gms.maps.MapView$zza: android.view.ViewGroup parent
com.google.firebase.database.collection.ImmutableSortedMapIterator: java.util.ArrayDeque nodeStack
com.google.firebase.database.Query$3: com.google.firebase.database.core.EventRegistration val$listener
com.google.zxing.oned.rss.RSS14Reader: int[] OUTSIDE_EVEN_TOTAL_SUBSET
io.flutter.embedding.engine.systemchannels.PlatformChannel$2: int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay
com.google.zxing.oned.UPCAReader: com.google.zxing.oned.UPCEANReader ean13Reader
androidx.core.app.NotificationCompatBuilder: android.app.Notification$Builder mBuilder
com.google.firebase.database.core.SyncTree$16: java.util.List val$events
com.google.zxing.common.reedsolomon.GenericGF: int size
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes errorWhileAcquiringPosition
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager accessibilityManager
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol COMPLETING_RETRY
androidx.exifinterface.media.ExifInterface$ExifAttribute: byte[] bytes
androidx.core.app.NotificationCompatBuilder: android.widget.RemoteViews mContentView
com.google.firebase.database.core.persistence.TrackedQueryManager: com.google.firebase.database.core.utilities.Predicate IS_QUERY_PRUNABLE_PREDICATE
androidx.appcompat.view.menu.MenuItemImpl: int mIconResId
com.google.firebase.database.DatabaseReference$1: com.google.firebase.database.DatabaseReference this$0
androidx.core.content.res.ResourcesCompat: java.lang.ThreadLocal sTempTypedValue
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderPlatformThread: java.util.concurrent.Executor executor
com.google.firebase.database.core.view.EventRaiser$1: com.google.firebase.database.core.view.EventRaiser this$0
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.EditorInfo mEditorInfo
androidx.core.view.ViewCompat$AccessibilityViewProperty: int mContentChangeType
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator$Companion$reset$1 INSTANCE
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper: android.os.Handler handler
androidx.core.app.NotificationCompat$Builder: int mColor
kotlin.text.DelimitedRangesSequence: int startIndex
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: java.util.WeakHashMap mPanesToVisible
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat RSS_EXPANDED
com.google.zxing.common.reedsolomon.GenericGF: int[] logTable
androidx.appcompat.R$styleable: int MenuGroup_android_id
androidx.window.R$attr: int secondaryActivityAction
androidx.appcompat.widget.ForwardingListener: int mLongPressTimeout
com.google.android.gms.maps.model.VisibleRegion: com.google.android.gms.maps.model.LatLng farRight
com.google.firebase.database.snapshot.NamedNode: com.google.firebase.database.snapshot.Node node
kotlinx.coroutines.UndispatchedCoroutine: java.lang.Object savedOldValue
io.flutter.plugin.editing.TextEditingDelta: java.lang.CharSequence deltaText
androidx.fragment.app.Fragment: boolean mIsCreated
com.google.firebase.database.core.view.ViewProcessor: com.google.firebase.database.core.view.filter.NodeFilter filter
com.journeyapps.barcodescanner.BarcodeView$DecodeMode: com.journeyapps.barcodescanner.BarcodeView$DecodeMode SINGLE
io.flutter.plugins.googlemaps.PolygonsController: io.flutter.plugin.common.MethodChannel methodChannel
androidx.appcompat.app.AlertController: android.os.Handler mHandler
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.LatLng position
androidx.window.R$attr: int secondaryActivityName
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType type
androidx.collection.MapCollections$ArrayIterator: boolean mCanRemove
io.flutter.plugin.platform.PlatformViewsController: java.util.HashSet currentFrameUsedOverlayLayerIds
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlinx.coroutines.flow.Flow $flow
androidx.appcompat.widget.LinearLayoutCompat: int[] mMaxAscent
androidx.core.widget.TextViewCompat$OreoCallback: java.lang.Class mMenuBuilderClass
androidx.appcompat.widget.SearchView: android.widget.ImageView mCollapsedIcon
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard
androidx.appcompat.app.AppCompatDelegateImpl: boolean mLongPressBackDown
com.google.android.gms.common.stats.ConnectionTracker: com.google.android.gms.common.stats.ConnectionTracker zzfa
com.google.zxing.qrcode.decoder.Version: com.google.zxing.qrcode.decoder.Version[] VERSIONS
androidx.appcompat.R$styleable: int ActionBar_background
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.RenderSurface renderSurface
com.google.zxing.oned.rss.FinderPattern: int[] startEnd
androidx.appcompat.R$styleable: int[] FontFamily
androidx.appcompat.widget.TintTypedArray: android.content.res.TypedArray mWrapped
io.flutter.embedding.android.FlutterView$4: io.flutter.embedding.android.FlutterView this$0
io.flutter.plugins.flutterexifrotation.FlutterExifRotationPlugin: io.flutter.plugin.common.MethodChannel methodChannel
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl this$0
com.google.android.gms.common.stats.ConnectionTracker: java.util.List zzff
com.google.android.gms.dynamite.DynamiteModule: int zzij
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness LIGHT
io.flutter.plugin.editing.TextInputPlugin$2: boolean val$isAffine
com.google.firebase.components.Component: int instantiation
androidx.fragment.app.FragmentTransition$6: android.graphics.Rect val$inEpicenter
kotlinx.coroutines.scheduling.LimitingDispatcher: kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher dispatcher
androidx.appcompat.view.menu.MenuPopupHelper$1: androidx.appcompat.view.menu.MenuPopupHelper this$0
io.flutter.embedding.engine.systemchannels.SettingsChannel: io.flutter.plugin.common.BasicMessageChannel channel
com.google.android.gms.maps.model.PolygonOptions: boolean zzdz
androidx.collection.ArraySet: int sBaseCacheSize
androidx.appcompat.R$drawable: int abc_textfield_default_mtrl_alpha
androidx.exifinterface.media.ExifInterface$1: androidx.exifinterface.media.ExifInterface this$0
com.google.zxing.client.android.DecodeFormatManager: java.util.regex.Pattern COMMA_PATTERN
io.flutter.plugin.mouse.MouseCursorPlugin: java.util.HashMap systemCursorConstants
androidx.appcompat.widget.SearchView: android.view.View$OnClickListener mOnSearchClickListener
androidx.appcompat.R$attr: int actionOverflowMenuStyle
kotlinx.coroutines.CoroutineName: kotlinx.coroutines.CoroutineName$Key Key
androidx.appcompat.R$styleable: int[] ViewBackgroundHelper
kotlinx.coroutines.android.HandlerContext: boolean invokeImmediately
androidx.appcompat.resources.R$styleable: int[] StateListDrawableItem
com.google.android.gms.maps.model.PolygonOptions: boolean zzct
com.google.firebase.database.FirebaseDatabaseComponent: com.google.firebase.FirebaseApp app
com.google.firebase.database.android.SqlPersistenceStorageEngine: java.nio.charset.Charset UTF8_CHARSET
androidx.appcompat.view.menu.MenuBuilder: android.content.Context mContext
androidx.window.layout.SidecarAdapter: androidx.window.layout.SidecarAdapter$Companion Companion
io.flutter.view.AccessibilityBridge: java.util.List flutterNavigationStack
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode transparent
com.google.android.gms.common.internal.ResolveAccountResponse: int versionCode
io.flutter.view.AccessibilityBridge$5: int[] $SwitchMap$io$flutter$view$AccessibilityBridge$StringAttributeType
com.google.firebase.database.connection.util.RetryHelper: java.util.concurrent.ScheduledFuture scheduledRetry
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: boolean lastInIsPop
io.flutter.plugin.editing.TextEditingDelta: int deltaEnd
androidx.loader.app.LoaderManagerImpl: androidx.lifecycle.LifecycleOwner mLifecycleOwner
com.google.firebase.database.connection.PersistentConnectionImpl: java.util.Map requestCBHash
androidx.fragment.app.Fragment: java.util.concurrent.atomic.AtomicInteger mNextLocalRequestCode
com.google.zxing.common.BitSource: int bitOffset
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener
com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater listenersUpdater
com.google.android.gms.common.api.internal.GoogleApiManager$zab: com.google.android.gms.common.internal.IAccountAccessor zaje
androidx.appcompat.app.AlertController$AlertParams: android.view.View mCustomTitleView
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: kotlinx.coroutines.flow.internal.SafeCollector $this_checkContext
androidx.appcompat.widget.ActionMenuPresenter: boolean mStrictWidthLimit
androidx.core.R$styleable: int GradientColorItem_android_offset
com.google.android.gms.common.api.internal.zza: android.os.Bundle zzbh
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
androidx.appcompat.R$styleable: int MenuItem_actionViewClass
com.baseflow.geolocator.GeolocatorLocationService: boolean isForeground
kotlinx.coroutines.internal.MainDispatcherLoader: kotlinx.coroutines.internal.MainDispatcherLoader INSTANCE
com.journeyapps.barcodescanner.camera.CameraSurface: android.view.SurfaceHolder surfaceHolder
com.google.android.gms.location.zzj: long zzw
androidx.window.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection UNKNOWN
androidx.fragment.R$styleable: int[] FontFamilyFont
com.google.firebase.database.core.SyncTree$10: com.google.firebase.database.core.Tag val$tag
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol TOO_LATE_TO_CANCEL
com.google.zxing.aztec.detector.Detector: int nbLayers
com.google.zxing.common.CharacterSetECI: java.util.Map NAME_TO_ECI
androidx.fragment.app.FragmentTransitionCompat21$2: androidx.fragment.app.FragmentTransitionCompat21 this$0
com.google.android.gms.common.stats.ConnectionTracker: boolean zzfb
androidx.fragment.app.FragmentTransition$6: androidx.fragment.app.Fragment val$inFragment
androidx.core.view.ViewConfigurationCompat: java.lang.reflect.Method sGetScaledScrollFactorMethod
com.google.zxing.oned.EAN13Reader: int[] decodeMiddleCounters
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onLongPressOverride
com.google.firebase.database.connection.PersistentConnectionImpl$5: long val$putId
com.google.firebase.database.core.Repo$15: com.google.firebase.database.core.Repo this$0
androidx.appcompat.R$id: int action_bar_title
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry: android.content.res.ColorStateList mValue
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler isolateChannelMessageHandler
com.google.zxing.qrcode.detector.FinderPatternFinder: int[] crossCheckStateCount
androidx.multidex.MultiDexExtractor: java.nio.channels.FileChannel lockChannel
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray platformViews
com.google.android.gms.common.api.internal.GoogleApiManager$zab: boolean zajg
com.google.zxing.client.android.R$id: int zxing_viewfinder_view
com.google.firebase.database.core.WriteTree$1: com.google.firebase.database.core.Path val$treePath
androidx.appcompat.widget.ThemeUtils: int[] FOCUSED_STATE_SET
androidx.appcompat.widget.ListPopupWindow: android.os.Handler mHandler
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizePresetSizes
com.google.firebase.database.tubesock.WebSocketWriter: com.google.firebase.database.tubesock.WebSocket websocket
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBNode right
androidx.lifecycle.SavedStateHandleController: boolean mIsAttached
com.google.firebase.database.connection.WebsocketConnection: boolean everConnected
androidx.appcompat.widget.ActionBarContainer: boolean mIsSplit
androidx.appcompat.widget.ListPopupWindow: boolean mOverlapAnchor
com.google.android.gms.base.R$string: int common_google_play_services_unsupported_text
androidx.appcompat.view.menu.MenuPopupHelper: int mPopupStyleAttr
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_OBSCURED
com.google.zxing.oned.UPCEANExtensionSupport: com.google.zxing.oned.UPCEANExtension5Support fiveSupport
com.google.firebase.FirebaseOptions$Builder: java.lang.String gaTrackingId
com.google.zxing.client.android.DecodeHintManager: java.util.regex.Pattern COMMA
androidx.fragment.app.SpecialEffectsController$1: androidx.fragment.app.SpecialEffectsController this$0
com.journeyapps.barcodescanner.Decoder: com.google.zxing.Reader reader
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
kotlinx.coroutines.scheduling.CoroutineScheduler: java.util.concurrent.atomic.AtomicLongFieldUpdater controlState$FU
androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: java.util.concurrent.ExecutorService cachedThreadPool
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: java.lang.Runnable mOnDrawRunnable
io.flutter.plugin.localization.LocalizationPlugin: io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag IS_FOCUSABLE
androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandle mHandle
io.flutter.plugins.googlemaps.GoogleMapFactory: io.flutter.plugin.common.BinaryMessenger binaryMessenger
com.google.zxing.client.android.DecodeFormatManager: java.util.Set QR_CODE_FORMATS
com.lyokone.location.NotificationOptions: java.lang.String iconName
androidx.appcompat.R$styleable: int AppCompatTheme_windowActionBarOverlay
com.google.android.gms.common.api.internal.ListenerHolder: com.google.android.gms.common.api.internal.ListenerHolder$zaa zajm
com.google.android.gms.common.api.internal.zzb: java.lang.String zzbj
androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache sInstance
com.google.firebase.database.connection.Connection$State: com.google.firebase.database.connection.Connection$State REALTIME_CONNECTING
androidx.core.app.NotificationCompat$Action: boolean mShowsUserInterface
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextDirectionHeuristic mTextDir
com.google.android.gms.common.api.Api: java.lang.String mName
com.google.firebase.components.CycleDetector$Dep: boolean set
com.google.android.gms.common.GoogleSignatureVerifier: com.google.android.gms.common.GoogleSignatureVerifier zzam
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.plugin.common.MethodChannel channel
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.MenuPresenter$Callback mCallback
com.google.firebase.database.core.CompoundWrite$2: boolean val$exportFormat
com.google.android.gms.common.internal.Objects$ToStringHelper: java.util.List zzer
com.google.android.gms.common.GoogleApiAvailability: int GOOGLE_PLAY_SERVICES_VERSION_CODE
com.google.android.gms.common.internal.ClientIdentity: java.lang.String packageName
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State: com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State ISO_IEC_646
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: java.lang.Object element
com.google.firebase.database.core.ChildEventRegistration: com.google.firebase.database.core.view.QuerySpec spec
com.google.firebase.database.core.view.ViewProcessor$WriteTreeCompleteChildSource: com.google.firebase.database.core.view.ViewCache viewCache
androidx.core.widget.CompoundButtonCompat: java.lang.reflect.Field sButtonDrawableField
androidx.appcompat.widget.TooltipCompatHandler$1: androidx.appcompat.widget.TooltipCompatHandler this$0
androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.LiveData this$0
androidx.collection.ArraySet: java.lang.Object[] sTwiceBaseCache
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModelProvider$Factory mFactory
androidx.appcompat.widget.SearchView: android.graphics.drawable.Drawable mSearchHintIcon
kotlinx.coroutines.CoroutineId: long id
androidx.fragment.app.Fragment: android.view.LayoutInflater mLayoutInflater
com.google.firebase.database.collection.RBTreeSortedMap$Builder: java.util.Map values
com.baseflow.geolocator.location.FusedLocationClient: android.content.Context context
com.google.zxing.aztec.decoder.Decoder$Table: com.google.zxing.aztec.decoder.Decoder$Table[] $VALUES
androidx.appcompat.widget.Toolbar: int mTitleMarginBottom
androidx.core.content.FileProvider$SimplePathStrategy: java.util.HashMap mRoots
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.Resources mSourceRes
androidx.appcompat.R$styleable: int Toolbar_contentInsetRight
com.google.android.gms.tasks.zzv: java.util.concurrent.Callable val$callable
com.google.android.gms.signin.internal.SignInClientImpl: android.os.Bundle zasy
com.google.android.gms.common.api.internal.zza: java.util.Map zzbf
androidx.appcompat.app.AlertController$AlertParams: android.view.LayoutInflater mInflater
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry: android.content.res.Configuration mConfiguration
androidx.fragment.app.SpecialEffectsController: boolean mIsContainerPostponed
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: java.lang.Object $receiver$inlined
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int[] mFrameTimes
net.touchcapture.qr.flutterqr.QRView: android.content.Context context
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback
com.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions options
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.util.Set onNewIntentListeners
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.plugin.common.BasicMessageChannel$MessageHandler parsingMessageHandler
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: java.lang.Number eventTime
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText mExtractedText
com.google.android.gms.tasks.zzk: java.lang.Object mLock
com.google.firebase.FirebaseApp$GlobalBackgroundStateListener: java.util.concurrent.atomic.AtomicReference INSTANCE
androidx.appcompat.app.AlertController$AlertParams: boolean mViewSpacingSpecified
androidx.core.view.WindowInsetsControllerCompat: androidx.core.view.WindowInsetsControllerCompat$Impl mImpl
com.google.zxing.oned.rss.AbstractRSSReader: int[] decodeFinderCounters
com.google.android.gms.common.api.internal.zaj: androidx.collection.ArrayMap zaba
androidx.fragment.app.FragmentManager: java.util.Map mResults
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mTitle
com.google.firebase.database.tubesock.WebSocketReceiver: boolean stop
com.google.android.gms.maps.zzu: com.google.android.gms.maps.GoogleMap$OnCameraMoveStartedListener zzac
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes permissionRequestInProgress
io.flutter.plugins.googlemaps.TileOverlaysController: java.util.Map tileOverlayIdToController
com.google.android.gms.internal.location.zzad: android.os.Parcelable$Creator CREATOR
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_TOOLTIP
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: android.content.SharedPreferences$Editor val$editor
androidx.fragment.R$styleable: int[] FontFamily
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean zzau
androidx.appcompat.view.ContextThemeWrapper: int mThemeResource
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState UNKNOWN
androidx.core.widget.AutoScrollHelper$ClampedScroller: float mStopValue
androidx.appcompat.widget.DropDownListView: int mMotionPosition
com.google.firebase.database.snapshot.ChildKey: com.google.firebase.database.snapshot.ChildKey MAX_KEY
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableRight
androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory mSpecialEffectsControllerFactory
androidx.fragment.app.FragmentAnim$2: androidx.fragment.app.Fragment val$fragment
com.lyokone.location.FlutterLocation: io.flutter.plugin.common.MethodChannel$Result result
androidx.appcompat.app.AlertController$AlertParams: androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener mOnPrepareListViewListener
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableLeftTint
com.google.android.gms.location.zzo: com.google.android.gms.location.FusedLocationProviderClient zzaa
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.camera.PreviewScalingStrategy previewScalingStrategy
kotlinx.coroutines.internal.AtomicKt: java.lang.Object NO_DECISION
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean itemAdded
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_6
androidx.appcompat.R$attr: int alertDialogCenterButtons
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode: com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode PUNCT_SHIFT
androidx.appcompat.R$styleable: int Toolbar_subtitleTextColor
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory mFragmentFactory
com.google.android.gms.common.internal.BaseGmsClient$zzc: boolean zzcv
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetBottom
androidx.appcompat.widget.TintInfo: boolean mHasTintList
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_RIGHT
androidx.window.layout.SidecarCompat$FirstAttachAdapter: androidx.window.layout.SidecarCompat sidecarCompat
androidx.appcompat.view.menu.MenuBuilder: boolean mItemsChangedWhileDispatchPrevented
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
com.google.firebase.database.tubesock.WebSocket$State: com.google.firebase.database.tubesock.WebSocket$State DISCONNECTED
com.google.android.gms.location.LocationAvailability: int zzau
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock: com.google.firebase.database.connection.WebsocketConnection this$0
com.google.zxing.aztec.decoder.Decoder: java.lang.String[] UPPER_TABLE
com.google.android.gms.common.api.internal.zaad: com.google.android.gms.common.api.internal.GoogleApiManager zabo
androidx.appcompat.widget.SuggestionsAdapter: int mIconName2Col
com.google.android.gms.location.LocationSettingsStates: boolean zzbn
androidx.exifinterface.media.ExifInterface$ExifTag: java.lang.String name
androidx.appcompat.view.menu.CascadingMenuPopup: java.util.List mPendingMenus
com.google.android.gms.signin.zab: com.google.android.gms.common.api.Api API
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: float mAutoSizeStepGranularityInPx
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: long terminationDeadline
com.google.firebase.database.core.SyncTree$KeepSyncedEventRegistration: com.google.firebase.database.core.view.QuerySpec spec
androidx.core.app.ActivityCompat: androidx.core.app.ActivityCompat$PermissionCompatDelegate sDelegate
net.touchcapture.qr.flutterqr.Shared: io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding binding
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousFlags
androidx.activity.result.ActivityResultRegistry: java.util.Map mKeyToRc
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_TYPE_ARRAY
androidx.lifecycle.LiveData: java.lang.Object mPendingData
com.google.firebase.database.core.Context: boolean persistenceEnabled
androidx.appcompat.R$styleable: int ViewBackgroundHelper_backgroundTintMode
androidx.fragment.app.FragmentTransition$1: androidx.fragment.app.Fragment val$outFragment
io.flutter.plugins.pathprovider.PathProviderPlugin: io.flutter.plugin.common.MethodChannel channel
com.google.android.gms.maps.zzp: com.google.android.gms.maps.GoogleMap$OnPolygonClickListener zzx
androidx.core.graphics.drawable.IconCompat: java.lang.String mString1
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: java.lang.Object mRealOwner
androidx.fragment.app.Fragment: boolean mHasMenu
androidx.appcompat.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
com.baseflow.geolocator.location.FlutterLocationServiceListener: io.flutter.plugin.common.MethodChannel$Result result
androidx.core.app.NotificationCompat$Builder: java.util.ArrayList mInvisibleActions
androidx.appcompat.widget.SearchView: int mCollapsedImeOptions
androidx.fragment.app.DefaultSpecialEffectsController$6: androidx.fragment.app.SpecialEffectsController$Operation val$firstOut
androidx.core.view.ActionProvider: androidx.core.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener
com.google.android.gms.common.api.internal.zac: int type
androidx.appcompat.app.AlertController: android.widget.Button mButtonNegative
androidx.appcompat.app.AppCompatDelegateImpl: int mThemeResId
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingRight
kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean singleConsumer
com.google.firebase.database.tubesock.WebSocket: java.util.concurrent.atomic.AtomicInteger clientCount
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_CHARACTER
com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: com.google.android.gms.common.api.Api$AnyClientKey mClientKey
androidx.appcompat.R$styleable: int[] MenuGroup
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int[] mAutoSizeTextSizesInPx
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.PorterDuff$Mode mIconTintMode
com.journeyapps.barcodescanner.DecoderResultPointCallback: com.journeyapps.barcodescanner.Decoder decoder
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode transparent
com.google.firebase.database.DataSnapshot$1: java.util.Iterator val$iter
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.NestedScrollingParentHelper mParentHelper
com.journeyapps.barcodescanner.BarcodeResult: com.journeyapps.barcodescanner.SourceData sourceData
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType FULL
com.google.firebase.database.core.Repo$TransactionData: com.google.firebase.database.ValueEventListener outstandingListener
com.google.firebase.database.snapshot.StringNode$1: int[] $SwitchMap$com$google$firebase$database$snapshot$Node$HashVersion
io.flutter.view.AccessibilityBridge$StringAttribute: io.flutter.view.AccessibilityBridge$StringAttributeType type
androidx.core.widget.AutoScrollHelper: boolean mNeedsCancel
androidx.appcompat.R$id: int action_mode_close_button
com.google.firebase.database.connection.PersistentConnectionImpl: java.lang.String lastSessionId
androidx.cursoradapter.widget.ResourceCursorAdapter: int mLayout
com.google.zxing.pdf417.decoder.BarcodeValue: java.util.Map values
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mInnerInsetsRect
com.google.android.gms.location.LocationSettingsRequest: boolean zzbh
androidx.fragment.app.FragmentTransition$6: androidx.fragment.app.Fragment val$outFragment
androidx.appcompat.R$styleable: int[] TextAppearance
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: androidx.appcompat.widget.AbsActionBarView this$0
com.journeyapps.barcodescanner.camera.CameraInstance: java.lang.String TAG
com.google.firebase.database.core.SyncTree$8: com.google.firebase.database.core.Tag val$tag
androidx.fragment.app.FragmentTransitionCompat21$3: java.util.ArrayList val$sharedElementsIn
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent: android.os.IBinder iBinder
com.lyokone.location.FlutterLocation: io.flutter.plugin.common.MethodChannel$Result getLocationResult
androidx.fragment.app.FragmentManager: boolean mStateSaved
com.google.zxing.common.BitSource: int byteOffset
io.flutter.embedding.android.AndroidTouchProcessor: io.flutter.embedding.android.MotionEventTracker motionEventTracker
com.google.zxing.aztec.detector.Detector: com.google.zxing.common.BitMatrix image
com.google.firebase.database.Logger$Level: com.google.firebase.database.Logger$Level WARN
androidx.core.graphics.drawable.IconCompat: android.os.Parcelable mParcelable
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode image
com.google.zxing.client.android.AmbientLightManager: com.journeyapps.barcodescanner.camera.CameraSettings cameraSettings
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1 this$1
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable
androidx.appcompat.widget.SuggestionsAdapter: int mCommitIconResId
androidx.core.R$styleable: int GradientColor_android_type
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewInsetLeft
com.google.firebase.FirebaseOptions$Builder: java.lang.String gcmSenderId
androidx.appcompat.R$styleable: int ViewStubCompat_android_inflatedId
androidx.appcompat.view.menu.ListMenuItemView: android.widget.TextView mShortcutView
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long id
com.google.firebase.database.connection.RangeMerge: java.util.List optExclusiveStart
com.baseflow.geolocator.location.BackgroundNotification: java.lang.String channelId
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt: int AVAILABLE_PROCESSORS
com.google.android.gms.maps.model.CircleOptions: boolean zzcu
androidx.fragment.R$styleable: int[] GradientColor
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock$4: com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock this$1
androidx.fragment.app.Fragment: java.lang.String mWho
io.flutter.plugin.platform.VirtualDisplayController: android.view.Surface surface
androidx.core.os.CancellationSignal: boolean mCancelInProgress
androidx.appcompat.app.TwilightCalculator: long sunrise
androidx.appcompat.graphics.drawable.DrawableContainer: boolean mHasAlpha
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy bestForNavigation
kotlin.random.Random: kotlin.random.Random$Default Default
com.google.firebase.database.core.operation.Operation: com.google.firebase.database.core.Path path
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper: androidx.window.java.layout.WindowInfoTrackerCallbackAdapter adapter
com.lyokone.location.BackgroundNotification: androidx.core.app.NotificationCompat$Builder builder
io.flutter.plugins.googlemaps.GoogleMapBuilder: java.lang.Object initialMarkers
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$2: java.lang.String val$errorCode
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingListen: java.lang.Long tag
kotlinx.coroutines.internal.ThreadContextKt: kotlin.jvm.functions.Function2 findOne
androidx.appcompat.R$styleable: int MenuItem_contentDescription
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableBottom
androidx.appcompat.view.menu.MenuItemImpl: android.content.Intent mIntent
com.google.zxing.client.android.R$styleable: int zxing_finder_zxing_viewfinder_mask
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Configuration mOverrideConfiguration
io.flutter.embedding.android.DrawableSplashScreen$1: io.flutter.embedding.android.DrawableSplashScreen this$0
io.flutter.plugins.firebase.database.EventStreamHandler: com.google.firebase.database.ValueEventListener valueEventListener
androidx.appcompat.view.menu.MenuBuilder: boolean mIsVisibleItemsStale
com.google.zxing.maxicode.decoder.BitMatrixParser: int[][] BITNR
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol CLOSED_EMPTY
com.google.android.gms.common.internal.ClientSettings$Builder: java.lang.String zaol
com.google.zxing.oned.MultiFormatOneDReader: com.google.zxing.oned.OneDReader[] readers
androidx.fragment.app.FragmentStateManager$1: androidx.fragment.app.FragmentStateManager this$0
com.google.zxing.oned.UPCEReader: int[] MIDDLE_END_PATTERN
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String flutterAssetsDir
androidx.appcompat.widget.LinearLayoutCompat: float mWeightSum
androidx.appcompat.R$id: int scrollView
androidx.appcompat.widget.AppCompatTextClassifierHelper: android.widget.TextView mTextView
androidx.appcompat.R$id: int search_mag_icon
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides BOTH
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: kotlin.coroutines.Continuation $completion
com.google.zxing.qrcode.decoder.DataBlock: byte[] codewords
androidx.exifinterface.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.google.android.gms.common.internal.ClientIdentity: int uid
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color[] $VALUES
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollPosition
com.journeyapps.barcodescanner.BarcodeView$DecodeMode: com.journeyapps.barcodescanner.BarcodeView$DecodeMode[] $VALUES
androidx.core.view.WindowInsetsCompat$Impl20: boolean sVisibleRectReflectionFetched
androidx.fragment.app.FragmentTransition$5: android.graphics.Rect val$epicenter
com.google.firebase.database.core.view.ViewProcessor$WriteTreeCompleteChildSource: com.google.firebase.database.core.WriteTreeRef writes
com.google.firebase.database.core.persistence.CachePolicy: com.google.firebase.database.core.persistence.CachePolicy NONE
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: androidx.collection.LongSparseArray mTransitions
androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mRetainedFragments
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.ConnectionResult zzco
androidx.lifecycle.ReportFragment: androidx.lifecycle.ReportFragment$ActivityInitializationListener mProcessListener
androidx.window.R$attr: int splitRatio
androidx.lifecycle.LifecycleRegistry: boolean mHandlingEvent
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: androidx.appcompat.widget.AppCompatSpinner this$0
androidx.lifecycle.LiveData: java.lang.Object mData
androidx.appcompat.widget.DrawableUtils: int[] EMPTY_STATE_SET
kotlin.ranges.IntProgression: int last
com.google.android.gms.signin.internal.zak: com.google.android.gms.common.internal.ResolveAccountResponse zata
com.google.firebase.components.Component: java.util.Set dependencies
com.lyokone.location.FlutterLocation: io.flutter.plugin.common.EventChannel$EventSink events
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_LEFT
com.google.zxing.BinaryBitmap: com.google.zxing.common.BitMatrix matrix
com.google.zxing.pdf417.decoder.DecodedBitStreamParser: java.math.BigInteger[] EXP900
androidx.window.R$styleable: int ActivityRule_alwaysExpand
androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableTransition
kotlinx.coroutines.scheduling.TasksKt: long IDLE_WORKER_KEEP_ALIVE_NS
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize
androidx.appcompat.R$drawable: int abc_tab_indicator_material
com.google.firebase.database.Logger$Level: com.google.firebase.database.Logger$Level NONE
androidx.appcompat.widget.ActionBarContextView: android.widget.TextView mTitleView
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
com.google.zxing.client.android.R$id: int zxing_camera_error
androidx.window.core.Version: androidx.window.core.Version VERSION_1_0
com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterThreadUpdater
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType inputType
com.google.firebase.database.core.persistence.LRUCachePolicy: long maxSizeBytes
com.baseflow.geolocator.StreamHandlerImpl: android.content.Context context
io.flutter.plugins.imagepicker.ImagePickerPlugin: io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver observer
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.view.WindowManager windowManager
androidx.fragment.app.FragmentTransaction$Op: int mEnterAnim
com.google.firebase.database.core.SyncTree$15: com.google.firebase.database.core.SyncTree this$0
androidx.savedstate.SavedStateRegistry: boolean mRestored
androidx.appcompat.view.SupportMenuInflater$MenuState: android.content.res.ColorStateList itemIconTintList
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack this$0
androidx.appcompat.widget.ThemeUtils: int[] ACTIVATED_STATE_SET
io.flutter.view.AccessibilityBridge$SemanticsNode: int textSelectionExtent
kotlin.coroutines.CombinedContext$toString$1: kotlin.coroutines.CombinedContext$toString$1 INSTANCE
com.google.firebase.database.tubesock.MessageBuilderFactory$TextBuilder: java.lang.ThreadLocal localDecoder
androidx.appcompat.widget.ScrollingTabContainerView$TabView: androidx.appcompat.widget.ScrollingTabContainerView this$0
com.google.firebase.database.core.CompoundWrite$2: com.google.firebase.database.core.CompoundWrite this$0
com.google.android.gms.common.api.GoogleApi: android.os.Looper zabl
androidx.fragment.app.FragmentTransaction: int mExitAnim
io.flutter.plugin.platform.PlatformViewsController: int nextOverlayLayerId
com.google.zxing.common.BitArray: int[] bits
com.google.android.gms.internal.location.zzas: android.content.ContentProviderClient zzcv
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType[] $VALUES
com.google.android.gms.maps.model.MapStyleOptions: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.common.BasicMessageChannel: java.lang.String name
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0
com.google.firebase.database.DatabaseReference$2: com.google.firebase.database.core.utilities.Pair val$wrapped
androidx.appcompat.widget.ActionMenuView: boolean mFormatItems
androidx.appcompat.R$styleable: int AlertDialog_buttonPanelSideLayout
com.google.firebase.database.connection.PersistentConnectionImpl: int invalidAuthTokenCount
androidx.appcompat.R$styleable: int MenuItem_android_id
io.flutter.plugin.editing.ListenableEditingState: int mChangeNotificationDepth
androidx.customview.view.AbsSavedState: androidx.customview.view.AbsSavedState EMPTY_STATE
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode HANZI
androidx.appcompat.R$styleable: int[] PopupWindow
kotlinx.coroutines.ChildContinuation: kotlinx.coroutines.CancellableContinuationImpl child
kotlinx.coroutines.JobSupport: java.lang.Object _state
io.flutter.view.AccessibilityBridge$Flag: int value
com.google.android.gms.maps.model.CircleOptions: float zzcs
com.journeyapps.barcodescanner.RotationListener: com.journeyapps.barcodescanner.RotationCallback callback
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup fakeWindowRootView
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView this$0
com.google.firebase.database.core.Repo: long nextWriteId
com.google.android.gms.tasks.zzk: java.util.concurrent.Executor zzd
androidx.exifinterface.media.ExifInterface: java.util.regex.Pattern sNonZeroTimePattern
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCanConstantState
androidx.appcompat.R$style: int Theme_AppCompat_Light
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask DATA_MASK_011
androidx.appcompat.app.ResourcesFlusher: boolean sThemedResourceCache_mUnthemedEntriesFieldFetched
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder: boolean sReflectionSucceeded
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_FLUTTER_ASSETS_DIR_KEY
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy[] $VALUES
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient: io.flutter.plugins.urllauncher.WebViewActivity this$0
androidx.fragment.app.FragmentTransition$4: java.lang.Object val$exitTransition
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.util.Set zaq
com.google.firebase.database.core.view.DataEvent: java.lang.String prevName
com.google.firebase.database.android.AndroidPlatform$2: com.google.firebase.database.connection.PersistentConnection val$connection
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseHeight
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry mStart
com.google.android.gms.internal.location.zzas: java.util.Map zzcy
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_INTEROPERABILITY_TAGS
com.google.firebase.database.snapshot.LeafNode: java.lang.String lazyHash
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseContentInsets
com.google.android.gms.common.internal.zzp: boolean zzeo
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicIntegerFieldUpdater blockingTasksInBuffer$FU
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter mAdapter
androidx.fragment.app.SpecialEffectsController$Operation: boolean mIsComplete
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshMenuContent
androidx.appcompat.R$styleable: int Toolbar_buttonGravity
androidx.appcompat.app.AppCompatDelegateImpl: boolean IS_PRE_LOLLIPOP
kotlinx.coroutines.BlockingEventLoop: java.lang.Thread thread
androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim
androidx.appcompat.widget.SearchView: boolean mIconified
io.flutter.view.VsyncWaiter$DisplayListener: android.hardware.display.DisplayManager displayManager
androidx.appcompat.view.menu.ListMenuItemView: android.widget.ImageView mIconView
androidx.collection.ArraySet: int mSize
io.flutter.plugin.editing.InputConnectionAdaptor: int batchEditNestDepth
io.flutter.plugins.googlemaps.GoogleMapController: io.flutter.plugins.googlemaps.TileOverlaysController tileOverlaysController
androidx.multidex.MultiDex: boolean IS_VM_MULTIDEX_CAPABLE
kotlinx.coroutines.CommonPool: kotlinx.coroutines.CommonPool INSTANCE
io.flutter.plugin.platform.PlatformViewsController$1: io.flutter.plugin.platform.PlatformViewsController this$0
androidx.appcompat.R$string: int abc_menu_alt_shortcut_label
androidx.core.os.CancellationSignal: boolean mIsCanceled
com.google.zxing.aztec.decoder.Decoder: com.google.zxing.aztec.AztecDetectorResult ddata
com.journeyapps.barcodescanner.CaptureManager: com.google.zxing.client.android.BeepManager beepManager
com.google.android.gms.common.api.internal.zan: android.app.Dialog zaec
com.google.android.gms.maps.model.TileOverlayOptions: boolean zzct
com.google.firebase.database.core.utilities.DefaultRunLoop: java.util.concurrent.ScheduledThreadPoolExecutor executor
com.google.firebase.database.core.view.Event$EventType: com.google.firebase.database.core.view.Event$EventType VALUE
kotlinx.coroutines.ChildHandleNode: kotlinx.coroutines.ChildJob childJob
com.baseflow.geolocator.GeolocatorLocationService$LocalBinder: com.baseflow.geolocator.GeolocatorLocationService locationService
com.google.android.gms.common.api.internal.BackgroundDetector: com.google.android.gms.common.api.internal.BackgroundDetector zzat
androidx.appcompat.R$drawable: int abc_btn_check_material
kotlinx.coroutines.DebugKt: boolean ASSERTIONS_ENABLED
com.journeyapps.barcodescanner.DecoratedBarcodeView: android.widget.TextView statusView
androidx.appcompat.view.SupportMenuInflater$MenuState: int groupId
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight
androidx.appcompat.R$styleable: int ActionMode_closeItemLayout
com.google.firebase.database.core.Context: long cacheSize
androidx.core.view.ContentInfoCompat$Builder: android.content.ClipData mClip
androidx.appcompat.widget.ActionBarOverlayLayout$1: androidx.appcompat.widget.ActionBarOverlayLayout this$0
androidx.appcompat.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters
kotlin.internal.PlatformImplementations$ReflectThrowable: java.lang.reflect.Method getSuppressed
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintMode
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy high
kotlinx.coroutines.flow.AbstractFlow$collect$1: java.lang.Object L$0
androidx.appcompat.R$styleable: int SearchView_layout
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics viewportMetrics
com.baseflow.geolocator.MethodCallHandlerImpl: android.content.Context context
androidx.fragment.app.BackStackState: java.lang.String mName
androidx.exifinterface.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream
com.baseflow.geolocator.GeolocatorLocationService$LocalBinder: com.baseflow.geolocator.GeolocatorLocationService this$0
androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores
androidx.appcompat.R$styleable: int SearchView_android_focusable
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType URL
androidx.fragment.app.DialogFragment: android.app.Dialog mDialog
com.google.android.gms.location.LocationSettingsResult: com.google.android.gms.location.LocationSettingsStates zzbm
com.google.zxing.qrcode.decoder.Mode: int[] characterCountBitsForVersions
androidx.collection.ArraySet: int sTwiceBaseCacheSize
androidx.appcompat.widget.ThemeUtils: int[] TEMP_ARRAY
com.baseflow.geolocator.permission.PermissionManager: com.baseflow.geolocator.permission.PermissionResultCallback resultCallback
com.google.firebase.database.connection.util.RetryHelper$Builder: double jitterFactor
com.google.zxing.aztec.detector.Detector$Point: int y
androidx.appcompat.view.menu.ListMenuPresenter: int mThemeRes
com.journeyapps.barcodescanner.ViewfinderView: int maskColor
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingDisconnect: java.lang.Object data
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
androidx.appcompat.R$styleable: int[] ViewStubCompat
com.google.zxing.oned.EAN8Reader: int[] decodeMiddleCounters
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Matrix matrix
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel Q
androidx.appcompat.widget.SearchView: android.widget.ImageView mGoButton
io.flutter.plugin.editing.TextInputPlugin$2: double[] val$minMax
androidx.fragment.app.DialogFragment: androidx.lifecycle.Observer mObserver
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState
androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder
androidx.fragment.app.FragmentTransaction: int mPopExitAnim
androidx.core.graphics.drawable.WrappedDrawableState: android.content.res.ColorStateList mTint
androidx.appcompat.app.AppCompatViewInflater: java.lang.Object[] mConstructorArgs
androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode lastInputFocusedSemanticsNode
kotlinx.coroutines.Unconfined: kotlinx.coroutines.Unconfined INSTANCE
com.google.android.gms.dynamite.DynamiteModule$zza: android.database.Cursor zzio
androidx.window.R$id: int locale
com.google.android.gms.maps.model.Tile: android.os.Parcelable$Creator CREATOR
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence mTitle
com.google.zxing.pdf417.decoder.BarcodeMetadata: int errorCorrectionLevel
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface extensionCallback
androidx.appcompat.app.AppCompatActivity$1: androidx.appcompat.app.AppCompatActivity this$0
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor
androidx.core.content.ContextCompat: android.util.TypedValue sTempValue
com.google.firebase.database.DatabaseReference$2: com.google.firebase.database.DatabaseReference this$0
androidx.appcompat.R$id: int titleDividerNoCustom
androidx.core.widget.AutoScrollHelper: int mActivationDelay
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.GlobalQueue globalCpuQueue
androidx.appcompat.app.WindowDecorActionBar: boolean mHasEmbeddedTabs
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RRECT
com.journeyapps.barcodescanner.DecoderThread: android.os.HandlerThread thread
com.google.zxing.qrcode.decoder.QRCodeDecoderMetaData: boolean mirrored
com.journeyapps.barcodescanner.camera.AutoFocusManager: java.util.Collection FOCUS_MODES_CALLING_AF
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.google.zxing.common.detector.WhiteRectangleDetector: int downInit
androidx.appcompat.R$attr: int actionBarSize
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter
androidx.core.provider.CallbackWithHandler$2: androidx.core.provider.CallbackWithHandler this$0
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: int mOriginalClickableSpanId
io.flutter.plugins.googlemaps.GoogleMapController: java.util.List initialMarkers
io.flutter.plugins.googlemaps.PolylineController: float density
androidx.appcompat.R$styleable: int[] AppCompatSeekBar
androidx.appcompat.R$styleable: int[] FragmentContainerView
androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorUpdateListener mUpdateListener
androidx.appcompat.R$string: int abc_menu_ctrl_shortcut_label
com.google.firebase.database.core.SyncTree$2: com.google.firebase.database.core.Path val$path
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $VALUES
kotlinx.coroutines.internal.ArrayQueue: int tail
kotlin.sequences.ConstrainedOnceSequence: java.util.concurrent.atomic.AtomicReference sequenceRef
com.google.firebase.database.core.Repo$21: com.google.firebase.database.DatabaseError val$callbackError
com.journeyapps.barcodescanner.CameraPreview: android.view.WindowManager windowManager
com.google.android.gms.common.internal.BaseGmsClient$zzg: com.google.android.gms.common.internal.BaseGmsClient zzct
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener this$0
androidx.appcompat.R$attr: int actionBarWidgetTheme
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SET_SELECTION
com.google.firebase.database.core.Repo$13: com.google.firebase.database.core.Repo this$0
androidx.fragment.app.Fragment: java.lang.String mTag
androidx.appcompat.view.SupportMenuInflater$MenuState: char itemAlphabeticShortcut
androidx.fragment.app.Fragment: java.lang.Boolean mIsPrimaryNavigationFragment
com.google.android.gms.common.zzc: android.content.Context zzp
androidx.window.R$styleable: int[] ActivityFilter
androidx.fragment.app.FragmentManager: androidx.activity.OnBackPressedCallback mOnBackPressedCallback
com.google.firebase.FirebaseApp: java.lang.Object LOCK
androidx.fragment.app.FragmentManagerViewModel: boolean mIsStateSaved
com.google.zxing.common.DecoderResult: int structuredAppendParity
com.google.android.gms.maps.MapsInitializer: boolean zzbm
com.google.zxing.qrcode.decoder.Version: int totalCodewords
androidx.core.text.PrecomputedTextCompat$Params$Builder: android.text.TextDirectionHeuristic mTextDir
androidx.collection.ArraySet: androidx.collection.MapCollections mCollections
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$sharedElementsIn
com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar INSTANCE
androidx.appcompat.app.AppCompatDelegate: androidx.collection.ArraySet sActivityDelegates
androidx.appcompat.R$styleable: int[] PopupWindowBackgroundState
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: long mDuration
androidx.fragment.app.Fragment$AnimationInfo: int mPopExitAnim
com.google.android.gms.common.api.internal.BasePendingResult: boolean zadx
com.google.zxing.InvertedLuminanceSource: com.google.zxing.LuminanceSource delegate
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.reflect.Method sAddFontWeightStyle
androidx.core.app.NotificationCompat$Builder: java.lang.String mShortcutId
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel L
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
com.google.zxing.client.android.R$styleable: int zxing_finder_zxing_possible_result_points
androidx.core.graphics.drawable.IconCompat: int mInt2
io.flutter.embedding.engine.loader.FlutterLoader$1: android.content.Context val$appContext
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView
com.google.zxing.oned.UPCEANReader: int[] END_PATTERN
com.google.zxing.aztec.decoder.Decoder$Table: com.google.zxing.aztec.decoder.Decoder$Table PUNCT
com.google.firebase.database.core.Repo$4$1: com.google.firebase.database.core.SyncTree$CompletionListener val$onComplete
com.google.firebase.database.core.Context: com.google.firebase.database.core.RunLoop runLoop
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization NONE
com.google.zxing.client.android.R$styleable: int zxing_camera_preview_zxing_use_texture_view
com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: long WAITER_THREAD_OFFSET
androidx.appcompat.widget.ViewStubCompat: java.lang.ref.WeakReference mInflatedViewRef
androidx.core.app.NotificationCompat$Action: boolean mIsContextual
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sServedViewField
androidx.fragment.app.DefaultSpecialEffectsController$2: boolean val$isHideOperation
androidx.activity.result.IntentSenderRequest: android.content.Intent mFillInIntent
com.google.firebase.database.tubesock.WebSocketReceiver: com.google.firebase.database.tubesock.MessageBuilderFactory$Builder pendingBuilder
androidx.fragment.app.DefaultSpecialEffectsController$9: androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo val$transitionInfo
com.google.firebase.database.connection.util.RetryHelper: java.util.Random random
com.google.common.util.concurrent.ThreadFactoryBuilder: java.lang.Thread$UncaughtExceptionHandler uncaughtExceptionHandler
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.camera.DisplayConfiguration displayConfiguration
com.google.android.gms.maps.model.PolygonOptions: java.util.List zzdx
androidx.appcompat.widget.RtlSpacingHelper: int mExplicitRight
kotlin.ranges.IntProgression: kotlin.ranges.IntProgression$Companion Companion
androidx.fragment.app.FragmentHostCallback: int mWindowAnimations
com.google.android.gms.common.internal.zae: com.google.android.gms.common.api.internal.LifecycleFragment zaot
androidx.appcompat.R$styleable: int MenuItem_android_numericShortcut
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager mFragmentManager
androidx.appcompat.widget.AppCompatSpinner: android.widget.SpinnerAdapter mTempAdapter
androidx.appcompat.view.menu.MenuBuilder: java.lang.CharSequence mHeaderTitle
androidx.core.view.OneShotPreDrawListener: android.view.ViewTreeObserver mViewTreeObserver
io.flutter.plugins.urllauncher.WebViewActivity: java.lang.String URL_EXTRA
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.reflect.Method getParentNodeId
androidx.core.provider.FontRequestWorker$1: android.content.Context val$context
io.flutter.plugins.urllauncher.UrlLauncher: android.app.Activity activity
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.CursorAnchorInfo$Builder mCursorAnchorInfoBuilder
androidx.appcompat.app.AlertController: android.os.Message mButtonNegativeMessage
io.flutter.plugins.googlemaps.GoogleMapController: boolean indoorEnabled
com.google.android.gms.common.api.internal.zam: int zadm
com.google.firebase.database.connection.PersistentConnectionImpl: long connectionIds
androidx.core.R$id: int accessibility_custom_action_28
androidx.core.view.WindowInsetsCompat$Impl20: java.lang.Class sAttachInfoClass
com.google.android.gms.common.Feature: java.lang.String name
androidx.fragment.app.FragmentState: int mMaxLifecycleState
androidx.appcompat.R$styleable: int ActionBarLayout_android_layout_gravity
androidx.core.app.NotificationCompat$Builder: android.content.Context mContext
com.google.android.gms.maps.model.PolylineOptions: int zzee
io.flutter.view.AccessibilityBridge$SemanticsNode: float previousScrollExtentMax
com.google.android.gms.location.LocationResult: java.util.List zzbb
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mStateful
com.google.android.gms.common.internal.zae: android.content.Intent zaos
io.flutter.plugin.platform.VirtualDisplayController: android.content.Context context
androidx.appcompat.widget.LinearLayoutCompat: int mOrientation
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State INITIALIZED
androidx.appcompat.widget.ViewStubCompat: androidx.appcompat.widget.ViewStubCompat$OnInflateListener mInflateListener
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: java.lang.String encodedName
androidx.appcompat.widget.AppCompatTextHelper$1: int val$fontWeight
com.google.android.gms.maps.model.PolylineOptions: android.os.Parcelable$Creator CREATOR
com.baseflow.geolocator.location.LocationServiceStatusReceiver: io.flutter.plugin.common.EventChannel$EventSink events
androidx.core.text.PrecomputedTextCompat$Params$Builder: int mBreakStrategy
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.View mFlutterView
androidx.core.widget.AutoScrollHelper$ClampedScroller: float mTargetVelocityY
io.flutter.plugins.googlemaps.TileProviderController$Worker: java.util.concurrent.CountDownLatch countDownLatch
androidx.core.app.ActivityRecreator: android.os.Handler mainHandler
androidx.fragment.app.FragmentLayoutInflaterFactory: androidx.fragment.app.FragmentManager mFragmentManager
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode EDGE_TO_EDGE
com.google.firebase.database.core.operation.OperationSource: com.google.firebase.database.core.operation.OperationSource SERVER
io.flutter.plugins.flutterexifrotation.FlutterExifRotationPlugin$1: io.flutter.plugins.flutterexifrotation.FlutterExifRotationPlugin this$0
com.google.android.gms.common.internal.zzb: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.dart.DartMessenger: io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue platformTaskQueue
androidx.appcompat.R$styleable: int[] GradientColor
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: androidx.fragment.app.BackStackRecord firstOutTransaction
io.flutter.embedding.engine.loader.FlutterApplicationInfo: java.lang.String isolateSnapshotData
androidx.appcompat.app.AlertController$3: android.view.View val$bottom
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_IME_ENTER
com.lyokone.location.FlutterLocationService: com.lyokone.location.FlutterLocationService$Companion Companion
kotlinx.coroutines.JobSupport: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU
com.google.firebase.database.core.SyncTree$1: com.google.firebase.database.core.SyncTree this$0
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable
androidx.fragment.app.FragmentState: boolean mFromLayout
kotlin.text.DelimitedRangesSequence$iterator$1: int currentStartIndex
androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SimpleArrayMap mDelegates
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.KeyEventChannel keyEventChannel
com.google.firebase.database.core.Repo: com.google.firebase.database.logging.LogWrapper transactionLogger
androidx.core.R$styleable: int[] GradientColorItem
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: java.util.ArrayList mAnimators
androidx.core.app.NotificationCompat$Builder: java.util.ArrayList mActions
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass[] EMPTY_K_CLASS_ARRAY
com.google.zxing.client.android.camera.open.OpenCameraInterface: java.lang.String TAG
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuBuilder mMenu
com.google.zxing.common.DecoderResult: int structuredAppendSequenceNumber
com.google.firebase.database.core.Repo$8: com.google.firebase.database.DatabaseReference$CompletionListener val$onComplete
com.google.zxing.aztec.AztecDetectorResult: boolean compact
com.google.firebase.FirebaseOptions: java.lang.String projectId
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler windowManagerHandler
kotlin.collections.EmptyMap: kotlin.collections.EmptyMap INSTANCE
io.flutter.plugins.googlemaps.GoogleMapBuilder: java.lang.Object initialPolylines
androidx.fragment.app.FragmentAnim$1: androidx.fragment.app.Fragment val$fragment
com.google.android.gms.common.GooglePlayServicesUtilLight: boolean zzaj
androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed
androidx.fragment.app.FragmentStateManager: androidx.fragment.app.FragmentStore mFragmentStore
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: boolean mProxyStarted
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator
io.flutter.plugin.platform.VirtualDisplayController$1: java.lang.Runnable val$onNewSizeFrameAvailable
androidx.appcompat.view.menu.MenuItemImpl: boolean mHasIconTintMode
androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8L
com.google.android.gms.common.api.Status: com.google.android.gms.common.api.Status zzar
com.google.android.gms.common.api.internal.ApiKey: boolean zacx
androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionBar
kotlinx.coroutines.scheduling.NanoTimeSource: kotlinx.coroutines.scheduling.NanoTimeSource INSTANCE
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.FlutterJNI flutterJNI
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence mSubtitle
com.google.android.gms.location.LocationRequest: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.firebase.database.QueryBuilder: com.google.firebase.database.Query query
com.baseflow.geolocator.GeolocatorPlugin: android.content.ServiceConnection serviceConnection
kotlinx.coroutines.CompletedWithCancellation: kotlin.jvm.functions.Function1 onCancellation
com.google.android.gms.location.LocationRequest: int zzx
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.ResultCallback zadu
androidx.appcompat.view.menu.ListMenuPresenter: int mItemLayoutRes
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.BaseGmsClient$BaseConnectionCallbacks zzck
androidx.core.R$id: int tag_accessibility_actions
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.TextView mText1
androidx.appcompat.R$dimen: int abc_dropdownitem_icon_width
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action CUT
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder: java.lang.String dateCode
androidx.collection.SparseArrayCompat: int[] mKeys
androidx.fragment.app.FragmentAnim$2: android.view.ViewGroup val$container
androidx.appcompat.R$attr: int toolbarNavigationButtonStyle
androidx.fragment.app.Fragment$AnimationInfo: boolean mEnterTransitionPostponed
io.flutter.plugin.platform.PlatformPlugin: android.app.Activity activity
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection RTL
com.google.firebase.database.core.persistence.PruneForest: com.google.firebase.database.core.utilities.ImmutableTree KEEP_TREE
com.google.firebase.database.core.persistence.TrackedQuery: com.google.firebase.database.core.view.QuerySpec querySpec
com.journeyapps.barcodescanner.MixedDecoder: boolean isInverted
com.google.firebase.database.core.SyncTree$9: com.google.firebase.database.core.Path val$path
androidx.fragment.app.FragmentManager$7: androidx.fragment.app.FragmentManager this$0
androidx.appcompat.view.menu.MenuBuilder: boolean mQwertyMode
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemCheckable
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List labelAttributes
androidx.core.view.inputmethod.EditorInfoCompat: java.lang.String[] EMPTY_STRING_ARRAY
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mStrokePaint
com.journeyapps.barcodescanner.camera.CameraManager$CameraPreviewCallback: com.journeyapps.barcodescanner.camera.PreviewCallback callback
com.google.android.gms.internal.location.zzas: boolean zzcw
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: androidx.fragment.app.BackStackRecord mRecord
androidx.appcompat.view.menu.MenuBuilder: boolean mShortcutsVisible
com.google.firebase.database.tubesock.WebSocket: com.google.firebase.database.tubesock.WebSocketHandshake handshake
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI Big5
com.google.android.gms.internal.common.zzc: java.lang.ClassLoader zzd
com.google.android.gms.common.api.internal.zaae: com.google.android.gms.tasks.TaskCompletionSource zafu
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: java.lang.String viewType
androidx.appcompat.view.menu.MenuItemImpl: int mFlags
androidx.activity.result.ActivityResultRegistry$3: androidx.activity.result.contract.ActivityResultContract val$contract
com.journeyapps.barcodescanner.CameraPreview$4: com.journeyapps.barcodescanner.CameraPreview this$0
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState TERMINATED
com.google.android.gms.common.internal.zzf: java.util.Set zzdz
com.journeyapps.barcodescanner.camera.CameraManager: android.hardware.Camera camera
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo: androidx.core.os.CancellationSignal mSignal
com.google.android.gms.common.internal.zzf: android.os.IBinder zzcz
androidx.fragment.app.FragmentState: boolean mHidden
io.flutter.plugins.imagepicker.CameraDevice: io.flutter.plugins.imagepicker.CameraDevice[] $VALUES
com.google.zxing.qrcode.detector.FinderPatternInfo: com.google.zxing.qrcode.detector.FinderPattern topRight
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: com.google.zxing.common.BitArray information
androidx.appcompat.app.WindowDecorActionBar: boolean mShowingForMode
androidx.appcompat.app.TwilightCalculator: int state
androidx.fragment.app.FragmentStateManager$2: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State
io.flutter.embedding.engine.systemchannels.SystemChannel: io.flutter.plugin.common.BasicMessageChannel channel
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderPlatformThread$1: io.flutter.plugin.common.MethodChannel$Result val$result
androidx.exifinterface.media.ExifInterface: byte[] HEIF_TYPE_FTYP
androidx.fragment.app.DefaultSpecialEffectsController$7: androidx.fragment.app.FragmentTransitionImpl val$impl
com.google.firebase.database.connection.WebsocketConnection: com.google.firebase.database.connection.ConnectionContext connectionContext
com.google.android.gms.base.R$string: int common_google_play_services_install_text
androidx.appcompat.R$drawable: int abc_switch_thumb_material
io.flutter.plugin.common.StandardMessageCodec: boolean LITTLE_ENDIAN
androidx.appcompat.R$styleable: int[] AppCompatTextView
io.flutter.embedding.engine.dart.DartMessenger$Reply: int replyId
com.google.common.util.concurrent.AbstractFuture$Listener: java.util.concurrent.Executor executor
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE
com.journeyapps.barcodescanner.CaptureManager: com.journeyapps.barcodescanner.BarcodeCallback callback
androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityViewCommand mCommand
androidx.appcompat.app.AlertController$AlertParams: android.database.Cursor mCursor
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeTextType
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.CoroutineContext context
io.flutter.plugins.googlemaps.GoogleMapController: io.flutter.plugins.googlemaps.PolylinesController polylinesController
androidx.appcompat.R$styleable: int AppCompatTheme_panelBackground
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher mLifecycleCallbacksDispatcher
com.google.firebase.database.core.persistence.TrackedQueryManager: com.google.firebase.database.logging.LogWrapper logger
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$2
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String PUBLIC_AOT_SHARED_LIBRARY_NAME
androidx.core.app.NotificationCompatBuilder: androidx.core.app.NotificationCompat$Builder mBuilderCompat
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: io.flutter.embedding.engine.systemchannels.TextInputChannel this$0
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String zah
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureFinalizerRunnable: io.flutter.embedding.engine.FlutterJNI flutterJNI
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action SCROLL_DOWN
com.google.firebase.database.core.Repo$12: com.google.firebase.database.core.Repo this$0
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[] fields
kotlinx.coroutines.channels.ArrayChannel: java.util.concurrent.locks.ReentrantLock lock
androidx.fragment.app.FragmentTransition$5: androidx.collection.ArrayMap val$inSharedElements
androidx.appcompat.widget.VectorEnabledTintResources: boolean sCompatVectorFromResourcesEnabled
androidx.appcompat.R$attr: int actionModePopupWindowStyle
androidx.lifecycle.ClassesInfoCache$CallbackInfo: java.util.Map mEventToHandlers
androidx.core.provider.RequestExecutor$ReplyRunnable: java.util.concurrent.Callable mCallable
androidx.core.app.NotificationCompat$Action: java.lang.CharSequence title
androidx.core.app.NotificationCompatJellybean: java.lang.Object sActionsLock
com.lyokone.location.FlutterLocation: long updateIntervalMilliseconds
com.google.android.gms.common.internal.ClientSettings$Builder: java.util.Map zaoh
androidx.fragment.app.FragmentManager: java.util.ArrayList mTmpAddedFragments
androidx.window.R$styleable: int[] SplitPairFilter
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$2: java.lang.String val$errorMessage
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.graphics.Insets mStableInsets
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: int encodedValue
com.journeyapps.barcodescanner.camera.DisplayConfiguration: com.journeyapps.barcodescanner.camera.PreviewScalingStrategy previewScalingStrategy
androidx.core.widget.NestedScrollView: android.view.View mChildToScrollTo
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.ColorStateList mTintList
androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds
com.google.android.gms.internal.location.zzat: com.google.android.gms.common.api.internal.ListenerHolder zzda
com.google.firebase.database.core.SyncTree$2: long val$writeId
io.flutter.view.AccessibilityBridge$SemanticsNode: float[] globalTransform
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
androidx.appcompat.widget.ActionBarOverlayLayout: int mWindowVisibility
com.google.zxing.qrcode.decoder.DecodedBitStreamParser: char[] ALPHANUMERIC_CHARS
io.flutter.plugins.googlemaps.PolylinesController: com.google.android.gms.maps.GoogleMap googleMap
androidx.appcompat.widget.TooltipPopup: int[] mTmpAppPos
androidx.core.provider.FontRequestWorker: java.lang.Object LOCK
com.google.firebase.database.core.utilities.OffsetClock: com.google.firebase.database.core.utilities.Clock baseClock
android.support.v4.app.INotificationSideChannel$Stub$Proxy: android.support.v4.app.INotificationSideChannel sDefaultImpl
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
com.google.firebase.database.connection.util.RetryHelper: java.util.concurrent.ScheduledExecutorService executorService
com.google.zxing.datamatrix.decoder.BitMatrixParser: com.google.zxing.common.BitMatrix mappingBitMatrix
androidx.fragment.app.Fragment$4: androidx.fragment.app.Fragment this$0
androidx.appcompat.R$styleable: int TextAppearance_textLocale
androidx.appcompat.R$styleable: int Spinner_android_prompt
androidx.core.view.ViewCompat: java.lang.reflect.Field sMinHeightField
com.google.android.gms.common.internal.BaseGmsClient$zzc: com.google.android.gms.common.internal.BaseGmsClient zzct
com.google.firebase.database.tubesock.WebSocket: java.lang.String sslCacheDirectory
androidx.appcompat.app.AlertController: int mButtonPanelLayoutHint
com.google.firebase.database.android.AndroidPlatform: android.content.Context applicationContext
com.google.firebase.database.connection.util.RetryHelper: boolean lastWasSuccess
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: java.lang.Object $expect$inlined
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection LTR
androidx.fragment.app.Fragment: boolean mHiddenChanged
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.util.ArrayList mChildren
io.flutter.view.AccessibilityBridge: int FIRST_RESOURCE_ID
androidx.appcompat.widget.AppCompatTextHelper$1: java.lang.ref.WeakReference val$textViewWeak
androidx.appcompat.R$drawable: int abc_btn_colored_material
com.google.zxing.pdf417.decoder.DetectionResult: com.google.zxing.pdf417.decoder.BarcodeMetadata barcodeMetadata
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mMessage
com.google.firebase.database.core.view.ViewProcessor: com.google.firebase.database.core.view.filter.NodeFilter$CompleteChildSource NO_COMPLETE_SOURCE
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets mSystemWindowInsets
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: androidx.appcompat.widget.ScrollingTabContainerView this$0
androidx.savedstate.R$id: int view_tree_saved_state_registry_owner
com.lyokone.location.LocationPlugin: com.lyokone.location.MethodCallHandlerImpl methodCallHandler
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintList
io.flutter.plugins.googlemaps.MarkerController: boolean consumeTapEvents
androidx.appcompat.view.menu.StandardMenuPopup: int mPopupMaxWidth
androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: int selectionEnd
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: android.content.BroadcastReceiver mReceiver
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: java.util.Stack currentPath
io.flutter.plugins.googlemaps.GoogleMapsPlugin: androidx.lifecycle.Lifecycle lifecycle
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
com.google.firebase.database.snapshot.IndexedNode: com.google.firebase.database.collection.ImmutableSortedSet indexed
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mItems
com.google.zxing.qrcode.decoder.Version$ECBlocks: com.google.zxing.qrcode.decoder.Version$ECB[] ecBlocks
androidx.appcompat.widget.ListPopupWindow: android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.ListenableEditingState mEditable
com.google.firebase.database.core.Repo$13: com.google.firebase.database.DatabaseReference$CompletionListener val$onComplete
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: androidx.vectordrawable.graphics.drawable.ArgbEvaluator sInstance
com.google.android.gms.common.internal.ClientSettings$OptionalApiSettings: java.util.Set mScopes
com.google.zxing.oned.rss.RSS14Reader: int[][] FINDER_PATTERNS
com.journeyapps.barcodescanner.CaptureManager: java.lang.String missingCameraPermissionDialogMessage
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: java.lang.StringBuilder buffer
androidx.appcompat.R$styleable: int MenuGroup_android_menuCategory
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int mStrategy
androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentManagerViewModel mNonConfig
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int[][] mStateSets
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: io.flutter.plugin.common.EventChannel$StreamHandler handler
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY
com.google.android.gms.common.util.DefaultClock: com.google.android.gms.common.util.DefaultClock zzgm
com.google.android.gms.location.LocationRequest: boolean zzay
kotlin.text.DelimitedRangesSequence: java.lang.CharSequence input
androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mShowListener
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParentTouch
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.internal.LockFreeLinkedListHead queue
com.journeyapps.barcodescanner.ViewfinderView$1: com.journeyapps.barcodescanner.ViewfinderView this$0
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener touchExplorationStateChangeListener
com.google.zxing.PlanarYUVLuminanceSource: int dataHeight
androidx.appcompat.R$styleable: int AlertDialog_listLayout
com.google.android.gms.common.api.Status: java.lang.String zzj
androidx.activity.result.IntentSenderRequest$Builder: int mFlagsMask
androidx.appcompat.R$id: int edit_query
com.google.android.gms.location.LocationSettingsStates: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.CoroutineExceptionHandler: kotlinx.coroutines.CoroutineExceptionHandler$Key Key
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] $VALUES
com.google.android.gms.maps.model.VisibleRegion: com.google.android.gms.maps.model.LatLngBounds latLngBounds
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List increasedValueAttributes
androidx.core.R$styleable: int[] GradientColor
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List childrenInHitTestOrder
androidx.appcompat.view.menu.MenuItemImpl: android.view.ContextMenu$ContextMenuInfo mMenuInfo
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
com.google.firebase.database.core.Context$1: java.util.concurrent.ScheduledExecutorService val$executorService
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mReenterTransition
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mMinWidthMinor
com.google.firebase.database.core.Repo$6: com.google.firebase.database.core.UserWriteRecord val$write
com.lyokone.location.BackgroundNotification: com.lyokone.location.NotificationOptions options
com.google.android.gms.common.api.internal.BackgroundDetector: java.util.concurrent.atomic.AtomicBoolean zzav
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
com.lyokone.location.FlutterLocation: com.google.android.gms.location.SettingsClient mSettingsClient
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeWidth
io.flutter.plugins.imagepicker.ImagePickerCache: android.content.SharedPreferences prefs
com.google.android.gms.tasks.zzv: com.google.android.gms.tasks.zzu zzad
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler localizationMessageHandler
com.google.zxing.client.android.R$id: int zxing_status_view
kotlin.jvm.internal.CallableReference: java.lang.String name
com.journeyapps.barcodescanner.camera.CameraInstance: java.lang.Runnable closer
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode[] a
androidx.fragment.app.BackStackState: int mIndex
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: androidx.appcompat.view.menu.MenuBuilder val$menu
com.google.firebase.database.core.Repo$12: com.google.firebase.database.DatabaseReference$CompletionListener val$listener
androidx.appcompat.R$layout: int abc_action_bar_title_item
kotlinx.coroutines.scheduling.WorkQueue: java.util.concurrent.atomic.AtomicIntegerFieldUpdater producerIndex$FU
com.google.zxing.datamatrix.decoder.DataBlock: byte[] codewords
kotlin.ranges.IntProgressionIterator: boolean hasNext
androidx.appcompat.view.menu.StandardMenuPopup$2: androidx.appcompat.view.menu.StandardMenuPopup this$0
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: io.flutter.plugin.common.BasicMessageChannel this$0
androidx.activity.ComponentActivity$2: androidx.activity.ComponentActivity this$0
androidx.appcompat.view.menu.ListMenuItemView: android.widget.RadioButton mRadioButton
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mContentTitle
com.google.zxing.client.android.DecodeFormatManager: java.util.Set AZTEC_FORMATS
com.journeyapps.barcodescanner.camera.CameraInstance$4: com.journeyapps.barcodescanner.camera.CameraInstance this$0
androidx.core.widget.ListViewAutoScrollHelper: android.widget.ListView mTarget
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.ColorFilter mColorFilter
com.google.firebase.database.core.Constants: com.google.firebase.database.snapshot.ChildKey DOT_INFO_AUTHENTICATED
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: java.util.Map componentNameToResults
androidx.cursoradapter.widget.CursorAdapter: int mRowIDColumn
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: androidx.appcompat.widget.DropDownListView this$0
androidx.appcompat.widget.ActionBarContainer: android.graphics.drawable.Drawable mSplitBackground
androidx.appcompat.app.AppCompatActivity: android.content.res.Resources mResources
androidx.appcompat.view.SupportMenuInflater$MenuState: int groupCategory
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathOffset
com.google.firebase.components.RestrictedComponentContainer: java.util.Set allowedPublishedEvents
com.google.firebase.database.core.Repo$16: com.google.firebase.database.DataSnapshot val$snap
com.google.firebase.database.tubesock.WebSocket$State: com.google.firebase.database.tubesock.WebSocket$State DISCONNECTING
com.google.android.gms.location.zzaj: int zzas
com.google.firebase.components.ComponentRuntime: com.google.firebase.components.EventBus eventBus
androidx.appcompat.R$attr: int seekBarStyle
com.google.android.gms.internal.base.zab: java.lang.String zac
androidx.appcompat.widget.SearchView: int[] mTemp2
androidx.core.app.ActivityRecreator: java.lang.reflect.Field tokenField
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] $VALUES
com.google.zxing.oned.rss.expanded.RSSExpandedReader: java.util.List pairs
com.google.android.gms.common.internal.zak: com.google.android.gms.common.api.PendingResult zaph
com.google.firebase.database.core.view.CacheNode: boolean fullyInitialized
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility PROTECTED
androidx.appcompat.R$styleable: int Toolbar_titleMarginEnd
com.google.android.gms.common.GooglePlayServicesUtilLight: java.util.concurrent.atomic.AtomicBoolean zzal
com.baseflow.geolocator.location.LocationManagerClient: com.baseflow.geolocator.location.LocationOptions locationOptions
com.baseflow.geolocator.location.BackgroundNotification: java.lang.Integer notificationId
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap mStrokeLineCap
com.google.android.gms.maps.model.MarkerOptions: float zzdc
androidx.appcompat.R$id: int scrollIndicatorDown
androidx.core.app.NotificationManagerCompat$SideChannelManager: android.content.Context mContext
com.google.zxing.oned.rss.expanded.decoders.DecodedObject: int newPosition
androidx.appcompat.widget.ActionMenuView$LayoutParams: int extraPixels
com.google.zxing.common.CharacterSetECI: java.lang.String[] otherEncodingNames
androidx.appcompat.R$layout: int abc_action_menu_layout
com.google.firebase.database.core.Repo$4$1: com.google.firebase.database.core.view.QuerySpec val$query
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask DATA_MASK_001
androidx.lifecycle.ReflectiveGenericLifecycleObserver: java.lang.Object mWrapped
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.NavigationChannel navigationChannel
com.google.zxing.pdf417.decoder.PDF417CodewordDecoder: float[][] RATIOS_TABLE
com.google.zxing.qrcode.decoder.Mode: int bits
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache: java.lang.reflect.Method getModuleMethod
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMinor
com.google.zxing.client.android.R$id: int zxing_decode_succeeded
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mCommitRunnables
kotlin.text.DelimitedRangesSequence: kotlin.jvm.functions.Function2 getNextMatch
com.google.firebase.database.core.utilities.Utilities: char[] HEX_CHARACTERS
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: com.google.android.gms.common.api.Api$Client zais
androidx.core.widget.AutoScrollHelper$ClampedScroller: long mDeltaTime
androidx.appcompat.R$styleable: int SearchView_commitIcon
androidx.lifecycle.LiveData$ObserverWrapper: int mLastVersion
androidx.fragment.app.FragmentTransition$5: androidx.fragment.app.FragmentTransitionImpl val$impl
com.google.firebase.database.connection.WebsocketConnection: java.util.concurrent.ScheduledFuture connectTimeout
io.flutter.view.AccessibilityBridge$4: io.flutter.view.AccessibilityBridge this$0
androidx.fragment.app.Fragment: int mFragmentId
androidx.core.view.WindowInsetsControllerCompat$Impl20: android.view.View mView
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: int transitions
androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipCompatHandler sActiveHandler
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.CoroutineScheduler$Companion Companion
kotlinx.coroutines.JobCancellationException: kotlinx.coroutines.Job job
io.flutter.plugins.urllauncher.UrlLauncherPlugin: io.flutter.plugins.urllauncher.MethodCallHandlerImpl methodCallHandler
com.google.firebase.database.core.ChildEventRegistration$1: int[] $SwitchMap$com$google$firebase$database$core$view$Event$EventType
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnKeyListener mOnKeyListener
com.google.zxing.NotFoundException: com.google.zxing.NotFoundException INSTANCE
androidx.appcompat.R$styleable: int LinearLayoutCompat_showDividers
com.google.firebase.database.FirebaseDatabase: com.google.firebase.emulators.EmulatedServiceSettings emulatorSettings
com.google.android.gms.signin.zab: com.google.android.gms.common.api.Scope zas
androidx.appcompat.R$id: int search_button
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
com.google.android.gms.auth.api.signin.GoogleSignInAccount: com.google.android.gms.common.util.Clock zaf
com.baseflow.geolocator.GeolocatorLocationService: com.baseflow.geolocator.location.BackgroundNotification backgroundNotification
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat DATA_MATRIX
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mPivotX
com.google.android.gms.common.api.internal.zacp: com.google.android.gms.common.api.internal.BasePendingResult[] zalc
androidx.core.widget.AutoSizeableTextView: boolean PLATFORM_SUPPORTS_AUTOSIZE
com.lyokone.location.FlutterLocation: float distanceFilter
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: androidx.window.layout.WindowInfoTracker tracker
com.google.firebase.database.snapshot.CompoundHash: java.util.List posts
com.google.firebase.database.snapshot.LeafNode$LeafType: com.google.firebase.database.snapshot.LeafNode$LeafType Boolean
androidx.activity.result.ActivityResultRegistry: java.util.ArrayList mLaunchedKeys
androidx.appcompat.widget.DropDownListView: boolean mHijackFocus
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mFillAlpha
com.google.firebase.database.core.Repo$14: com.google.firebase.database.core.Repo this$0
com.google.android.gms.signin.SignInOptions: com.google.android.gms.signin.SignInOptions DEFAULT
androidx.core.app.NotificationManagerCompat$NotifyTask: java.lang.String packageName
com.google.firebase.database.core.view.View: com.google.firebase.database.core.view.EventGenerator eventGenerator
com.google.firebase.database.snapshot.Node$HashVersion: com.google.firebase.database.snapshot.Node$HashVersion[] $VALUES
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix mLocalMatrix
com.google.android.gms.common.api.Status: com.google.android.gms.common.api.Status RESULT_INTERRUPTED
androidx.loader.app.LoaderManagerImpl: boolean DEBUG
androidx.core.R$id: int accessibility_custom_action_20
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mDensity
androidx.appcompat.R$styleable: int[] AnimatedStateListDrawableTransition
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.CoroutineContext collectContext
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
androidx.fragment.app.FragmentTransition$4: java.util.ArrayList val$enteringViews
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask[] $VALUES
com.google.firebase.database.Query$3: com.google.firebase.database.Query this$0
com.google.common.util.concurrent.ThreadFactoryBuilder$1: java.util.concurrent.atomic.AtomicLong val$count
androidx.core.R$id: int tag_accessibility_pane_title
androidx.activity.OnBackPressedDispatcher: java.util.ArrayDeque mOnBackPressedCallbacks
com.google.android.gms.common.api.internal.zabu: int zajy
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.Rect mHotspotBounds
androidx.appcompat.view.menu.SubMenuWrapperICS: androidx.core.internal.view.SupportSubMenu mSubMenu
io.flutter.view.AccessibilityBridge$SemanticsNode: int scrollChildren
androidx.appcompat.R$layout: int support_simple_spinner_dropdown_item
com.google.firebase.database.core.view.QueryParams$ViewFrom: com.google.firebase.database.core.view.QueryParams$ViewFrom[] $VALUES
com.google.android.gms.signin.zab: com.google.android.gms.common.api.Scope zar
kotlinx.coroutines.flow.internal.SafeCollectorKt: kotlin.jvm.functions.Function3 emitFun
androidx.core.widget.AutoScrollHelper: boolean mEnabled
androidx.appcompat.view.menu.StandardMenuPopup: int mPopupStyleAttr
com.journeyapps.barcodescanner.BarcodeView: android.os.Handler$Callback resultCallback
com.google.zxing.oned.rss.DataCharacter: int value
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack primaryActivityStack
com.google.firebase.components.CycleDetector$ComponentNode: java.util.Set dependencies
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.view.ActionProvider mActionProvider
com.google.android.gms.location.zzj: int zzx
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: android.net.Uri mContentUri
androidx.appcompat.view.menu.MenuDialogHelper: androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback
com.google.android.gms.tasks.zzu: boolean zzz
com.google.common.util.concurrent.ThreadFactoryBuilder$1: java.lang.Thread$UncaughtExceptionHandler val$uncaughtExceptionHandler
com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState: com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState Connected
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_CHECKABLE_BUTTON_LIST
com.google.android.gms.common.internal.ResolveAccountRequest: int zapl
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
androidx.core.provider.FontRequestWorker$3: java.lang.String val$id
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: java.lang.Integer systemNavigationBarColor
com.google.android.gms.common.internal.GetServiceRequest: android.accounts.Account zzdl
androidx.window.embedding.SplitRule: int minWidth
com.journeyapps.barcodescanner.Size: int width
androidx.fragment.app.SpecialEffectsController$Operation: androidx.fragment.app.Fragment mFragment
com.google.android.gms.common.internal.zak: com.google.android.gms.common.internal.PendingResultUtil$zaa zapk
io.flutter.plugins.imagepicker.ImagePickerPlugin: android.app.Application application
androidx.window.embedding.MatcherUtils: androidx.window.embedding.MatcherUtils INSTANCE
com.google.firebase.database.core.ValueEventRegistration: com.google.firebase.database.ValueEventListener eventListener
androidx.exifinterface.media.ExifInterface: int[] BITS_PER_SAMPLE_GREYSCALE_1
androidx.appcompat.R$layout: int abc_screen_toolbar
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuItemImpl mExpandedItem
androidx.appcompat.R$styleable: int Toolbar_contentInsetEnd
io.flutter.view.VsyncWaiter$DisplayListener: io.flutter.view.VsyncWaiter this$0
com.google.zxing.oned.Code39Reader: java.lang.StringBuilder decodeRowResult
io.flutter.plugins.googlemaps.CirclesController: float density
com.journeyapps.barcodescanner.SourceData: com.journeyapps.barcodescanner.RawImageData data
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper: android.view.MenuItem$OnMenuItemClickListener mObject
com.google.firebase.database.snapshot.ValueIndex: com.google.firebase.database.snapshot.ValueIndex INSTANCE
com.google.firebase.database.connection.PersistentConnectionImpl: long currentGetTokenAttempt
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: boolean needsComma
com.google.android.gms.location.LocationServices: com.google.android.gms.location.GeofencingApi GeofencingApi
com.google.android.gms.tasks.zzc: java.util.concurrent.Executor zzd
androidx.appcompat.widget.ThemeUtils: int[] DISABLED_STATE_SET
androidx.appcompat.R$dimen: int abc_config_prefDialogWidth
androidx.appcompat.R$styleable: int AppCompatTheme_windowMinWidthMinor
com.google.firebase.database.core.Repo$TransactionStatus: com.google.firebase.database.core.Repo$TransactionStatus SENT
com.google.zxing.datamatrix.decoder.Version: com.google.zxing.datamatrix.decoder.Version$ECBlocks ecBlocks
com.google.android.gms.maps.MapView$zza: com.google.android.gms.maps.internal.IMapViewDelegate zzbh
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: com.google.zxing.ResultPoint to
androidx.arch.core.internal.SafeIterableMap$Entry: androidx.arch.core.internal.SafeIterableMap$Entry mPrevious
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] $VALUES
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType LIGHT_IMPACT
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView
androidx.appcompat.view.menu.MenuPopupHelper: int mDropDownGravity
com.baseflow.geolocator.location.FusedLocationClient$2: int[] $SwitchMap$com$baseflow$geolocator$location$LocationAccuracy
androidx.core.provider.FontsContractCompat$FontInfo: int mTtcIndex
androidx.fragment.app.Fragment: boolean mIsNewlyAdded
com.google.android.gms.tasks.TaskExecutors: java.util.concurrent.Executor zzw
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeStepGranularity
com.google.zxing.qrcode.decoder.Version$ECB: int count
androidx.appcompat.R$styleable: int AppCompatTheme_viewInflaterClass
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: boolean released
com.google.firebase.database.core.view.View: com.google.firebase.database.core.view.QuerySpec query
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: java.lang.String engineCachesPath
com.google.firebase.database.connection.PersistentConnectionImpl: com.google.firebase.database.connection.ConnectionTokenProvider authTokenProvider
com.google.firebase.database.core.Context$1: com.google.firebase.database.connection.ConnectionTokenProvider$GetTokenCallback val$callback
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: io.flutter.plugin.common.MethodChannel this$0
io.flutter.embedding.android.MotionEventTracker: android.util.LongSparseArray eventById
kotlin.KotlinVersion: kotlin.KotlinVersion$Companion Companion
com.google.firebase.database.Query$2: com.google.firebase.database.Query this$0
com.google.zxing.client.android.R$styleable: int zxing_finder_zxing_result_view
com.google.zxing.oned.rss.expanded.RSSExpandedReader: int[] EVEN_TOTAL_SUBSET
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: byte[] val$data
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: androidx.collection.ArrayMap mTargetNameMap
com.google.firebase.components.Component$Builder: java.util.Set dependencies
androidx.appcompat.app.WindowDecorActionBar: boolean mShowHideAnimationEnabled
com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator: float average
androidx.appcompat.widget.AppCompatRatingBar: androidx.appcompat.widget.AppCompatProgressBarHelper mAppCompatProgressBarHelper
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType NEED_RESULT_POINT_CALLBACK
androidx.appcompat.R$styleable: int[] DrawerArrowToggle
androidx.core.view.ContentInfoCompat$Builder: int mSource
androidx.appcompat.app.TwilightManager: androidx.appcompat.app.TwilightManager sInstance
com.google.common.util.concurrent.ThreadFactoryBuilder$1: java.util.concurrent.ThreadFactory val$backingThreadFactory
kotlinx.coroutines.flow.AbstractFlow$collect$1: kotlinx.coroutines.flow.AbstractFlow this$0
com.google.zxing.client.android.R$id: int zxing_barcode_surface
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: android.content.SharedPreferences heartBeatSharedPreferences
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type NO_TARGET
com.baseflow.geolocator.LocationServiceHandlerImpl: android.app.Activity activity
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: android.view.animation.Interpolator mInterpolator
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sNextServedViewField
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedCallback mOnBackPressedCallback
io.flutter.plugin.platform.VirtualDisplayController: android.hardware.display.VirtualDisplay virtualDisplay
com.google.firebase.database.core.ChildEventRegistration: com.google.firebase.database.ChildEventListener eventListener
androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar
com.google.zxing.oned.Code128Reader: int[][] CODE_PATTERNS
com.google.zxing.client.android.InactivityTimer: android.content.BroadcastReceiver powerStatusReceiver
com.google.android.gms.common.internal.BaseGmsClient$zzf: com.google.android.gms.common.internal.BaseGmsClient zzct
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableRightTint
androidx.collection.MapCollections$KeySet: androidx.collection.MapCollections this$0
androidx.appcompat.view.menu.MenuBuilder: boolean mGroupDividerEnabled
io.flutter.embedding.engine.systemchannels.LifecycleChannel: io.flutter.plugin.common.BasicMessageChannel channel
com.google.android.gms.common.api.internal.GoogleApiManager$zab: com.google.android.gms.common.api.Api$Client zais
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mIgnoreWindowContentOverlay
com.google.zxing.pdf417.decoder.Codeword: int bucket
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: java.util.concurrent.Executor backgroundExecutor
com.google.zxing.pdf417.decoder.BarcodeMetadata: int columnCount
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_LEFT
io.flutter.view.AccessibilityBridge$SemanticsNode: int previousTextSelectionExtent
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.animation.Animator$AnimatorListener mAnimatorListener
com.google.firebase.database.connection.Connection: long connectionIds
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadPreviousConfig
com.google.android.gms.internal.location.zzo: com.google.android.gms.internal.location.zzm zzch
com.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.Wrappers zzhz
net.touchcapture.qr.flutterqr.QRView: boolean permissionGranted
androidx.appcompat.widget.SuggestionsAdapter: int mText2UrlCol
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners
io.flutter.embedding.android.FlutterActivity: int FLUTTER_VIEW_ID
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: androidx.appcompat.app.TwilightManager mTwilightManager
com.google.android.gms.location.LocationSettingsRequest$Builder: boolean zzbi
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int viewPaddingTop
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.BasePendingResult$CallbackHandler zadq
com.google.common.util.concurrent.ThreadFactoryBuilder$1: java.lang.Boolean val$daemon
com.google.android.gms.common.api.internal.zak: boolean zadh
androidx.fragment.app.SpecialEffectsController$2: androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation val$operation
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
com.google.firebase.database.core.operation.Operation: com.google.firebase.database.core.operation.Operation$OperationType type
kotlinx.coroutines.flow.SafeFlow: kotlin.jvm.functions.Function2 block
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol HANDLER_INVOKED
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$outNames
com.google.android.gms.location.zzae: android.os.Parcelable$Creator CREATOR
com.google.firebase.database.core.SyncTree$2: boolean val$persist
androidx.appcompat.widget.ActionBarOverlayLayout: android.widget.OverScroller mFlingEstimator
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: android.widget.ListAdapter mListAdapter
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.ColorFilter mColorFilter
androidx.appcompat.widget.ToolbarWidgetWrapper$2: boolean mCanceled
kotlin.jvm.internal.ClassReference: java.util.HashMap primitiveFqNames
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind overlay
com.journeyapps.barcodescanner.camera.CameraManager: android.content.Context context
androidx.lifecycle.LiveData: boolean mDispatchingValue
com.google.android.gms.common.api.internal.zabl: com.google.android.gms.common.api.internal.zabm zajd
androidx.core.provider.FontRequestWorker$3: androidx.core.provider.FontRequest val$request
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface sidecar
kotlinx.coroutines.CompletedContinuation: java.lang.Object result
kotlinx.coroutines.CoroutineExceptionHandlerImplKt: java.util.List handlers
com.google.firebase.database.core.Repo$TransactionStatus: com.google.firebase.database.core.Repo$TransactionStatus INITIALIZING
androidx.appcompat.widget.AppCompatImageHelper: androidx.appcompat.widget.TintInfo mTmpInfo
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.util.List zan
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver: androidx.cursoradapter.widget.CursorAdapter this$0
com.journeyapps.barcodescanner.camera.CameraManager: com.journeyapps.barcodescanner.camera.DisplayConfiguration displayConfiguration
androidx.appcompat.R$drawable: int abc_textfield_search_activated_mtrl_alpha
androidx.appcompat.view.menu.MenuPopupHelper: android.widget.PopupWindow$OnDismissListener mOnDismissListener
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mFixedWidthMajor
androidx.activity.result.ActivityResultRegistry$CallbackAndContract: androidx.activity.result.contract.ActivityResultContract mContract
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
com.google.firebase.database.core.view.EventGenerator: com.google.firebase.database.core.view.QuerySpec query
androidx.appcompat.widget.Toolbar$3: androidx.appcompat.widget.Toolbar this$0
androidx.appcompat.widget.ActionBarOverlayLayout: int mLastSystemUiVisibility
com.google.zxing.client.android.AmbientLightManager: android.os.Handler handler
kotlin.ranges.IntRange: kotlin.ranges.IntRange$Companion Companion
androidx.appcompat.view.menu.ListMenuItemView: int mTextAppearance
com.google.zxing.pdf417.decoder.Codeword: int startX
com.google.firebase.database.core.Repo$21: com.google.firebase.database.core.Repo$TransactionData val$transaction
io.flutter.plugins.googlemaps.TileOverlaysController: io.flutter.plugin.common.MethodChannel methodChannel
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat PLAIN_TEXT
com.google.zxing.client.android.R$string: int zxing_button_ok
androidx.core.view.ViewCompat: androidx.core.view.OnReceiveContentViewBehavior NO_OP_ON_RECEIVE_CONTENT_VIEW_BEHAVIOR
androidx.appcompat.widget.AppCompatSpinner: android.graphics.Rect mTempRect
androidx.core.view.ViewPropertyAnimatorCompat: java.lang.Runnable mEndAction
com.google.android.gms.common.api.internal.zal: com.google.android.gms.common.api.internal.zak zadl
androidx.lifecycle.LiveData$ObserverWrapper: boolean mActive
androidx.appcompat.widget.SearchView: int[] mTemp
com.google.firebase.database.logging.LogWrapper: java.lang.String component
androidx.activity.contextaware.ContextAwareHelper: java.util.Set mListeners
androidx.appcompat.R$layout: int abc_list_menu_item_layout
kotlinx.coroutines.CompletedExceptionally: int _handled
kotlinx.coroutines.ThreadLocalEventLoop: kotlinx.coroutines.ThreadLocalEventLoop INSTANCE
com.google.firebase.database.core.Repo: boolean loggedTransactionPersistenceWarning
com.google.zxing.datamatrix.decoder.Version$ECBlocks: int ecCodewords
com.google.firebase.components.Component: com.google.firebase.components.ComponentFactory factory
com.google.firebase.database.android.SqlPersistenceStorageEngine$1: com.google.firebase.database.android.SqlPersistenceStorageEngine this$0
com.google.android.gms.common.internal.ResolveAccountRequest: com.google.android.gms.auth.api.signin.GoogleSignInAccount zapm
androidx.appcompat.R$styleable: int Toolbar_navigationIcon
com.journeyapps.barcodescanner.BarcodeView: com.journeyapps.barcodescanner.DecoderThread decoderThread
io.flutter.plugin.localization.LocalizationPlugin$1: io.flutter.plugin.localization.LocalizationPlugin this$0
com.google.firebase.database.snapshot.RangeMerge: com.google.firebase.database.core.Path optInclusiveEnd
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String dartEntrypointLibrary
com.google.zxing.oned.Code39Reader: int[] CHARACTER_ENCODINGS
androidx.appcompat.widget.SearchView: android.widget.ImageView mCloseButton
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseInnerInsetsRect
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart LAZY
com.google.zxing.aztec.detector.Detector: boolean compact
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.Matrix mTmpMatrix
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: int systemGestureInsetLeft
androidx.appcompat.view.menu.BaseMenuPresenter: int mMenuLayoutRes
androidx.appcompat.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mLogo
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.ViewTreeObserver mTreeObserver
com.google.android.gms.common.internal.BaseGmsClient: boolean zzcp
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.concurrent.locks.ReentrantLock lock
kotlinx.coroutines.channels.ArrayChannel: int capacity
androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: java.nio.ByteOrder mByteOrder
androidx.appcompat.widget.ActionBarContainer: android.graphics.drawable.Drawable mBackground
io.flutter.plugins.googlemaps.PolylineBuilder: float density
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI SJIS
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
androidx.appcompat.R$styleable: int MenuGroup_android_checkableBehavior
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2$1: com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2 this$0
androidx.fragment.app.FragmentTransitionImpl$3: java.util.ArrayList val$sharedElementsIn
androidx.window.layout.ActivityCompatHelperApi24: androidx.window.layout.ActivityCompatHelperApi24 INSTANCE
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: androidx.fragment.app.Fragment lastIn
androidx.core.app.NotificationCompatBuilder: java.util.List mActionExtrasList
com.google.zxing.pdf417.detector.Detector: int[] START_PATTERN
androidx.appcompat.widget.TintTypedArray: android.content.Context mContext
androidx.appcompat.widget.AbsActionBarView: androidx.core.view.ViewPropertyAnimatorCompat mVisibilityAnim
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: androidx.core.content.res.ComplexColorCompat mStrokeColor
androidx.core.graphics.TypefaceCompatApi21Impl: boolean sHasInitBeenCalled
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: java.util.List $delimitersList
com.google.firebase.database.core.operation.Operation: com.google.firebase.database.core.operation.OperationSource source
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LifecycleChannel lifecycleChannel
androidx.fragment.app.DefaultSpecialEffectsController$8: androidx.fragment.app.DefaultSpecialEffectsController this$0
kotlin.random.Random: kotlin.random.Random defaultRandom
com.google.firebase.database.snapshot.LeafNode$1: int[] $SwitchMap$com$google$firebase$database$snapshot$Node$HashVersion
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext left
com.google.android.gms.maps.model.TileOverlayOptions: com.google.android.gms.maps.model.TileProvider zzej
androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy mStrategy
io.flutter.plugin.platform.PlatformPlugin: io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate platformPluginDelegate
io.flutter.plugins.googlemaps.GoogleMapController: io.flutter.plugin.common.MethodChannel methodChannel
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] EMPTY
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int resourceId
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor sInstance
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedStateful
kotlinx.coroutines.EventLoop: long useCount
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel
kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol REUSABLE_CLAIMED
com.google.firebase.components.LazySet: java.util.Set providers
androidx.appcompat.R$styleable: int MenuItem_android_titleCondensed
androidx.appcompat.app.AlertController$ButtonHandler: java.lang.ref.WeakReference mDialog
androidx.core.app.ActivityRecreator: java.lang.reflect.Method performStopActivity3ParamsMethod
kotlinx.coroutines.CoroutineStart$WhenMappings: int[] $EnumSwitchMapping$0
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback
androidx.appcompat.widget.AbsActionBarView: boolean mEatingTouch
com.google.firebase.components.OptionalProvider: com.google.firebase.inject.Deferred$DeferredHandler NOOP_HANDLER
androidx.core.app.ActivityRecreator$3: java.lang.Object val$token
com.journeyapps.barcodescanner.camera.DisplayConfiguration: com.journeyapps.barcodescanner.Size viewfinderSize
androidx.core.provider.FontsContractCompat$FontInfo: boolean mItalic
com.journeyapps.barcodescanner.CaptureManager: int cameraPermissionReqCode
com.google.android.gms.common.api.internal.zaf: com.google.android.gms.common.api.internal.TaskApiCall zacr
androidx.appcompat.R$styleable: int[] AlertDialog
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType TRY_HARDER
androidx.core.R$id: int accessibility_custom_action_14
com.lyokone.location.BackgroundNotification: android.content.Context context
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType POSTAL_ADDRESS
com.google.android.gms.maps.model.CameraPosition$Builder: float zoom
androidx.appcompat.widget.Toolbar: java.lang.CharSequence mTitleText
androidx.appcompat.R$styleable: int AppCompatTextView_drawableTintMode
androidx.appcompat.widget.ListPopupWindow: android.view.View mPromptView
androidx.exifinterface.media.ExifInterface: int mOffsetToExifData
androidx.window.embedding.SplitRule: int minSmallestWidth
androidx.fragment.app.Fragment: android.os.Bundle mSavedViewRegistryState
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: android.app.Activity thisActivity
androidx.appcompat.view.menu.ActionMenuItem: boolean mHasIconTint
kotlinx.coroutines.CommonPool: boolean usePrivatePool
com.google.android.gms.common.api.internal.zaz: java.util.Map zafn
androidx.versionedparcelable.VersionedParcelParcel: int mFieldId
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: char[] TEXT_SHIFT2_SET_CHARS
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI ISO8859_15
com.google.firebase.database.core.Repo$9: com.google.firebase.database.core.Repo this$0
com.google.firebase.database.core.SyncTree$5: com.google.firebase.database.core.SyncTree this$0
androidx.appcompat.R$styleable: int CompoundButton_android_button
androidx.multidex.ZipUtil$CentralDirectory: long size
com.google.android.gms.tasks.zzn: com.google.android.gms.tasks.Task zzg
com.google.zxing.oned.UPCEANExtension5Support: int[] CHECK_DIGIT_ENCODINGS
androidx.activity.result.IntentSenderRequest$Builder: int mFlagsValues
com.google.firebase.FirebaseApp$UserUnlockReceiver: java.util.concurrent.atomic.AtomicReference INSTANCE
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mLayoutDirection
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: java.util.ArrayList mActionModes
kotlin.jvm.internal.PackageReference: java.lang.String moduleName
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: io.flutter.embedding.engine.dart.DartMessenger messenger
androidx.cursoradapter.widget.CursorAdapter: androidx.cursoradapter.widget.CursorAdapter$ChangeObserver mChangeObserver
com.google.firebase.database.core.Repo$18$1: com.google.firebase.database.core.Repo$18 this$1
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: android.os.Handler handler
androidx.core.graphics.drawable.WrappedDrawableState: int mChangingConfigurations
androidx.core.R$id: int tag_on_apply_window_listener
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED
io.flutter.embedding.android.FlutterView: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
androidx.window.layout.WindowInfoTrackerImpl: int BUFFER_CAPACITY
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType type
com.google.zxing.common.StringUtils: java.lang.String PLATFORM_DEFAULT_ENCODING
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String description
com.google.firebase.database.core.SyncTree$1: long val$writeId
androidx.fragment.R$styleable: int FragmentContainerView_android_name
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: boolean isSigned
com.google.zxing.client.android.R$styleable: int[] GradientColor
com.lyokone.location.FlutterLocation: android.app.Activity activity
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: int metaState
kotlin.SynchronizedLazyImpl: java.lang.Object lock
androidx.fragment.app.DialogFragment$5: androidx.fragment.app.DialogFragment this$0
com.google.android.gms.common.internal.GetServiceRequest: android.os.IBinder zzdi
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.GoogleApiAvailabilityLight zzcc
androidx.activity.ComponentActivity$4: androidx.activity.ComponentActivity this$0
androidx.appcompat.app.AlertController$AlertParams: int mIconId
androidx.window.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
androidx.fragment.app.FragmentTransaction$Op: int mCmd
androidx.appcompat.widget.DrawableUtils: android.graphics.Rect INSETS_NONE
com.google.firebase.components.RestrictedComponentContainer: java.util.Set allowedProviderInterfaces
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence[] mItems
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: float yPrecision
androidx.fragment.app.DefaultSpecialEffectsController$4: android.view.View val$viewToAnimate
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: androidx.arch.core.internal.SafeIterableMap this$0
androidx.appcompat.R$styleable: int TextAppearance_android_textSize
com.baseflow.geolocator.GeolocatorPlugin: io.flutter.plugin.common.PluginRegistry$Registrar pluginRegistrar
androidx.exifinterface.media.ExifInterface$1: long mPosition
com.google.firebase.database.connection.ConnectionContext: boolean persistenceEnabled
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: java.lang.reflect.Method mMethod
com.google.zxing.oned.UPCEANReader: int[] MIDDLE_PATTERN
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] $VALUES
io.flutter.plugin.common.FlutterException: java.lang.Object details
androidx.appcompat.R$styleable: int AlertDialog_multiChoiceItemLayout
androidx.core.app.NotificationCompat$Builder: android.widget.RemoteViews mTickerView
androidx.activity.result.ActivityResultRegistry$CallbackAndContract: androidx.activity.result.ActivityResultCallback mCallback
androidx.window.embedding.EmbeddingCompat: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingExtension
androidx.core.app.NotificationCompat$Builder: android.app.PendingIntent mContentIntent
com.google.zxing.common.DecoderResult: byte[] rawBytes
androidx.exifinterface.media.ExifInterface: byte[] EXIF_ASCII_PREFIX
io.flutter.plugins.googlemaps.GoogleMapController: io.flutter.plugins.googlemaps.CirclesController circlesController
kotlinx.coroutines.EventLoopImplBase: java.util.concurrent.atomic.AtomicReferenceFieldUpdater _delayed$FU
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mFillPaint
com.google.android.gms.location.LocationSettingsRequest$Builder: com.google.android.gms.location.zzae zzbj
com.google.firebase.database.android.SqlPersistenceStorageEngine$1: com.google.firebase.database.core.utilities.ImmutableTree val$rowIdsToKeep
com.google.android.gms.common.internal.ResolveAccountResponse: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.ListPopupWindow: java.lang.reflect.Method sSetClipToWindowEnabledMethod
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mFreeze
androidx.appcompat.R$styleable: int[] AppCompatTextHelper
com.google.zxing.oned.UPCEReader: int[] decodeMiddleCounters
androidx.window.layout.WindowMetricsCalculatorCompat: java.lang.String TAG
com.google.zxing.pdf417.decoder.DecodedBitStreamParser: char[] MIXED_CHARS
com.google.firebase.database.core.view.ViewProcessor$ProcessorResult: com.google.firebase.database.core.view.ViewCache viewCache
com.lyokone.location.LocationPlugin: android.content.ServiceConnection serviceConnection
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
io.flutter.plugins.googlemaps.PolygonsController: java.util.Map polygonIdToController
androidx.appcompat.app.ResourcesFlusher: boolean sThemedResourceCacheClazzFetched
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: int mProxyEndCount
com.google.firebase.components.Dependency: int type
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mOnMenuItemClickListener
com.google.android.gms.common.api.internal.BasePendingResult: java.util.concurrent.atomic.AtomicReference zadv
androidx.appcompat.view.menu.StandardMenuPopup: androidx.appcompat.view.menu.MenuAdapter mAdapter
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3: androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: java.lang.CharSequence mHintText
com.google.zxing.common.DetectorResult: com.google.zxing.common.BitMatrix bits
androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState
androidx.fragment.app.FragmentManager: java.util.Map mExitAnimationCancellationSignals
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl mImpl
com.google.zxing.qrcode.detector.FinderPatternInfo: com.google.zxing.qrcode.detector.FinderPattern bottomLeft
androidx.appcompat.R$styleable: int ActionBar_customNavigationLayout
androidx.core.R$styleable: int[] FontFamily
com.journeyapps.barcodescanner.camera.CameraSettings: boolean continuousFocusEnabled
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: io.flutter.embedding.engine.systemchannels.RestorationChannel this$0
com.google.zxing.oned.UPCEANReader: com.google.zxing.oned.EANManufacturerOrgSupport eanManSupport
androidx.core.app.ActivityRecreator: java.lang.reflect.Method requestRelaunchActivityMethod
kotlin.ranges.IntProgression: int first
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineServicePluginBinding servicePluginBinding
androidx.appcompat.app.AlertController: java.lang.CharSequence mMessage
androidx.fragment.app.Fragment: int mContentLayoutId
androidx.exifinterface.media.ExifInterface$ExifAttribute: long bytesOffset
androidx.appcompat.view.menu.ListMenuItemView: android.widget.TextView mTitleView
com.google.firebase.database.core.view.Event$EventType: com.google.firebase.database.core.view.Event$EventType CHILD_CHANGED
androidx.appcompat.widget.ViewStubCompat: int mLayoutResource
androidx.appcompat.R$attr: int actionModeStyle
androidx.fragment.app.DialogFragment: boolean mDialogCreated
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_ON_SCREEN
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.platform.PlatformViewRegistry platformViewRegistry
com.google.android.gms.common.internal.zze: long zzdx
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLICK
com.google.android.gms.common.api.internal.zal: com.google.android.gms.common.api.internal.zam zadk
androidx.core.view.WindowInsetsCompat$BuilderImpl29: android.view.WindowInsets$Builder mPlatBuilder
com.google.firebase.database.core.view.Event$EventType: com.google.firebase.database.core.view.Event$EventType CHILD_MOVED
androidx.appcompat.widget.AppCompatImageView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
androidx.appcompat.widget.Toolbar$SavedState: int expandedMenuItemId
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: android.view.CollapsibleActionView mWrappedView
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable mCollapseIcon
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State REMOVED
com.google.firebase.database.Logger$Level: com.google.firebase.database.Logger$Level DEBUG
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey: java.lang.Object zajn
androidx.fragment.app.FragmentActivity: boolean mCreated
androidx.collection.LongSparseArray: int mSize
com.baseflow.geolocator.GeolocatorLocationService: android.os.PowerManager$WakeLock wakeLock
com.google.firebase.database.core.Repo$7: com.google.firebase.database.DatabaseReference$CompletionListener val$onComplete
com.journeyapps.barcodescanner.DecoderThread: android.os.Handler handler
androidx.appcompat.widget.ActionBarContextView: android.widget.TextView mSubtitleView
androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$SavedState mSavedState
com.google.android.gms.maps.model.MarkerOptions: float alpha
kotlinx.coroutines.channels.AbstractChannelKt: kotlinx.coroutines.internal.Symbol EMPTY
kotlinx.coroutines.DefaultExecutor: kotlinx.coroutines.DefaultExecutor INSTANCE
com.journeyapps.barcodescanner.RawImageData: int height
androidx.fragment.R$styleable: int[] Fragment
androidx.fragment.app.Fragment$AnimationInfo: java.util.ArrayList mSharedElementSourceNames
com.google.android.gms.tasks.zzd: com.google.android.gms.tasks.Task zzg
androidx.core.R$id: int accessibility_custom_action_31
io.flutter.plugins.googlemaps.PolygonBuilder: com.google.android.gms.maps.model.PolygonOptions polygonOptions
com.google.zxing.oned.rss.expanded.ExpandedPair: com.google.zxing.oned.rss.DataCharacter leftChar
androidx.fragment.app.FragmentManager: java.util.ArrayDeque mLaunchedFragments
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_TO_POSITION
com.google.android.gms.signin.internal.zad: void zaa(com.google.android.gms.common.ConnectionResult,com.google.android.gms.signin.internal.zab)
com.google.android.gms.common.api.Status: boolean isSuccess()
com.google.android.gms.maps.model.CircleOptions: com.google.android.gms.maps.model.CircleOptions clickable(boolean)
io.flutter.plugins.googlemaps.GoogleMapController: void onPolygonClick(com.google.android.gms.maps.model.Polygon)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty access$getEMPTY_ACTIVE$p()
io.flutter.plugins.googlemaps.GoogleMapFactory: GoogleMapFactory(io.flutter.plugin.common.BinaryMessenger,io.flutter.plugins.googlemaps.LifecycleProvider)
android.support.v4.app.INotificationSideChannel$Stub$Proxy: void notify(java.lang.String,int,java.lang.String,android.app.Notification)
com.google.firebase.database.core.Path$1: Path$1(com.google.firebase.database.core.Path)
io.flutter.embedding.android.FlutterTextureView$1: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)
com.google.zxing.pdf417.PDF417ResultMetadata: void setSender(java.lang.String)
com.google.firebase.database.tubesock.WebSocket$State: WebSocket$State(java.lang.String,int)
androidx.window.layout.HardwareFoldingFeature: boolean equals(java.lang.Object)
com.google.android.gms.common.internal.zak: zak(com.google.android.gms.common.api.PendingResult,com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.common.internal.PendingResultUtil$ResultConverter,com.google.android.gms.common.internal.PendingResultUtil$zaa)
com.google.firebase.database.core.Repo: com.google.firebase.database.core.SnapshotHolder access$300(com.google.firebase.database.core.Repo)
kotlinx.coroutines.NodeList: NodeList()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)
androidx.appcompat.widget.SearchView: void rewriteQueryFromSuggestion(int)
androidx.appcompat.view.StandaloneActionMode: void setTitle(java.lang.CharSequence)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingPut: com.google.firebase.database.connection.RequestResultCallback getOnComplete()
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
com.google.android.gms.maps.model.PolygonOptions: com.google.android.gms.maps.model.PolygonOptions fillColor(int)
com.google.firebase.FirebaseApp: android.content.Context getApplicationContext()
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat from(int)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean canShowOverflowMenu()
androidx.appcompat.view.menu.MenuItemWrapperICS: void setShowAsAction(int)
com.journeyapps.barcodescanner.DecoratedBarcodeView: void setTorchOff()
com.google.firebase.database.snapshot.Node$1: Node$1()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$6100(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.core.graphics.TypefaceCompatApi28Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: void findExpandedIndex()
com.google.android.gms.maps.model.BitmapDescriptorFactory: com.google.android.gms.internal.maps.zze zzg()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void unscheduleSelf(java.lang.Runnable)
com.journeyapps.barcodescanner.CaptureManager: java.lang.String access$500()
androidx.fragment.app.FragmentManagerViewModel: boolean isCleared()
com.google.android.gms.location.LocationSettingsStates: boolean isGpsPresent()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat)
com.google.android.gms.location.LocationAvailability: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context)
androidx.fragment.app.DefaultSpecialEffectsController: java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
com.google.android.gms.common.api.internal.zaf: com.google.android.gms.common.Feature[] zaa(com.google.android.gms.common.api.internal.GoogleApiManager$zaa)
com.google.firebase.database.connection.PersistentConnectionImpl: void onDisconnectMerge(java.util.List,java.util.Map,com.google.firebase.database.connection.RequestResultCallback)
com.google.firebase.database.logging.AndroidLogger: void warn(java.lang.String,java.lang.String)
com.google.zxing.common.BitMatrix: int getWidth()
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String toString()
com.journeyapps.barcodescanner.CameraPreview: void resume()
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode getAncestor(io.flutter.util.Predicate)
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState: void setIsoIec646()
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()
com.google.zxing.oned.UPCEANExtension5Support: UPCEANExtension5Support()
com.google.firebase.database.tubesock.WebSocket: void runReader()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
com.baseflow.geolocator.location.LocationAccuracyManager: LocationAccuracyManager()
androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: AccessibilityViewCommand$MoveAtGranularityArguments()
androidx.multidex.MultiDexExtractor: long getTimeStamp(java.io.File)
com.baseflow.geolocator.utils.Utils: boolean openLocationSettings(android.content.Context)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence constrainOnce(kotlin.sequences.Sequence)
com.google.firebase.database.core.SyncTree: java.util.List removeAllWrites()
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable getCurrent()
androidx.appcompat.view.menu.MenuAdapter: MenuAdapter(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleRetryListenerQueue(android.content.ComponentName)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(int,int,int,int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: java.lang.String detailedExceptionString(java.lang.Exception)
com.journeyapps.barcodescanner.camera.CameraSettings: boolean isBarcodeSceneModeEnabled()
androidx.appcompat.widget.ListPopupWindow$3: ListPopupWindow$3(androidx.appcompat.widget.ListPopupWindow)
com.google.android.gms.maps.internal.zzw: zzw()
androidx.appcompat.app.WindowDecorActionBar: boolean checkShowingFlags(boolean,boolean,boolean)
kotlinx.coroutines.CancellableContinuationImpl: void invokeOnCancellation(kotlin.jvm.functions.Function1)
com.google.zxing.common.BitMatrix: void rotate180()
kotlinx.coroutines.CancellableContinuationImpl: void callOnCancellation(kotlin.jvm.functions.Function1,java.lang.Throwable)
io.flutter.embedding.android.KeyChannelResponder: void handleEvent(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback)
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.zxing.Binarizer: int getWidth()
androidx.exifinterface.media.ExifInterface: void getHeifAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
com.google.firebase.database.core.utilities.ImmutableTree: void foreach(com.google.firebase.database.core.utilities.ImmutableTree$TreeVisitor)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context)
kotlinx.coroutines.Active: java.lang.String toString()
com.google.firebase.database.core.SparseSnapshotTree: void forEachChild(com.google.firebase.database.core.SparseSnapshotTree$SparseSnapshotChildVisitor)
com.google.android.gms.dynamite.zzj: com.google.android.gms.dynamic.IObjectWrapper zzb(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,int)
androidx.appcompat.widget.SuggestionsAdapter: java.lang.String getColumnString(android.database.Cursor,java.lang.String)
com.google.zxing.qrcode.detector.FinderPatternFinder: void clearCounts(int[])
io.flutter.embedding.android.FlutterView$2: void onFlutterUiDisplayed()
androidx.collection.MapCollections$KeySet: boolean retainAll(java.util.Collection)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
kotlinx.coroutines.CancellableContinuationImpl: void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable)
io.flutter.plugin.platform.PlatformView: void onInputConnectionUnlocked()
com.google.firebase.database.snapshot.ChildrenNode: java.util.Iterator reverseIterator()
io.flutter.view.AccessibilityBridge: void sendWindowContentChangeEvent(int)
kotlin.collections.EmptySet: java.lang.String toString()
com.google.android.gms.maps.GoogleMapOptions: java.lang.Boolean getLiteMode()
androidx.appcompat.widget.AppCompatTextHelper: void onLayout(boolean,int,int,int,int)
com.google.android.gms.maps.model.zzk: java.lang.Object[] newArray(int)
androidx.fragment.app.FragmentTransition: void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: void setBackgroundResource(int)
kotlin.KotlinVersion: int compareTo(java.lang.Object)
kotlin.ranges.IntRange: java.lang.Integer getEndInclusive()
com.google.android.gms.maps.model.BitmapDescriptor: com.google.android.gms.dynamic.IObjectWrapper zzb()
androidx.appcompat.widget.FitWindowsFrameLayout: boolean fitSystemWindows(android.graphics.Rect)
androidx.appcompat.view.menu.MenuWrapperICS: MenuWrapperICS(android.content.Context,androidx.core.internal.view.SupportMenu)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3: void onDismiss()
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: android.content.Intent createIntent(android.content.Context,androidx.activity.result.IntentSenderRequest)
com.google.firebase.database.snapshot.LeafNode: int compareTo(com.google.firebase.database.snapshot.Node)
androidx.appcompat.app.AppCompatActivity: void onPostResume()
com.google.firebase.database.core.CompoundWrite: com.google.firebase.database.core.CompoundWrite childCompoundWrite(com.google.firebase.database.core.Path)
androidx.collection.MapCollections$EntrySet: boolean addAll(java.util.Collection)
kotlinx.coroutines.JobSupport$Finishing: void addExceptionLocked(java.lang.Throwable)
com.google.android.gms.common.internal.zzp: int zzd(android.content.Context)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: java.util.List getComponents()
androidx.core.view.ViewCompat$3: java.lang.Object frameworkGet(android.view.View)
androidx.fragment.app.BackStackState$1: androidx.fragment.app.BackStackState[] newArray(int)
kotlinx.coroutines.channels.Closed: kotlinx.coroutines.internal.Symbol tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
com.journeyapps.barcodescanner.CameraPreview$5: CameraPreview$5(com.journeyapps.barcodescanner.CameraPreview)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
com.google.firebase.components.ComponentRuntime: java.util.Set setOf(java.lang.Class)
androidx.fragment.app.FragmentAnim$2$1: FragmentAnim$2$1(androidx.fragment.app.FragmentAnim$2)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
com.google.android.gms.common.GooglePlayServicesUtil: android.content.Context getRemoteContext(android.content.Context)
androidx.window.layout.WindowMetricsCalculator$Companion: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getFragment(com.google.android.gms.common.api.internal.LifecycleActivity)
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder: void addWeightCode(java.lang.StringBuilder,int)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
io.flutter.plugins.googlemaps.PolygonsController: boolean onPolygonTap(java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: void onMeasure(int,int)
com.google.firebase.database.core.view.filter.IndexedFilter: boolean filtersNodes()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener: ActionMenuItemView$ActionMenuItemForwardingListener(androidx.appcompat.view.menu.ActionMenuItemView)
com.google.zxing.datamatrix.decoder.BitMatrixParser: BitMatrixParser(com.google.zxing.common.BitMatrix)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: FlutterMutatorView(android.content.Context,float,io.flutter.embedding.android.AndroidTouchProcessor)
com.google.zxing.common.DecoderResult: DecoderResult(byte[],java.lang.String,java.util.List,java.lang.String,int,int)
com.google.firebase.database.core.SyncTree$12: SyncTree$12(com.google.firebase.database.core.SyncTree,com.google.firebase.database.core.view.QuerySpec)
com.google.firebase.database.snapshot.RangeMerge: java.lang.String toString()
androidx.fragment.app.Fragment: void onAttach(android.app.Activity)
io.flutter.embedding.android.FlutterSplashView: java.lang.String access$402(io.flutter.embedding.android.FlutterSplashView,java.lang.String)
kotlinx.coroutines.CompletedExceptionally: CompletedExceptionally(java.lang.Throwable,boolean)
com.google.firebase.database.DatabaseReference$3: void run()
com.google.firebase.database.logging.LogWrapper: void info(java.lang.String)
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator: int compare(java.lang.Object,java.lang.Object)
androidx.appcompat.view.menu.MenuPopupHelper: void setForceShowIcon(boolean)
androidx.window.embedding.EmbeddingCompat$Companion: java.lang.Integer getExtensionApiLevel()
androidx.core.view.NestedScrollingParentHelper: int getNestedScrollAxes()
com.google.android.gms.maps.model.zze: java.lang.Object createFromParcel(android.os.Parcel)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionEnd(android.transition.Transition)
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context,int,int,io.flutter.embedding.android.FlutterImageView$SurfaceKind)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
com.google.zxing.qrcode.decoder.FormatInformation: com.google.zxing.qrcode.decoder.FormatInformation doDecodeFormatInformation(int,int)
io.flutter.plugins.imagepicker.ImagePickerDelegate$2: android.net.Uri resolveFileProviderUriForFile(java.lang.String,java.io.File)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performContextMenuAction(int)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction getOrCreateAccessibilityAction(int)
com.google.firebase.database.connection.Connection: void onMessage(java.util.Map)
com.google.zxing.datamatrix.decoder.Decoder: void correctErrors(byte[],int)
com.google.android.gms.common.api.GoogleApi$Settings$Builder: GoogleApi$Settings$Builder()
androidx.window.core.Bounds: boolean equals(java.lang.Object)
com.lyokone.location.FlutterLocationService: void requestBackgroundPermissions()
com.google.android.gms.internal.location.zzbk: zzbk()
com.google.android.gms.common.api.internal.zaf: zaf(int,com.google.android.gms.common.api.internal.TaskApiCall,com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.common.api.internal.StatusExceptionMapper)
kotlin.jvm.internal.Lambda: int getArity()
com.google.firebase.database.connection.Connection$DisconnectReason: com.google.firebase.database.connection.Connection$DisconnectReason[] values()
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState: boolean isAlpha()
androidx.appcompat.app.AppCompatViewInflater: android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet,int)
androidx.fragment.app.Fragment: int getMinimumMaxLifecycleState()
kotlinx.coroutines.internal.SystemPropsKt: long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object)
androidx.core.widget.ImageViewCompat: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int)
androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int,float)
io.flutter.plugins.googlemaps.GoogleMapsPlugin: androidx.lifecycle.Lifecycle access$100(io.flutter.plugins.googlemaps.GoogleMapsPlugin)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int)
com.journeyapps.barcodescanner.RotationListener: void stop()
androidx.activity.result.ActivityResultRegistry: boolean dispatchResult(int,int,android.content.Intent)
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
com.google.android.gms.signin.internal.zad: zad()
androidx.activity.result.ActivityResult$1: java.lang.Object[] newArray(int)
com.google.zxing.pdf417.detector.Detector: float patternMatchVariance(int[],int[],float)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
com.google.firebase.database.connection.ConnectionContext: com.google.firebase.database.logging.Logger getLogger()
com.google.android.gms.common.util.zzb: int zzc(int)
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)
androidx.core.widget.NestedScrollView: void doScrollY(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
com.journeyapps.barcodescanner.camera.CameraSettings: CameraSettings()
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()
androidx.fragment.app.DefaultSpecialEffectsController$8: void run()
com.google.firebase.database.snapshot.ChildrenNode: ChildrenNode()
androidx.core.app.ActivityCompat: void recreate(android.app.Activity)
androidx.core.widget.TextViewCompat: int getFirstBaselineToTopHeight(android.widget.TextView)
androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.core.view.inputmethod.InputConnectionCompat$2: InputConnectionCompat$2(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener)
kotlin.SynchronizedLazyImpl: java.lang.String toString()
com.google.firebase.components.Dependency: boolean isSet()
com.google.android.gms.dynamic.zab: int getState()
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder getRootMenu()
com.baseflow.geolocator.GeolocatorLocationService: void startLocationService(boolean,com.baseflow.geolocator.location.LocationOptions,io.flutter.plugin.common.EventChannel$EventSink)
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderPlatformThread: void getStorageDirectory(io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.common.api.internal.zaae: com.google.android.gms.common.api.internal.ApiKey getApiKey()
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus[] values()
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
com.journeyapps.barcodescanner.camera.CameraManager: void stopPreview()
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: java.lang.String findSettableValue(java.lang.String,java.util.Collection,java.lang.String[])
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray access$300(io.flutter.plugin.platform.PlatformViewsController)
com.google.android.gms.maps.model.VisibleRegion: java.lang.String toString()
com.google.firebase.database.snapshot.DoubleNode: int compareLeafValues(com.google.firebase.database.snapshot.DoubleNode)
androidx.window.embedding.EmbeddingAdapter: EmbeddingAdapter()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel access$1400(io.flutter.plugin.platform.PlatformViewsController)
com.google.firebase.database.core.Repo$15: void onDataChange(com.google.firebase.database.DataSnapshot)
kotlinx.coroutines.CompletedContinuation: int hashCode()
io.flutter.plugins.imagepicker.ImagePickerDelegate: void finishWithListSuccess(java.util.ArrayList)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void onMeasure(int,int)
com.google.android.gms.common.ErrorDialogFragment: void onCancel(android.content.DialogInterface)
com.google.zxing.oned.Code39Reader: int toNarrowWidePattern(int[])
androidx.fragment.app.FragmentManager$6: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.journeyapps.barcodescanner.CaptureManager: java.lang.String getBarcodeImagePath(com.journeyapps.barcodescanner.BarcodeResult)
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo: androidx.core.os.CancellationSignal getSignal()
androidx.fragment.app.DefaultSpecialEffectsController$2: void onAnimationEnd(android.animation.Animator)
com.google.firebase.database.core.utilities.DefaultRunLoop: java.lang.String messageForException(java.lang.Throwable)
io.flutter.embedding.android.FlutterSurfaceView: void access$400(io.flutter.embedding.android.FlutterSurfaceView)
com.google.zxing.aztec.decoder.Decoder: Decoder()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void clearColorFilter()
com.google.firebase.database.snapshot.IndexedNode: com.google.firebase.database.snapshot.NamedNode getFirstChild()
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: Detector$ResultPointsAndTransitions(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int)
io.flutter.embedding.android.FlutterImageView: void onDraw(android.graphics.Canvas)
com.google.firebase.database.MutableData: java.lang.String toString()
kotlin.collections.EmptyMap: boolean containsKey(java.lang.Object)
com.google.zxing.FormatException: com.google.zxing.FormatException getFormatInstance()
kotlin.jvm.internal.Intrinsics: void checkNotNullParameter(java.lang.Object,java.lang.String)
androidx.appcompat.widget.ScrollingTabContainerView: void onMeasure(int,int)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.google.firebase.database.Query: com.google.firebase.database.ChildEventListener addChildEventListener(com.google.firebase.database.ChildEventListener)
com.google.android.gms.common.api.internal.zaf: void zaa(java.lang.RuntimeException)
com.google.firebase.database.core.ValueEventRegistration: boolean respondsTo(com.google.firebase.database.core.view.Event$EventType)
kotlin.sequences.SequencesKt__SequencesKt: kotlin.sequences.Sequence asSequence(java.util.Iterator)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
androidx.appcompat.widget.SearchView$9: void onNothingSelected(android.widget.AdapterView)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean close()
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItem: android.graphics.drawable.Drawable getIcon()
com.google.android.gms.maps.UiSettings: boolean isRotateGesturesEnabled()
com.google.zxing.qrcode.decoder.Version: com.google.zxing.qrcode.decoder.Version$ECBlocks getECBlocksForLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel)
com.google.android.gms.internal.location.zzas: zzas(android.content.Context,com.google.android.gms.internal.location.zzbj)
com.google.android.gms.common.ConnectionResult: ConnectionResult(int,int,android.app.PendingIntent,java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void onWindowSystemUiVisibilityChanged(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean setState(int[])
androidx.fragment.app.FragmentStateManager$1: void onViewDetachedFromWindow(android.view.View)
io.flutter.plugins.googlemaps.GoogleMapController: void setInitialMarkers(java.lang.Object)
kotlin.collections.EmptyMap: EmptyMap()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.embedding.android.AndroidTouchProcessor: boolean onGenericMotionEvent(android.view.MotionEvent)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: SafeIterableMap$IteratorWithAdditions(androidx.arch.core.internal.SafeIterableMap)
kotlinx.coroutines.DebugStringsKt: java.lang.String getHexAddress(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: FlutterRenderer$ViewportMetrics()
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener access$800(io.flutter.view.AccessibilityBridge)
androidx.appcompat.widget.Toolbar$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
androidx.core.view.WindowInsetsCompat: void setOverriddenInsets(androidx.core.graphics.Insets[])
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Long toLongOrNull(java.lang.String,int)
com.google.firebase.database.android.SqlPersistenceStorageEngine$PersistentCacheOpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.Object invokeSuspend(java.lang.Object)
com.baseflow.geolocator.permission.PermissionManager: int indexOf(java.lang.Object[],java.lang.Object)
com.google.android.gms.common.api.internal.zzc: void addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)
com.google.firebase.database.FirebaseDatabase: java.lang.String getSdkVersion()
androidx.appcompat.widget.Toolbar$1: Toolbar$1(androidx.appcompat.widget.Toolbar)
androidx.appcompat.app.AppCompatDialog: void setTitle(int)
com.google.firebase.database.snapshot.Node$HashVersion: com.google.firebase.database.snapshot.Node$HashVersion valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
com.google.common.base.Throwables: java.lang.Object getJLA()
com.google.android.gms.common.api.GoogleApiActivity: void onCreate(android.os.Bundle)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void addListener(androidx.core.util.Consumer)
io.flutter.plugins.googlemaps.CircleController: CircleController(com.google.android.gms.maps.model.Circle,boolean,float)
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean)
com.baseflow.geolocator.GeolocatorPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.android.gms.common.api.zza: zza()
androidx.core.app.ActivityRecreator: java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class)
androidx.fragment.app.FragmentTransitionImpl$1: FragmentTransitionImpl$1(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)
androidx.core.widget.NestedScrollView: void computeScroll()
io.flutter.plugins.googlemaps.TileOverlayController: void setZIndex(float)
androidx.fragment.app.FragmentContainerView: void removeViewAt(int)
androidx.fragment.app.FragmentManager: boolean checkForMenus()
com.google.android.gms.maps.model.BitmapDescriptor: BitmapDescriptor(com.google.android.gms.dynamic.IObjectWrapper)
com.google.android.gms.common.internal.PendingResultUtil: com.google.android.gms.tasks.Task toTask(com.google.android.gms.common.api.PendingResult,com.google.android.gms.common.internal.PendingResultUtil$ResultConverter)
com.google.zxing.qrcode.decoder.DataMask$8: DataMask$8(java.lang.String,int)
androidx.collection.ArrayMap$1: ArrayMap$1(androidx.collection.ArrayMap)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: boolean isStateful()
kotlin.KotlinVersion: int hashCode()
com.google.firebase.database.connection.PersistentConnectionImpl: void warnOnListenerWarnings(java.util.List,com.google.firebase.database.connection.PersistentConnectionImpl$QuerySpec)
com.google.firebase.database.core.Repo: java.util.List buildTransactionQueue(com.google.firebase.database.core.utilities.Tree)
androidx.core.graphics.drawable.WrappedDrawableApi14: void onBoundsChange(android.graphics.Rect)
androidx.collection.MapCollections: java.lang.Object[] toArrayHelper(java.lang.Object[],int)
androidx.lifecycle.LiveData$LifecycleBoundObserver: void detachObserver()
androidx.fragment.app.FragmentFactory: FragmentFactory()
com.google.firebase.database.connection.PersistentConnectionImpl: void sendConnectStats()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
com.baseflow.geolocator.GeolocatorPlugin: void dispose()
com.journeyapps.barcodescanner.BarcodeResult: BarcodeResult(com.google.zxing.Result,com.journeyapps.barcodescanner.SourceData)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
com.google.firebase.database.connection.PersistentConnectionImpl: void onDataMessage(java.util.Map)
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()
io.flutter.plugins.imagepicker.ImagePickerUtils: boolean needRequestCameraPermission(android.content.Context)
androidx.appcompat.widget.AppCompatSpinner: void onMeasure(int,int)
kotlin.coroutines.CombinedContext: int hashCode()
androidx.appcompat.view.menu.MenuItemImpl: int getAlphabeticModifiers()
com.google.zxing.qrcode.detector.AlignmentPattern: com.google.zxing.qrcode.detector.AlignmentPattern combineEstimate(float,float,float)
kotlin.collections.EmptyMap: java.util.Collection getValues()
androidx.appcompat.widget.SearchView$SavedState$1: androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel)
androidx.collection.SimpleArrayMap: boolean containsKey(java.lang.Object)
androidx.appcompat.view.menu.CascadingMenuPopup: boolean isShowing()
androidx.appcompat.widget.Toolbar: void dismissPopupMenus()
com.google.firebase.database.collection.LLRBEmptyNode: com.google.firebase.database.collection.LLRBNode getMax()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: boolean isAlphaOr646ToNumericLatch(int)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler access$000(io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
com.google.android.gms.internal.maps.zzj: zzj(android.os.IBinder)
com.google.zxing.datamatrix.decoder.Decoder: com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix)
com.google.firebase.database.core.SyncPoint: java.util.List addEventRegistration(com.google.firebase.database.core.EventRegistration,com.google.firebase.database.core.WriteTreeRef,com.google.firebase.database.core.view.CacheNode)
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] getRemoteInputs()
androidx.appcompat.widget.ActionBarOverlayLayout: void onConfigurationChanged(android.content.res.Configuration)
com.google.firebase.database.collection.ArraySortedMap: ArraySortedMap(java.util.Comparator,java.lang.Object[],java.lang.Object[])
androidx.lifecycle.ViewTreeLifecycleOwner: void set(android.view.View,androidx.lifecycle.LifecycleOwner)
io.flutter.view.AccessibilityBridge$1: AccessibilityBridge$1(io.flutter.view.AccessibilityBridge)
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderPlatformThread: void getApplicationDocumentsDirectory(io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.database.android.AndroidEventTarget: AndroidEventTarget()
androidx.appcompat.view.menu.MenuItemImpl: void setActionViewExpanded(boolean)
androidx.core.os.CancellationSignal: void cancel()
androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)
com.google.android.gms.maps.model.Marker: java.lang.String getId()
com.google.android.gms.common.api.GoogleApiActivity: void onActivityResult(int,int,android.content.Intent)
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: com.google.android.gms.tasks.Task queryGet(java.util.Map)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: boolean isEnabled(int)
com.google.firebase.database.core.utilities.DefaultRunLoop$FirebaseThreadFactory$1: DefaultRunLoop$FirebaseThreadFactory$1(com.google.firebase.database.core.utilities.DefaultRunLoop$FirebaseThreadFactory)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
io.flutter.plugins.urllauncher.UrlLauncherPlugin: UrlLauncherPlugin()
androidx.core.provider.FontRequestWorker$1: FontRequestWorker$1(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int)
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context,android.util.AttributeSet,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void scheduleSelf(java.lang.Runnable,long)
androidx.appcompat.app.AppCompatDialog: int getThemeResId(android.content.Context,int)
androidx.appcompat.widget.SearchView: void updateViewsVisibility(boolean)
androidx.fragment.app.FragmentViewLifecycleOwner: void initialize()
com.google.android.gms.internal.location.zzp: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.location.LocationServices: com.google.android.gms.location.FusedLocationProviderClient getFusedLocationProviderClient(android.content.Context)
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBValueNode moveRedLeft()
kotlin.NoWhenBranchMatchedException: NoWhenBranchMatchedException()
androidx.fragment.app.FragmentManager: boolean dispatchOptionsItemSelected(android.view.MenuItem)
androidx.window.embedding.SplitPairFilter: SplitPairFilter(android.content.ComponentName,android.content.ComponentName,java.lang.String)
com.google.zxing.common.reedsolomon.GenericGFPoly: GenericGFPoly(com.google.zxing.common.reedsolomon.GenericGF,int[])
com.google.firebase.database.connection.Connection: void onReset(java.lang.String)
com.google.android.gms.maps.model.CameraPosition$Builder: com.google.android.gms.maps.model.CameraPosition$Builder tilt(float)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.firebase.database.connection.PersistentConnectionImpl: void restoreTokens()
com.google.firebase.components.MissingDependencyException: MissingDependencyException(java.lang.String)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isCompatTintEnabled()
androidx.fragment.app.Fragment: void setSharedElementNames(java.util.ArrayList,java.util.ArrayList)
androidx.core.graphics.drawable.WrappedDrawableApi14: WrappedDrawableApi14(android.graphics.drawable.Drawable)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float)
com.google.firebase.database.snapshot.StringNode: boolean equals(java.lang.Object)
io.flutter.plugin.editing.InputConnectionAdaptor: void closeConnection()
io.flutter.plugins.firebase.database.QueryBuilder: void limit(java.util.Map)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setTitleOptionalHint(boolean)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
androidx.core.graphics.Insets: Insets(int,int,int,int)
com.google.android.gms.common.util.DefaultClock: DefaultClock()
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: com.google.firebase.database.core.Path currentPath(int)
com.google.android.gms.maps.model.CircleOptions: boolean isClickable()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean access$102(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,boolean)
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
androidx.appcompat.widget.ListPopupWindow: void dismiss()
kotlin.collections.EmptyList: java.lang.String toString()
com.google.android.gms.common.internal.zaf: void onConnected(android.os.Bundle)
com.baseflow.geolocator.location.LocationManagerClient: float accuracyToFloat(com.baseflow.geolocator.location.LocationAccuracy)
com.google.android.gms.common.internal.zze: android.content.Context zzc(com.google.android.gms.common.internal.zze)
androidx.multidex.ZipUtil: long computeCrcOfCentralDir(java.io.RandomAccessFile,androidx.multidex.ZipUtil$CentralDirectory)
androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)
com.google.firebase.database.Query$3: void run()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
com.baseflow.geolocator.StreamHandlerImpl: void stopListening()
com.google.android.gms.common.internal.Preconditions: void checkState(boolean,java.lang.Object)
io.flutter.plugins.imagepicker.ImageResizer: java.io.File createFile(java.io.File,java.lang.String)
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: kotlin.jvm.functions.Function1 resumeOnCancellationFun(java.lang.Object)
com.journeyapps.barcodescanner.camera.FitXYStrategy: android.graphics.Rect scalePreview(com.journeyapps.barcodescanner.Size,com.journeyapps.barcodescanner.Size)
io.flutter.plugins.imagepicker.CameraDevice: CameraDevice(java.lang.String,int)
androidx.window.core.Version$Companion: Version$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.common.api.internal.GoogleApiManager: java.util.Set zag(com.google.android.gms.common.api.internal.GoogleApiManager)
androidx.fragment.app.FragmentFactory: boolean isFragmentClass(java.lang.ClassLoader,java.lang.String)
com.google.android.gms.common.api.internal.zak: void zab(com.google.android.gms.common.ConnectionResult,int)
androidx.appcompat.app.ActionBar: boolean onMenuKeyEvent(android.view.KeyEvent)
androidx.core.provider.RequestExecutor: java.util.concurrent.ThreadPoolExecutor createDefaultExecutor(java.lang.String,int,int)
com.google.firebase.database.core.view.filter.RangedFilter: com.google.firebase.database.snapshot.NamedNode getEndPost()
androidx.fragment.app.Fragment: void performConfigurationChanged(android.content.res.Configuration)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
io.flutter.plugin.platform.PlatformViewsController: boolean validateDirection(int)
androidx.core.provider.FontProvider: androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal)
com.lyokone.location.FlutterLocationService: void onDestroy()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
androidx.collection.ArrayMap$1: int colGetSize()
io.flutter.embedding.android.FlutterSplashView: boolean isSplashScreenTransitionNeededNow()
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Void missing()
com.google.android.gms.common.api.internal.zaad: void zam()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
kotlinx.coroutines.JobKt__JobKt: void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException)
com.google.firebase.database.DatabaseReference: java.lang.String toString()
com.google.firebase.database.core.persistence.NoopPersistenceManager: void removeAllUserWrites()
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)
com.google.firebase.database.connection.PersistentConnectionImpl: void sendListen(com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingListen)
com.google.firebase.database.core.Repo: com.google.firebase.database.snapshot.Node getLatestState(com.google.firebase.database.core.Path,java.util.List)
androidx.appcompat.widget.AppCompatBackgroundHelper: void loadFromAttributes(android.util.AttributeSet,int)
com.google.android.gms.internal.location.zzap: android.location.Location zza(java.lang.String)
androidx.appcompat.widget.ResourcesWrapper: java.lang.CharSequence getText(int,java.lang.CharSequence)
androidx.appcompat.widget.RtlSpacingHelper: int getStart()
net.touchcapture.qr.flutterqr.FlutterQrPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.firebase.database.core.SyncTree: java.util.List access$1200(com.google.firebase.database.core.SyncTree,com.google.firebase.database.core.utilities.ImmutableTree)
com.google.firebase.database.connection.PersistentConnectionImpl$QuerySpec: boolean equals(java.lang.Object)
com.google.zxing.common.DefaultGridSampler: com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)
androidx.appcompat.widget.AbsActionBarView: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
com.google.android.gms.common.internal.BaseGmsClient: BaseGmsClient(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.GmsClientSupervisor,com.google.android.gms.common.GoogleApiAvailabilityLight,int,com.google.android.gms.common.internal.BaseGmsClient$BaseConnectionCallbacks,com.google.android.gms.common.internal.BaseGmsClient$BaseOnConnectionFailedListener,java.lang.String)
androidx.window.core.Version: androidx.window.core.Version access$getUNKNOWN$cp()
androidx.fragment.app.FragmentTransitionImpl: boolean containedBeforeIndex(java.util.List,android.view.View,int)
com.google.firebase.database.core.persistence.NoopPersistenceManager: void verifyInsideTransaction()
com.google.firebase.database.core.view.QuerySpec: boolean equals(java.lang.Object)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet)
io.flutter.plugins.googlemaps.GoogleMapController: void moveCamera(com.google.android.gms.maps.CameraUpdate)
com.google.firebase.database.DatabaseReference: com.google.android.gms.tasks.Task setPriorityInternal(com.google.firebase.database.snapshot.Node,com.google.firebase.database.DatabaseReference$CompletionListener)
androidx.fragment.app.FragmentManagerViewModel: void addRetainedFragment(androidx.fragment.app.Fragment)
androidx.window.embedding.ActivityFilter: boolean matchesIntent(android.content.Intent)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: boolean isStateful()
com.google.zxing.pdf417.decoder.PDF417CodewordDecoder: int getClosestDecodedValue(int[])
com.journeyapps.barcodescanner.CaptureManager: void decode()
com.google.android.gms.common.internal.ClientSettings: java.lang.Integer getClientSessionId()
androidx.arch.core.executor.ArchTaskExecutor$1: void execute(java.lang.Runnable)
androidx.window.embedding.MatcherUtils: boolean areActivityOrIntentComponentsMatching$window_release(android.app.Activity,android.content.ComponentName)
io.flutter.view.AccessibilityBridge$SemanticsNode: float max(float,float,float,float)
com.google.zxing.oned.MultiFormatOneDReader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawableIfKnown(int)
androidx.window.layout.WindowLayoutInfo: boolean equals(java.lang.Object)
androidx.appcompat.widget.DialogTitle: void onMeasure(int,int)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
kotlin.sequences.SequencesKt___SequencesKt: java.util.List toMutableList(kotlin.sequences.Sequence)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill(java.lang.Object[],java.lang.Object,int,int)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getSystemFontFamily(java.lang.String)
kotlinx.coroutines.channels.AbstractChannel: boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive)
androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)
androidx.core.view.inputmethod.InputConnectionCompat: boolean handlePerformPrivateCommand(java.lang.String,android.os.Bundle,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: boolean hasComposing()
com.google.firebase.database.core.view.ViewProcessor: com.google.firebase.database.core.view.ViewCache ackUserWrite(com.google.firebase.database.core.view.ViewCache,com.google.firebase.database.core.Path,com.google.firebase.database.core.utilities.ImmutableTree,com.google.firebase.database.core.WriteTreeRef,com.google.firebase.database.snapshot.Node,com.google.firebase.database.core.view.filter.ChildChangeAccumulator)
kotlinx.coroutines.CancellableContinuationImpl: void detachChild$kotlinx_coroutines_core()
androidx.core.graphics.drawable.WrappedDrawableApi14: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
com.google.firebase.database.connection.PersistentConnectionImpl: void sendAction(java.lang.String,java.util.Map,com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionRequestCallback)
io.flutter.embedding.android.FlutterView: void attachOverlaySurfaceToRender(io.flutter.embedding.android.FlutterImageView)
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl: RestrictedContinuationImpl(kotlin.coroutines.Continuation)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getAlpha()
com.journeyapps.barcodescanner.DecoderThread: java.lang.Object access$200(com.journeyapps.barcodescanner.DecoderThread)
com.google.firebase.database.FirebaseDatabase: FirebaseDatabase(com.google.firebase.FirebaseApp,com.google.firebase.database.core.RepoInfo,com.google.firebase.database.core.DatabaseConfig)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean access$100(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
kotlinx.coroutines.scheduling.WorkQueue: void decrementIfBlocking(kotlinx.coroutines.scheduling.Task)
androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)
com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder: AI01weightDecoder(com.google.zxing.common.BitArray)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onPostResume()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setLogo(android.graphics.drawable.Drawable)
io.flutter.plugins.googlemaps.MarkerController: void hideInfoWindow()
androidx.exifinterface.media.ExifInterface: boolean isOrfFormat(byte[])
com.google.zxing.common.GridSampler: com.google.zxing.common.GridSampler getInstance()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept$lambda-1(androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper,java.util.List)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener)
io.flutter.embedding.engine.dart.DartExecutor: void onAttachedToJNI()
kotlin.text.StringsKt__StringsKt: int indexOf(java.lang.CharSequence,char,int,boolean)
kotlinx.coroutines.channels.ChannelResult: kotlinx.coroutines.channels.ChannelResult$Failed access$getFailed$cp()
androidx.fragment.app.SpecialEffectsController$2: void run()
com.google.firebase.database.core.view.QueryParams: java.lang.String toString()
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable$ConstantState getConstantState()
com.google.common.util.concurrent.AbstractFuture$Waiter: void unpark()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: long readLong(android.os.Parcel,int)
androidx.appcompat.view.menu.ActionMenuItem: void applyIconTint()
androidx.core.view.DisplayCutoutCompat: int getSafeInsetTop()
com.google.android.gms.maps.model.PolygonOptions: com.google.android.gms.maps.model.PolygonOptions clickable(boolean)
androidx.appcompat.app.AppCompatDelegateImpl: boolean onBackPressed()
com.google.firebase.database.core.utilities.encoding.CustomClassMapper$BeanMapper: boolean isSetterOverride(java.lang.reflect.Method,java.lang.reflect.Method)
com.google.firebase.database.core.WriteTree$2: boolean evaluate(com.google.firebase.database.core.UserWriteRecord)
androidx.appcompat.graphics.drawable.DrawableWrapper: int getMinimumWidth()
com.google.android.gms.common.util.Strings: boolean isEmptyOrWhitespace(java.lang.String)
com.google.android.gms.internal.maps.zzc: void zzb(android.os.Parcel,android.os.Parcelable)
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
com.google.firebase.database.core.persistence.PruneForest: PruneForest(com.google.firebase.database.core.utilities.ImmutableTree)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean setupAutoSizeText()
com.google.firebase.database.core.RepoManager: com.google.firebase.database.core.Repo createLocalRepo(com.google.firebase.database.core.Context,com.google.firebase.database.core.RepoInfo,com.google.firebase.database.FirebaseDatabase)
com.google.zxing.oned.CodaBarReader: boolean arrayContains(char[],char)
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()
com.google.android.gms.common.internal.zae: zae(android.content.Intent,com.google.android.gms.common.api.internal.LifecycleFragment,int)
com.google.android.gms.common.internal.DialogRedirect: com.google.android.gms.common.internal.DialogRedirect getInstance(android.app.Activity,android.content.Intent,int)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityPair(android.app.Activity,android.app.Activity)
androidx.appcompat.graphics.drawable.DrawableWrapper: int getIntrinsicHeight()
com.google.zxing.aztec.decoder.Decoder: boolean[] extractBits(com.google.zxing.common.BitMatrix)
kotlin.sequences.TransformingSequence$iterator$1: void remove()
io.flutter.view.AccessibilityBridge$2: AccessibilityBridge$2(io.flutter.view.AccessibilityBridge)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$1500(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate)
io.flutter.plugins.urllauncher.UrlLauncher: void setActivity(android.app.Activity)
io.flutter.embedding.engine.systemchannels.PlatformChannel: int access$100(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray)
com.google.zxing.pdf417.decoder.BoundingBox: com.google.zxing.ResultPoint getTopLeft()
com.google.firebase.database.core.persistence.TrackedQueryManager$4: boolean evaluate(com.google.firebase.database.core.persistence.TrackedQuery)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
androidx.fragment.app.FragmentManagerViewModel$1: FragmentManagerViewModel$1()
androidx.activity.result.IntentSenderRequest$Builder: androidx.activity.result.IntentSenderRequest build()
com.google.firebase.database.tubesock.WebSocketWriter: java.lang.Thread getInnerThread()
io.flutter.embedding.android.FlutterActivity: void onSaveInstanceState(android.os.Bundle)
com.google.common.util.concurrent.AbstractFuture: java.lang.Object getUninterruptibly(java.util.concurrent.Future)
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord: NotificationManagerCompat$SideChannelManager$ListenerRecord(android.content.ComponentName)
androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets insetInsets(androidx.core.graphics.Insets,int,int,int,int)
com.google.android.gms.location.LocationRequest: java.lang.String toString()
androidx.core.graphics.TypefaceCompatApi29Impl: androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int)
com.google.firebase.database.core.Context: com.google.firebase.database.core.persistence.PersistenceManager getPersistenceManager(java.lang.String)
com.google.android.gms.common.api.internal.zace: void zab(com.google.android.gms.signin.internal.zak)
androidx.activity.ImmLeaksCleaner: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.appcompat.widget.ToolbarWidgetWrapper: ToolbarWidgetWrapper(androidx.appcompat.widget.Toolbar,boolean)
androidx.fragment.app.FragmentTransitionCompat21: void beginDelayedTransition(android.view.ViewGroup,java.lang.Object)
com.google.firebase.database.DataSnapshot: java.lang.String toString()
androidx.core.widget.PopupWindowCompat: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
androidx.fragment.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)
androidx.appcompat.app.AppCompatDelegateImpl$5: void onDetachedFromWindow()
kotlinx.coroutines.ExceptionsKt: java.util.concurrent.CancellationException CancellationException(java.lang.String,java.lang.Throwable)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.core.widget.ListViewAutoScrollHelper: void scrollTargetBy(int,int)
com.google.firebase.database.collection.ImmutableSortedMap$Builder: com.google.firebase.database.collection.ImmutableSortedMap fromMap(java.util.Map,java.util.Comparator)
kotlinx.coroutines.CoroutineId$Key: CoroutineId$Key(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
com.google.zxing.pdf417.PDF417Reader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap)
com.google.android.gms.internal.location.zzat: zzat(com.google.android.gms.common.api.internal.ListenerHolder)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void reverse()
androidx.appcompat.widget.ActionMenuPresenter: boolean showOverflowMenu()
com.google.android.gms.location.zzag: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.widget.ActionBarContainer: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback)
androidx.collection.ArrayMap$1: int colIndexOfKey(java.lang.Object)
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)
androidx.activity.result.contract.ActivityResultContract: ActivityResultContract()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
androidx.appcompat.widget.Toolbar$SavedState$1: androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel)
androidx.appcompat.widget.ResourcesWrapper: java.io.InputStream openRawResource(int,android.util.TypedValue)
com.google.firebase.database.core.view.Event$EventType: com.google.firebase.database.core.view.Event$EventType valueOf(java.lang.String)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.lang.String createString(android.os.Parcel,int)
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable: void run()
com.google.android.gms.common.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)
androidx.appcompat.view.menu.StandardMenuPopup: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void setRampUpDuration(int)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintList(android.content.res.ColorStateList)
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$2602(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.collection.LruCache: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
androidx.fragment.app.FragmentContainerView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
com.google.android.gms.internal.location.zzbm: android.os.Looper zza(android.os.Looper)
androidx.fragment.app.FragmentManager: void dispatchDestroyView()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionPause(android.transition.Transition)
com.google.common.util.concurrent.AbstractFuture$Listener: AbstractFuture$Listener(java.lang.Runnable,java.util.concurrent.Executor)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode getBackgroundMode()
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer access$500(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.plugins.googlemaps.TileOverlayController: void setVisible(boolean)
com.google.firebase.database.core.Path: com.google.firebase.database.snapshot.ChildKey getBack()
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder: int checkWeight(int)
androidx.lifecycle.ReportFragment: void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int,int)
androidx.core.widget.NestedScrollView$SavedState$1: androidx.core.widget.NestedScrollView$SavedState[] newArray(int)
androidx.appcompat.app.WindowDecorActionBar: boolean shouldAnimateContextView()
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)
androidx.appcompat.widget.AppCompatButton: void drawableStateChanged()
com.google.android.gms.maps.internal.zzu: zzu()
com.google.zxing.oned.rss.expanded.ExpandedRow: boolean equals(java.lang.Object)
com.google.android.gms.maps.model.PolylineOptions: java.util.List getPoints()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: PlatformChannel$SystemUiOverlay(java.lang.String,int,java.lang.String)
com.google.firebase.database.core.persistence.TrackedQueryManager: void assertValidTrackedQuery(com.google.firebase.database.core.view.QuerySpec)
kotlin.Result$Companion: Result$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean)
com.google.android.gms.signin.SignInOptions: boolean equals(java.lang.Object)
androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int,int,boolean)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initQuad(float,float)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean onActivityResult(int,int,android.content.Intent)
androidx.core.view.WindowInsetsCompat: void copyRootViewBounds(android.view.View)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean isStateful()
androidx.fragment.app.FragmentManager: boolean execPendingActions(boolean)
io.flutter.plugins.googlemaps.Convert: java.lang.Float toFloatWrapper(java.lang.Object)
com.google.android.gms.common.api.internal.zak: void onCancel(android.content.DialogInterface)
com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder: AbstractExpandedDecoder(com.google.zxing.common.BitArray)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion()
com.google.firebase.database.connection.ConnectionContext: com.google.firebase.database.connection.ConnectionTokenProvider getAuthTokenProvider()
io.flutter.plugins.googlemaps.CircleController: void setConsumeTapEvents(boolean)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void zaat()
androidx.versionedparcelable.ParcelImpl$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int)
com.google.firebase.database.core.Repo$5$1: Repo$5$1(com.google.firebase.database.core.Repo$5,com.google.firebase.database.core.SyncTree$CompletionListener)
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.zace zaa(android.content.Context,android.os.Handler)
androidx.savedstate.Recreator$SavedStateProvider: Recreator$SavedStateProvider(androidx.savedstate.SavedStateRegistry)
androidx.appcompat.app.WindowDecorActionBar: void hideForActionMode()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
com.google.zxing.oned.rss.AbstractRSSReader: int[] getDecodeFinderCounters()
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.view.menu.CascadingMenuPopup: androidx.appcompat.widget.MenuPopupWindow createPopupWindow()
com.google.android.gms.common.api.internal.zad: void zaa(com.google.android.gms.common.api.internal.zaz,boolean)
com.google.android.gms.location.zzl: void doExecute(com.google.android.gms.common.api.Api$AnyClient,com.google.android.gms.tasks.TaskCompletionSource)
io.flutter.plugin.editing.TextInputPlugin: boolean handleKeyEvent(android.view.KeyEvent)
androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void queueTask(androidx.core.app.NotificationManagerCompat$Task)
kotlin.jvm.internal.FunctionReference: boolean isExternal()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5800(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.graphics.drawable.DrawableContainer: void jumpToCurrentState()
com.google.android.gms.maps.GoogleMapOptions: java.lang.Float getMinZoomPreference()
androidx.fragment.app.DialogFragment: void prepareDialog(android.os.Bundle)
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
com.google.android.gms.internal.location.zzbd: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
com.google.firebase.database.core.operation.Overwrite: java.lang.String toString()
androidx.core.graphics.drawable.WrappedDrawableApi21: boolean isCompatTintEnabled()
io.flutter.plugins.firebase.database.QueryBuilder: QueryBuilder(com.google.firebase.database.DatabaseReference,java.util.List)
com.google.android.gms.maps.internal.zzg: com.google.android.gms.maps.internal.IUiSettingsDelegate getUiSettings()
kotlinx.coroutines.DispatcherExecutor: void execute(java.lang.Runnable)
com.google.firebase.database.core.ZombieEventManager: com.google.firebase.database.core.ZombieEventManager getInstance()
com.google.android.gms.common.api.internal.BasePendingResult: BasePendingResult()
io.flutter.view.AccessibilityBridge$3: AccessibilityBridge$3(io.flutter.view.AccessibilityBridge,android.os.Handler)
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.StackTraceElement getStackTraceElement()
com.google.firebase.database.connection.PersistentConnectionImpl$4: void onResponse(java.util.Map)
androidx.appcompat.app.ActionBar$Tab: ActionBar$Tab()
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.internal.GoogleApiManager zab(android.content.Context)
kotlin.random.AbstractPlatformRandom: int nextInt()
androidx.appcompat.view.menu.StandardMenuPopup: void show()
com.google.android.gms.maps.zzaa: zzaa()
androidx.appcompat.app.AppCompatDelegate: void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate)
androidx.collection.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)
androidx.fragment.app.BackStackRecord: java.lang.String getName()
com.google.android.gms.common.api.internal.zag: void zaa(java.lang.RuntimeException)
com.google.android.gms.signin.internal.SignInClientImpl: java.lang.String getStartServiceAction()
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions maxZoomPreference(float)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
androidx.lifecycle.ClassesInfoCache$MethodReference: int hashCode()
androidx.window.layout.WindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.appcompat.view.menu.MenuDialogHelper: MenuDialogHelper(androidx.appcompat.view.menu.MenuBuilder)
io.flutter.view.FlutterMain: java.lang.String getLookupKeyForAsset(java.lang.String,java.lang.String)
io.flutter.plugins.googlemaps.GoogleMapController: boolean onMarkerClick(com.google.android.gms.maps.model.Marker)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable getCurrent()
kotlin.jvm.internal.ClassReference$Companion: ClassReference$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.versionedparcelable.VersionedParcelParcel: void writeCharSequence(java.lang.CharSequence)
com.google.zxing.common.BitArray: BitArray()
androidx.appcompat.view.menu.MenuBuilder: java.lang.CharSequence getHeaderTitle()
com.google.android.gms.common.api.internal.zzc: int zza(com.google.android.gms.common.api.internal.zzc)
com.google.firebase.database.snapshot.BooleanNode: boolean equals(java.lang.Object)
androidx.appcompat.app.AppCompatDelegate: int getDefaultNightMode()
com.google.android.gms.maps.internal.zzao: zzao()
com.google.firebase.database.connection.PersistentConnectionImpl: void onDisconnectCancel(java.util.List,com.google.firebase.database.connection.RequestResultCallback)
io.flutter.plugins.pathprovider.PathProviderPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)
com.google.firebase.database.snapshot.ChildKey: java.lang.String toString()
com.google.android.gms.maps.model.MarkerOptions: float getAnchorU()
com.google.android.gms.common.internal.GmsClient: GmsClient(android.content.Context,android.os.Looper,int,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)
androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: androidx.appcompat.view.menu.ShowableListMenu getPopup()
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
com.google.zxing.datamatrix.decoder.Version$ECBlocks: int getECCodewords()
androidx.appcompat.view.menu.MenuAdapter: void setForceShowIcon(boolean)
com.journeyapps.barcodescanner.camera.AutoFocusManager: int access$000(com.journeyapps.barcodescanner.camera.AutoFocusManager)
androidx.appcompat.widget.ActionMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.camera.CameraSettings getCameraSettings()
io.flutter.FlutterInjector: FlutterInjector(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager,io.flutter.embedding.engine.FlutterJNI$Factory,java.util.concurrent.ExecutorService)
androidx.appcompat.view.menu.ActionMenuItem: int getItemId()
com.google.firebase.database.Query: com.google.android.gms.tasks.Task get()
com.google.zxing.qrcode.decoder.Version$ECBlocks: com.google.zxing.qrcode.decoder.Version$ECB[] getECBlocks()
com.google.firebase.database.android.SqlPersistenceStorageEngine: java.lang.String partKey(com.google.firebase.database.core.Path,int)
kotlinx.coroutines.EventLoop: long delta(boolean)
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.database.core.view.CacheNode: boolean isFiltered()
io.flutter.plugin.platform.PlatformViewsController: void flushAllViews()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
com.google.android.gms.common.internal.ClientSettings$Builder: com.google.android.gms.common.internal.ClientSettings$Builder addAllRequiredScopes(java.util.Collection)
io.flutter.view.VsyncWaiter$1: void asyncWaitForVsync(long)
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2: java.util.Iterator iterator()
com.google.android.gms.maps.model.CircleOptions: com.google.android.gms.maps.model.CircleOptions strokeColor(int)
androidx.core.view.inputmethod.InputContentInfoCompat: InputContentInfoCompat(androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl)
androidx.collection.MapCollections: MapCollections()
androidx.collection.MapCollections$KeySet: boolean removeAll(java.util.Collection)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeChangeListener()
androidx.appcompat.widget.Toolbar: int getHorizontalMargins(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
io.flutter.plugins.googlemaps.TileProviderController: android.os.Handler access$000(io.flutter.plugins.googlemaps.TileProviderController)
com.google.firebase.database.snapshot.ChildKey$IntegerChildKey: int intValue()
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.window.core.Bounds: java.lang.String toString()
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet,int)
kotlinx.coroutines.channels.ConflatedChannel: ConflatedChannel(kotlin.jvm.functions.Function1)
androidx.arch.core.internal.SafeIterableMap$ListIterator: boolean hasNext()
androidx.appcompat.widget.ActionBarBackgroundDrawable: void draw(android.graphics.Canvas)
kotlinx.coroutines.channels.AbstractSendChannel: AbstractSendChannel(kotlin.jvm.functions.Function1)
com.google.android.gms.common.internal.BaseGmsClient: void onSetConnectState(int,android.os.IInterface)
androidx.collection.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)
kotlinx.coroutines.internal.ExceptionsConstuctorKt: int fieldsCount$default(java.lang.Class,int,int,java.lang.Object)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch: PlatformViewsChannel$PlatformViewTouch(int,java.lang.Number,java.lang.Number,int,int,java.lang.Object,java.lang.Object,int,int,float,float,int,int,int,int,long)
com.google.firebase.database.connection.WebsocketConnection: void access$800(com.google.firebase.database.connection.WebsocketConnection)
com.journeyapps.barcodescanner.DefaultDecoderFactory: DefaultDecoderFactory(java.util.Collection,java.util.Map,java.lang.String,int)
androidx.appcompat.widget.ActionMenuView: boolean isOverflowMenuShowing()
com.google.android.gms.common.api.Status: java.lang.String zzg()
io.flutter.plugins.googlemaps.GoogleMapsPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
com.google.zxing.oned.rss.AbstractRSSReader: int parseFinderValue(int[],int[][])
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: BasicMessageChannel$IncomingReplyHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply,io.flutter.plugin.common.BasicMessageChannel$1)
com.google.firebase.database.core.Repo: void access$3200(com.google.firebase.database.core.Repo,com.google.firebase.database.core.utilities.Tree,int)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.gms.signin.SignInOptions: java.lang.Long getRealClientLibraryVersion()
io.flutter.plugin.platform.PlatformPlugin: void access$800(io.flutter.plugin.platform.PlatformPlugin)
androidx.multidex.MultiDexExtractor$1: boolean accept(java.io.File)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: java.lang.String getSystemFontFamilyName()
androidx.appcompat.app.AppCompatDelegateImpl: int calculateNightMode()
com.google.android.gms.maps.model.PolygonOptions: com.google.android.gms.maps.model.PolygonOptions visible(boolean)
com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.CameraUpdate zoomTo(float)
com.google.firebase.database.core.utilities.ImmutableTree: java.lang.Object fold(java.lang.Object,com.google.firebase.database.core.utilities.ImmutableTree$TreeVisitor)
com.journeyapps.barcodescanner.camera.CameraInstance: java.lang.String access$000()
io.flutter.plugins.imagepicker.ImagePickerCache: void savePendingCameraMediaUriPath(android.net.Uri)
com.google.android.gms.common.api.Response: Response()
io.flutter.plugins.pathprovider.PathProviderPlugin$UiThreadExecutor: void execute(java.lang.Runnable)
androidx.collection.MapCollections$KeySet: java.lang.Object[] toArray(java.lang.Object[])
com.google.zxing.common.CharacterSetECI: CharacterSetECI(java.lang.String,int,int,java.lang.String[])
kotlin.collections.EmptyList: boolean containsAll(java.util.Collection)
androidx.appcompat.app.AlertController$AlertParams$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
io.flutter.plugins.googlemaps.GoogleMapController: void setLiteModeEnabled(boolean)
androidx.appcompat.widget.ResourcesWrapper: boolean getBoolean(int)
androidx.fragment.app.Fragment: void onMultiWindowModeChanged(boolean)
com.google.firebase.database.android.AndroidPlatform: AndroidPlatform(com.google.firebase.FirebaseApp)
com.google.firebase.database.core.ValueEventRegistration: com.google.firebase.database.core.view.DataEvent createEvent(com.google.firebase.database.core.view.Change,com.google.firebase.database.core.view.QuerySpec)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()
com.google.android.gms.tasks.TaskCompletionSource: com.google.android.gms.tasks.Task getTask()
com.google.common.util.concurrent.AbstractFuture$Waiter: AbstractFuture$Waiter(boolean)
com.google.firebase.components.ComponentRuntime: com.google.firebase.inject.Deferred getDeferred(java.lang.Class)
io.flutter.plugins.googlemaps.GoogleMapController: void setScrollGesturesEnabled(boolean)
androidx.core.widget.EdgeEffectCompat: void onPull(android.widget.EdgeEffect,float,float)
com.lyokone.location.LocationPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.SubMenu addSubMenu(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
androidx.appcompat.widget.ResourceManagerInternal: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)
com.google.zxing.common.BitMatrix: int[] getEnclosingRectangle()
com.google.android.gms.maps.model.TileOverlay: void setTransparency(float)
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$5400(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.view.menu.MenuItemWrapperICS: char getAlphabeticShortcut()
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)
io.flutter.plugins.googlemaps.Convert: java.lang.String interpretPolygonOptions(java.lang.Object,io.flutter.plugins.googlemaps.PolygonOptionsSink)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setVisibility(int)
com.lyokone.location.NotificationOptions: java.lang.String getDescription()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
io.flutter.plugins.imagepicker.ImagePickerDelegate: java.io.File createTemporaryWritableFile(java.lang.String)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setVisible(boolean)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: java.util.Map access$100(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
com.google.android.gms.internal.location.zzap: void zza(boolean)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: int systemProp(java.lang.String,int,int,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.lang.Object accessAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$4600(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.core.widget.NestedScrollView$SavedState: NestedScrollView$SavedState(android.os.Parcelable)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setCheckable(boolean)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: LockFreeTaskQueueCore(int,boolean)
com.google.android.gms.common.util.DeviceProperties: boolean isWearableWithoutPlayStore(android.content.Context)
com.google.firebase.database.collection.ImmutableSortedSet: com.google.firebase.database.collection.ImmutableSortedSet insert(java.lang.Object)
io.flutter.FlutterInjector$Builder$NamedThreadFactory: FlutterInjector$Builder$NamedThreadFactory(io.flutter.FlutterInjector$Builder)
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: TextInputChannel$InputType(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType,boolean,boolean)
io.flutter.plugins.firebase.database.QueryBuilder: void endAt(java.util.Map)
androidx.fragment.app.DialogFragment$1: DialogFragment$1(androidx.fragment.app.DialogFragment)
androidx.window.embedding.SplitInfo: int hashCode()
com.google.firebase.database.connection.PersistentConnectionImpl: void openNetworkConnection(java.lang.String,java.lang.String)
androidx.fragment.app.FragmentManager: void restoreSaveState(android.os.Parcelable)
com.lyokone.location.MethodCallHandlerImpl: void onGetLocation(io.flutter.plugin.common.MethodChannel$Result)
com.google.common.util.concurrent.SettableFuture: boolean setException(java.lang.Throwable)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean)
androidx.appcompat.widget.ViewUtils: void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setInitialPolygons(java.lang.Object)
com.google.android.gms.maps.internal.zzg: void setOnMarkerClickListener(com.google.android.gms.maps.internal.zzar)
com.google.zxing.qrcode.decoder.Decoder: com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,java.util.Map)
androidx.fragment.app.FragmentTransitionCompat21$2: FragmentTransitionCompat21$2(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList)
com.google.android.gms.internal.maps.zzy: void setGeodesic(boolean)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: void onKeyEventHandled(java.lang.Boolean)
com.google.firebase.database.Logger$Level: Logger$Level(java.lang.String,int)
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()
com.google.firebase.database.core.operation.OperationSource: boolean isFromUser()
com.google.android.gms.common.internal.BaseGmsClient: boolean enableLocalFallback()
androidx.core.app.NotificationCompat$Style: void setBuilder(androidx.core.app.NotificationCompat$Builder)
com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.CameraUpdate scrollBy(float,float)
com.google.android.gms.location.LocationSettingsRequest$Builder: LocationSettingsRequest$Builder()
kotlin.collections.EmptyMap: boolean containsValue(java.lang.Object)
com.google.android.gms.maps.internal.zzb: com.google.android.gms.dynamic.IObjectWrapper zoomTo(float)
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
com.google.zxing.PlanarYUVLuminanceSource: PlanarYUVLuminanceSource(byte[],int,int,int,int,int,int,boolean)
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.MarkerOptions icon(com.google.android.gms.maps.model.BitmapDescriptor)
com.google.firebase.database.connection.PersistentConnectionImpl: void listen(java.util.List,java.util.Map,com.google.firebase.database.connection.ListenHashProvider,java.lang.Long,com.google.firebase.database.connection.RequestResultCallback)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void onPanelClosed(int,android.view.Menu)
com.google.firebase.database.collection.LLRBEmptyNode: com.google.firebase.database.collection.LLRBNode insert(java.lang.Object,java.lang.Object,java.util.Comparator)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
com.google.android.gms.common.ConnectionResult: java.lang.String toString()
androidx.core.view.ViewCompat$2: java.lang.Boolean frameworkGet(android.view.View)
com.google.android.gms.maps.internal.zzg: boolean isTrafficEnabled()
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean canApplyTheme()
androidx.appcompat.view.menu.CascadingMenuPopup: void dismiss()
io.flutter.plugin.common.JSONMethodCodec: io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer)
androidx.fragment.app.FragmentManager: void addCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
kotlinx.coroutines.JobSupport: java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List)
kotlin.collections.EmptyIterator: boolean hasNext()
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion: CoroutineScheduler$Companion()
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.view.ActionProvider getSupportActionProvider()
androidx.appcompat.view.menu.MenuItemImpl: android.view.ContextMenu$ContextMenuInfo getMenuInfo()
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
io.flutter.embedding.engine.dart.DartMessenger: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: boolean isBitSet(long,int)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.google.zxing.datamatrix.detector.Detector: int distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: short readShort()
com.google.firebase.FirebaseApp$UserUnlockReceiver: void onReceive(android.content.Context,android.content.Intent)
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi29: void rebase(android.content.res.Resources$Theme)
kotlinx.coroutines.scheduling.CoroutineScheduler: void signalBlockingWork(boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel: java.util.List access$300(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray)
androidx.core.widget.NestedScrollView: int computeVerticalScrollOffset()
com.google.android.gms.common.api.Scope: boolean equals(java.lang.Object)
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: void setBounds(android.graphics.Rect,android.graphics.Rect)
com.google.android.gms.location.zzah: zzah()
androidx.fragment.app.SpecialEffectsController$Operation: boolean isComplete()
io.flutter.plugins.imagepicker.ImagePickerPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.android.gms.dynamite.zzf: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$zzb zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$zza)
com.google.firebase.database.core.CompoundWrite: com.google.firebase.database.core.CompoundWrite addWrite(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node)
io.flutter.plugins.imagepicker.FileUtils: void copy(java.io.InputStream,java.io.OutputStream)
com.google.firebase.database.OnDisconnect: com.google.android.gms.tasks.Task setValue(java.lang.Object,java.lang.String)
io.flutter.plugins.googlemaps.GoogleMapController: void onDestroy(androidx.lifecycle.LifecycleOwner)
androidx.appcompat.view.menu.CascadingMenuPopup: int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
androidx.appcompat.widget.ListPopupWindow: void show()
androidx.appcompat.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()
com.journeyapps.barcodescanner.camera.CameraManager: void setPreviewDisplay(com.journeyapps.barcodescanner.camera.CameraSurface)
com.google.zxing.qrcode.decoder.DataMask$6: boolean isMasked(int,int)
androidx.fragment.app.FragmentTransitionCompat21: boolean hasSimpleTarget(android.transition.Transition)
androidx.fragment.app.Fragment$4: android.view.View onFindViewById(int)
com.google.firebase.database.core.ValueEventRegistration: int hashCode()
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getChangingConfigurations()
androidx.core.provider.FontRequestWorker$TypefaceResult: FontRequestWorker$TypefaceResult(int)
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI valueOf(java.lang.String)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.journeyapps.barcodescanner.CameraPreview: CameraPreview(android.content.Context)
com.google.firebase.database.core.view.filter.LimitedFilter: com.google.firebase.database.snapshot.IndexedNode fullLimitUpdateChild(com.google.firebase.database.snapshot.IndexedNode,com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node,com.google.firebase.database.core.view.filter.NodeFilter$CompleteChildSource,com.google.firebase.database.core.view.filter.ChildChangeAccumulator)
androidx.window.layout.HardwareFoldingFeature$Companion: void validateFeatureBounds$window_release(androidx.window.core.Bounds)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetRight(android.view.DisplayCutout)
com.baseflow.geolocator.MethodCallHandlerImpl: void onRequestPermission(io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.view.ActionBarPolicy: int getTabContainerHeight()
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: boolean needsDividerBefore()
androidx.appcompat.app.TwilightManager$TwilightState: TwilightManager$TwilightState()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$6200(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.android.gms.tasks.zzu: boolean trySetResult(java.lang.Object)
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op()
com.google.zxing.aztec.detector.Detector: float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4200(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
io.flutter.plugin.common.StandardMethodCodec: java.lang.String getStackTrace(java.lang.Throwable)
io.flutter.plugins.googlemaps.MarkerBuilder: void setFlat(boolean)
androidx.collection.MapCollections$ArrayIterator: boolean hasNext()
androidx.core.widget.TextViewCompat$OreoCallback: android.content.Intent createProcessTextIntent()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onTrimMemory(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
com.google.android.gms.common.internal.BaseGmsClient: void zza(int,android.os.IInterface)
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver: void onInvalidated()
com.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: ComponentDiscovery$MetadataRegistrarNameRetriever(java.lang.Class,com.google.firebase.components.ComponentDiscovery$1)
com.google.android.gms.maps.internal.zzg: void setOnPolygonClickListener(com.google.android.gms.maps.internal.zzbd)
androidx.appcompat.view.menu.SubMenuBuilder: boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: void onSetFailedResult(com.google.android.gms.common.api.Result)
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient: WebViewActivity$FlutterWebChromeClient(io.flutter.plugins.urllauncher.WebViewActivity)
com.google.android.gms.internal.maps.zzab: zzab(android.os.IBinder)
com.google.android.gms.common.api.internal.BasePendingResult$zaa: BasePendingResult$zaa(com.google.android.gms.common.api.internal.BasePendingResult,com.google.android.gms.common.api.internal.zao)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void close()
com.google.firebase.database.connection.PersistentConnectionImpl: void sendSensitive(java.lang.String,boolean,java.util.Map,com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionRequestCallback)
androidx.core.graphics.drawable.IconCompat: java.lang.String toString()
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn: void removeIncorrectCodewords(com.google.zxing.pdf417.decoder.Codeword[],com.google.zxing.pdf417.decoder.BarcodeMetadata)
kotlin.jvm.internal.FunctionReference: int getArity()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void setupFlutterEngine()
androidx.activity.ComponentActivity: ComponentActivity()
io.flutter.view.AccessibilityBridge: void onTouchExplorationExit()
io.flutter.plugins.flutterexifrotation.FlutterExifRotationPlugin: java.lang.Object argument(io.flutter.plugin.common.MethodCall,java.lang.String,java.lang.Object)
kotlinx.coroutines.flow.FlowKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean finishComposingText()
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void onServiceDisconnected(android.content.ComponentName)
com.google.firebase.database.core.ChildEventRegistration: boolean isSameListener(com.google.firebase.database.core.EventRegistration)
com.google.firebase.database.core.view.Change: com.google.firebase.database.core.view.Change childAddedChange(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node)
com.google.firebase.database.core.view.ViewProcessor: com.google.firebase.database.core.view.ViewCache applyServerOverwrite(com.google.firebase.database.core.view.ViewCache,com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node,com.google.firebase.database.core.WriteTreeRef,com.google.firebase.database.snapshot.Node,boolean,com.google.firebase.database.core.view.filter.ChildChangeAccumulator)
com.google.firebase.database.core.operation.ListenComplete: com.google.firebase.database.core.operation.Operation operationForChild(com.google.firebase.database.snapshot.ChildKey)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: VectorDrawableCompat$VFullPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)
com.google.zxing.qrcode.detector.FinderPatternInfo: FinderPatternInfo(com.google.zxing.qrcode.detector.FinderPattern[])
com.google.zxing.aztec.detector.Detector: com.google.zxing.ResultPoint[] getMatrixCornerPoints(com.google.zxing.ResultPoint[])
net.touchcapture.qr.flutterqr.QRView$1: void onActivityDestroyed(android.app.Activity)
com.google.android.gms.internal.maps.zzy: void remove()
com.google.firebase.database.core.persistence.TrackedQueryManager: boolean isQueryComplete(com.google.firebase.database.core.view.QuerySpec)
com.google.android.gms.common.api.internal.GoogleApiManager$zab: void onReportServiceBinding(com.google.android.gms.common.ConnectionResult)
kotlinx.coroutines.internal.Symbol: Symbol(java.lang.String)
androidx.core.app.ActivityRecreator: boolean queueOnStopIfNecessary(java.lang.Object,int,android.app.Activity)
com.google.firebase.database.core.persistence.TrackedQueryManager: void setQueryActiveFlag(com.google.firebase.database.core.view.QuerySpec,boolean)
androidx.fragment.app.FragmentContainer: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
kotlinx.coroutines.CoroutineDispatcher: java.lang.String toString()
androidx.appcompat.widget.TooltipCompatHandler$1: void run()
androidx.appcompat.app.AlertDialog: int resolveDialogTheme(android.content.Context,int)
com.google.android.gms.common.internal.Objects$ToStringHelper: Objects$ToStringHelper(java.lang.Object)
com.journeyapps.barcodescanner.camera.FitCenterStrategy: float getScore(com.journeyapps.barcodescanner.Size,com.journeyapps.barcodescanner.Size)
com.google.android.gms.maps.MapView: void onCreate(android.os.Bundle)
androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)
io.flutter.view.AccessibilityBridge$SemanticsNode: float min(float,float,float,float)
androidx.appcompat.view.menu.BaseMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)
com.google.firebase.database.core.utilities.Tree: Tree()
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: DeferredComponentChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.appcompat.widget.SearchView: void onActionViewExpanded()
com.google.firebase.database.connection.PersistentConnectionImpl: int access$1000(com.google.firebase.database.connection.PersistentConnectionImpl)
io.flutter.plugins.googlemaps.PolygonController: void setZIndex(float)
com.google.firebase.database.snapshot.IndexedNode: IndexedNode(com.google.firebase.database.snapshot.Node,com.google.firebase.database.snapshot.Index,com.google.firebase.database.collection.ImmutableSortedSet)
androidx.appcompat.widget.ActionBarBackgroundDrawable: void setAlpha(int)
androidx.fragment.app.BackStackRecord: boolean generateOps(java.util.ArrayList,java.util.ArrayList)
com.journeyapps.barcodescanner.DecoratedBarcodeView: com.journeyapps.barcodescanner.BarcodeView getBarcodeView()
com.google.firebase.components.Component: com.google.firebase.components.Component of(java.lang.Object,java.lang.Class,java.lang.Class[])
androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()
androidx.core.app.NotificationCompatBuilder: NotificationCompatBuilder(androidx.core.app.NotificationCompat$Builder)
com.google.android.gms.common.api.internal.ApiKey: ApiKey(com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions)
kotlinx.coroutines.scheduling.LimitingDispatcher: void execute(java.lang.Runnable)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void start()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: void setPlatformViewsHandler(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler)
androidx.fragment.app.FragmentTransitionImpl: void findNamedViews(java.util.Map,android.view.View)
io.flutter.embedding.engine.loader.FlutterLoader$Settings: FlutterLoader$Settings()
androidx.appcompat.view.menu.MenuItemImpl: android.view.SubMenu getSubMenu()
io.flutter.plugin.common.EventChannel: EventChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
androidx.appcompat.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)
androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)
com.google.zxing.datamatrix.detector.Detector: com.google.zxing.ResultPoint correctTopRightRectangular(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView createImageView()
androidx.appcompat.app.AppCompatDelegate: void setTheme(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void initFeature(int)
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean addNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.channels.AbstractChannel: kotlinx.coroutines.channels.ReceiveOrClosed takeFirstReceiveOrPeekClosed()
androidx.appcompat.widget.Toolbar$SavedState$1: java.lang.Object[] newArray(int)
com.google.android.gms.common.internal.GetServiceRequest: GetServiceRequest(int,int,int,java.lang.String,android.os.IBinder,com.google.android.gms.common.api.Scope[],android.os.Bundle,android.accounts.Account,com.google.android.gms.common.Feature[],com.google.android.gms.common.Feature[],boolean)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: android.content.pm.ApplicationInfo getApplicationInfo(android.content.Context)
androidx.core.graphics.drawable.WrappedDrawableState: boolean canConstantState()
io.flutter.plugins.firebase.database.QueryBuilder: com.google.firebase.database.Query build()
com.google.firebase.database.snapshot.IndexedNode: com.google.firebase.database.snapshot.IndexedNode updateChild(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node)
androidx.lifecycle.Lifecycling: boolean isLifecycleParent(java.lang.Class)
androidx.window.layout.DisplayFeature: android.graphics.Rect getBounds()
io.flutter.plugin.editing.TextInputPlugin$InputTarget: TextInputPlugin$InputTarget(io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void readyToDisplay(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,int,int,int,int)
com.google.android.gms.maps.model.CameraPosition: java.lang.String toString()
com.google.firebase.database.core.view.QueryParams: boolean isValid()
androidx.appcompat.graphics.drawable.DrawableContainer: boolean isAutoMirrored()
com.journeyapps.barcodescanner.camera.AutoFocusManager: void access$100(com.journeyapps.barcodescanner.camera.AutoFocusManager)
androidx.appcompat.graphics.drawable.DrawableContainer: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)
io.flutter.plugins.googlemaps.Convert: java.lang.String interpretTileOverlayOptions(java.util.Map,io.flutter.plugins.googlemaps.TileOverlaySink)
androidx.loader.app.LoaderManagerImpl: void markForRedelivery()
com.google.firebase.database.core.utilities.encoding.CustomClassMapper$BeanMapper: boolean shouldIncludeSetter(java.lang.reflect.Method)
com.google.zxing.client.android.InactivityTimer: void onBattery(boolean)
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2$1: boolean hasNext()
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
io.flutter.plugin.platform.PlatformViewsController: void onDisplayOverlaySurface(int,int,int,int,int)
com.google.zxing.qrcode.decoder.DataMask: void unmaskBitMatrix(com.google.zxing.common.BitMatrix,int)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
androidx.lifecycle.LiveData: void onInactive()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.google.android.gms.common.stats.ConnectionTracker: boolean zza(android.content.Context,java.lang.String,android.content.Intent,android.content.ServiceConnection,int)
com.google.android.gms.maps.internal.zzk: com.google.android.gms.dynamic.IObjectWrapper getView()
androidx.appcompat.app.AlertController: void setupContent(android.view.ViewGroup)
com.google.firebase.database.core.view.QueryParams: boolean hasEnd()
androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.google.firebase.database.core.utilities.Utilities: java.lang.String extractPathString(java.lang.String)
androidx.window.core.Version: int getMinor()
kotlinx.coroutines.CommonPool: boolean isGoodCommonPool$kotlinx_coroutines_core(java.lang.Class,java.util.concurrent.ExecutorService)
io.flutter.embedding.engine.dart.DartMessenger: void handleMessageFromDart(java.lang.String,java.nio.ByteBuffer,int,long)
com.google.firebase.components.Dependency: int hashCode()
com.google.firebase.database.core.Repo: com.google.android.gms.tasks.Task getValue(com.google.firebase.database.Query)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void bindTab(androidx.appcompat.app.ActionBar$Tab)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void notImplemented()
com.google.firebase.database.core.WriteTree: void addMerge(com.google.firebase.database.core.Path,com.google.firebase.database.core.CompoundWrite,java.lang.Long)
androidx.lifecycle.ReportFragment: void onActivityCreated(android.os.Bundle)
com.google.firebase.database.tubesock.WebSocketHandshake: java.lang.String generateHeader(java.util.LinkedHashMap)
io.flutter.plugins.imagepicker.CameraDevice: io.flutter.plugins.imagepicker.CameraDevice[] values()
com.google.android.gms.common.api.internal.GoogleApiManager: void zam()
com.google.common.util.concurrent.Futures$CallbackListener: void run()
androidx.collection.ArraySet: int hashCode()
kotlinx.coroutines.internal.MainDispatcherLoader: kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher()
com.google.zxing.common.PerspectiveTransform: com.google.zxing.common.PerspectiveTransform squareToQuadrilateral(float,float,float,float,float,float,float,float)
androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.google.android.gms.location.zzag: java.lang.Object[] newArray(int)
androidx.fragment.app.FragmentManagerState$1: java.lang.Object[] newArray(int)
androidx.appcompat.app.AppCompatActivity$2: AppCompatActivity$2(androidx.appcompat.app.AppCompatActivity)
androidx.fragment.app.FragmentStateManager: boolean isFragmentViewChild(android.view.View)
com.google.firebase.database.core.Repo: void access$000(com.google.firebase.database.core.Repo)
com.google.android.gms.dynamite.zza: zza()
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeEnabledSystemUIOverlays(java.util.List)
com.google.zxing.aztec.detector.Detector: com.google.zxing.aztec.detector.Detector$Point getFirstDifferent(com.google.zxing.aztec.detector.Detector$Point,boolean,int,int)
com.google.firebase.database.logging.AndroidLogger: AndroidLogger(com.google.firebase.database.logging.Logger$Level,java.util.List)
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: void endChild()
io.flutter.embedding.android.FlutterView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
com.google.firebase.database.logging.LogWrapper: void warn(java.lang.String,java.lang.Throwable)
androidx.core.graphics.TypefaceCompatApi26Impl: boolean isFontFamilyPrivateAPIAvailable()
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: DartExecutor$DefaultBinaryMessenger(io.flutter.embedding.engine.dart.DartMessenger)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable mutate()
androidx.appcompat.app.AlertController: void setIcon(int)
androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream)
androidx.collection.ArrayMap$1: int colIndexOfValue(java.lang.Object)
androidx.collection.SimpleArrayMap: int size()
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: SidecarWindowBackend$ExtensionListenerImpl(androidx.window.layout.SidecarWindowBackend)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityResumed(android.app.Activity)
com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastIceCreamSandwich()
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1: androidx.fragment.app.FragmentManager$LaunchedFragmentInfo[] newArray(int)
com.google.firebase.database.core.view.Event$EventType: Event$EventType(java.lang.String,int)
androidx.fragment.app.Fragment: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.google.android.gms.common.api.internal.zabl: zabl(com.google.android.gms.common.api.internal.zabm)
kotlinx.coroutines.internal.OnUndeliveredElementKt: kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException$default(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException,int,java.lang.Object)
io.flutter.plugins.googlemaps.GoogleMapController$1: void onSnapshotReady(android.graphics.Bitmap)
com.baseflow.geolocator.location.ForegroundNotificationOptions: ForegroundNotificationOptions(java.lang.String,java.lang.String,com.baseflow.geolocator.location.AndroidIconResource,boolean,boolean)
com.google.firebase.database.snapshot.ChildrenNode$1: int compare(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.ChildKey)
com.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnFailureListener(com.google.android.gms.tasks.OnFailureListener)
io.flutter.plugin.common.StandardMessageCodec: int readSize(java.nio.ByteBuffer)
com.google.firebase.database.tubesock.WebSocket: void send(byte,byte[])
androidx.appcompat.widget.ListPopupWindow: void setVerticalOffset(int)
com.google.firebase.database.core.view.QueryParams: com.google.firebase.database.snapshot.ChildKey getIndexEndName()
com.google.android.gms.maps.internal.zzg: void snapshot(com.google.android.gms.maps.internal.zzbs,com.google.android.gms.dynamic.IObjectWrapper)
androidx.fragment.app.FragmentTransition: void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)
com.google.android.gms.maps.model.Polygon: void remove()
androidx.window.layout.ExtensionWindowLayoutInfoBackend: ExtensionWindowLayoutInfoBackend(androidx.window.extensions.layout.WindowLayoutComponent)
com.google.firebase.database.DatabaseError: DatabaseError(int,java.lang.String)
androidx.appcompat.app.AppCompatActivity: boolean performMenuItemShortcut(android.view.KeyEvent)
com.google.zxing.oned.Code93Reader: int toPattern(int[])
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet,int)
com.google.firebase.database.core.view.QueryParams: com.google.firebase.database.core.view.filter.NodeFilter getNodeFilter()
androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)
com.google.zxing.common.BitArray: int getSize()
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int validateObjectHeader(android.os.Parcel)
kotlinx.coroutines.JobCancellingNode: JobCancellingNode()
androidx.fragment.app.FragmentManager: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object)
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: com.google.android.gms.tasks.Task updateOnDisconnect(java.util.Map)
com.journeyapps.barcodescanner.BarcodeView: void decodeContinuous(com.journeyapps.barcodescanner.BarcodeCallback)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDrawable(android.net.Uri)
androidx.lifecycle.ClassesInfoCache$MethodReference: boolean equals(java.lang.Object)
kotlinx.coroutines.CoroutineId: boolean equals(java.lang.Object)
io.flutter.plugins.googlemaps.MarkersController: void onInfoWindowTap(java.lang.String)
androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)
com.google.firebase.FirebaseApp: void access$400(com.google.firebase.FirebaseApp)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode peek()
com.google.zxing.InvertedLuminanceSource: com.google.zxing.LuminanceSource rotateCounterClockwise()
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyShortcut(int,android.view.KeyEvent)
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: void initPluginInstance(io.flutter.plugin.common.BinaryMessenger)
androidx.core.view.inputmethod.EditorInfoCompat: void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int)
androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)
com.google.firebase.database.android.SqlPersistenceStorageEngine: com.google.firebase.database.snapshot.Node deserializeNode(byte[])
androidx.appcompat.widget.SearchView: void adjustDropDownSizeAndPosition()
com.google.android.gms.dynamic.zaa: zaa(com.google.android.gms.dynamic.DeferredLifecycleHelper)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean getPadding(android.graphics.Rect)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet)
com.google.firebase.database.core.persistence.LRUCachePolicy: boolean shouldPrune(long,long)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: AppCompatDelegateImpl$AppCompatWindowCallback(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback)
com.google.firebase.database.Query: com.google.firebase.database.core.Path getPath()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setAlphabeticShortcut(char)
com.google.firebase.database.core.Context: boolean isFrozen()
androidx.appcompat.view.menu.ListMenuPresenter: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.google.firebase.database.connection.ConnectionContext: java.util.concurrent.ScheduledExecutorService getExecutorService()
com.google.android.gms.signin.internal.zak: zak(int)
androidx.fragment.app.DialogFragment: void onCreate(android.os.Bundle)
kotlinx.coroutines.JobSupport: void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable)
kotlin.internal.PlatformImplementations: void addSuppressed(java.lang.Throwable,java.lang.Throwable)
com.google.android.gms.common.GoogleApiAvailabilityLight: java.lang.String zza(android.content.Context,java.lang.String)
androidx.appcompat.graphics.drawable.DrawableContainer: void setAlpha(int)
androidx.appcompat.app.LayoutIncludeDetector: org.xmlpull.v1.XmlPullParser popOutdatedAttrHolders(java.util.Deque)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: ExtensionsWindowLayoutInfoAdapter()
androidx.appcompat.widget.ResourceManagerInternal: void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)
io.flutter.plugins.imagepicker.ImagePickerDelegate$1: ImagePickerDelegate$1(android.app.Activity)
androidx.fragment.app.Fragment: void onAttachFragment(androidx.fragment.app.Fragment)
io.flutter.plugin.editing.ListenableEditingState$1: android.text.Editable getEditable()
com.google.firebase.database.core.view.filter.RangedFilter: com.google.firebase.database.snapshot.IndexedNode updateFullNode(com.google.firebase.database.snapshot.IndexedNode,com.google.firebase.database.snapshot.IndexedNode,com.google.firebase.database.core.view.filter.ChildChangeAccumulator)
io.flutter.plugins.flutterexifrotation.FlutterExifRotationPlugin$1: FlutterExifRotationPlugin$1(io.flutter.plugins.flutterexifrotation.FlutterExifRotationPlugin)
kotlin.text.StringsKt__StringsKt: void requireNonNegativeLimit(int)
io.flutter.plugins.googlemaps.PolygonController: void setStrokeColor(int)
androidx.lifecycle.Lifecycling: androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object)
kotlinx.coroutines.JobSupport: JobSupport(boolean)
androidx.core.view.MenuItemCompat: void setContentDescription(android.view.MenuItem,java.lang.CharSequence)
androidx.core.widget.TextViewCompat: android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView)
androidx.appcompat.widget.ListPopupWindow: android.graphics.drawable.Drawable getBackground()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
androidx.appcompat.view.menu.MenuItemImpl: char getShortcut()
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBNode insert(java.lang.Object,java.lang.Object,java.util.Comparator)
androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)
com.google.firebase.database.core.view.filter.IndexedFilter: com.google.firebase.database.snapshot.IndexedNode updateChild(com.google.firebase.database.snapshot.IndexedNode,com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node,com.google.firebase.database.core.Path,com.google.firebase.database.core.view.filter.NodeFilter$CompleteChildSource,com.google.firebase.database.core.view.filter.ChildChangeAccumulator)
androidx.exifinterface.media.ExifInterface$ExifAttribute: ExifInterface$ExifAttribute(int,int,long,byte[])
com.google.firebase.components.Component: java.lang.String toString()
com.google.android.gms.internal.location.zzbg: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.plugins.googlemaps.Convert: java.lang.String interpretCircleOptions(java.lang.Object,io.flutter.plugins.googlemaps.CircleOptionsSink)
io.flutter.plugin.mouse.MouseCursorPlugin: io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate access$100(io.flutter.plugin.mouse.MouseCursorPlugin)
androidx.versionedparcelable.ParcelImpl: void writeToParcel(android.os.Parcel,int)
com.google.firebase.database.snapshot.CompoundHash: CompoundHash(java.util.List,java.util.List)
io.flutter.plugin.platform.VirtualDisplayController: void onFlutterViewDetached()
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo: DefaultSpecialEffectsController$AnimationInfo(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean)
com.google.firebase.database.connection.PersistentConnectionImpl: void sendPut(long)
com.google.android.gms.auth.api.signin.zab: java.lang.Object[] newArray(int)
androidx.collection.ArraySet: ArraySet(int)
androidx.window.embedding.SplitPlaceholderRule: java.util.Set getFilters()
androidx.multidex.MultiDex$V14$JBMR11ElementConstructor: MultiDex$V14$JBMR11ElementConstructor(java.lang.Class)
androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreFling(float,float)
kotlinx.coroutines.channels.Closed: kotlinx.coroutines.internal.Symbol tryResumeReceive(java.lang.Object,kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.app.AppCompatDelegate getDelegate()
io.flutter.embedding.android.FlutterSplashView: void displayFlutterViewWithSplash(io.flutter.embedding.android.FlutterView,io.flutter.embedding.android.SplashScreen)
com.baseflow.geolocator.permission.LocationPermission: int toInt()
com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: void putNext(com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void requestPermission()
com.google.zxing.oned.rss.expanded.decoders.FieldParser: java.lang.String processFixedAI(int,int,java.lang.String)
kotlinx.coroutines.JobSupport: java.lang.String stateString(java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl$7: void onAnimationEnd(android.view.View)
kotlinx.coroutines.internal.ConcurrentKt: boolean removeFutureOnCancel(java.util.concurrent.Executor)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2: ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2(java.lang.reflect.Constructor)
androidx.window.embedding.ActivityFilter: android.content.ComponentName getComponentName()
androidx.appcompat.widget.SearchView$SavedState: SearchView$SavedState(android.os.Parcel,java.lang.ClassLoader)
androidx.lifecycle.DefaultLifecycleObserver: void onResume(androidx.lifecycle.LifecycleOwner)
androidx.core.view.ViewCompat: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
io.flutter.embedding.engine.systemchannels.PlatformChannel: void setPlatformMessageHandler(io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler)
androidx.fragment.app.SpecialEffectsController: void updateOperationDirection(boolean)
kotlin.internal.ProgressionUtilKt: int mod(int,int)
com.google.zxing.common.detector.WhiteRectangleDetector: com.google.zxing.ResultPoint getBlackPointOnSegment(float,float,float,float)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
com.google.firebase.database.snapshot.PathIndex: int compare(java.lang.Object,java.lang.Object)
com.google.firebase.database.core.view.Change: com.google.firebase.database.core.view.Change childChangedChange(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node,com.google.firebase.database.snapshot.Node)
androidx.window.embedding.EmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
androidx.lifecycle.Lifecycle: Lifecycle()
io.flutter.embedding.engine.dart.PlatformTaskQueue: void dispatch(java.lang.Runnable)
androidx.appcompat.app.ResourcesFlusher: void flushNougats(android.content.res.Resources)
androidx.fragment.app.FragmentActivity: void onStart()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$500(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo,int)
androidx.appcompat.widget.ActionBarContainer: boolean isCollapsed(android.view.View)
io.flutter.plugin.common.StringCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
androidx.core.widget.NestedScrollView: int computeHorizontalScrollExtent()
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentContainer getContainer()
com.journeyapps.barcodescanner.camera.PreviewScalingStrategy: float getScore(com.journeyapps.barcodescanner.Size,com.journeyapps.barcodescanner.Size)
io.flutter.plugins.imagepicker.CameraDevice: io.flutter.plugins.imagepicker.CameraDevice valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsPaused()
androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()
com.google.firebase.database.core.utilities.Utilities$1: Utilities$1(com.google.android.gms.tasks.TaskCompletionSource)
com.google.android.gms.maps.model.zzg: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.database.connection.util.RetryHelper$Builder: com.google.firebase.database.connection.util.RetryHelper$Builder withMinDelayAfterFailure(long)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.lang.String encodeList(java.util.List)
com.google.android.gms.signin.internal.SignInClientImpl: void connect()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setChannelId(java.lang.String)
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Listener access$900(com.google.common.util.concurrent.AbstractFuture)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable checkIconCache(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl: void applyFixedSizeWindow()
com.google.android.gms.common.api.internal.zaf: void zaa(com.google.android.gms.common.api.Status)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean showOverflowMenu()
com.google.android.gms.maps.internal.zzb: com.google.android.gms.dynamic.IObjectWrapper newLatLngBounds(com.google.android.gms.maps.model.LatLngBounds,int)
com.google.firebase.database.core.utilities.Tree: void setValue(java.lang.Object)
com.google.firebase.database.android.SqlPersistenceStorageEngine: void saveTrackedQuery(com.google.firebase.database.core.persistence.TrackedQuery)
com.google.zxing.pdf417.decoder.ec.ModulusGF: int multiply(int,int)
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter getInstance(float,io.flutter.embedding.engine.FlutterJNI)
com.google.zxing.oned.MultiFormatUPCEANReader: void reset()
androidx.appcompat.widget.ForwardingListener: void onViewDetachedFromWindow(android.view.View)
com.google.android.gms.dynamite.DynamiteModule$LoadingException: DynamiteModule$LoadingException(java.lang.String,java.lang.Throwable,com.google.android.gms.dynamite.zza)
androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)
androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])
androidx.appcompat.view.SupportActionModeWrapper: void setTitleOptionalHint(boolean)
kotlin.Pair: Pair(java.lang.Object,java.lang.Object)
com.google.zxing.pdf417.PDF417Reader: com.google.zxing.Result[] decode(com.google.zxing.BinaryBitmap,java.util.Map,boolean)
io.flutter.view.AccessibilityBridge: boolean onAccessibilityHoverEvent(android.view.MotionEvent)
androidx.appcompat.app.AppCompatDelegateImpl: void updateStatusGuardColor(android.view.View)
androidx.window.embedding.EmbeddingCompat$Companion: boolean isEmbeddingAvailable()
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firebase.database.snapshot.DeferredValueNode: DeferredValueNode(java.util.Map,com.google.firebase.database.snapshot.Node)
com.google.firebase.database.connection.PersistentConnectionImpl: void onDataPush(java.lang.String,java.util.Map)
androidx.appcompat.widget.AppCompatReceiveContentHelper: boolean maybeHandleMenuActionViaPerformReceiveContent(android.widget.TextView,int)
kotlin.random.jdk8.PlatformThreadLocalRandom: PlatformThreadLocalRandom()
com.google.android.gms.common.zze: int zzc()
com.google.zxing.maxicode.decoder.DecodedBitStreamParser: java.lang.String getPostCode3(byte[])
androidx.appcompat.widget.AppCompatTextView: void setTextAppearance(android.content.Context,int)
androidx.core.view.ViewCompat: int getMinimumHeight(android.view.View)
androidx.fragment.app.SpecialEffectsController$Operation: void addCompletionListener(java.lang.Runnable)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object)
com.google.zxing.pdf417.decoder.DetectionResult: int adjustRowNumbersFromRRI()
androidx.appcompat.widget.DropDownListView: boolean onHoverEvent(android.view.MotionEvent)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setColorFilter(android.graphics.ColorFilter)
io.flutter.plugins.googlemaps.Convert: com.google.android.gms.maps.model.LatLngBounds toLatLngBounds(java.lang.Object)
androidx.core.view.ViewPropertyAnimatorCompat$2: ViewPropertyAnimatorCompat$2(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: boolean getBoolean(android.os.Bundle,java.lang.String,boolean)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
com.google.common.util.concurrent.AbstractFuture: java.lang.Object access$402(com.google.common.util.concurrent.AbstractFuture,java.lang.Object)
kotlin.Result$Failure: boolean equals(java.lang.Object)
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments: AccessibilityViewCommand$SetProgressArguments()
com.google.android.gms.common.api.GoogleApi$Settings: GoogleApi$Settings(com.google.android.gms.common.api.internal.StatusExceptionMapper,android.accounts.Account,android.os.Looper)
com.google.android.gms.location.zzaa: zzaa()
androidx.exifinterface.media.ExifInterface$Rational: ExifInterface$Rational(long,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: VectorDrawableCompat$VObject(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.MenuWrapperICS: void setQwertyMode(boolean)
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread: RequestExecutor$DefaultThreadFactory$ProcessPriorityThread(java.lang.Runnable,java.lang.String,int)
androidx.appcompat.view.menu.MenuBuilder: boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getHINGE()
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$3: java.lang.Object invoke(java.lang.Object)
com.google.firebase.database.core.ChildEventRegistration: com.google.firebase.database.core.view.QuerySpec getQuerySpec()
androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)
com.google.common.util.concurrent.AbstractFuture: void access$600(com.google.common.util.concurrent.AbstractFuture)
com.google.firebase.database.core.view.filter.IndexedFilter: com.google.firebase.database.core.view.filter.NodeFilter getIndexedFilter()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(int,java.lang.CharSequence,java.lang.Class)
androidx.appcompat.app.AppCompatDelegateImpl: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: EventChannel$IncomingStreamRequestHandler$EventSinkImplementation(io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler)
androidx.core.view.ViewPropertyAnimatorCompat$1: ViewPropertyAnimatorCompat$1(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
androidx.collection.ArraySet$1: int colIndexOfKey(java.lang.Object)
androidx.cursoradapter.widget.CursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchTouchEvent(android.view.MotionEvent)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.lang.String readUTF()
androidx.appcompat.widget.AbsActionBarView: void access$001(androidx.appcompat.widget.AbsActionBarView,int)
com.journeyapps.barcodescanner.camera.CameraThread: void incrementAndEnqueue(java.lang.Runnable)
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: AbstractSendChannel$SendBuffered(java.lang.Object)
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry)
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion()
com.google.android.gms.tasks.RuntimeExecutionException: RuntimeExecutionException(java.lang.Throwable)
androidx.appcompat.view.menu.BaseMenuPresenter: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.core.content.res.ComplexColorCompat: boolean onStateChanged(int[])
com.google.android.gms.maps.internal.zzg: void animateCamera(com.google.android.gms.dynamic.IObjectWrapper)
androidx.fragment.app.FragmentStateManager: androidx.fragment.app.Fragment getFragment()
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List optimizeReadOnlyList(java.util.List)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onRestoreInstanceState(android.os.Bundle)
com.google.android.gms.maps.internal.zzg: void moveCamera(com.google.android.gms.dynamic.IObjectWrapper)
com.google.firebase.database.tubesock.WebSocket: void sendCloseHandshake()
androidx.appcompat.view.menu.SubMenuBuilder: boolean isGroupDividerEnabled()
androidx.appcompat.app.ActionBar: void onDestroy()
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View)
com.google.android.gms.signin.internal.SignInClientImpl: android.os.Bundle createBundleFromClientSettings(com.google.android.gms.common.internal.ClientSettings)
androidx.collection.LruCache: int sizeOf(java.lang.Object,java.lang.Object)
com.google.android.gms.maps.model.Polyline: void setColor(int)
com.google.android.gms.internal.base.zar: void dispatchMessage(android.os.Message)
com.google.firebase.database.core.Context: void ensureLogger()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface(io.flutter.embedding.android.FlutterImageView)
com.google.android.gms.common.api.Status: int getStatusCode()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.TextInputChannel getTextInputChannel()
androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)
com.baseflow.geolocator.MethodCallHandlerImpl: void setForegroundLocationService(com.baseflow.geolocator.GeolocatorLocationService)
com.google.firebase.FirebaseOptions$Builder: com.google.firebase.FirebaseOptions$Builder setApplicationId(java.lang.String)
com.google.zxing.oned.rss.Pair: Pair(int,int,com.google.zxing.oned.rss.FinderPattern)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$4802(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
androidx.core.view.inputmethod.InputContentInfoCompat: androidx.core.view.inputmethod.InputContentInfoCompat wrap(java.lang.Object)
com.google.android.gms.common.api.internal.GoogleApiManager$zab: void zabp()
com.google.firebase.database.core.persistence.PruneForest$3: java.lang.Object onNodeValue(com.google.firebase.database.core.Path,java.lang.Object,java.lang.Object)
com.google.firebase.database.core.SyncTree$KeepSyncedEventRegistration: com.google.firebase.database.core.view.QuerySpec getQuerySpec()
com.google.android.gms.signin.SignInOptions$zaa: SignInOptions$zaa()
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getQuantityString(int,int,java.lang.Object[])
androidx.appcompat.widget.AppCompatTextHelper$1: AppCompatTextHelper$1(androidx.appcompat.widget.AppCompatTextHelper,int,int,java.lang.ref.WeakReference)
io.flutter.plugin.editing.FlutterTextUtils: boolean isVariationSelector(int)
kotlinx.coroutines.EventLoopImplBase: boolean access$isCompleted(kotlinx.coroutines.EventLoopImplBase)
androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)
androidx.appcompat.widget.RtlSpacingHelper: RtlSpacingHelper()
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: MethodChannel$IncomingResultHandler(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
androidx.lifecycle.SavedStateHandleController$OnRecreation: SavedStateHandleController$OnRecreation()
com.journeyapps.barcodescanner.CameraPreview: boolean isCameraClosed()
com.google.firebase.database.android.SqlPersistenceStorageEngine: java.util.List loadUserWrites()
androidx.appcompat.graphics.drawable.DrawableContainer: boolean needsMirroring()
com.google.zxing.pdf417.decoder.BoundingBox: int getMaxY()
com.google.android.gms.tasks.zzu: boolean trySetException(java.lang.Exception)
com.google.firebase.database.android.SqlPersistenceStorageEngine: long serverCacheEstimatedSizeInBytes()
kotlinx.coroutines.internal.ArrayQueue: java.lang.Object removeFirstOrNull()
io.flutter.embedding.engine.FlutterEngine$1: void onEngineWillDestroy()
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void updateViewLayout(java.lang.Object[])
com.google.firebase.database.collection.ImmutableSortedSet: boolean equals(java.lang.Object)
androidx.core.view.ViewCompat: boolean isAccessibilityHeading(android.view.View)
com.google.firebase.components.AbstractComponentContainer: AbstractComponentContainer()
io.flutter.plugins.imagepicker.ImagePickerDelegate: void chooseVideoFromGallery(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.ResourceManagerInternal: void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)
com.journeyapps.barcodescanner.CameraPreview: void pause()
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
io.flutter.plugins.googlemaps.PolylineController: void setWidth(float)
androidx.appcompat.widget.AppCompatImageHelper: boolean hasOverlappingRendering()
androidx.appcompat.view.menu.MenuPopupHelper: void onDismiss()
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: boolean isStillAlpha(int)
kotlinx.coroutines.CancellableContinuationImpl: void callCancelHandler(kotlinx.coroutines.CancelHandler,java.lang.Throwable)
kotlin.jvm.internal.PackageReference: int hashCode()
com.google.zxing.pdf417.decoder.DetectionResultColumn: DetectionResultColumn(com.google.zxing.pdf417.decoder.BoundingBox)
com.google.android.gms.common.internal.BaseGmsClient: void disconnect()
com.google.firebase.platforminfo.AutoValue_LibraryVersion: java.lang.String getVersion()
com.google.zxing.LuminanceSource: java.lang.String toString()
com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder: java.lang.String parseInformation()
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
androidx.activity.result.IntentSenderRequest$1: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.embedding.engine.renderer.FlutterRenderer: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.collection.SparseArrayCompat: java.lang.Object get(int)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeBoolean(android.os.Parcel,int,boolean)
androidx.appcompat.widget.LinearLayoutCompat: int getChildrenSkipCount(android.view.View,int)
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.camera.CameraInstance createCameraInstance()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState)
androidx.appcompat.graphics.drawable.DrawableContainer$1: DrawableContainer$1(androidx.appcompat.graphics.drawable.DrawableContainer)
com.google.firebase.database.connection.Connection$State: com.google.firebase.database.connection.Connection$State[] values()
com.google.android.gms.internal.common.zza: zza(android.os.IBinder,java.lang.String)
com.google.common.base.MoreObjects$ToStringHelper: MoreObjects$ToStringHelper(java.lang.String,com.google.common.base.MoreObjects$1)
kotlin.jvm.internal.CallableReference: java.lang.String getName()
androidx.appcompat.widget.Toolbar: android.os.Parcelable onSaveInstanceState()
io.flutter.embedding.android.FlutterSurfaceView: FlutterSurfaceView(android.content.Context,boolean)
io.flutter.plugin.common.StandardMessageCodec: byte[] readBytes(java.nio.ByteBuffer)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.google.firebase.database.core.Repo$9$1: void onComplete(com.google.android.gms.tasks.Task)
androidx.appcompat.app.TwilightManager: android.location.Location getLastKnownLocationForProvider(java.lang.String)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getResourceEntryName(int)
com.google.firebase.database.core.utilities.DefaultRunLoop$1: DefaultRunLoop$1(com.google.firebase.database.core.utilities.DefaultRunLoop,int,java.util.concurrent.ThreadFactory)
com.google.firebase.database.core.persistence.CachePolicy$1: float getPercentOfQueriesToPruneAtOnce()
com.google.android.gms.maps.Projection: com.google.android.gms.maps.model.VisibleRegion getVisibleRegion()
androidx.window.layout.HardwareFoldingFeature: android.graphics.Rect getBounds()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean getPadding(android.graphics.Rect)
androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
androidx.fragment.app.BackStackRecord: void executePopOps(boolean)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader destroy(boolean)
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
androidx.core.graphics.TypefaceCompat: java.lang.String createResourceUid(android.content.res.Resources,int,int)
androidx.collection.MapCollections$EntrySet: boolean add(java.util.Map$Entry)
androidx.appcompat.widget.ListPopupWindow: boolean isInputMethodNotNeeded()
androidx.fragment.app.Fragment: void performStop()
com.google.android.gms.common.api.internal.zace: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)
com.google.firebase.database.snapshot.DeferredValueNode: int compareLeafValues(com.google.firebase.database.snapshot.LeafNode)
androidx.core.view.inputmethod.InputConnectionCompat$1: InputConnectionCompat$1(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener)
com.google.firebase.database.core.RepoManager$2: RepoManager$2(com.google.firebase.database.core.Repo)
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.gms.common.internal.PendingResultUtil: com.google.android.gms.tasks.Task toResponseTask(com.google.android.gms.common.api.PendingResult,com.google.android.gms.common.api.Response)
com.google.android.gms.common.internal.GmsClient: GmsClient(android.content.Context,android.os.Looper,int,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.api.internal.ConnectionCallbacks,com.google.android.gms.common.api.internal.OnConnectionFailedListener)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
com.journeyapps.barcodescanner.CameraPreview: void onRestoreInstanceState(android.os.Parcelable)
androidx.appcompat.widget.ActionMenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder create(android.content.Context)
androidx.fragment.app.FragmentManager$9: void onActivityResult(java.lang.Object)
androidx.window.embedding.SplitRule: float getSplitRatio()
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.lang.Iterable,java.util.Map)
androidx.appcompat.app.AppCompatActivity: void onSupportContentChanged()
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
com.google.android.gms.maps.internal.zzk: zzk(android.os.IBinder)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderBackgroundThread: PathProviderPlugin$PathProviderBackgroundThread(io.flutter.plugins.pathprovider.PathProviderPlugin,io.flutter.plugins.pathprovider.PathProviderPlugin$1)
com.google.firebase.database.core.Context: void ensureEventTarget()
com.google.common.util.concurrent.AbstractFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)
androidx.window.layout.SidecarCompat$TranslatingCallback: SidecarCompat$TranslatingCallback(androidx.window.layout.SidecarCompat)
io.flutter.view.AccessibilityBridge: boolean access$500(io.flutter.view.AccessibilityBridge)
com.google.firebase.database.core.SyncTree: void setQueryInactive(com.google.firebase.database.core.view.QuerySpec)
com.google.firebase.database.core.SyncTree$KeepSyncedEventRegistration: boolean equals(java.lang.Object)
kotlinx.coroutines.internal.ThreadState: void append(kotlinx.coroutines.ThreadContextElement,java.lang.Object)
com.google.firebase.database.core.ServerValues$1: void visitChild(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node)
net.touchcapture.qr.flutterqr.FlutterQrPlugin: void onDetachedFromActivity()
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: int adjustCodewordStartColumn(com.google.zxing.common.BitMatrix,int,int,boolean,int,int)
io.flutter.plugins.googlemaps.PolygonsController: void addPolygon(java.lang.Object)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: KeyEventChannel(io.flutter.plugin.common.BinaryMessenger)
kotlinx.coroutines.StandaloneCoroutine: StandaloneCoroutine(kotlin.coroutines.CoroutineContext,boolean)
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] getRestorationData()
com.google.android.gms.signin.internal.SignInClientImpl: int getMinApkVersion()
kotlinx.coroutines.EventLoopImplBase: boolean isEmpty()
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions minZoomPreference(float)
com.journeyapps.barcodescanner.CaptureManager: void returnResultTimeout()
com.google.android.gms.common.internal.zze: boolean handleMessage(android.os.Message)
com.google.firebase.database.core.ValueProvider: ValueProvider()
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.firebase.components.ComponentRuntime$Builder: ComponentRuntime$Builder(java.util.concurrent.Executor)
com.google.firebase.database.collection.LLRBEmptyNode: java.lang.Object getKey()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: void recalcViewsWithUnhandled()
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseAlphaBlock()
androidx.savedstate.SavedStateRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.firebase.database.core.SyncPoint: java.util.List applyOperation(com.google.firebase.database.core.operation.Operation,com.google.firebase.database.core.WriteTreeRef,com.google.firebase.database.snapshot.Node)
io.flutter.plugins.googlemaps.GoogleMapController: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.android.FlutterSplashView$SavedState$1: java.lang.Object[] newArray(int)
com.google.firebase.database.snapshot.ChildrenNode$2: ChildrenNode$2(com.google.firebase.database.snapshot.ChildrenNode,com.google.firebase.database.snapshot.ChildrenNode$ChildVisitor)
androidx.appcompat.widget.ActionMenuPresenter: void updateMenuView(boolean)
io.flutter.embedding.android.FlutterView: boolean onHoverEvent(android.view.MotionEvent)
androidx.exifinterface.media.ExifInterface$ExifTag: boolean isFormatCompatible(int)
com.journeyapps.barcodescanner.camera.CameraInstance$1: void run()
com.google.zxing.common.reedsolomon.ReedSolomonDecoder: ReedSolomonDecoder(com.google.zxing.common.reedsolomon.GenericGF)
androidx.fragment.app.DialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
androidx.fragment.app.SpecialEffectsController: void enqueueShow(androidx.fragment.app.FragmentStateManager)
androidx.appcompat.widget.AppCompatImageHelper: void loadFromAttributes(android.util.AttributeSet,int)
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.ReceiveOrClosed takeFirstReceiveOrPeekClosed()
com.google.firebase.database.FirebaseDatabase: void useEmulator(java.lang.String,int)
io.flutter.embedding.android.AndroidTouchProcessor: AndroidTouchProcessor(io.flutter.embedding.engine.renderer.FlutterRenderer,boolean)
androidx.collection.ArraySet: java.util.Iterator iterator()
androidx.window.R: R()
com.google.zxing.oned.rss.DataCharacter: DataCharacter(int,int)
com.google.firebase.database.connection.PersistentConnectionImpl: void merge(java.util.List,java.util.Map,com.google.firebase.database.connection.RequestResultCallback)
io.flutter.embedding.android.FlutterActivity: void onTrimMemory(int)
com.google.firebase.database.core.view.ViewProcessor$1: ViewProcessor$1()
com.google.firebase.database.snapshot.DoubleNode: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentTransitionImpl: boolean isNullOrEmpty(java.util.List)
com.google.firebase.database.core.Context: long getPersistenceCacheSizeBytes()
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getSecondaryActivityName()
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: com.google.zxing.pdf417.decoder.BarcodeMetadata getBarcodeMetadata(com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn,com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn)
com.google.firebase.database.core.SyncTree: java.util.List applyServerMerge(com.google.firebase.database.core.Path,java.util.Map)
com.google.zxing.client.android.InactivityTimer: void access$200(com.google.zxing.client.android.InactivityTimer,boolean)
com.google.android.gms.internal.maps.zzab: void setJointType(int)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion()
androidx.appcompat.view.menu.SubMenuWrapperICS: SubMenuWrapperICS(android.content.Context,androidx.core.internal.view.SupportSubMenu)
com.google.firebase.database.core.SyncTree$2: SyncTree$2(com.google.firebase.database.core.SyncTree,boolean,com.google.firebase.database.core.Path,com.google.firebase.database.core.CompoundWrite,long,com.google.firebase.database.core.CompoundWrite)
com.google.firebase.database.tubesock.WebSocketReceiver: void handleError(com.google.firebase.database.tubesock.WebSocketException)
com.google.firebase.database.collection.LLRBEmptyNode: java.lang.Object getValue()
androidx.collection.ArraySet: int size()
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object getExceptionsHolder()
com.google.zxing.datamatrix.decoder.Version: com.google.zxing.datamatrix.decoder.Version getVersionForDimensions(int,int)
androidx.collection.ArrayMap: java.util.Set keySet()
com.google.zxing.client.android.InactivityTimer: void cancel()
androidx.core.provider.FontProvider: java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources)
com.google.firebase.database.core.view.DataEvent: DataEvent(com.google.firebase.database.core.view.Event$EventType,com.google.firebase.database.core.EventRegistration,com.google.firebase.database.DataSnapshot,java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl: void onConfigurationChanged(android.content.res.Configuration)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: boolean zac(boolean)
androidx.appcompat.graphics.drawable.DrawableContainer$Api21Impl: android.content.res.Resources getResources(android.content.res.Resources$Theme)
com.google.firebase.database.DatabaseReference: boolean equals(java.lang.Object)
androidx.collection.MapCollections$MapIterator: MapCollections$MapIterator(androidx.collection.MapCollections)
com.google.zxing.oned.rss.AbstractRSSReader: void increment(int[],float[])
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void generateConfigDelta_densityDpi(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)
androidx.window.embedding.EmbeddingBackend: boolean isSplitSupported()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.view.menu.MenuBuilder: int size()
com.journeyapps.barcodescanner.Decoder: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap)
com.google.firebase.database.tubesock.MessageBuilderFactory$TextBuilder: boolean appendBytes(byte[])
io.flutter.plugins.urllauncher.WebViewActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.google.zxing.qrcode.detector.FinderPatternFinder: boolean foundPatternCross(int[])
androidx.collection.ArraySet: boolean removeAll(java.util.Collection)
androidx.fragment.app.FragmentState$1: androidx.fragment.app.FragmentState[] newArray(int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void delayFirstAndroidViewDraw(io.flutter.embedding.android.FlutterView)
kotlinx.coroutines.EventLoopImplBase: boolean shouldUnpark(kotlinx.coroutines.EventLoopImplBase$DelayedTask)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
com.google.firebase.database.core.view.EventGenerator: EventGenerator(com.google.firebase.database.core.view.QuerySpec)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTint(int)
io.flutter.plugins.firebase.database.FlutterFirebaseDatabaseException: io.flutter.plugins.firebase.database.FlutterFirebaseDatabaseException fromException(java.lang.Exception)
com.google.zxing.common.reedsolomon.ReedSolomonDecoder: int[] findErrorLocations(com.google.zxing.common.reedsolomon.GenericGFPoly)
androidx.core.widget.AutoScrollHelper: boolean shouldAnimate()
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder peekMenu()
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createDouble(double[],java.nio.ByteOrder)
androidx.core.view.ViewCompat$2: ViewCompat$2(int,java.lang.Class,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: AnimatedVectorDrawableCompat(android.content.Context)
androidx.core.view.AccessibilityDelegateCompat: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()
com.google.android.gms.internal.maps.zzag: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
com.journeyapps.barcodescanner.RawImageData: byte[] rotateCCW(byte[],int,int)
com.google.firebase.database.core.view.QuerySpec: com.google.firebase.database.snapshot.Index getIndex()
androidx.appcompat.app.AppCompatDelegateImpl: void onSubDecorInstalled(android.view.ViewGroup)
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: MenuItemWrapperICS$CollapsibleActionViewWrapper(android.view.View)
androidx.window.R$id: R$id()
androidx.collection.ArraySet: void freeArrays(int[],java.lang.Object[],int)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
kotlinx.coroutines.YieldContext$Key: YieldContext$Key()
com.google.android.gms.tasks.Tasks$zza: void await()
com.google.firebase.database.core.view.QueryParams: com.google.firebase.database.snapshot.Node getIndexEndValue()
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
androidx.appcompat.widget.LinearLayoutCompat: void drawHorizontalDivider(android.graphics.Canvas,int)
kotlinx.coroutines.ExecutorCoroutineDispatcher: ExecutorCoroutineDispatcher()
com.google.android.gms.maps.model.CircleOptions: com.google.android.gms.maps.model.CircleOptions center(com.google.android.gms.maps.model.LatLng)
androidx.core.view.ActionProvider: ActionProvider(android.content.Context)
androidx.activity.result.IntentSenderRequest: IntentSenderRequest(android.content.IntentSender,android.content.Intent,int,int)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
kotlinx.coroutines.AbstractCoroutine: void start(kotlinx.coroutines.CoroutineStart,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.versionedparcelable.VersionedParcel: void writeParcelable(android.os.Parcelable,int)
com.journeyapps.barcodescanner.camera.CameraThread: CameraThread()
androidx.collection.LongSparseArray: void clear()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
com.google.firebase.database.core.Repo: com.google.firebase.database.core.Path access$1300(com.google.firebase.database.core.Repo,com.google.firebase.database.core.Path)
com.google.firebase.database.core.view.View$OperationResult: View$OperationResult(java.util.List,java.util.List)
androidx.core.widget.NestedScrollView: void initOrResetVelocityTracker()
androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicWidth()
kotlinx.coroutines.ThreadLocalEventLoop: void resetEventLoop$kotlinx_coroutines_core()
com.journeyapps.barcodescanner.camera.PreviewScalingStrategy$1: int compare(com.journeyapps.barcodescanner.Size,com.journeyapps.barcodescanner.Size)
io.flutter.plugins.googlemaps.TileOverlaysController: void removeTileOverlay(java.lang.String)
androidx.appcompat.view.menu.StandardMenuPopup: void setForceShowIcon(boolean)
com.google.firebase.database.snapshot.PathIndex: PathIndex(com.google.firebase.database.core.Path)
com.google.android.gms.tasks.zzu: void setException(java.lang.Exception)
com.google.android.gms.maps.GoogleMapOptions: void writeToParcel(android.os.Parcel,int)
com.google.firebase.database.connection.PersistentConnectionImpl: void onSecurityDebugPacket(java.util.Map)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean isRunning()
com.google.firebase.database.snapshot.StringNode: java.lang.Object getValue()
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean addOneIfEmpty(kotlinx.coroutines.internal.LockFreeLinkedListNode)
com.baseflow.geolocator.MethodCallHandlerImpl: void onCheckPermission(io.flutter.plugin.common.MethodChannel$Result)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getMatrixScale(android.graphics.Matrix)
com.google.zxing.oned.UPCEANReader: int getStandardUPCEANChecksum(java.lang.CharSequence)
com.google.zxing.common.reedsolomon.GenericGFPoly: com.google.zxing.common.reedsolomon.GenericGFPoly multiplyByMonomial(int,int)
androidx.fragment.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)
com.google.firebase.database.snapshot.Node$1: com.google.firebase.database.snapshot.Node getImmediateChild(com.google.firebase.database.snapshot.ChildKey)
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])
io.flutter.Log: void i(java.lang.String,java.lang.String)
androidx.appcompat.widget.SuggestionsAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
androidx.appcompat.widget.AppCompatTextHelper: android.content.res.ColorStateList getCompoundDrawableTintList()
kotlin.coroutines.CoroutineContext$plus$1: kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element)
androidx.appcompat.widget.AppCompatButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient: WebViewActivity$FlutterWebChromeClient(io.flutter.plugins.urllauncher.WebViewActivity,io.flutter.plugins.urllauncher.WebViewActivity$1)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object tryResume(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1)
kotlinx.coroutines.internal.LockFreeLinkedListNode: void access$finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode)
com.google.firebase.database.snapshot.NamedNode: NamedNode(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node)
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.embedding.engine.FlutterJNI access$200(io.flutter.embedding.engine.renderer.FlutterRenderer)
com.google.firebase.database.core.SyncTree$12: java.lang.Void call()
com.google.firebase.database.snapshot.DeferredValueNode: com.google.firebase.database.snapshot.DeferredValueNode updatePriority(com.google.firebase.database.snapshot.Node)
com.google.android.gms.internal.maps.zzv: void setFlat(boolean)
kotlin.collections.EmptyList: int getSize()
kotlinx.coroutines.CompletedWithCancellation: CompletedWithCancellation(java.lang.Object,kotlin.jvm.functions.Function1)
com.google.zxing.oned.rss.FinderPattern: com.google.zxing.ResultPoint[] getResultPoints()
com.google.zxing.oned.rss.expanded.decoders.DecodedObject: DecodedObject(int)
androidx.appcompat.widget.TintTypedArray: TintTypedArray(android.content.Context,android.content.res.TypedArray)
kotlinx.coroutines.JobSupport: void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable)
androidx.multidex.MultiDex$V19: void install(java.lang.ClassLoader,java.util.List,java.io.File)
androidx.appcompat.app.AppCompatDelegateImpl: void onStart()
com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder: AnyAIDecoder(com.google.zxing.common.BitArray)
com.google.android.gms.common.api.internal.BasePendingResult$CallbackHandler: void handleMessage(android.os.Message)
com.google.zxing.oned.MultiFormatOneDReader: void reset()
com.google.android.gms.maps.model.PolygonOptions: com.google.android.gms.maps.model.PolygonOptions zIndex(float)
androidx.appcompat.widget.ListPopupWindow$2: void run()
com.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)
androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)
com.google.android.gms.dynamic.zag: int getState()
androidx.appcompat.widget.AppCompatTextHelper: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
kotlinx.coroutines.InvokeOnCompletion: void invoke(java.lang.Throwable)
com.google.android.gms.internal.maps.zzc: void zza(android.os.Parcel,android.os.IInterface)
com.google.firebase.database.core.operation.OperationSource$Source: com.google.firebase.database.core.operation.OperationSource$Source[] values()
kotlinx.coroutines.CompletionStateKt: java.lang.Object toState$default(java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.appcompat.widget.AppCompatTextHelper: void loadFromAttributes(android.util.AttributeSet,int)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$1: ViewCompat$1()
com.google.firebase.components.LazySet: java.util.Set get()
androidx.appcompat.widget.AppCompatTextView: void setTypeface(android.graphics.Typeface,int)
androidx.fragment.app.FragmentController: boolean execPendingActions()
com.google.android.gms.common.internal.BaseGmsClient: java.util.ArrayList zzf(com.google.android.gms.common.internal.BaseGmsClient)
com.google.firebase.database.core.Repo$TransactionData: com.google.firebase.database.Transaction$Handler access$2400(com.google.firebase.database.core.Repo$TransactionData)
com.google.common.util.concurrent.AbstractFuture$TrustedFuture: java.lang.Object get()
com.google.firebase.database.core.Repo$9$1: Repo$9$1(com.google.firebase.database.core.Repo$9)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
androidx.appcompat.app.WindowDecorActionBar: void setHomeButtonEnabled(boolean)
androidx.appcompat.app.AlertController: boolean onKeyUp(int,android.view.KeyEvent)
com.google.android.gms.common.api.internal.zaf: void zac(com.google.android.gms.common.api.internal.GoogleApiManager$zaa)
io.flutter.plugins.googlemaps.PolylineController: void remove()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
androidx.appcompat.app.AppCompatActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void zabe()
com.google.zxing.qrcode.decoder.FormatInformation: com.google.zxing.qrcode.decoder.FormatInformation decodeFormatInformation(int,int)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback buildCallback()
androidx.appcompat.widget.AppCompatCheckedTextView: AppCompatCheckedTextView(android.content.Context,android.util.AttributeSet,int)
androidx.core.view.AccessibilityDelegateCompat: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.google.firebase.database.collection.LLRBValueNode: void inOrderTraversal(com.google.firebase.database.collection.LLRBNode$NodeVisitor)
androidx.fragment.app.DefaultSpecialEffectsController$4: DefaultSpecialEffectsController$4(androidx.fragment.app.DefaultSpecialEffectsController,android.view.ViewGroup,android.view.View,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo)
com.google.zxing.oned.rss.RSS14Reader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
com.google.android.gms.common.api.internal.zabo: zabo(com.google.android.gms.common.api.internal.GoogleApiManager$zab,com.google.android.gms.common.ConnectionResult)
kotlinx.coroutines.CoroutineName: boolean equals(java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
androidx.core.view.KeyEventDispatcher: boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent)
androidx.collection.LongSparseArray: java.lang.Object valueAt(int)
androidx.lifecycle.LiveData: void changeActiveCounter(int)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.core.widget.NestedScrollView: int clamp(int,int,int)
com.google.firebase.database.MutableData: java.lang.String getKey()
androidx.core.graphics.drawable.WrappedDrawableApi21: boolean isProjected()
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Waiter access$802(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter)
io.flutter.plugins.googlemaps.TileOverlayBuilder: TileOverlayBuilder()
com.google.zxing.qrcode.detector.FinderPattern: com.google.zxing.qrcode.detector.FinderPattern combineEstimate(float,float,float)
io.flutter.view.AccessibilityBridge$3: void onChange(boolean,android.net.Uri)
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.core.graphics.drawable.WrappedDrawableApi21: WrappedDrawableApi21(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.ToolbarWidgetWrapper: void collapseActionView()
com.google.android.gms.maps.model.CameraPosition: com.google.android.gms.maps.model.CameraPosition$Builder builder()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.maps.zzae: void remove()
kotlinx.coroutines.EventLoopImplBase: long processNextEvent()
io.flutter.view.AccessibilityBridge$TextDirection: AccessibilityBridge$TextDirection(java.lang.String,int)
io.flutter.embedding.engine.dart.DartExecutor: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
androidx.fragment.app.SpecialEffectsController$Operation: java.lang.String toString()
androidx.lifecycle.SingleGeneratedAdapterObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.core.app.ActivityCompat$1: ActivityCompat$1(java.lang.String[],android.app.Activity,int)
androidx.fragment.app.FragmentController: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
androidx.fragment.app.FragmentManagerViewModel: boolean equals(java.lang.Object)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int indexOfStateSet(int[])
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void setSupportButtonTintList(android.content.res.ColorStateList)
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.google.android.gms.signin.internal.zab: void writeToParcel(android.os.Parcel,int)
androidx.fragment.app.DialogFragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
androidx.core.graphics.PathParser$PathDataNode: PathParser$PathDataNode(char,float[])
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int)
io.flutter.plugins.googlemaps.Convert: float toFloat(java.lang.Object)
com.google.firebase.database.core.Path: java.lang.String toString()
io.flutter.plugin.common.MethodChannel: io.flutter.plugin.common.MethodCodec access$000(io.flutter.plugin.common.MethodChannel)
io.flutter.util.Preconditions: void checkState(boolean,java.lang.Object)
io.flutter.embedding.android.FlutterActivity: java.lang.String getAppBundlePath()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: VectorDrawableCompat$VClipPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath)
net.touchcapture.qr.flutterqr.QRView: boolean hasSystemFeature(java.lang.String)
kotlinx.coroutines.BuildersKt__Builders_commonKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
kotlin.collections.EmptySet: java.lang.Object[] toArray()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: VectorDrawableCompat$VPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath)
io.flutter.plugins.googlemaps.PolygonController: java.lang.String getGoogleMapsPolygonId()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingState(int,java.lang.String,int,int,int,int)
androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
androidx.collection.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)
com.google.android.gms.internal.maps.zzv: void setAnchor(float,float)
androidx.fragment.app.Fragment: java.lang.Object getReturnTransition()
com.google.android.gms.common.api.internal.LifecycleActivity: LifecycleActivity(android.app.Activity)
com.google.zxing.qrcode.decoder.FormatInformation: int hashCode()
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)
kotlin.text.StringsKt__StringsKt: int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)
com.google.zxing.common.DecoderResult: java.lang.String getText()
com.google.zxing.oned.rss.expanded.decoders.AI013103decoder: void addWeightCode(java.lang.StringBuilder,int)
com.google.android.gms.dynamite.zzj: zzj(android.os.IBinder)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: boolean isVisible()
kotlinx.coroutines.CoroutineDispatcher$Key$1: java.lang.Object invoke(java.lang.Object)
io.flutter.plugins.googlemaps.TileOverlayBuilder: void setTileProvider(com.google.android.gms.maps.model.TileProvider)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,java.lang.String[],boolean,boolean)
androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionCancel(android.transition.Transition)
androidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
androidx.appcompat.view.menu.CascadingMenuPopup: void setAnchorView(android.view.View)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type getType$window_release()
androidx.activity.result.ActivityResultRegistry: int generateRandomNumber()
androidx.lifecycle.LifecycleRegistry: LifecycleRegistry(androidx.lifecycle.LifecycleOwner)
com.google.android.gms.location.zzp: zzp(com.google.android.gms.location.FusedLocationProviderClient,com.google.android.gms.tasks.TaskCompletionSource)
io.flutter.plugins.googlemaps.MarkerBuilder: void setInfoWindowText(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.gms.maps.Projection: com.google.android.gms.maps.model.LatLng fromScreenLocation(android.graphics.Point)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void remove(java.util.Set)
com.google.firebase.FirebaseOptions: boolean equals(java.lang.Object)
androidx.fragment.app.Fragment: void startPostponedEnterTransition()
com.google.firebase.database.snapshot.LeafNode: com.google.firebase.database.snapshot.Node updateChild(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node)
androidx.core.content.res.FontResourcesParserCompat: int getType(android.content.res.TypedArray,int)
com.google.android.gms.maps.zzx: void onCameraIdle()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence)
kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object closed-JP2dKIU(java.lang.Throwable)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: boolean equals(java.lang.Object)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: java.lang.Object getSharedElementTransition()
io.flutter.embedding.engine.dart.DartMessenger$Reply: DartMessenger$Reply(io.flutter.embedding.engine.FlutterJNI,int)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem add(int)
androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontInfo[] getFonts()
com.google.firebase.components.Dependency: Dependency(java.lang.Class,int,int)
com.google.android.gms.common.internal.ClientIdentity: boolean equals(java.lang.Object)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: SettingsChannel$MessageBuilder(io.flutter.plugin.common.BasicMessageChannel)
com.google.firebase.FirebaseOptions$Builder: FirebaseOptions$Builder()
com.google.android.gms.location.LocationRequest: LocationRequest()
com.google.firebase.database.core.operation.Overwrite: com.google.firebase.database.core.operation.Operation operationForChild(com.google.firebase.database.snapshot.ChildKey)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.RenderMode getRenderMode()
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController access$100(io.flutter.embedding.engine.FlutterEngine)
com.google.common.util.concurrent.AbstractFuture: AbstractFuture()
androidx.appcompat.widget.AppCompatSeekBarHelper: void drawTickMarks(android.graphics.Canvas)
kotlin.jvm.internal.ClassReference: ClassReference(java.lang.Class)
com.google.firebase.database.core.persistence.TrackedQuery: boolean equals(java.lang.Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt: int getAVAILABLE_PROCESSORS()
androidx.window.embedding.SplitController$Companion: SplitController$Companion()
io.flutter.plugins.googlemaps.GoogleMapsPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: androidx.activity.result.ActivityResult parseResult(int,android.content.Intent)
androidx.appcompat.widget.AppCompatEditText: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()
androidx.core.graphics.ColorUtils: int setAlphaComponent(int,int)
com.google.android.gms.common.ConnectionResult: boolean isSuccess()
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock: void onError(com.google.firebase.database.tubesock.WebSocketException)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.appcompat.app.WindowDecorActionBar$2: void onAnimationEnd(android.view.View)
androidx.exifinterface.media.ExifInterface: void getRafAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
com.google.firebase.components.CycleDetector$Dep: boolean equals(java.lang.Object)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void onConnectionSuspended(int)
androidx.appcompat.widget.DropDownListView: boolean hasWindowFocus()
com.journeyapps.barcodescanner.DecoderResultPointCallback: void setDecoder(com.journeyapps.barcodescanner.Decoder)
com.google.firebase.database.core.persistence.TrackedQuery: com.google.firebase.database.core.persistence.TrackedQuery setComplete()
com.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime$Builder addLazyComponentRegistrars(java.util.Collection)
kotlinx.coroutines.DebugKt: boolean getRECOVER_STACK_TRACES()
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock$2: void run()
kotlin.coroutines.CombinedContext: CombinedContext(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element)
com.google.zxing.aztec.detector.Detector$Point: int getY()
com.google.android.gms.maps.internal.zzbx: boolean isZoomControlsEnabled()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
com.google.firebase.database.core.view.DataEvent: void fire()
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.MarkerOptions snippet(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.graphics.drawable.DrawableWrapper: int getIntrinsicWidth()
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color[] values()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void idleReset(int)
io.flutter.embedding.android.FlutterActivity: void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView)
androidx.core.os.BuildCompat: boolean isAtLeastR()
androidx.appcompat.graphics.drawable.StateListDrawable: boolean isStateful()
com.google.firebase.database.connection.WebsocketConnection: com.google.firebase.database.logging.LogWrapper access$200(com.google.firebase.database.connection.WebsocketConnection)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $values()
androidx.exifinterface.media.ExifInterface: void getWebpAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
io.flutter.plugins.imagepicker.ImagePickerCache: java.lang.String retrievePendingCameraMediaUriPath()
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean onCreatePanelMenu(int,android.view.Menu)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int getAutoSizeStepGranularity()
com.google.firebase.database.core.SyncPoint: com.google.firebase.database.core.view.View viewForQuery(com.google.firebase.database.core.view.QuerySpec)
androidx.appcompat.graphics.drawable.DrawableContainer: int getChangingConfigurations()
com.google.firebase.components.EventBus: void publish(com.google.firebase.events.Event)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$1400(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.multidex.MultiDexExtractor: void close()
androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList inflateColorStateList(android.content.Context,int)
com.google.zxing.NotFoundException: com.google.zxing.NotFoundException getNotFoundInstance()
androidx.core.widget.TextViewCompat: int getLastBaselineToBottomHeight(android.widget.TextView)
com.google.zxing.datamatrix.DataMatrixReader: void reset()
com.google.android.gms.signin.SignInOptions: java.lang.String getLogSessionId()
androidx.core.widget.TextViewCompat$OreoCallback: boolean isEditable(android.widget.TextView)
androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])
io.flutter.embedding.android.FlutterSplashView: boolean isSplashScreenNeededNow()
com.baseflow.geolocator.GeolocatorLocationService: void stopLocationService()
androidx.fragment.app.FragmentManager$3: androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String)
io.flutter.plugin.platform.PlatformPlugin$1: void restoreSystemUiOverlays()
kotlin.text.StringsKt__StringsKt$splitToSequence$1: java.lang.Object invoke(java.lang.Object)
androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)
com.google.android.gms.maps.zzc: void zzb(com.google.android.gms.internal.maps.zzt)
androidx.lifecycle.LiveData: void observeForever(androidx.lifecycle.Observer)
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: android.content.Context createConfigurationContext(android.content.Context,android.content.res.Configuration)
com.google.android.gms.maps.model.Circle: void setStrokeColor(int)
com.google.zxing.common.BitMatrix: void setRegion(int,int,int,int)
androidx.appcompat.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)
com.google.android.gms.common.GoogleSignatureVerifier: boolean zza(android.content.pm.PackageInfo,boolean)
io.flutter.view.AccessibilityBridge: boolean isTouchExplorationEnabled()
io.flutter.embedding.android.FlutterView$4: FlutterView$4(io.flutter.embedding.android.FlutterView,io.flutter.embedding.engine.renderer.FlutterRenderer,java.lang.Runnable)
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: com.google.zxing.common.DecoderResult decode(byte[])
com.google.zxing.BinaryBitmap: BinaryBitmap(com.google.zxing.Binarizer)
com.google.android.gms.common.api.internal.BackgroundDetector: void onActivityDestroyed(android.app.Activity)
io.flutter.plugins.googlemaps.Convert: com.google.android.gms.maps.model.LatLng toLatLng(java.lang.Object)
androidx.appcompat.view.menu.MenuAdapter: void findExpandedIndex()
com.google.zxing.oned.rss.expanded.ExpandedPair: int hashNotNull(java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListHead: boolean isRemoved()
com.google.android.gms.common.internal.zzf: android.content.ComponentName getComponentName()
androidx.core.app.NotificationCompatJellybean: android.os.Bundle toBundle(androidx.core.app.RemoteInput)
com.google.firebase.database.collection.ArraySortedMap: int size()
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.core.text.PrecomputedTextCompat: int getSpanEnd(java.lang.Object)
androidx.core.app.NotificationManagerCompat: boolean useSideChannelForNotification(android.app.Notification)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity)
androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[],int)
androidx.fragment.app.FragmentAnim$2: FragmentAnim$2(android.view.ViewGroup,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentTransition$Callback,androidx.core.os.CancellationSignal)
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String getIsolateServiceId()
com.google.firebase.database.core.RepoManager: void interrupt(com.google.firebase.database.core.Repo)
androidx.core.app.ActivityRecreator: java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class)
com.journeyapps.barcodescanner.DecoratedBarcodeView: com.journeyapps.barcodescanner.ViewfinderView access$000(com.journeyapps.barcodescanner.DecoratedBarcodeView)
com.google.android.gms.common.api.internal.zza: void onActivityResult(int,int,android.content.Intent)
com.google.android.gms.internal.location.zzbm: android.os.Looper zzc()
androidx.lifecycle.ViewModel: java.lang.Object getTag(java.lang.String)
com.google.firebase.database.core.RepoInfo: RepoInfo()
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: void startListening()
io.flutter.plugin.platform.PlatformViewsController: java.util.List parsePointerPropertiesList(java.lang.Object)
com.google.zxing.oned.Code93Reader: void checkChecksums(java.lang.CharSequence)
kotlin.internal.PlatformImplementations: kotlin.random.Random defaultPlatformRandom()
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock$4: WebsocketConnection$WSClientTubesock$4(com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock,com.google.firebase.database.tubesock.WebSocketException)
androidx.fragment.app.Fragment: void setHideReplaced(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getClassName()
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1: FragmentManager$LaunchedFragmentInfo$1()
androidx.appcompat.view.StandaloneActionMode: void setTitleOptionalHint(boolean)
com.google.android.gms.common.ConnectionResult: boolean hasResolution()
androidx.fragment.app.DialogFragment: void dismissInternal(boolean,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void applyTheme(android.content.res.Resources$Theme)
io.flutter.plugins.urllauncher.WebViewActivity: void onCreate(android.os.Bundle)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.appcompat.app.AlertDialog$Builder: AlertDialog$Builder(android.content.Context,int)
com.google.android.gms.common.zzf: byte[] getBytes()
androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
com.google.zxing.client.android.BeepManager: void setBeepEnabled(boolean)
com.google.firebase.internal.DataCollectionConfigStorage: void updateDataCollectionDefaultEnabled(boolean)
androidx.fragment.app.SpecialEffectsController: void updateFinalState()
kotlinx.coroutines.DefaultExecutor: boolean notifyStartup()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getMinimumWidth()
com.google.firebase.database.snapshot.KeyIndex: int hashCode()
com.google.android.gms.common.GoogleApiAvailability: android.app.Dialog getErrorDialog(android.app.Activity,int,int,android.content.DialogInterface$OnCancelListener)
io.flutter.embedding.android.FlutterView: void addOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnSuccessListener(com.google.android.gms.tasks.OnSuccessListener)
com.journeyapps.barcodescanner.BarcodeView$1: boolean handleMessage(android.os.Message)
androidx.appcompat.widget.ActionBarBackgroundDrawable: int getOpacity()
com.google.android.gms.common.api.internal.BackgroundDetector: void onActivityResumed(android.app.Activity)
androidx.fragment.app.FragmentAnim$3: FragmentAnim$3(android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentTransition$Callback,androidx.core.os.CancellationSignal)
com.google.firebase.database.snapshot.PriorityUtilities: com.google.firebase.database.snapshot.Node parsePriority(com.google.firebase.database.core.Path,java.lang.Object)
androidx.appcompat.widget.SearchView: void onVoiceClicked()
androidx.appcompat.view.menu.CascadingMenuPopup: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
com.google.firebase.database.Query$4: Query$4(com.google.firebase.database.Query,boolean)
com.google.android.gms.internal.maps.zzag: zzag()
kotlin.SynchronizedLazyImpl: java.lang.Object getValue()
androidx.fragment.app.SpecialEffectsController: void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager)
com.google.firebase.database.core.EventRegistration: void setOnZombied(com.google.firebase.database.core.EventRegistrationZombieListener)
com.google.firebase.database.core.utilities.OffsetClock: void setOffset(long)
androidx.appcompat.widget.DropDownListView: void clearPressedItem()
androidx.appcompat.app.WindowDecorActionBar$3: WindowDecorActionBar$3(androidx.appcompat.app.WindowDecorActionBar)
io.flutter.plugin.mouse.MouseCursorPlugin$2: MouseCursorPlugin$2(io.flutter.plugin.mouse.MouseCursorPlugin)
com.journeyapps.barcodescanner.RotationListener: com.journeyapps.barcodescanner.RotationCallback access$100(com.journeyapps.barcodescanner.RotationListener)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.appcompat.widget.SearchView$SavedState$1: java.lang.Object[] newArray(int)
com.google.firebase.database.core.utilities.Pair: java.lang.Object getSecond()
kotlin.ranges.IntRange$Companion: kotlin.ranges.IntRange getEMPTY()
com.google.firebase.database.core.utilities.ImmutableTree: com.google.firebase.database.core.Path findRootMostMatchingPath(com.google.firebase.database.core.Path,com.google.firebase.database.core.utilities.Predicate)
androidx.fragment.app.FragmentController: void dispatchActivityCreated()
androidx.appcompat.view.SupportActionModeWrapper: void setTitle(java.lang.CharSequence)
androidx.core.content.res.GrowingArrayUtils: int growSize(int)
com.google.firebase.database.core.SnapshotHolder: SnapshotHolder(com.google.firebase.database.snapshot.Node)
androidx.appcompat.widget.ListPopupWindow$2: ListPopupWindow$2(androidx.appcompat.widget.ListPopupWindow)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
com.google.zxing.common.HybridBinarizer: void calculateThresholdForBlock(byte[],int,int,int,int,int[][],com.google.zxing.common.BitMatrix)
kotlinx.coroutines.internal.ThreadSafeHeap: void siftDownFrom(int)
com.google.android.gms.common.internal.zzf: void zze(java.lang.String)
androidx.appcompat.widget.ViewUtils: void makeOptionalFitsSystemWindows(android.view.View)
com.google.zxing.pdf417.decoder.ec.ErrorCorrection: ErrorCorrection()
androidx.appcompat.widget.ScrollingTabContainerView: androidx.appcompat.widget.ScrollingTabContainerView$TabView createTabView(androidx.appcompat.app.ActionBar$Tab,boolean)
kotlin.coroutines.EmptyCoroutineContext: EmptyCoroutineContext()
io.flutter.embedding.android.FlutterSurfaceView: void pause()
com.google.zxing.oned.UPCEReader: boolean checkChecksum(java.lang.String)
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: GeneralAppIdDecoder(com.google.zxing.common.BitArray)
androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.View onFindViewById(int)
com.google.firebase.database.snapshot.EmptyNode: java.lang.Object getValue(boolean)
androidx.activity.result.IntentSenderRequest: void writeToParcel(android.os.Parcel,int)
io.flutter.plugins.googlemaps.MarkersController: void changeMarker(java.lang.Object)
com.google.firebase.FirebaseOptions: FirebaseOptions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.activity.result.IntentSenderRequest$1: androidx.activity.result.IntentSenderRequest[] newArray(int)
androidx.appcompat.graphics.drawable.DrawableContainer: DrawableContainer()
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: void access$000(com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder)
androidx.collection.MapCollections$KeySet: java.util.Iterator iterator()
io.flutter.util.PathUtils: java.lang.String getFilesDir(android.content.Context)
com.google.zxing.client.android.InactivityTimer$PowerStatusReceiver: void onReceive(android.content.Context,android.content.Intent)
kotlinx.coroutines.BuildersKt__Builders_commonKt: kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
com.google.zxing.oned.rss.expanded.decoders.FieldParser: java.lang.String processVariableAI(int,int,java.lang.String)
androidx.appcompat.widget.ResourcesWrapper: android.content.res.Configuration getConfiguration()
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.view.ActionProvider getSupportActionProvider()
androidx.activity.result.ActivityResult: int describeContents()
com.google.firebase.database.android.AndroidAuthTokenProvider: void getToken(boolean,com.google.firebase.database.core.TokenProvider$GetTokenCompletionListener)
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivity()
com.google.android.gms.common.api.GoogleApiActivity: android.content.Intent zaa(android.content.Context,android.app.PendingIntent,int,boolean)
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)
io.flutter.plugins.googlemaps.MarkerBuilder: boolean consumeTapEvents()
com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task whenAll(java.util.Collection)
androidx.window.embedding.SplitPairFilter: boolean equals(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: java.lang.CharSequence getHintText()
androidx.appcompat.app.AppCompatDelegate: void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
com.google.firebase.database.core.utilities.ImmutableTree: boolean containsMatchingValue(com.google.firebase.database.core.utilities.Predicate)
com.google.firebase.database.tubesock.WebSocketWriter: void send(byte,boolean,byte[])
androidx.appcompat.app.AppCompatActivity: void initDelegate()
com.google.firebase.database.snapshot.EmptyNode: int getChildCount()
com.google.android.gms.common.api.AvailabilityException: AvailabilityException(androidx.collection.ArrayMap)
androidx.appcompat.widget.LinearLayoutCompat: int measureNullChild(int)
androidx.appcompat.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])
androidx.appcompat.widget.ResourceManagerInternal: void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks)
androidx.fragment.app.BackStackRecord: java.lang.String toString()
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBValueNode moveRedRight()
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterSurfaceView)
com.journeyapps.barcodescanner.camera.CameraThread: void quit()
androidx.core.widget.NestedScrollView: boolean fullScroll(int)
androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View)
androidx.customview.view.AbsSavedState: AbsSavedState(androidx.customview.view.AbsSavedState$1)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.util.List getPathProviderExternalStorageDirectories(java.lang.String)
com.google.firebase.database.connection.PersistentConnectionImpl: com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState access$902(com.google.firebase.database.connection.PersistentConnectionImpl,com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState)
androidx.core.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
com.google.firebase.database.DatabaseError: com.google.firebase.database.DatabaseException toException()
com.google.android.gms.maps.model.PolylineOptions: boolean isClickable()
androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.LayerDrawable getRatingBarLayerDrawable(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)
com.google.firebase.database.tubesock.WebSocket: void connect()
androidx.core.widget.NestedScrollView: boolean inChild(int,int)
com.google.android.gms.internal.common.zzc: void zza(android.os.Parcel,android.os.IInterface)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
androidx.appcompat.widget.LinearLayoutCompat: void drawDividersHorizontal(android.graphics.Canvas)
com.baseflow.geolocator.location.LocationManagerClient: void onStatusChanged(java.lang.String,int,android.os.Bundle)
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationCancel(android.animation.Animator)
com.google.android.gms.common.api.internal.GoogleApiManager: java.util.Map zaj(com.google.android.gms.common.api.internal.GoogleApiManager)
com.google.android.gms.maps.zzaa: java.lang.Object createFromParcel(android.os.Parcel)
androidx.window.embedding.EmbeddingCompat: void setSplitRules(java.util.Set)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: RSSExpandedReader()
com.google.android.gms.maps.GoogleMap: void snapshot(com.google.android.gms.maps.GoogleMap$SnapshotReadyCallback,android.graphics.Bitmap)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void access$000(io.flutter.plugins.imagepicker.ImagePickerDelegate,java.lang.String,boolean)
com.google.android.gms.maps.model.MarkerOptions: float getZIndex()
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$5000(io.flutter.view.AccessibilityBridge$SemanticsNode,java.util.List)
androidx.appcompat.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)
com.google.firebase.database.snapshot.ChildrenNode$NamedNodeIterator: boolean hasNext()
kotlinx.coroutines.CoroutineId: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.CompletionHandlerException: CompletionHandlerException(java.lang.String,java.lang.Throwable)
androidx.fragment.app.FragmentManager: void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean)
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: void writeToParcel(android.os.Parcel,int)
com.google.firebase.database.tubesock.MessageBuilderFactory$TextBuilder: MessageBuilderFactory$TextBuilder()
com.google.zxing.oned.Code93Reader: Code93Reader()
androidx.appcompat.app.AlertController: boolean onKeyDown(int,android.view.KeyEvent)
androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: boolean isStateful()
androidx.appcompat.graphics.drawable.DrawableContainer: void setDither(boolean)
com.journeyapps.barcodescanner.DecoratedBarcodeView: void resume()
androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
io.flutter.plugins.googlemaps.PolylineController: PolylineController(com.google.android.gms.maps.model.Polyline,boolean,float)
com.google.firebase.database.core.operation.OperationSource$Source: OperationSource$Source(java.lang.String,int)
androidx.appcompat.widget.ActionBarContainer: boolean onInterceptTouchEvent(android.view.MotionEvent)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String access$100(io.flutter.plugins.pathprovider.PathProviderPlugin)
com.google.firebase.database.core.DatabaseConfig: void setFirebaseApp(com.google.firebase.FirebaseApp)
androidx.core.graphics.drawable.DrawableCompat: void setHotspot(android.graphics.drawable.Drawable,float,float)
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)
com.google.firebase.database.core.view.QueryParams: java.util.Map getWireProtocolParams()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setHotspot(float,float)
com.google.android.gms.internal.location.zzau: void notifyListener(java.lang.Object)
androidx.multidex.MultiDex: java.lang.reflect.Field findField(java.lang.Object,java.lang.String)
io.flutter.plugin.common.JSONMessageCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
com.google.android.gms.dynamite.DynamiteModule: int zzc(android.content.Context,java.lang.String,boolean)
androidx.appcompat.app.WindowDecorActionBar: void setElevation(float)
com.google.zxing.pdf417.decoder.DetectionResultColumn: int imageRowToCodewordIndex(int)
com.google.firebase.database.snapshot.KeyIndex: KeyIndex()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setColorFilter(int,android.graphics.PorterDuff$Mode)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$4300(io.flutter.view.AccessibilityBridge$SemanticsNode,float[])
kotlinx.coroutines.JobSupport: boolean isScopedCoroutine()
com.google.firebase.database.core.SyncTree$16: SyncTree$16(com.google.firebase.database.core.SyncTree,com.google.firebase.database.snapshot.Node,com.google.firebase.database.core.WriteTreeRef,com.google.firebase.database.core.operation.Operation,java.util.List)
androidx.appcompat.widget.SuggestionsAdapter: void notifyDataSetInvalidated()
com.baseflow.geolocator.GeolocatorPlugin: void registerListeners()
io.flutter.embedding.android.KeyboardManager: boolean handleEvent(android.view.KeyEvent)
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
com.google.firebase.database.core.Repo: void removeEventCallback(com.google.firebase.database.core.EventRegistration)
androidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintListFromCache(android.content.Context,int)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
com.google.android.gms.internal.maps.zzj: boolean zzb(com.google.android.gms.internal.maps.zzh)
androidx.core.widget.AutoScrollHelper$ClampedScroller: float interpolateValue(float)
com.google.firebase.database.core.Repo$11: Repo$11(com.google.firebase.database.core.Repo,com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node,com.google.firebase.database.DatabaseReference$CompletionListener)
kotlinx.coroutines.JobSupport: boolean getOnCancelComplete$kotlinx_coroutines_core()
androidx.appcompat.widget.MenuPopupWindow: androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean)
androidx.activity.result.IntentSenderRequest: android.content.Intent getFillInIntent()
com.baseflow.geolocator.GeolocatorPlugin: void onDetachedFromActivity()
com.google.firebase.database.android.SqlPersistenceStorageEngine: void resetPreviouslyActiveTrackedQueries(long)
com.google.firebase.database.core.view.filter.IndexedFilter: com.google.firebase.database.snapshot.IndexedNode updatePriority(com.google.firebase.database.snapshot.IndexedNode,com.google.firebase.database.snapshot.Node)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(int)
androidx.appcompat.view.menu.ListMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: TextInputChannel$TextEditState(java.lang.String,int,int,int,int)
androidx.appcompat.widget.Toolbar: boolean isOverflowMenuShowPending()
com.baseflow.geolocator.location.FlutterLocationServiceListener: void onLocationServiceError(com.baseflow.geolocator.errors.ErrorCodes)
kotlin.LazyKt__LazyJVMKt: kotlin.Lazy lazy(kotlin.jvm.functions.Function0)
kotlinx.coroutines.EventLoopImplBase: void setCompleted(boolean)
com.google.zxing.qrcode.detector.FinderPatternInfo: com.google.zxing.qrcode.detector.FinderPattern getTopRight()
com.google.android.gms.location.LocationSettingsStates: boolean isBleUsable()
com.google.zxing.oned.rss.expanded.decoders.AI01decoder: void encodeCompressedGtin(java.lang.StringBuilder,int)
com.google.firebase.database.snapshot.Node$1: java.lang.String toString()
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.internal.common.zzc: void writeBoolean(android.os.Parcel,boolean)
androidx.appcompat.widget.TooltipPopup: void show(android.view.View,int,int,boolean,java.lang.CharSequence)
androidx.collection.SimpleArrayMap: java.lang.Object keyAt(int)
com.lyokone.location.NotificationOptions: int hashCode()
androidx.activity.ComponentActivity$5: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean cancel(boolean)
com.google.android.gms.maps.model.BitmapDescriptorFactory: void zza(com.google.android.gms.internal.maps.zze)
com.google.android.gms.dynamite.DynamiteModule$zza: DynamiteModule$zza(com.google.android.gms.dynamite.zza)
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
com.google.zxing.oned.OneDReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map)
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: CompoundHash$CompoundHashBuilder(com.google.firebase.database.snapshot.CompoundHash$SplitStrategy)
com.baseflow.geolocator.location.FusedLocationClient: FusedLocationClient(android.content.Context,com.baseflow.geolocator.location.LocationOptions)
androidx.collection.MapCollections$ValuesCollection: java.lang.Object[] toArray(java.lang.Object[])
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)
com.google.firebase.database.tubesock.WebSocket: void closeSocket()
androidx.appcompat.widget.ActionMenuPresenter: void onConfigurationChanged(android.content.res.Configuration)
io.flutter.embedding.engine.renderer.FlutterRenderer: void markTextureFrameAvailable(long)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setAlphabeticShortcut(char)
com.google.android.gms.maps.GoogleMap: com.google.android.gms.maps.model.CameraPosition getCameraPosition()
androidx.cursoradapter.widget.ResourceCursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
com.google.zxing.client.android.BeepManager: BeepManager(android.app.Activity)
com.google.firebase.database.InternalHelpers: com.google.firebase.database.DatabaseReference createReference(com.google.firebase.database.core.Repo,com.google.firebase.database.core.Path)
com.google.firebase.database.snapshot.ChildKey: com.google.firebase.database.snapshot.ChildKey getPriorityKey()
kotlin.internal.PlatformImplementationsKt: int getJavaVersion()
androidx.core.provider.FontsContractCompat$FontInfo: boolean isItalic()
io.flutter.plugins.googlemaps.TileOverlayBuilder: com.google.android.gms.maps.model.TileOverlayOptions build()
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable unwrapImpl(java.lang.Throwable)
kotlinx.coroutines.internal.ContextScope: java.lang.String toString()
com.google.android.gms.maps.model.PolylineOptions: void writeToParcel(android.os.Parcel,int)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.google.firebase.database.core.Repo$3: void onTokenChange(java.lang.String)
androidx.appcompat.view.menu.BaseMenuPresenter: void addItemView(android.view.View,int)
androidx.window.layout.SidecarAdapter: java.lang.String access$getTAG$cp()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setWhen(long)
com.google.firebase.database.core.Repo$25: Repo$25(com.google.firebase.database.core.Repo,com.google.firebase.database.core.Repo$TransactionData,com.google.firebase.database.DatabaseError)
com.google.zxing.oned.UPCEReader: com.google.zxing.BarcodeFormat getBarcodeFormat()
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setStyle(android.content.Context)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$3700(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: boolean onMenuItemActionExpand(android.view.MenuItem)
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
com.google.firebase.database.core.ServerValues$1: ServerValues$1(com.google.firebase.database.core.ValueProvider,java.util.Map,com.google.firebase.database.core.SnapshotHolder)
com.google.zxing.qrcode.decoder.Version: com.google.zxing.common.BitMatrix buildFunctionPattern()
kotlinx.coroutines.internal.OpDescriptor: java.lang.String toString()
com.google.firebase.database.snapshot.ChildrenNode$1: ChildrenNode$1()
com.google.firebase.database.core.view.EventRaiser$1: EventRaiser$1(com.google.firebase.database.core.view.EventRaiser,java.util.ArrayList)
com.journeyapps.barcodescanner.CameraPreview: void initialize(android.content.Context,android.util.AttributeSet,int,int)
com.journeyapps.barcodescanner.camera.CameraInstance: void setTorch(boolean)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: java.util.Map encodeKeyEvent(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent,boolean)
com.google.android.gms.common.internal.ResolveAccountResponse: ResolveAccountResponse(int,android.os.IBinder,com.google.android.gms.common.ConnectionResult,boolean,boolean)
com.google.firebase.database.MutableData: MutableData(com.google.firebase.database.core.SnapshotHolder,com.google.firebase.database.core.Path)
com.google.firebase.database.snapshot.LeafNode: com.google.firebase.database.snapshot.Node updateImmediateChild(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node)
androidx.appcompat.app.AppCompatDialog$1: boolean superDispatchKeyEvent(android.view.KeyEvent)
androidx.appcompat.app.AppCompatViewInflater: void verifyNotNull(android.view.View,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.lifecycle.LifecycleRegistry: void markState(androidx.lifecycle.Lifecycle$State)
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationRepeat(android.animation.Animator)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: VectorDrawableCommon()
androidx.fragment.app.BackStackRecord: boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op)
com.google.zxing.oned.CodaBarReader: int findStartPattern()
com.google.android.gms.location.zzaf: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
androidx.appcompat.app.LayoutIncludeDetector: LayoutIncludeDetector()
androidx.appcompat.app.AlertController$AlertParams: AlertController$AlertParams(android.content.Context)
com.google.zxing.oned.rss.expanded.decoders.FieldParser: java.lang.String parseFieldsInGeneralPurpose(java.lang.String)
com.google.firebase.database.core.Repo$16: Repo$16(com.google.firebase.database.core.Repo,com.google.firebase.database.Transaction$Handler,com.google.firebase.database.DatabaseError,com.google.firebase.database.DataSnapshot)
com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.CameraUpdate newLatLngBounds(com.google.android.gms.maps.model.LatLngBounds,int)
com.google.android.gms.maps.internal.zzbg: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
com.google.android.gms.internal.maps.zzv: void setAlpha(float)
com.google.firebase.database.connection.ConnectionUtils: java.lang.Long longFromObject(java.lang.Object)
androidx.appcompat.widget.FitWindowsLinearLayout: boolean fitSystemWindows(android.graphics.Rect)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
com.google.firebase.database.snapshot.ChildrenNode: com.google.firebase.database.snapshot.ChildKey getPredecessorChildKey(com.google.firebase.database.snapshot.ChildKey)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
com.journeyapps.barcodescanner.Size: int hashCode()
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: java.lang.Object getInputContentInfo()
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: GoogleApiManager$zaa(com.google.android.gms.common.api.internal.GoogleApiManager,com.google.android.gms.common.api.GoogleApi)
com.google.android.gms.common.GoogleApiAvailability$zaa: GoogleApiAvailability$zaa(com.google.android.gms.common.GoogleApiAvailability,android.content.Context)
kotlin.coroutines.CombinedContext: boolean containsAll(kotlin.coroutines.CombinedContext)
io.flutter.embedding.android.FlutterSurfaceView$1: FlutterSurfaceView$1(io.flutter.embedding.android.FlutterSurfaceView)
androidx.appcompat.widget.DropDownListView: void dispatchDraw(android.graphics.Canvas)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int getKeyframeIdAt(int)
com.google.firebase.database.core.persistence.DefaultPersistenceManager: void saveUserOverwrite(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node,long)
com.journeyapps.barcodescanner.RawImageData: byte[] rotateCW(byte[],int,int)
io.flutter.plugins.firebase.database.ChildEventsProxy: void onCancelled(com.google.firebase.database.DatabaseError)
kotlinx.coroutines.CompletionHandlerBase: CompletionHandlerBase()
com.baseflow.geolocator.errors.ErrorCodes: java.lang.String toString()
com.google.firebase.database.android.SqlPersistenceStorageEngine: int removeNested(java.lang.String,com.google.firebase.database.core.Path)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
com.journeyapps.barcodescanner.CaptureManager: android.app.Activity access$300(com.journeyapps.barcodescanner.CaptureManager)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: FlutterRenderer$DisplayFeature(android.graphics.Rect,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getWeight()
androidx.appcompat.view.menu.ActionMenuItem: boolean isEnabled()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.Object getAppComponent()
androidx.fragment.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.appcompat.view.menu.MenuPopup: android.graphics.Rect getEpicenterBounds()
com.google.zxing.BinaryBitmap: com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray)
com.google.android.gms.internal.maps.zza: zza(android.os.IBinder,java.lang.String)
com.google.android.gms.maps.UiSettings: void setScrollGesturesEnabled(boolean)
com.google.firebase.database.collection.RBTreeSortedMap: java.util.Iterator iterator()
com.google.android.gms.common.internal.ClientSettings: java.lang.String getRealClientClassName()
com.google.firebase.database.core.view.QueryParams: com.google.firebase.database.core.view.QueryParams limitToLast(int)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: AppCompatSpinner$DropDownAdapter(android.widget.SpinnerAdapter,android.content.res.Resources$Theme)
kotlin.jvm.internal.Intrinsics: void throwUninitializedPropertyAccessException(java.lang.String)
androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)
androidx.fragment.app.FragmentManager: java.util.Map access$000(androidx.fragment.app.FragmentManager)
com.google.android.gms.common.GooglePlayServicesUtilLight: boolean isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String)
kotlinx.coroutines.EventLoopImplBase: void rescheduleAllDelayed()
com.baseflow.geolocator.GeolocatorLocationService: void changeNotificationOptions(com.baseflow.geolocator.location.ForegroundNotificationOptions)
com.google.zxing.common.BitMatrix: boolean get(int,int)
com.google.common.base.MoreObjects: com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object)
com.google.android.gms.maps.model.zzl: java.lang.Object[] newArray(int)
com.google.firebase.database.core.persistence.PruneForest: com.google.firebase.database.core.persistence.PruneForest prune(com.google.firebase.database.core.Path)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIntent(android.content.Intent)
com.google.firebase.database.snapshot.CompoundHash: void access$500(com.google.firebase.database.snapshot.Node,com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder)
androidx.appcompat.widget.ActionBarOverlayLayout: void onWindowVisibilityChanged(int)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept(androidx.window.layout.WindowLayoutInfo)
com.google.firebase.database.core.persistence.TrackedQueryManager$5: java.lang.Void onNodeValue(com.google.firebase.database.core.Path,java.util.Map,java.lang.Void)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: boolean setState(int[])
com.journeyapps.barcodescanner.Decoder: com.google.zxing.Result decode(com.google.zxing.LuminanceSource)
com.google.firebase.database.core.Repo$9: void run()
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
androidx.appcompat.widget.AppCompatBackgroundHelper: void setInternalBackgroundTint(android.content.res.ColorStateList)
com.google.android.gms.maps.model.Dot: java.lang.String toString()
androidx.exifinterface.media.ExifInterface: boolean isJpegFormat(byte[])
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
androidx.collection.SparseArrayCompat: java.lang.Object clone()
com.google.android.gms.common.zze: zze(byte[])
com.google.android.gms.signin.internal.SignInClientImpl: boolean requiresSignIn()
com.google.android.gms.common.internal.BaseGmsClient$zze: void onServiceDisconnected(android.content.ComponentName)
io.flutter.plugin.editing.TextInputPlugin$1: void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
com.google.android.gms.location.LocationSettingsStates: boolean isNetworkLocationUsable()
com.google.firebase.database.collection.StandardComparator: int compare(java.lang.Object,java.lang.Object)
io.flutter.embedding.android.FlutterView: boolean hasRenderedFirstFrame()
com.google.firebase.database.collection.ArraySortedMap: java.lang.Object get(java.lang.Object)
com.google.firebase.database.logging.LogWrapper: void warn(java.lang.String)
com.google.zxing.common.BitSource: BitSource(byte[])
com.google.firebase.database.core.utilities.ImmutableTree$1: ImmutableTree$1(com.google.firebase.database.core.utilities.ImmutableTree,java.util.ArrayList)
kotlin.text.StringsKt__StringsJVMKt: boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean)
com.journeyapps.barcodescanner.CaptureActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState fromJson(org.json.JSONObject)
kotlin.text.StringsKt__StringsKt: kotlin.Pair access$findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean,boolean)
io.flutter.plugins.googlemaps.Convert: void interpretGoogleMapOptions(java.lang.Object,io.flutter.plugins.googlemaps.GoogleMapOptionsSink)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.ResourcesWrapper: android.content.res.XmlResourceParser getAnimation(int)
com.google.zxing.pdf417.decoder.BoundingBox: com.google.zxing.pdf417.decoder.BoundingBox addMissingRows(int,int,boolean)
io.flutter.embedding.android.FlutterView: boolean onGenericMotionEvent(android.view.MotionEvent)
com.google.zxing.LuminanceSource: int getHeight()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()
com.google.zxing.oned.UPCEANExtension5Support: java.lang.String parseExtension5String(java.lang.String)
com.journeyapps.barcodescanner.ViewfinderView$1: ViewfinderView$1(com.journeyapps.barcodescanner.ViewfinderView)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem add(int,int,int,java.lang.CharSequence)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog create()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
com.google.firebase.database.core.operation.OperationSource: boolean isTagged()
io.flutter.embedding.android.FlutterView: void init()
com.google.firebase.database.core.WriteTreeRef: com.google.firebase.database.snapshot.Node calcCompleteChild(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.core.view.CacheNode)
io.flutter.embedding.android.FlutterView: void addFlutterEngineAttachmentListener(io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener)
com.google.firebase.database.core.Repo: void postEvents(java.util.List)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List toList(java.lang.Iterable)
com.google.firebase.provider.FirebaseInitProvider: java.lang.String getType(android.net.Uri)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getChangingConfigurations()
androidx.appcompat.view.StandaloneActionMode: android.view.View getCustomView()
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: AccessibilityDelegateCompat$AccessibilityDelegateAdapter(androidx.core.view.AccessibilityDelegateCompat)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: AnimatedStateListDrawableCompat(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)
com.google.firebase.database.core.SyncTree: java.util.List applyServerOverwrite(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node)
io.flutter.plugin.platform.PlatformPlugin$1: PlatformPlugin$1(io.flutter.plugin.platform.PlatformPlugin)
kotlinx.coroutines.JobSupport: void addSuppressedExceptions(java.lang.Throwable,java.util.List)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
androidx.fragment.app.Fragment: void onDestroyView()
androidx.lifecycle.LiveData: LiveData()
io.flutter.embedding.android.FlutterView: boolean access$102(io.flutter.embedding.android.FlutterView,boolean)
androidx.fragment.app.FragmentManager: void dispatchPause()
kotlinx.coroutines.EventLoopImplBase: EventLoopImplBase()
androidx.fragment.app.FragmentManager: void dispatchPictureInPictureModeChanged(boolean)
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context)
kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key)
com.google.android.gms.common.GooglePlayServicesUtilLight: int isGooglePlayServicesAvailable(android.content.Context,int)
androidx.appcompat.widget.RtlSpacingHelper: int getLeft()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List toMutableList(java.util.Collection)
com.journeyapps.barcodescanner.ViewfinderView: ViewfinderView(android.content.Context,android.util.AttributeSet)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: int getNextSecondBar(com.google.zxing.common.BitArray,int)
com.google.firebase.database.snapshot.ChildrenNode: com.google.firebase.database.snapshot.Node updateChild(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node)
androidx.core.app.NotificationCompat$Builder: android.app.Notification build()
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
kotlinx.coroutines.JobKt__JobKt: void ensureActive(kotlinx.coroutines.Job)
com.google.android.gms.internal.location.zzaz: void disconnect()
kotlinx.coroutines.CoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
com.lyokone.location.FlutterLocationService$Companion: FlutterLocationService$Companion()
com.baseflow.geolocator.location.LocationManagerClient: void startPositionUpdates(android.app.Activity,com.baseflow.geolocator.location.PositionChangedCallback,com.baseflow.geolocator.errors.ErrorCallback)
androidx.loader.app.LoaderManagerImpl: java.lang.String toString()
com.google.firebase.database.core.utilities.encoding.CustomClassMapper$BeanMapper: CustomClassMapper$BeanMapper(java.lang.Class)
com.google.zxing.common.BitMatrix: java.lang.String buildToString(java.lang.String,java.lang.String,java.lang.String)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem add(java.lang.CharSequence)
androidx.window.layout.WindowLayoutInfo: java.lang.String toString()
com.google.common.util.concurrent.AbstractFuture: boolean isCancelled()
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType[] values()
io.flutter.plugins.firebase.database.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
androidx.exifinterface.media.ExifInterface: void retrieveJpegImageSize(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int)
kotlin.jvm.internal.CallableReference$NoReceiver: CallableReference$NoReceiver()
androidx.activity.result.IntentSenderRequest$1: IntentSenderRequest$1()
androidx.multidex.MultiDex: boolean isVMMultidexCapable(java.lang.String)
kotlinx.coroutines.internal.ThreadContextKt: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$5600(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.database.core.ChildEventRegistration: boolean equals(java.lang.Object)
com.journeyapps.barcodescanner.RotationListener: int access$200(com.journeyapps.barcodescanner.RotationListener)
androidx.fragment.app.FragmentLayoutInflaterFactory$1: void onViewDetachedFromWindow(android.view.View)
com.google.zxing.oned.rss.expanded.decoders.AnyAIDecoder: java.lang.String parseInformation()
com.google.firebase.database.android.SqlPersistenceStorageEngine: java.lang.String pathPrefixStartToPrefixEnd(java.lang.String)
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
androidx.appcompat.app.AlertController$3: void run()
androidx.appcompat.widget.ListPopupWindow: boolean isModal()
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: boolean isOutOfBounds(int,int)
androidx.appcompat.widget.AppCompatSpinner: void onRestoreInstanceState(android.os.Parcelable)
kotlin.ranges.RangesKt___RangesKt: int coerceAtLeast(int,int)
com.google.firebase.database.snapshot.EmptyNode: java.util.Iterator iterator()
com.google.android.gms.maps.zzu: void onCameraMoveStarted(int)
com.google.firebase.database.core.view.View: com.google.firebase.database.core.view.View$OperationResult applyOperation(com.google.firebase.database.core.operation.Operation,com.google.firebase.database.core.WriteTreeRef,com.google.firebase.database.snapshot.Node)
androidx.collection.ArrayMap: ArrayMap(int)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat)
com.google.android.gms.maps.internal.zzg: boolean setMapStyle(com.google.android.gms.maps.model.MapStyleOptions)
androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getStableInsets()
com.google.zxing.common.DecoderResult: java.util.List getByteSegments()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onStart()
kotlinx.coroutines.InvokeOnCancel: InvokeOnCancel(kotlin.jvm.functions.Function1)
androidx.appcompat.app.AlertController$1: void onClick(android.view.View)
androidx.appcompat.widget.AppCompatCheckedTextView: void drawableStateChanged()
com.google.firebase.database.snapshot.ValueIndex: java.lang.String getQueryDefinition()
com.google.android.gms.maps.model.Gap: Gap(float)
androidx.appcompat.view.menu.MenuPopup: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.google.firebase.database.collection.LLRBBlackValueNode: LLRBBlackValueNode(java.lang.Object,java.lang.Object,com.google.firebase.database.collection.LLRBNode,com.google.firebase.database.collection.LLRBNode)
com.journeyapps.barcodescanner.camera.CameraInstance: com.journeyapps.barcodescanner.camera.CameraSurface access$500(com.journeyapps.barcodescanner.camera.CameraInstance)
com.google.android.gms.maps.zzd: zzd(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnInfoWindowClickListener)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri)
androidx.fragment.app.FragmentActivity: void supportInvalidateOptionsMenu()
com.google.firebase.database.connection.CompoundHash: CompoundHash(java.util.List,java.util.List)
kotlinx.coroutines.Unconfined: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
com.google.firebase.database.snapshot.ChildrenNode: com.google.firebase.database.snapshot.ChildKey getLastChildKey()
com.google.android.gms.common.api.internal.zae: void zaa(com.google.android.gms.common.api.Status)
androidx.fragment.app.FragmentManagerViewModel$1: androidx.lifecycle.ViewModel create(java.lang.Class)
kotlin.ranges.IntProgression: int getStep()
androidx.fragment.app.DefaultSpecialEffectsController: void executeOperations(java.util.List,boolean)
androidx.window.embedding.EmbeddingTranslatingCallback: EmbeddingTranslatingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface,androidx.window.embedding.EmbeddingAdapter)
kotlinx.coroutines.CoroutineName$Key: CoroutineName$Key()
androidx.exifinterface.media.ExifInterface: byte[] getThumbnailBytes()
io.flutter.embedding.android.FlutterSplashView$3: FlutterSplashView$3(io.flutter.embedding.android.FlutterSplashView)
com.google.firebase.database.tubesock.WebSocketWriter: byte[] generateMask()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: PlatformViewsChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter)
kotlinx.coroutines.AbstractCoroutine: void onCancelled(java.lang.Throwable,boolean)
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
com.google.android.gms.internal.maps.zzg: com.google.android.gms.dynamic.IObjectWrapper zzi()
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isSoftwareRenderingEnabled()
com.google.firebase.database.core.view.EventRaiser: com.google.firebase.database.logging.LogWrapper access$000(com.google.firebase.database.core.view.EventRaiser)
androidx.loader.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.core.widget.NestedScrollView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.journeyapps.barcodescanner.Util: void validateMainThread()
androidx.appcompat.widget.AppCompatEditText: androidx.core.view.ContentInfoCompat onReceiveContent(androidx.core.view.ContentInfoCompat)
com.google.firebase.database.FirebaseDatabase: com.google.firebase.database.DatabaseReference getReference(java.lang.String)
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: java.lang.String toString()
io.flutter.plugin.editing.FlutterTextUtils: FlutterTextUtils(io.flutter.embedding.engine.FlutterJNI)
io.flutter.plugin.editing.ListenableEditingState: java.lang.String toString()
com.google.firebase.database.connection.PersistentConnectionImpl$7: PersistentConnectionImpl$7(com.google.firebase.database.connection.PersistentConnectionImpl,com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingListen)
com.google.firebase.database.connection.PersistentConnectionImpl: com.google.android.gms.tasks.Task get(java.util.List,java.util.Map)
io.flutter.plugins.googlemaps.CircleBuilder: void setVisible(boolean)
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: java.lang.String toString()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int skipBytes(int)
com.google.android.gms.maps.model.PolygonOptions: int getStrokeJointType()
com.google.android.gms.maps.model.Polygon: void setVisible(boolean)
androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)
com.google.android.gms.signin.internal.SignInClientImpl: android.os.IInterface createServiceInterface(android.os.IBinder)
kotlin.collections.EmptySet: java.lang.Object[] toArray(java.lang.Object[])
androidx.appcompat.widget.SearchView: void updateCloseButton()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5900(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onSaveInstanceState(android.os.Bundle)
com.google.firebase.database.core.persistence.PruneForest: com.google.firebase.database.core.persistence.PruneForest child(com.google.firebase.database.snapshot.ChildKey)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void setLastInfo(androidx.window.layout.WindowLayoutInfo)
com.google.firebase.database.core.SparseSnapshotTree: void forEachTree(com.google.firebase.database.core.Path,com.google.firebase.database.core.SparseSnapshotTree$SparseSnapshotTreeVisitor)
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo: boolean isVisibilityUnchanged()
kotlinx.coroutines.channels.Channel$Factory: Channel$Factory()
com.google.zxing.qrcode.decoder.Version$ECB: int getDataCodewords()
androidx.appcompat.widget.ActionBarContainer: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDefaultIcon1()
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean tryCreateWorker$default(kotlinx.coroutines.scheduling.CoroutineScheduler,long,int,java.lang.Object)
com.google.zxing.oned.ITFReader: int decodeDigit(int[])
androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
androidx.core.provider.FontRequest: java.lang.String createIdentifier(java.lang.String,java.lang.String,java.lang.String)
com.google.firebase.database.core.SyncTree$1: java.lang.Object call()
com.google.firebase.database.core.Repo$TransactionData: com.google.firebase.database.snapshot.Node access$1700(com.google.firebase.database.core.Repo$TransactionData)
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: com.google.android.gms.tasks.Task goOffline(java.util.Map)
androidx.appcompat.widget.LinearLayoutCompat: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator: int compare(java.lang.Object,java.lang.Object)
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: void cleanup()
androidx.appcompat.view.menu.SubMenuBuilder: androidx.appcompat.view.menu.MenuBuilder getRootMenu()
com.journeyapps.barcodescanner.CaptureManager: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.zxing.common.GlobalHistogramBinarizer: void initArrays(int)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: boolean hasSharedElementTransition()
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setMapToolbarEnabled(boolean)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: void invokeSuspend$lambda-0(kotlinx.coroutines.channels.Channel,androidx.window.layout.WindowLayoutInfo)
com.google.firebase.database.logging.DefaultLogger: DefaultLogger(com.google.firebase.database.logging.Logger$Level,java.util.List)
com.google.firebase.database.connection.PersistentConnectionImpl: void sendOnDisconnect(java.lang.String,java.util.List,java.lang.Object,com.google.firebase.database.connection.RequestResultCallback)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean isAutoSizeEnabled()
io.flutter.plugins.googlemaps.Convert: java.lang.Object polylineIdToJson(java.lang.String)
com.google.android.gms.internal.common.zzc: zzc()
com.baseflow.geolocator.location.ForegroundNotificationOptions: java.lang.String getNotificationTitle()
io.flutter.plugins.firebase.database.ChildEventsProxy: void onChildMoved(com.google.firebase.database.DataSnapshot,java.lang.String)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: PathInterpolatorCompat(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadFlag(io.flutter.view.AccessibilityBridge$Flag)
kotlin.KotlinNothingValueException: KotlinNothingValueException()
io.flutter.plugins.googlemaps.CircleBuilder: void setZIndex(float)
io.flutter.embedding.android.FlutterActivity: void configureStatusBarForFullscreenFlutterExperience()
io.flutter.embedding.android.MotionEventTracker: android.view.MotionEvent pop(io.flutter.embedding.android.MotionEventTracker$MotionEventId)
androidx.core.graphics.Insets: android.graphics.Insets toPlatformInsets()
com.google.zxing.oned.rss.DataCharacter: int getChecksumPortion()
com.google.firebase.database.core.persistence.NoopPersistenceManager: void setQueryComplete(com.google.firebase.database.core.view.QuerySpec)
androidx.fragment.app.FragmentStateManager: void setFragmentManagerState(int)
io.flutter.plugins.googlemaps.PolygonBuilder: void setGeodesic(boolean)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: java.lang.Integer inputActionFromTextInputAction(java.lang.String)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setCustomView(android.view.View)
kotlin.Result: boolean isFailure-impl(java.lang.Object)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.util.List access$300(io.flutter.plugins.pathprovider.PathProviderPlugin)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: boolean onForwardingStopped()
kotlinx.coroutines.scheduling.NonBlockingContext: int getTaskMode()
io.flutter.plugins.googlemaps.GoogleMapsPlugin: GoogleMapsPlugin()
io.flutter.embedding.engine.systemchannels.KeyEventChannel: void sendFlutterKeyEvent(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent,boolean,io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler)
androidx.appcompat.widget.ToolbarWidgetWrapper: int getNavigationMode()
com.google.firebase.database.android.SqlPersistenceStorageEngine$2: java.lang.Void onNodeValue(com.google.firebase.database.core.Path,java.lang.Void,java.lang.Void)
com.google.firebase.database.core.operation.Merge: com.google.firebase.database.core.CompoundWrite getChildren()
androidx.collection.ArraySet: void ensureCapacity(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setHotspotBounds(int,int,int,int)
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(int,int)
androidx.appcompat.view.menu.MenuBuilder: boolean performShortcut(int,android.view.KeyEvent,int)
androidx.window.embedding.SplitPairRule: java.util.Set getFilters()
com.google.firebase.database.tubesock.WebSocketWriter$1: void run()
com.google.zxing.oned.rss.expanded.decoders.AI013103decoder: int checkWeight(int)
io.flutter.plugins.firebase.database.ChildEventsProxy: void onChildRemoved(com.google.firebase.database.DataSnapshot)
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.fragment.app.Fragment: int hashCode()
androidx.window.layout.SidecarCompat: SidecarCompat(androidx.window.sidecar.SidecarInterface,androidx.window.layout.SidecarAdapter)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
com.google.android.gms.internal.location.zzax: void onLocationChanged(android.location.Location)
com.google.android.gms.internal.location.zzav: zzav(com.google.android.gms.internal.location.zzat,com.google.android.gms.location.LocationAvailability)
io.flutter.embedding.android.FlutterImageView: void onSizeChanged(int,int,int,int)
io.flutter.plugins.googlemaps.GoogleMapController: void setTrackCameraPosition(boolean)
com.google.firebase.database.Query: com.google.firebase.database.Query startAt(double,java.lang.String)
com.google.zxing.maxicode.decoder.DecodedBitStreamParser: com.google.zxing.common.DecoderResult decode(byte[],int)
androidx.window.layout.SidecarCompat: void unregisterComponentCallback(android.app.Activity)
androidx.appcompat.widget.SearchView$6: boolean onKey(android.view.View,int,android.view.KeyEvent)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: boolean isStateful()
androidx.core.view.ActionProvider: void reset()
com.google.android.gms.maps.model.Polygon: void setZIndex(float)
androidx.core.app.Person: java.lang.String getKey()
androidx.collection.LruCache: java.lang.Object create(java.lang.Object)
com.google.android.gms.maps.model.PatternItem: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setScrollGesturesEnabled(boolean)
kotlin.coroutines.ContinuationInterceptor$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key)
com.google.firebase.database.core.SyncTree: java.util.Map access$800(com.google.firebase.database.core.SyncTree)
androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumWidth()
androidx.appcompat.app.AlertController$1: AlertController$1(androidx.appcompat.app.AlertController)
com.google.firebase.database.collection.ArraySortedMap: int findKeyOrInsertPosition(java.lang.Object)
androidx.window.layout.SidecarCompat: void registerConfigurationChangeListener(android.app.Activity)
androidx.appcompat.view.menu.MenuPopupHelper: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
androidx.appcompat.widget.AppCompatSpinner$2: void onGlobalLayout()
androidx.lifecycle.SavedStateHandleController: boolean isAttached()
com.google.android.gms.internal.location.zzav: void notifyListener(java.lang.Object)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
kotlinx.coroutines.channels.ConflatedChannel: boolean isBufferEmpty()
com.google.android.gms.location.LocationRequest: com.google.android.gms.location.LocationRequest setPriority(int)
androidx.appcompat.widget.RtlSpacingHelper: void setDirection(boolean)
androidx.core.view.inputmethod.EditorInfoCompat: boolean isCutOnSurrogate(java.lang.CharSequence,int,int)
androidx.appcompat.app.AlertController: void installContent()
com.google.android.gms.maps.model.Marker: void showInfoWindow()
androidx.core.content.FileProvider: FileProvider()
androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.view.TextureRegistry access$700(io.flutter.plugin.platform.PlatformViewsController)
androidx.collection.MapCollections$KeySet: boolean equals(java.lang.Object)
com.google.firebase.database.core.Repo$TransactionData: int access$2100(com.google.firebase.database.core.Repo$TransactionData)
androidx.appcompat.widget.SearchView$SearchAutoComplete$1: SearchView$SearchAutoComplete$1(androidx.appcompat.widget.SearchView$SearchAutoComplete)
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: SearchView$UpdatableTouchDelegate(android.graphics.Rect,android.graphics.Rect,android.view.View)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(int)
kotlinx.coroutines.InvokeOnCancel: java.lang.String toString()
com.google.firebase.database.connection.WebsocketConnection: void shutdown()
androidx.appcompat.view.menu.ActionMenuItem: int getAlphabeticModifiers()
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: void onActionProviderVisibilityChanged(boolean)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(java.lang.CharSequence)
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
kotlin.text.StringsKt___StringsKt: java.lang.String drop(java.lang.String,int)
androidx.fragment.app.FragmentManagerViewModel: void removeRetainedFragment(androidx.fragment.app.Fragment)
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock$4: void run()
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$5300(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugins.googlemaps.GoogleMapController: void setInitialPolygons(java.lang.Object)
androidx.appcompat.widget.MenuPopupWindow: void setEnterTransition(java.lang.Object)
io.flutter.plugin.platform.PlatformPlugin$1: void setApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureFinalizerRunnable: void run()
androidx.exifinterface.media.ExifInterface$ExifAttribute: java.lang.String getStringValue(java.nio.ByteOrder)
androidx.core.graphics.drawable.IconCompat: IconCompat()
androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean isEmpty()
com.google.zxing.qrcode.detector.AlignmentPattern: AlignmentPattern(float,float,float)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void setLastInfo(java.util.List)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void zaa(com.google.android.gms.common.api.internal.GoogleApiManager$zac)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: boolean dispatch(android.view.View,android.view.KeyEvent)
com.google.android.gms.common.zzc: void zza(android.content.Context)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setState(int[])
androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)
com.google.android.gms.common.api.internal.BasePendingResult$zaa: BasePendingResult$zaa(com.google.android.gms.common.api.internal.BasePendingResult)
kotlin.coroutines.jvm.internal.ModuleNameRetriever: java.lang.String getModuleName(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
com.journeyapps.barcodescanner.BarcodeResult: com.google.zxing.BarcodeFormat getBarcodeFormat()
kotlinx.coroutines.ChildHandleNode: java.lang.Object invoke(java.lang.Object)
com.google.firebase.database.core.utilities.DefaultRunLoop: java.util.concurrent.ThreadFactory getThreadFactory()
kotlinx.coroutines.ChildHandleNode: kotlinx.coroutines.Job getParent()
io.flutter.embedding.android.FlutterView$1: FlutterView$1(io.flutter.embedding.android.FlutterView)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
com.google.android.gms.maps.model.TileOverlay: boolean isVisible()
androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean enoughToFilter()
com.google.android.gms.common.internal.zzc: java.lang.Object createFromParcel(android.os.Parcel)
com.google.zxing.pdf417.PDF417Reader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map)
androidx.core.app.NotificationCompat$Builder: NotificationCompat$Builder(android.content.Context)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: java.lang.Object getInputContentInfo()
androidx.appcompat.app.AppCompatActivity: void onTitleChanged(java.lang.CharSequence,int)
androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
androidx.cursoradapter.widget.ResourceCursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
androidx.fragment.app.Fragment: boolean isRemovingParent()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
com.google.zxing.common.reedsolomon.ReedSolomonDecoder: int[] findErrorMagnitudes(com.google.zxing.common.reedsolomon.GenericGFPoly,int[])
io.flutter.plugins.urllauncher.WebViewActivity: android.webkit.WebView access$000(io.flutter.plugins.urllauncher.WebViewActivity)
io.flutter.plugins.googlemaps.MarkersController: void onMarkerDrag(java.lang.String,com.google.android.gms.maps.model.LatLng)
com.google.android.gms.maps.MapView: void onStart()
com.google.android.gms.maps.model.LatLng: boolean equals(java.lang.Object)
com.google.firebase.database.snapshot.KeyIndex: int compare(com.google.firebase.database.snapshot.NamedNode,com.google.firebase.database.snapshot.NamedNode)
com.google.firebase.database.core.WriteTree: com.google.firebase.database.core.CompoundWrite layerTree(java.util.List,com.google.firebase.database.core.utilities.Predicate,com.google.firebase.database.core.Path)
androidx.appcompat.widget.ActionBarContextView: boolean isTitleOptional()
com.baseflow.geolocator.location.BackgroundNotification: android.app.Notification build()
com.google.zxing.pdf417.decoder.Codeword: int getWidth()
io.flutter.embedding.engine.renderer.FlutterRenderer: void swapSurface(android.view.Surface)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
com.google.android.gms.common.internal.ClientSettings: java.util.Set getRequiredScopes()
androidx.fragment.app.FragmentTransition: void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
androidx.appcompat.view.menu.MenuItemImpl: android.view.ActionProvider getActionProvider()
androidx.collection.ArraySet: java.lang.Object[] toArray()
com.google.zxing.client.android.DecodeHintManager: java.util.Map parseDecodeHints(android.content.Intent)
com.google.zxing.qrcode.decoder.Version: int getVersionNumber()
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean nullableHasAncestor(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
com.google.android.gms.internal.maps.zzv: void setZIndex(float)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getResult()
com.google.android.gms.maps.GoogleMap: void setOnCameraMoveStartedListener(com.google.android.gms.maps.GoogleMap$OnCameraMoveStartedListener)
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onStart(androidx.lifecycle.LifecycleOwner)
io.flutter.plugins.googlemaps.Convert: double toDouble(java.lang.Object)
com.google.firebase.database.snapshot.BooleanNode: int hashCode()
androidx.exifinterface.media.ExifInterface: void saveAttributes()
com.google.firebase.database.core.ThreadInitializer$1: void setDaemon(java.lang.Thread,boolean)
com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs: AI01AndOtherAIs(com.google.zxing.common.BitArray)
com.google.android.gms.maps.model.SquareCap: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: java.lang.String getStackTrace(java.lang.Exception)
io.flutter.plugins.firebase.database.TransactionHandler: TransactionHandler(io.flutter.plugin.common.MethodChannel,int)
com.google.android.gms.internal.maps.zzy: void setHoles(java.util.List)
com.google.android.gms.maps.internal.zzg: com.google.android.gms.internal.maps.zzt addMarker(com.google.android.gms.maps.model.MarkerOptions)
com.google.firebase.database.util.JsonMapper: java.lang.Object unwrapJson(java.lang.Object)
com.google.zxing.common.detector.WhiteRectangleDetector: WhiteRectangleDetector(com.google.zxing.common.BitMatrix,int,int,int)
io.flutter.plugins.googlemaps.TileProviderController$Worker: com.google.android.gms.maps.model.Tile getTile()
io.flutter.plugins.firebase.database.FlutterDataSnapshotPayload: io.flutter.plugins.firebase.database.FlutterDataSnapshotPayload withAdditionalParams(java.util.Map)
com.google.firebase.database.core.SyncTree: java.util.List applyListenComplete(com.google.firebase.database.core.Path)
androidx.appcompat.app.ActionBar: boolean invalidateOptionsMenu()
androidx.core.content.ContextCompat: java.io.File[] getExternalCacheDirs(android.content.Context)
com.google.firebase.database.core.RepoManager$2: void run()
io.flutter.plugins.imagepicker.ExifDataCopier: ExifDataCopier()
kotlin.jvm.internal.Intrinsics: int compare(int,int)
com.google.android.gms.maps.model.Polyline: void setWidth(float)
io.flutter.embedding.android.FlutterView$3: FlutterView$3(io.flutter.embedding.android.FlutterView)
com.google.android.gms.common.api.Scope: Scope(int,java.lang.String)
com.google.firebase.database.core.SyncTree: java.util.List applyServerRangeMerges(com.google.firebase.database.core.Path,java.util.List)
kotlinx.coroutines.CompletedExceptionally: java.lang.String toString()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SettingsChannel getSettingsChannel()
com.google.zxing.pdf417.decoder.DetectionResultColumn: com.google.zxing.pdf417.decoder.BoundingBox getBoundingBox()
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createSLong(int[],java.nio.ByteOrder)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: FlutterFirebaseCoreRegistrar()
com.google.android.gms.maps.model.MapStyleOptions: MapStyleOptions(java.lang.String)
androidx.fragment.app.FragmentHostCallback: boolean onHasView()
androidx.activity.result.ActivityResultRegistry$LifecycleContainer: void clearObservers()
io.flutter.FlutterInjector: java.util.concurrent.ExecutorService executorService()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: int getChangingConfigurations()
com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder: AI01393xDecoder(com.google.zxing.common.BitArray)
kotlin.jvm.internal.Reflection: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)
com.google.zxing.oned.Code39Reader: java.lang.String decodeExtended(java.lang.CharSequence)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity)
androidx.appcompat.app.WindowDecorActionBar: android.content.Context getThemedContext()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
com.google.zxing.oned.rss.expanded.RSSExpandedReader: java.util.List decodeRow2pairs(int,com.google.zxing.common.BitArray)
com.google.zxing.datamatrix.decoder.BitMatrixParser: int readUtah(int,int,int,int)
androidx.appcompat.widget.TooltipCompatHandler: void onViewDetachedFromWindow(android.view.View)
io.flutter.plugins.googlemaps.CircleController: void setStrokeColor(int)
com.google.android.gms.location.FusedLocationProviderClient: com.google.android.gms.tasks.Task requestLocationUpdates(com.google.android.gms.location.LocationRequest,com.google.android.gms.location.LocationCallback,android.os.Looper)
androidx.arch.core.internal.SafeIterableMap: java.lang.String toString()
io.flutter.plugin.editing.TextInputPlugin: io.flutter.plugin.editing.TextInputPlugin$InputTarget access$100(io.flutter.plugin.editing.TextInputPlugin)
androidx.collection.ArraySet$1: java.util.Map colGetMap()
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPairPredicates$lambda-1(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
io.flutter.embedding.engine.loader.FlutterLoader$1: java.lang.Object call()
com.google.firebase.database.core.Repo$12: Repo$12(com.google.firebase.database.core.Repo,com.google.firebase.database.core.Path,java.util.Map,com.google.firebase.database.DatabaseReference$CompletionListener)
com.google.android.gms.common.internal.Objects$ToStringHelper: java.lang.String toString()
androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(androidx.fragment.app.Fragment)
com.google.firebase.database.snapshot.ChildrenNode: void forEachChild(com.google.firebase.database.snapshot.ChildrenNode$ChildVisitor,boolean)
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getTitle()
com.google.zxing.pdf417.decoder.BarcodeValue: void setValue(int)
androidx.activity.result.IntentSenderRequest: android.content.IntentSender getIntentSender()
com.google.firebase.database.android.AndroidPlatform$1$1: void run()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.signin.internal.zag: void zaa(com.google.android.gms.signin.internal.zai,com.google.android.gms.signin.internal.zac)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setShortcut(char,char)
io.flutter.embedding.android.FlutterActivity: java.lang.String getDartEntrypointFunctionName()
com.lyokone.location.MethodCallHandlerImpl: void setLocationService(com.lyokone.location.FlutterLocationService)
com.google.android.gms.common.api.internal.GoogleApiManager$zac: int hashCode()
com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
androidx.collection.MapCollections$KeySet: java.lang.Object[] toArray()
com.google.firebase.database.collection.RBTreeSortedMap: RBTreeSortedMap(com.google.firebase.database.collection.LLRBNode,java.util.Comparator,com.google.firebase.database.collection.RBTreeSortedMap$1)
kotlinx.coroutines.DispatchedTaskKt: void dispatch(kotlinx.coroutines.DispatchedTask,int)
com.google.firebase.database.Transaction$Result: boolean isSuccess()
kotlinx.coroutines.MainCoroutineDispatcher: java.lang.String toStringInternalImpl()
io.flutter.plugin.platform.PlatformViewsController: void detachTextInputPlugin()
com.google.firebase.database.collection.LLRBEmptyNode: com.google.firebase.database.collection.LLRBNode getRight()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
io.flutter.embedding.android.FlutterView: void onProvideAutofillVirtualStructure(android.view.ViewStructure,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: void setExclusiveCheckable(boolean)
com.google.firebase.components.ComponentRuntime: void processDependencies()
com.google.firebase.database.DatabaseReference$4: DatabaseReference$4(com.google.firebase.database.DatabaseReference,com.google.firebase.database.Transaction$Handler,boolean)
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation: DecodedInformation(int,java.lang.String,int)
androidx.appcompat.widget.ResourcesWrapper: java.lang.CharSequence getText(int)
com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastN()
com.google.android.gms.common.api.internal.LifecycleCallback: void onStop()
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.dart.DartExecutor getDartExecutor()
com.google.android.gms.common.ErrorDialogFragment: ErrorDialogFragment()
com.journeyapps.barcodescanner.DecoratedBarcodeView: void setDecoderFactory(com.journeyapps.barcodescanner.DecoderFactory)
com.google.zxing.oned.UPCEReader: int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder)
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.fragment.app.DialogFragment$1: void run()
com.google.android.gms.common.api.internal.BasePendingResult: boolean isReady()
androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,boolean)
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener: androidx.appcompat.view.menu.ShowableListMenu getPopup()
com.journeyapps.barcodescanner.camera.CameraInstance: android.os.Handler access$300(com.journeyapps.barcodescanner.camera.CameraInstance)
androidx.appcompat.widget.ListPopupWindow: void removePromptView()
com.google.android.gms.maps.model.LatLng: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.common.internal.zzf: zzf(com.google.android.gms.common.internal.zze,com.google.android.gms.common.internal.GmsClientSupervisor$zza)
androidx.appcompat.widget.ResourceManagerInternal: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
com.google.zxing.BinaryBitmap: java.lang.String toString()
androidx.exifinterface.media.ExifInterface: boolean isHeifFormat(byte[])
io.flutter.plugins.imagepicker.ImagePickerDelegate: void handleChooseMultiImageResult(int,android.content.Intent)
kotlin.collections.SetsKt__SetsKt: java.util.Set emptySet()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performEditorAction(int)
com.google.zxing.datamatrix.decoder.BitMatrixParser: boolean readModule(int,int,int,int)
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback)
androidx.fragment.app.FragmentTransition: android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean)
androidx.core.widget.NestedScrollView: void addView(android.view.View)
com.google.firebase.database.core.utilities.ImmutableTree: com.google.firebase.database.core.utilities.ImmutableTree remove(com.google.firebase.database.core.Path)
androidx.multidex.MultiDex: void expandFieldArray(java.lang.Object,java.lang.String,java.lang.Object[])
com.baseflow.geolocator.errors.PermissionUndefinedException: PermissionUndefinedException()
com.google.android.gms.location.LocationResult: int hashCode()
io.flutter.plugins.googlemaps.GoogleMapController: void onCameraMoveStarted(int)
kotlin.text.StringsKt__StringsKt: java.util.List lines(java.lang.CharSequence)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setEnabled(boolean)
com.google.android.gms.maps.model.MarkerOptions: boolean isVisible()
androidx.activity.OnBackPressedCallback: void removeCancellable(androidx.activity.Cancellable)
androidx.exifinterface.media.ExifInterface: boolean isSupportedDataType(java.util.HashMap)
androidx.appcompat.app.AppCompatDelegateImpl: void onDestroy()
kotlin.collections.EmptyMap: void putAll(java.util.Map)
io.flutter.plugins.googlemaps.Convert: boolean toBoolean(java.lang.Object)
com.google.android.gms.internal.location.zzay: zzay(com.google.android.gms.internal.location.zzax,android.location.Location)
com.google.firebase.database.collection.StandardComparator: com.google.firebase.database.collection.StandardComparator getComparator(java.lang.Class)
androidx.appcompat.widget.Toolbar: void addChildrenForExpandedActionView()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo()
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
io.flutter.plugin.platform.PlatformPlugin: void access$200(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
com.google.firebase.database.core.SyncTree$6: java.lang.Object call()
com.google.zxing.common.BitArray: BitArray(int)
androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentManagerViewModel getNonConfig()
androidx.appcompat.view.menu.MenuDialogHelper: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: int describeContents()
io.flutter.plugin.editing.TextInputPlugin: void clearPlatformViewClient(int)
androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object remove(java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl$6$1: AppCompatDelegateImpl$6$1(androidx.appcompat.app.AppCompatDelegateImpl$6)
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: java.lang.String toString()
com.google.firebase.database.core.persistence.TrackedQuery: com.google.firebase.database.core.persistence.TrackedQuery updateLastUse(long)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
com.google.firebase.database.core.view.Change: com.google.firebase.database.core.view.Change childAddedChange(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.IndexedNode)
androidx.core.graphics.TypefaceCompatApi26Impl: boolean freeze(java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder: boolean isQwertyMode()
com.google.firebase.database.core.WriteTree: com.google.firebase.database.snapshot.Node calcEventCacheAfterServerOverwrite(com.google.firebase.database.core.Path,com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node,com.google.firebase.database.snapshot.Node)
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: void onLaunch(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
androidx.exifinterface.media.ExifInterface: void copy(java.io.InputStream,java.io.OutputStream,int)
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: ThreadContextKt$updateState$1()
androidx.appcompat.graphics.drawable.DrawableWrapper: void onBoundsChange(android.graphics.Rect)
androidx.core.provider.FontProvider: androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal)
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
io.flutter.view.AccessibilityBridge$SemanticsNode: void updateWith(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
androidx.appcompat.graphics.drawable.StateListDrawable: StateListDrawable(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState)
com.lyokone.location.FlutterLocationService: io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener getServiceRequestPermissionsResultListener()
androidx.activity.result.ActivityResultRegistry$3: void unregister()
kotlinx.coroutines.internal.ArrayQueue: ArrayQueue()
com.google.android.gms.common.internal.BaseGmsClient: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)
com.google.firebase.database.collection.LLRBBlackValueNode: void setLeft(com.google.firebase.database.collection.LLRBNode)
com.google.firebase.database.snapshot.CompoundHash: com.google.firebase.database.snapshot.CompoundHash fromNode(com.google.firebase.database.snapshot.Node)
androidx.appcompat.widget.ActionBarBackgroundDrawable: ActionBarBackgroundDrawable(androidx.appcompat.widget.ActionBarContainer)
androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean isStateful()
androidx.appcompat.widget.ScrollingTabContainerView$1: ScrollingTabContainerView$1(androidx.appcompat.widget.ScrollingTabContainerView,android.view.View)
com.google.zxing.common.BitArray: java.lang.Object clone()
androidx.appcompat.widget.LinearLayoutCompat: void onDraw(android.graphics.Canvas)
io.flutter.plugins.googlemaps.PolygonsController: void setGoogleMap(com.google.android.gms.maps.GoogleMap)
io.flutter.plugins.googlemaps.Convert: com.google.android.gms.maps.model.BitmapDescriptor toBitmapDescriptor(java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: boolean collapseActionView()
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.String toString()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void clearAutoSizeConfiguration()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.app.AppCompatDelegateImpl: void initWindowDecorActionBar()
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
com.journeyapps.barcodescanner.DecoratedBarcodeView: void decodeSingle(com.journeyapps.barcodescanner.BarcodeCallback)
androidx.window.layout.WindowMetrics: android.graphics.Rect getBounds()
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)
com.google.android.gms.auth.api.signin.zab: zab()
io.flutter.plugin.common.MethodCall: boolean hasArgument(java.lang.String)
androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onNestedPreFling(android.view.View,float,float)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingStateWithTag(int,java.util.HashMap)
com.google.firebase.database.core.WriteTree: com.google.firebase.database.snapshot.Node calcCompleteEventChildren(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.MenuWrapperICS: void removeGroup(int)
io.flutter.plugins.urllauncher.UrlLauncher: UrlLauncher(android.content.Context,android.app.Activity)
com.google.zxing.oned.ITFReader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
androidx.appcompat.app.AppCompatActivity: android.content.Intent getSupportParentActivityIntent()
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker()
com.google.firebase.database.core.SparseSnapshotTree: boolean forget(com.google.firebase.database.core.Path)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
kotlin.coroutines.ContinuationInterceptor$Key: ContinuationInterceptor$Key()
kotlinx.coroutines.internal.DispatchedContinuationKt: void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void updateCacheStates()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: java.lang.Object parseResult(int,android.content.Intent)
androidx.appcompat.app.AppCompatDelegateImpl$Api26Impl: void generateConfigDelta_colorMode(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)
io.flutter.embedding.android.FlutterSurfaceView$2: FlutterSurfaceView$2(io.flutter.embedding.android.FlutterSurfaceView)
androidx.window.core.Version$bigInteger$2: java.lang.Object invoke()
com.google.firebase.database.snapshot.ChildKey: java.lang.String asString()
com.google.android.gms.dynamite.zzc: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$zzb zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$zza)
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: OnBackPressedDispatcher$LifecycleOnBackPressedCancellable(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)
com.google.firebase.database.FirebaseDatabase: void purgeOutstandingWrites()
com.google.firebase.database.MutableData: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.MenuWrapperICS: boolean performShortcut(int,android.view.KeyEvent,int)
com.google.firebase.database.android.SqlPersistenceStorageEngine: int saveNested(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node)
androidx.appcompat.view.menu.MenuWrapperICS: void close()
androidx.appcompat.app.AppCompatDelegateImpl$6$1: void onAnimationEnd(android.view.View)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: FlutterRenderer$DisplayFeatureState(java.lang.String,int,int)
androidx.collection.MapCollections$MapIterator: java.lang.Object next()
io.flutter.plugins.googlemaps.PolylineBuilder: void setEndCap(com.google.android.gms.maps.model.Cap)
androidx.appcompat.app.ResourcesFlusher: void flushMarshmallows(android.content.res.Resources)
androidx.collection.MapCollections: java.util.Collection getValues()
com.google.firebase.database.collection.RBTreeSortedMap$Builder: com.google.firebase.database.collection.RBTreeSortedMap buildFrom(java.util.List,java.util.Map,com.google.firebase.database.collection.ImmutableSortedMap$Builder$KeyTranslator,java.util.Comparator)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean expandActionView()
com.google.android.gms.maps.model.Circle: void setVisible(boolean)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean tryCreateWorker(long)
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.database.Query: com.google.firebase.database.Query startAfter(com.google.firebase.database.snapshot.Node,java.lang.String)
io.flutter.embedding.engine.FlutterJNI$Factory: io.flutter.embedding.engine.FlutterJNI provideFlutterJNI()
androidx.fragment.app.FragmentStateManager: void start()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
com.google.firebase.database.Query: com.google.firebase.database.Query endBefore(double)
com.google.firebase.database.connection.PersistentConnectionImpl: void sendUnlisten(com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingListen)
androidx.appcompat.widget.ActionMenuView: void onDetachedFromWindow()
kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object success-JP2dKIU(java.lang.Object)
com.google.android.gms.common.api.internal.ListenerHolder: void clear()
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock$3: WebsocketConnection$WSClientTubesock$3(com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock)
com.google.android.gms.tasks.Tasks: java.lang.Object await(com.google.android.gms.tasks.Task)
kotlin.text.DelimitedRangesSequence$iterator$1: void calcNext()
io.flutter.plugins.imagepicker.ImagePickerDelegate: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: int hashCode()
com.google.android.gms.location.zzn: void registerListener(com.google.android.gms.common.api.Api$AnyClient,com.google.android.gms.tasks.TaskCompletionSource)
androidx.fragment.app.SpecialEffectsController$Operation: void completeSpecialEffect(androidx.core.os.CancellationSignal)
com.google.android.gms.maps.model.VisibleRegion: void writeToParcel(android.os.Parcel,int)
io.flutter.Log: void e(java.lang.String,java.lang.String)
androidx.appcompat.widget.ListPopupWindow: void setAdapter(android.widget.ListAdapter)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: void setHeap(kotlinx.coroutines.internal.ThreadSafeHeap)
com.journeyapps.barcodescanner.DecoderThread$2: void onPreviewError(java.lang.Exception)
androidx.window.layout.WindowInfoTracker$Companion: void reset()
com.journeyapps.barcodescanner.camera.AutoFocusManager$2: void onAutoFocus(boolean,android.hardware.Camera)
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException getCancellationException()
net.touchcapture.qr.flutterqr.QRView$startScan$2: void possibleResultPoints(java.util.List)
androidx.fragment.app.FragmentManager$7: void onAnimationEnd(android.animation.Animator)
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
androidx.appcompat.widget.ToolbarWidgetWrapper$1: ToolbarWidgetWrapper$1(androidx.appcompat.widget.ToolbarWidgetWrapper)
androidx.appcompat.widget.ForwardingListener: void onViewAttachedToWindow(android.view.View)
com.google.zxing.FormatException: FormatException()
androidx.appcompat.app.AppCompatActivity$1: android.os.Bundle saveState()
com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: void putThread(com.google.common.util.concurrent.AbstractFuture$Waiter,java.lang.Thread)
androidx.fragment.app.FragmentManager$8: void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
com.google.android.gms.maps.model.zzi: zzi()
androidx.window.layout.ActivityCompatHelperApi24: ActivityCompatHelperApi24()
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String getId()
com.google.zxing.common.GlobalHistogramBinarizer: com.google.zxing.common.BitArray getBlackRow(int,com.google.zxing.common.BitArray)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int)
androidx.core.provider.CalleeHandler: android.os.Handler create()
kotlin.jvm.internal.PackageReference: PackageReference(java.lang.Class,java.lang.String)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
com.google.zxing.oned.rss.RSS14Reader: com.google.zxing.oned.rss.FinderPattern parseFoundFinderPattern(com.google.zxing.common.BitArray,int,boolean,int[])
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.app.AppCompatDelegateImpl$1: void uncaughtException(java.lang.Thread,java.lang.Throwable)
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn: boolean isLeft()
io.flutter.plugins.googlemaps.PolylineController: void setPattern(java.util.List)
com.journeyapps.barcodescanner.camera.AutoFocusManager$1: boolean handleMessage(android.os.Message)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
androidx.core.widget.NestedScrollView: boolean onTouchEvent(android.view.MotionEvent)
kotlinx.coroutines.CancellableContinuationImpl: void resumeWith(java.lang.Object)
net.touchcapture.qr.flutterqr.QRView: boolean hasBackCamera()
androidx.lifecycle.LiveData$LifecycleBoundObserver: boolean shouldBeActive()
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1: java.lang.Object prepare(java.lang.Object)
com.google.zxing.aztec.detector.Detector: com.google.zxing.ResultPoint[] getBullsEyeCorners(com.google.zxing.aztec.detector.Detector$Point)
com.google.android.gms.maps.model.Circle: void setZIndex(float)
androidx.multidex.MultiDexExtractor: void closeQuietly(java.io.Closeable)
net.touchcapture.qr.flutterqr.QRView: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
kotlin.collections.EmptySet: boolean addAll(java.util.Collection)
androidx.core.provider.RequestExecutor$ReplyRunnable$1: RequestExecutor$ReplyRunnable$1(androidx.core.provider.RequestExecutor$ReplyRunnable,androidx.core.util.Consumer,java.lang.Object)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: boolean setVisible(boolean,boolean)
com.google.firebase.database.util.GAuthToken: com.google.firebase.database.util.GAuthToken tryParseFromString(java.lang.String)
com.google.firebase.database.core.utilities.ImmutableTree$1: java.lang.Void onNodeValue(com.google.firebase.database.core.Path,java.lang.Object,java.lang.Void)
androidx.fragment.app.FragmentAnim$2: void onAnimationRepeat(android.view.animation.Animation)
com.google.firebase.database.core.persistence.TrackedQueryManager: com.google.firebase.database.core.view.QuerySpec normalizeQuery(com.google.firebase.database.core.view.QuerySpec)
androidx.activity.OnBackPressedCallback: OnBackPressedCallback(boolean)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface findFromCache(android.content.res.Resources,int,int)
com.google.firebase.database.core.view.QueryParams: java.lang.String toJSON()
com.baseflow.geolocator.permission.PermissionManager: void requestPermission(android.app.Activity,com.baseflow.geolocator.permission.PermissionResultCallback,com.baseflow.geolocator.errors.ErrorCallback)
com.google.common.util.concurrent.AbstractFuture$Waiter: AbstractFuture$Waiter()
androidx.window.embedding.EmbeddingAdapter: boolean translateIntentPredicates$lambda-8(java.util.Set,android.content.Intent)
io.flutter.embedding.android.FlutterSurfaceView: void init()
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: ErrorCorrectionLevel(java.lang.String,int,int)
com.google.firebase.database.connection.PersistentConnectionImpl$QuerySpec: PersistentConnectionImpl$QuerySpec(java.util.List,java.util.Map)
androidx.versionedparcelable.VersionedParcelParcel: void closeField()
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean isOverflowMenuShowing()
com.google.firebase.database.Query: void removeEventRegistration(com.google.firebase.database.core.EventRegistration)
androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingListen: com.google.firebase.database.connection.PersistentConnectionImpl$QuerySpec getQuery()
kotlin.KotlinVersionCurrentValue: KotlinVersionCurrentValue()
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.PolylineOptions pattern(java.util.List)
io.flutter.embedding.android.RenderMode: RenderMode(java.lang.String,int)
androidx.core.widget.NestedScrollView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.TintTypedArray: android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback)
io.flutter.plugins.googlemaps.GoogleMapController: void onStart(androidx.lifecycle.LifecycleOwner)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getParent()
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()
androidx.collection.ArraySet: int indexOfNull()
com.google.firebase.database.core.utilities.Tree$1: Tree$1(com.google.firebase.database.core.utilities.Tree,com.google.firebase.database.core.utilities.Tree$TreeVisitor,boolean)
com.google.firebase.database.connection.PersistentConnectionImpl: void refreshAppCheckToken(java.lang.String)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable getCurrent()
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: kotlinx.coroutines.ExecutorCoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element)
com.google.android.gms.common.api.internal.zaz: void zaa(com.google.android.gms.common.api.internal.BasePendingResult,boolean)
com.google.zxing.pdf417.decoder.Codeword: void setRowNumber(int)
androidx.appcompat.widget.AppCompatImageHelper: boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable)
com.google.android.gms.common.api.internal.GoogleApiManager$zac: GoogleApiManager$zac(com.google.android.gms.common.api.internal.ApiKey,com.google.android.gms.common.Feature,com.google.android.gms.common.api.internal.zabh)
com.google.firebase.database.core.ValidationPath: java.lang.String toErrorString()
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.ResourceExtractor access$000(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context)
com.google.android.gms.common.api.internal.zza: int zza(com.google.android.gms.common.api.internal.zza)
com.google.firebase.database.core.view.QueryParams: com.google.firebase.database.snapshot.ChildKey getIndexStartName()
androidx.appcompat.widget.AppCompatProgressBarHelper: void loadFromAttributes(android.util.AttributeSet,int)
com.google.firebase.database.snapshot.EmptyNode: boolean isEmpty()
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.Bitmap getSampleTile()
com.google.firebase.database.collection.ImmutableSortedSet$WrappedEntryIterator: boolean hasNext()
com.google.firebase.database.snapshot.LeafNode: java.lang.String getHash()
com.google.firebase.database.core.persistence.DefaultPersistenceManager: void applyUserWriteToServerCache(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node)
com.lyokone.location.FlutterLocationService: boolean onUnbind(android.content.Intent)
androidx.exifinterface.media.ExifInterface$ExifAttribute: ExifInterface$ExifAttribute(int,int,byte[])
com.google.zxing.pdf417.decoder.DecodedBitStreamParser: void decodeTextCompaction(int[],int[],int,java.lang.StringBuilder)
androidx.activity.result.ActivityResultLauncher: ActivityResultLauncher()
com.google.zxing.oned.Code93Reader: int[] findAsteriskPattern(com.google.zxing.common.BitArray)
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void onDetachedFromActivity()
androidx.appcompat.widget.ListPopupWindow: void clearListSelection()
androidx.appcompat.view.menu.ListMenuItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
androidx.appcompat.app.AlertController$AlertParams$1: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.google.zxing.aztec.detector.Detector: int getCorrectedParameterData(long,boolean)
kotlinx.coroutines.CoroutineId: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.String)
com.google.zxing.qrcode.detector.FinderPattern: float getEstimatedModuleSize()
androidx.fragment.app.FragmentTransitionCompat21: void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList)
com.journeyapps.barcodescanner.DecoratedBarcodeView$WrappedCallback: void possibleResultPoints(java.util.List)
com.google.zxing.pdf417.decoder.BoundingBox: int getMaxX()
kotlinx.coroutines.AbstractCoroutine: kotlin.coroutines.CoroutineContext getContext()
androidx.core.app.NotificationManagerCompat$NotifyTask: NotificationManagerCompat$NotifyTask(java.lang.String,int,java.lang.String,android.app.Notification)
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBValueNode rotateLeft()
kotlinx.coroutines.EventLoopImplPlatform: void reschedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask)
com.google.android.gms.signin.internal.zab: zab(int,android.content.Intent)
androidx.arch.core.executor.ArchTaskExecutor$2: void execute(java.lang.Runnable)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void close()
androidx.core.widget.AutoScrollHelper$ClampedScroller: void setRampDownDuration(int)
androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.google.zxing.oned.MultiFormatUPCEANReader: MultiFormatUPCEANReader(java.util.Map)
com.google.firebase.database.connection.WebsocketConnection: void open()
androidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)
androidx.multidex.MultiDex$V14$JBMR11ElementConstructor: java.lang.Object newInstance(java.io.File,dalvik.system.DexFile)
com.google.firebase.database.snapshot.BooleanNode: BooleanNode(java.lang.Boolean,com.google.firebase.database.snapshot.Node)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
androidx.appcompat.widget.AppCompatImageHelper: boolean shouldApplyFrameworkTintUsingColorFilter()
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: void send()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setStateDescription(java.lang.CharSequence)
androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: void decodeBase256Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder,java.util.Collection)
net.touchcapture.qr.flutterqr.FlutterQrPlugin: void onDetachedFromActivityForConfigChanges()
androidx.appcompat.widget.AppCompatTextHelper: int[] getAutoSizeTextAvailableSizes()
io.flutter.plugins.imagepicker.ImagePickerDelegate: void takeImageWithCamera(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.ToolbarWidgetWrapper: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
com.google.android.gms.maps.model.zza: zza()
io.flutter.plugins.googlemaps.MarkerBuilder: com.google.android.gms.maps.model.MarkerOptions build()
io.flutter.view.VsyncWaiter: io.flutter.embedding.engine.FlutterJNI access$100(io.flutter.view.VsyncWaiter)
com.google.zxing.qrcode.decoder.FormatInformation: int numBitsDiffering(int,int)
kotlinx.coroutines.CancelHandlerBase: CancelHandlerBase()
com.google.zxing.pdf417.PDF417ResultMetadata: void setSegmentCount(int)
androidx.core.view.WindowInsetsCompat$Builder: WindowInsetsCompat$Builder(androidx.core.view.WindowInsetsCompat)
com.google.android.gms.common.api.internal.zabq: void zac(android.content.Context)
io.flutter.plugin.platform.PlatformViewsController: PlatformViewsController()
androidx.appcompat.widget.AppCompatImageView: void drawableStateChanged()
androidx.collection.MapCollections$EntrySet: java.lang.Object[] toArray()
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: boolean onMenuItemActionCollapse(android.view.MenuItem)
androidx.fragment.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)
io.flutter.plugins.imagepicker.ImagePickerCache: void saveTypeWithMethodCallName(java.lang.String)
androidx.core.view.NestedScrollingChildHelper: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)
com.google.zxing.pdf417.decoder.PDF417CodewordDecoder: int getDecodedValue(int[])
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
kotlinx.coroutines.flow.internal.SafeCollector: SafeCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext)
androidx.appcompat.view.WindowCallbackWrapper: WindowCallbackWrapper(android.view.Window$Callback)
io.flutter.plugins.googlemaps.GoogleMapController: void onResume(androidx.lifecycle.LifecycleOwner)
androidx.core.graphics.Insets: androidx.core.graphics.Insets max(androidx.core.graphics.Insets,androidx.core.graphics.Insets)
androidx.fragment.app.FragmentManager: java.util.Map access$100(androidx.fragment.app.FragmentManager)
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.BinaryMessenger access$400(io.flutter.plugin.common.EventChannel)
com.google.firebase.database.core.Context: void freeze()
androidx.appcompat.app.AlertController$2: AlertController$2(androidx.appcompat.app.AlertController,android.view.View,android.view.View)
com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: void putNext(com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter)
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)
com.google.firebase.database.core.SyncTree$16: void visitEntry(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.core.utilities.ImmutableTree)
androidx.appcompat.widget.TooltipPopup: void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)
com.google.firebase.database.tubesock.WebSocket: void setEventHandler(com.google.firebase.database.tubesock.WebSocketEventHandler)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] $values()
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isChecked()
com.google.firebase.database.core.persistence.PruneForest$3: PruneForest$3(com.google.firebase.database.core.persistence.PruneForest,com.google.firebase.database.core.utilities.ImmutableTree$TreeVisitor)
com.google.firebase.database.tubesock.WebSocketHandshake: WebSocketHandshake(java.net.URI,java.lang.String,java.util.Map)
kotlinx.coroutines.CoroutineName: int hashCode()
kotlinx.coroutines.JobSupport: void access$continueCompleting(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
androidx.appcompat.app.AlertController$3: AlertController$3(androidx.appcompat.app.AlertController,android.view.View,android.view.View)
com.baseflow.geolocator.location.LocationManagerClient: void onLocationChanged(android.location.Location)
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1: SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1(java.util.Iterator)
com.google.firebase.database.DatabaseError: com.google.firebase.database.DatabaseError fromException(java.lang.Throwable)
com.google.firebase.database.android.AndroidAuthTokenProvider: AndroidAuthTokenProvider(com.google.firebase.inject.Deferred)
com.google.android.gms.maps.model.PolygonOptions: int getStrokeColor()
com.google.android.gms.common.api.internal.GoogleApiManager: boolean handleMessage(android.os.Message)
kotlin.jvm.internal.FunctionReference: boolean isInfix()
androidx.collection.ArraySet: boolean retainAll(java.util.Collection)
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty()
androidx.activity.ComponentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()
androidx.fragment.app.FragmentManager: boolean popBackStackImmediate(java.lang.String,int,int)
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: FlutterFirebaseCorePlugin()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewDetachedFromWindow(android.view.View)
androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.core.provider.CallbackWithHandler: void onTypefaceRequestFailed(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int findLargestTextSizeWhichFits(android.graphics.RectF)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean hasSubMenu()
com.google.zxing.qrcode.decoder.DataMask$8: boolean isMasked(int,int)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setColorFilter(int,android.graphics.PorterDuff$Mode)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
com.google.firebase.database.android.SqlPersistenceStorageEngine: java.util.List splitBytes(byte[],int)
net.touchcapture.qr.flutterqr.QRView: boolean hasFrontCamera()
com.google.firebase.database.snapshot.CompoundHash$SimpleSizeSplitStrategy: CompoundHash$SimpleSizeSplitStrategy(com.google.firebase.database.snapshot.Node)
androidx.appcompat.view.SupportMenuInflater$MenuState: android.view.SubMenu addSubMenuItem()
androidx.fragment.app.DefaultSpecialEffectsController$4: void onAnimationEnd(android.view.animation.Animation)
com.journeyapps.barcodescanner.CameraPreview$5: void previewStopped()
io.flutter.view.VsyncWaiter$DisplayListener: void register()
androidx.core.view.OneShotPreDrawListener: void onViewDetachedFromWindow(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
com.google.android.gms.common.api.internal.zabh: void onBackgroundStateChanged(boolean)
com.google.android.gms.maps.GoogleMap: com.google.android.gms.maps.model.Polygon addPolygon(com.google.android.gms.maps.model.PolygonOptions)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.core.provider.FontsContractCompat$FontInfo: FontsContractCompat$FontInfo(android.net.Uri,int,int,boolean,int)
com.google.android.gms.internal.base.zad: zad()
androidx.appcompat.view.menu.MenuBuilder: android.content.res.Resources getResources()
androidx.appcompat.app.AppCompatDelegateImpl: boolean isHandleNativeActionModesEnabled()
androidx.appcompat.widget.MenuPopupWindow: MenuPopupWindow(android.content.Context,android.util.AttributeSet,int,int)
androidx.fragment.app.Fragment: android.view.View requireView()
androidx.appcompat.widget.ActionBarOverlayLayout: void onLayout(boolean,int,int,int,int)
io.flutter.plugins.googlemaps.Convert: java.lang.Object latlngBoundsToJson(com.google.android.gms.maps.model.LatLngBounds)
com.google.firebase.database.DatabaseRegistrar: java.util.List getComponents()
com.google.android.gms.common.internal.zam: zam()
com.google.firebase.database.core.persistence.LRUCachePolicy: boolean shouldCheckCacheSize(long)
kotlinx.coroutines.CommonPool: java.util.concurrent.Executor getOrCreatePoolSync()
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.android.HandlerContext createDispatcher(java.util.List)
com.google.android.gms.common.api.internal.zaz: void zaa(com.google.android.gms.tasks.TaskCompletionSource,boolean)
kotlinx.coroutines.internal.DispatchedContinuation: void release()
androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
com.google.android.gms.tasks.zzu: boolean isCanceled()
androidx.appcompat.widget.LinearLayoutCompat: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.zxing.common.GridSampler: GridSampler()
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: void appendKey(java.lang.StringBuilder,com.google.firebase.database.snapshot.ChildKey)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTooltipText()
com.google.android.gms.common.internal.IAccountAccessor$Stub: com.google.android.gms.common.internal.IAccountAccessor asInterface(android.os.IBinder)
androidx.appcompat.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable mutate()
io.flutter.plugin.common.BasicMessageChannel: void setMessageHandler(io.flutter.plugin.common.BasicMessageChannel$MessageHandler)
androidx.window.layout.SidecarWindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addListener(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow)
androidx.core.app.NotificationCompatJellybean: android.os.Bundle getBundleForAction(androidx.core.app.NotificationCompat$Action)
androidx.core.graphics.drawable.WrappedDrawableApi21: android.graphics.Rect getDirtyBounds()
kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel$default(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.appcompat.widget.ForwardingListener: boolean onTouch(android.view.View,android.view.MotionEvent)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
com.google.zxing.oned.rss.RSS14Reader: RSS14Reader()
com.google.android.gms.common.GooglePlayServicesUtil: android.content.res.Resources getRemoteResource(android.content.Context)
com.google.android.gms.common.internal.GmsClientSupervisor$zza: GmsClientSupervisor$zza(java.lang.String,java.lang.String,int)
androidx.window.embedding.ExtensionEmbeddingBackend: ExtensionEmbeddingBackend(androidx.window.embedding.EmbeddingInterfaceCompat)
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: java.lang.Object invoke(java.lang.Object)
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.model.LatLngBounds getLatLngBoundsForCameraTarget()
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setPadding(float,float,float,float)
com.google.android.gms.common.internal.BaseGmsClient: boolean requiresAccount()
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle getLifecycle()
com.google.zxing.datamatrix.decoder.Version$ECBlocks: Version$ECBlocks(int,com.google.zxing.datamatrix.decoder.Version$ECB,com.google.zxing.datamatrix.decoder.Version$1)
androidx.core.view.WindowInsetsControllerCompat$Impl20: void unsetSystemUiFlag(int)
com.google.firebase.database.collection.ImmutableSortedMap$Builder: com.google.firebase.database.collection.ImmutableSortedMap emptyMap(java.util.Comparator)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
kotlinx.coroutines.channels.Send: Send()
com.google.firebase.database.core.Repo: void access$700(com.google.firebase.database.core.Repo,java.lang.String,com.google.firebase.database.core.Path,com.google.firebase.database.DatabaseError)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
com.google.firebase.database.connection.PersistentConnectionImpl: void onCacheHost(java.lang.String)
androidx.appcompat.widget.AppCompatTextClassifierHelper: AppCompatTextClassifierHelper(android.widget.TextView)
com.google.firebase.database.core.Repo$9: Repo$9(com.google.firebase.database.core.Repo,com.google.firebase.database.Query,com.google.android.gms.tasks.TaskCompletionSource)
androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionResume(android.transition.Transition)
kotlin.collections.EmptyList: boolean contains(java.lang.Void)
com.google.android.gms.common.GoogleApiAvailability: android.app.PendingIntent getErrorResolutionPendingIntent(android.content.Context,int,int)
com.google.android.gms.dynamite.DynamiteModule: void zza(java.lang.ClassLoader)
kotlin.coroutines.EmptyCoroutineContext: int hashCode()
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Throwable helpCloseAndGetSendException(kotlinx.coroutines.channels.Closed)
androidx.appcompat.widget.SearchView: void updateVoiceButton(boolean)
androidx.collection.SimpleArrayMap: SimpleArrayMap(int)
androidx.appcompat.widget.AppCompatProgressBarHelper: AppCompatProgressBarHelper(android.widget.ProgressBar)
io.flutter.plugin.editing.TextInputPlugin$1: void setPlatformViewClient(int,boolean)
io.flutter.plugins.imagepicker.ImagePickerPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.android.gms.internal.base.zar: zar(android.os.Looper)
com.baseflow.geolocator.GeolocatorLocationService: void releaseWakeLocks()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
androidx.fragment.app.FragmentViewLifecycleOwner: FragmentViewLifecycleOwner(androidx.fragment.app.Fragment,androidx.lifecycle.ViewModelStore)
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: com.google.android.gms.tasks.Task initializeCore()
androidx.exifinterface.media.ExifInterface: boolean isSupportedFormatForSavingAttributes()
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
androidx.fragment.app.FragmentTransitionCompat21: void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList)
androidx.appcompat.widget.ActionBarContextView: boolean shouldDelayChildPressedState()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
androidx.lifecycle.LiveData: void setValue(java.lang.Object)
androidx.window.embedding.ActivityStack: java.util.List getActivities$window_release()
com.google.firebase.database.core.WriteTree$1: boolean evaluate(java.lang.Object)
com.google.firebase.database.core.persistence.DefaultPersistenceManager: void setTrackedQueryKeys(com.google.firebase.database.core.view.QuerySpec,java.util.Set)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1)
com.journeyapps.barcodescanner.ViewfinderView: void addPossibleResultPoint(com.google.zxing.ResultPoint)
com.baseflow.geolocator.location.BackgroundNotification: void updateOptions(com.baseflow.geolocator.location.ForegroundNotificationOptions,boolean)
com.google.zxing.qrcode.detector.Detector: com.google.zxing.common.DetectorResult detect(java.util.Map)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
com.google.firebase.database.core.Context: com.google.firebase.database.core.EventTarget getEventTarget()
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int)
io.flutter.plugins.googlemaps.GoogleMapController: void setMyLocationButtonEnabled(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean performAction(int,android.os.Bundle)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: MethodCallHandlerImpl(android.content.Context)
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions zoomControlsEnabled(boolean)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionBarContextView: void closeMode()
com.google.android.gms.common.api.internal.zaad: zaad(com.google.android.gms.common.api.internal.LifecycleFragment)
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
com.journeyapps.barcodescanner.camera.CameraManager: void setCameraDisplayOrientation(int)
com.google.firebase.database.core.view.QueryParams: com.google.firebase.database.core.view.QueryParams orderBy(com.google.firebase.database.snapshot.Index)
kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.CoroutineDispatcher createDefaultDispatcher()
kotlin.jvm.internal.PackageReference: java.lang.String toString()
com.google.firebase.database.core.SyncTree$8: java.lang.Object call()
kotlinx.coroutines.channels.AbstractSendChannel: int countQueueSize()
com.google.zxing.pdf417.decoder.ec.ModulusPoly: com.google.zxing.pdf417.decoder.ec.ModulusPoly subtract(com.google.zxing.pdf417.decoder.ec.ModulusPoly)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setStyle(androidx.core.app.NotificationCompat$Style)
com.google.firebase.database.snapshot.CompoundHash$1: void visitChild(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node)
androidx.core.app.NotificationCompatJellybean: android.util.SparseArray buildActionExtrasMap(java.util.List)
com.google.android.gms.common.api.internal.zabl: void run()
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean parkedWorkersStackPush(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)
androidx.appcompat.app.AppCompatDelegateImpl$4: void onFitSystemWindows(android.graphics.Rect)
com.google.firebase.database.core.view.filter.RangedFilter: com.google.firebase.database.snapshot.IndexedNode updateChild(com.google.firebase.database.snapshot.IndexedNode,com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node,com.google.firebase.database.core.Path,com.google.firebase.database.core.view.filter.NodeFilter$CompleteChildSource,com.google.firebase.database.core.view.filter.ChildChangeAccumulator)
com.google.firebase.database.snapshot.LongNode: com.google.firebase.database.snapshot.LeafNode$LeafType getLeafType()
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1: AppCompatDelegateImpl$AutoNightModeManager$1(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager)
androidx.fragment.app.FragmentManager: void clearFragmentResult(java.lang.String)
androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader$TileMode parseTileMode(int)
com.google.firebase.database.snapshot.EmptyNode: java.util.Iterator reverseIterator()
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: SingleViewPresentation$PresentationContext(android.content.Context,io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler,android.content.Context)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String[],int,boolean,int)
com.google.android.gms.maps.internal.zzbx: zzbx(android.os.IBinder)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: java.lang.Object invoke(java.lang.Object)
com.google.android.gms.location.zzae: void writeToParcel(android.os.Parcel,int)
com.google.firebase.database.connection.util.StringListReader: java.lang.String currentString()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType fromValue(java.lang.String)
kotlin.collections.EmptySet: boolean contains(java.lang.Void)
androidx.appcompat.widget.DrawableUtils: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readInt(android.os.Parcel,int)
com.journeyapps.barcodescanner.camera.CameraInstance: void setDisplayConfiguration(com.journeyapps.barcodescanner.camera.DisplayConfiguration)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.tasks.zzr: void zza(com.google.android.gms.tasks.Task)
com.google.android.gms.location.LocationRequest: void zza(long)
com.google.android.gms.common.internal.zzf: boolean zzr()
androidx.appcompat.app.AppCompatActivity: boolean onMenuOpened(int,android.view.Menu)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
io.flutter.embedding.android.FlutterActivity: void onBackPressed()
io.flutter.embedding.android.FlutterTextureView: android.view.Surface access$500(io.flutter.embedding.android.FlutterTextureView)
androidx.fragment.app.FragmentLayoutInflaterFactory: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection fromInt(int)
kotlin.text.DelimitedRangesSequence: DelimitedRangesSequence(java.lang.CharSequence,int,int,kotlin.jvm.functions.Function2)
com.google.firebase.database.core.UserWriteRecord: com.google.firebase.database.core.CompoundWrite getMerge()
com.google.firebase.database.android.SqlPersistenceStorageEngine: java.lang.String pathToKey(com.google.firebase.database.core.Path)
com.google.firebase.database.core.view.filter.RangedFilter: com.google.firebase.database.snapshot.Index getIndex()
com.google.android.gms.maps.internal.zzg: void setOnCameraMoveListener(com.google.android.gms.maps.internal.zzr)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$2402(io.flutter.view.AccessibilityBridge$SemanticsNode,java.lang.String)
io.flutter.embedding.android.FlutterSurfaceView: void access$200(io.flutter.embedding.android.FlutterSurfaceView)
kotlinx.coroutines.flow.internal.DownstreamExceptionElement$Key: DownstreamExceptionElement$Key()
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean)
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2: int access$000(com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2)
com.google.android.gms.signin.internal.zad: void zah(com.google.android.gms.common.api.Status)
com.google.firebase.database.connection.ConnectionContext: java.lang.String getSslCacheDirectory()
com.google.android.gms.tasks.zzi: zzi(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCompleteListener)
com.google.android.gms.common.Feature: java.lang.String toString()
com.google.android.gms.common.api.internal.zabk: void run()
com.google.zxing.pdf417.decoder.ec.ModulusPoly: com.google.zxing.pdf417.decoder.ec.ModulusPoly add(com.google.zxing.pdf417.decoder.ec.ModulusPoly)
androidx.appcompat.widget.AlertDialogLayout: boolean tryOnMeasure(int,int)
com.google.android.gms.common.api.internal.ApiExceptionMapper: java.lang.Exception getException(com.google.android.gms.common.api.Status)
com.google.firebase.database.core.view.QueryParams: boolean hasLimit()
com.google.android.gms.location.LocationSettingsStates: boolean isGpsUsable()
com.google.android.gms.internal.location.zzn: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.maps.model.TileOverlayOptions: TileOverlayOptions(android.os.IBinder,boolean,float,boolean,float)
androidx.appcompat.widget.ListPopupWindow: int getVerticalOffset()
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$4: java.lang.Object invoke(java.lang.Object)
com.google.android.gms.maps.model.PatternItem: int hashCode()
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object getResult()
com.google.firebase.components.DependencyCycleException: DependencyCycleException(java.util.List)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void invalidateSelf()
androidx.appcompat.view.menu.MenuItemWrapperICS: int getNumericModifiers()
androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: int getCount()
androidx.appcompat.widget.AppCompatSeekBarHelper: void jumpDrawablesToCurrentState()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task findTask(boolean)
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent: NotificationManagerCompat$ServiceConnectedEvent(android.content.ComponentName,android.os.IBinder)
io.flutter.util.ViewUtils: android.app.Activity getActivity(android.content.Context)
com.google.android.gms.location.LocationRequest: LocationRequest(int,long,long,boolean,long,int,float,long)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void onContentChanged()
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int compareTo(kotlinx.coroutines.EventLoopImplBase$DelayedTask)
androidx.core.provider.RequestExecutor$ReplyRunnable: void run()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
com.google.android.gms.maps.internal.zzau: zzau()
com.google.firebase.database.DatabaseReference: com.google.android.gms.tasks.Task setPriority(java.lang.Object)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.appcompat.app.WindowDecorActionBar: void setHideOnContentScrollEnabled(boolean)
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Waiter access$800(com.google.common.util.concurrent.AbstractFuture)
com.google.firebase.database.core.utilities.ImmutableTree: ImmutableTree(java.lang.Object)
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation: int getRemainingValue()
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup access$000(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
com.baseflow.geolocator.GeolocatorPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.versionedparcelable.ParcelImpl: int describeContents()
net.touchcapture.qr.flutterqr.CustomFramingRectBarcodeView$Companion: CustomFramingRectBarcodeView$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.widget.NestedScrollView$SavedState$1: java.lang.Object[] newArray(int)
com.google.firebase.database.core.view.Change: java.lang.String toString()
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: boolean isShowing()
com.google.firebase.platforminfo.DefaultUserAgentPublisher: DefaultUserAgentPublisher(java.util.Set,com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar)
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent)
androidx.activity.result.ActivityResult: java.lang.String toString()
kotlin.jvm.internal.FunctionReference: int hashCode()
com.google.android.gms.common.api.internal.zza: void onResume()
com.google.android.gms.maps.GoogleMap: com.google.android.gms.maps.model.Polyline addPolyline(com.google.android.gms.maps.model.PolylineOptions)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void handleImageResult(java.lang.String,boolean)
androidx.appcompat.widget.ScrollingTabContainerView: void onConfigurationChanged(android.content.res.Configuration)
com.google.android.gms.common.api.internal.zaz: zaz()
io.flutter.embedding.engine.dart.DartExecutor: DartExecutor(io.flutter.embedding.engine.FlutterJNI,android.content.res.AssetManager)
androidx.window.layout.WindowMetrics: int hashCode()
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
com.journeyapps.barcodescanner.CameraPreview$4: void onRotationChanged(int)
com.google.zxing.qrcode.decoder.DataMask$3: boolean isMasked(int,int)
com.google.firebase.database.DatabaseError: int getCode()
androidx.appcompat.widget.AppCompatBackgroundHelper: void onSetBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.firebase.database.core.Repo: void rerunTransactionQueue(java.util.List,com.google.firebase.database.core.Path)
com.google.firebase.FirebaseOptions: java.lang.String getStorageBucket()
com.google.firebase.database.tubesock.WebSocketReceiver: int read(byte[],int,int)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
androidx.savedstate.SavedStateRegistryController: SavedStateRegistryController(androidx.savedstate.SavedStateRegistryOwner)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: boolean equals(java.lang.Object)
kotlinx.coroutines.internal.ArrayQueue: void ensureCapacity()
com.google.zxing.aztec.decoder.Decoder$Table: com.google.zxing.aztec.decoder.Decoder$Table[] values()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetBottom(android.view.DisplayCutout)
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.AppCompatBackgroundHelper: AppCompatBackgroundHelper(android.view.View)
com.google.firebase.database.connection.Connection$State: Connection$State(java.lang.String,int)
androidx.core.widget.AutoScrollHelper: float constrain(float,float,float)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: MenuPopupWindow$MenuDropDownListView(android.content.Context,boolean)
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: void post()
androidx.fragment.app.FragmentHostCallback: android.view.LayoutInflater onGetLayoutInflater()
kotlinx.coroutines.DispatchedTaskKt: void resumeUnconfined(kotlinx.coroutines.DispatchedTask)
kotlinx.coroutines.scheduling.WorkQueue: int getBufferSize$kotlinx_coroutines_core()
androidx.fragment.app.Fragment: void onPictureInPictureModeChanged(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean onLevelChange(int)
androidx.core.graphics.TypefaceCompatApi24Impl: boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean clearMetaKeyStates(int)
com.google.firebase.database.snapshot.ValueIndex: int compare(com.google.firebase.database.snapshot.NamedNode,com.google.firebase.database.snapshot.NamedNode)
androidx.core.provider.FontProvider: java.util.List convertToByteArrayList(android.content.pm.Signature[])
com.google.android.gms.common.api.Status: Status(int,java.lang.String,android.app.PendingIntent)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
androidx.window.layout.WindowMetrics: boolean equals(java.lang.Object)
com.google.common.util.concurrent.ThreadFactoryBuilder$1: ThreadFactoryBuilder$1(java.util.concurrent.ThreadFactory,java.lang.String,java.util.concurrent.atomic.AtomicLong,java.lang.Boolean,java.lang.Integer,java.lang.Thread$UncaughtExceptionHandler)
androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setNumericShortcut(char,int)
androidx.fragment.app.FragmentStateManager: void stop()
com.google.firebase.database.snapshot.PriorityIndex: com.google.firebase.database.snapshot.PriorityIndex getInstance()
com.journeyapps.barcodescanner.RawImageData: int getHeight()
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams()
com.google.android.gms.location.LocationCallback: LocationCallback()
com.google.firebase.database.core.view.View: com.google.firebase.database.snapshot.Node getEventCache()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
com.google.zxing.oned.UPCEANExtension2Support: UPCEANExtension2Support()
androidx.appcompat.widget.MenuPopupWindow: void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.arch.core.internal.SafeIterableMap: int hashCode()
com.google.android.gms.maps.UiSettings: boolean isMapToolbarEnabled()
com.google.firebase.database.connection.PersistentConnectionImpl: boolean canSendWrites()
com.google.android.gms.common.stats.ConnectionTracker: com.google.android.gms.common.stats.ConnectionTracker getInstance()
androidx.core.widget.NestedScrollView: boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: FlutterActivityAndFragmentDelegate$1(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)
androidx.fragment.app.FragmentManager: void invalidateMenuForFragment(androidx.fragment.app.Fragment)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View findViewById(int)
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
com.google.firebase.database.core.Repo$14: Repo$14(com.google.firebase.database.core.Repo,java.util.Map,java.util.List)
androidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)
androidx.core.widget.NestedScrollView: boolean onGenericMotionEvent(android.view.MotionEvent)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments: AccessibilityViewCommand$SetSelectionArguments()
io.flutter.embedding.android.FlutterTextureView: void access$300(io.flutter.embedding.android.FlutterTextureView,int,int)
androidx.tracing.TraceApi18Impl: void beginSection(java.lang.String)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean collapseActionView()
androidx.fragment.app.BackStackRecord: void bumpBackStackNesting(int)
com.google.firebase.database.connection.PersistentConnectionImpl$QuerySpec: java.util.Map access$200(com.google.firebase.database.connection.PersistentConnectionImpl$QuerySpec)
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: void setFocus(android.hardware.Camera$Parameters,com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode,boolean)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
com.google.zxing.oned.rss.expanded.ExpandedRow: java.lang.String toString()
com.google.android.gms.dynamite.DynamiteModule$zzb: int zza(android.content.Context,java.lang.String,boolean)
kotlinx.coroutines.scheduling.CoroutineScheduler: void dispatch$default(kotlinx.coroutines.scheduling.CoroutineScheduler,java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean,int,java.lang.Object)
kotlinx.coroutines.internal.SystemPropsKt: int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object)
com.google.android.gms.maps.UiSettings: void setZoomControlsEnabled(boolean)
androidx.savedstate.Recreator$SavedStateProvider: android.os.Bundle saveState()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
kotlin.collections.CollectionsKt__MutableCollectionsKt: boolean addAll(java.util.Collection,java.lang.Iterable)
io.flutter.plugins.googlemaps.GoogleMapController: void updateMyLocationSettings()
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
com.google.zxing.datamatrix.detector.Detector: boolean isValid(com.google.zxing.ResultPoint)
androidx.core.widget.NestedScrollView$AccessibilityDelegate: NestedScrollView$AccessibilityDelegate()
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient$1: WebViewActivity$FlutterWebChromeClient$1(io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient)
io.flutter.embedding.android.FlutterTextureView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
androidx.window.core.Version$bigInteger$2: Version$bigInteger$2(androidx.window.core.Version)
com.google.android.gms.common.api.internal.zaad: void onStart()
io.flutter.plugin.common.JSONMessageCodec: JSONMessageCodec()
kotlinx.coroutines.channels.Channel$Factory: int getCHANNEL_DEFAULT_CAPACITY$kotlinx_coroutines_core()
io.flutter.plugin.platform.PlatformViewsController: void access$600(io.flutter.plugin.platform.PlatformViewsController,int,int)
androidx.customview.view.AbsSavedState$2: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setEdgeType(int)
com.google.android.gms.common.api.internal.zac: com.google.android.gms.common.api.Status zaa(android.os.RemoteException)
androidx.appcompat.view.ActionBarPolicy: int getEmbeddedMenuWidthLimit()
androidx.interpolator.view.animation.LinearOutSlowInInterpolator: float getInterpolation(float)
androidx.appcompat.view.menu.StandardMenuPopup: boolean isShowing()
com.google.zxing.oned.rss.expanded.RSSExpandedReader: void storeRow(int,boolean)
com.journeyapps.barcodescanner.CameraPreview: void addStateListener(com.journeyapps.barcodescanner.CameraPreview$StateListener)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: MotionEventTracker$MotionEventId(long)
androidx.fragment.app.FragmentTransition: void setViewVisibility(java.util.ArrayList,int)
androidx.core.provider.FontsContractCompat$FontInfo: int getResultCode()
com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator: FinderPatternFinder$CenterComparator(float)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int getAutoSizeMinTextSize()
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)
com.google.firebase.database.core.utilities.encoding.CustomClassMapper: com.google.firebase.database.core.utilities.encoding.CustomClassMapper$BeanMapper loadOrCreateBeanMapperForClass(java.lang.Class)
androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)
androidx.appcompat.app.AlertController: boolean shouldCenterSingleButton(android.content.Context)
androidx.collection.MapCollections$ValuesCollection: void clear()
com.google.zxing.common.DefaultGridSampler: DefaultGridSampler()
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void setVariablePadding(boolean)
androidx.window.embedding.SplitController: boolean isSplitSupported()
com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException: SafeParcelReader$ParseException(java.lang.String,android.os.Parcel)
com.google.android.gms.internal.location.zzas: void zza(com.google.android.gms.internal.location.zzbd,com.google.android.gms.common.api.internal.ListenerHolder,com.google.android.gms.internal.location.zzaj)
com.google.firebase.database.snapshot.ChildrenNode: boolean equals(java.lang.Object)
io.flutter.embedding.android.FlutterActivity: void switchLaunchThemeForNormalTheme()
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: VirtualDisplayController$OneTimeOnDrawListener$1(io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener)
androidx.core.provider.FontsContractCompat$FontRequestCallback: FontsContractCompat$FontRequestCallback()
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
com.google.firebase.database.tubesock.WebSocketReceiver: void setInput(java.io.DataInputStream)
io.flutter.view.VsyncWaiter: io.flutter.view.VsyncWaiter getInstance(android.hardware.display.DisplayManager,io.flutter.embedding.engine.FlutterJNI)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
com.google.firebase.database.core.Repo$7: void run()
kotlinx.coroutines.EventLoopImplBase: java.lang.Runnable dequeue()
io.flutter.plugins.googlemaps.CirclesController: java.lang.String getCircleId(java.lang.Object)
com.google.android.gms.maps.UiSettings: boolean isZoomControlsEnabled()
androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
androidx.window.embedding.SplitPairRule: boolean getFinishSecondaryWithPrimary()
androidx.appcompat.view.menu.MenuBuilder: boolean performIdentifierAction(int,int)
com.google.android.gms.common.api.internal.zaac: zaac(com.google.android.gms.common.api.internal.zaz,com.google.android.gms.common.api.internal.BasePendingResult)
com.google.firebase.database.OnDisconnect: com.google.android.gms.tasks.Task setValue(java.lang.Object)
io.flutter.plugin.common.MethodCall: MethodCall(java.lang.String,java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: int getGroupId()
androidx.appcompat.view.SupportMenuInflater: void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu)
com.google.firebase.database.core.view.ViewProcessor$WriteTreeCompleteChildSource: ViewProcessor$WriteTreeCompleteChildSource(com.google.firebase.database.core.WriteTreeRef,com.google.firebase.database.core.view.ViewCache,com.google.firebase.database.snapshot.Node)
com.google.firebase.database.core.Repo$13: void onRequestResult(java.lang.String,java.lang.String)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getCurrentState()
kotlin.KotlinVersion: java.lang.String toString()
com.google.android.gms.common.api.internal.GoogleApiManager: long zad(com.google.android.gms.common.api.internal.GoogleApiManager)
androidx.core.widget.NestedScrollView$AccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.AppCompatPopupWindow: void showAsDropDown(android.view.View,int,int,int)
com.baseflow.geolocator.location.FusedLocationClient: com.google.android.gms.location.LocationCallback access$100(com.baseflow.geolocator.location.FusedLocationClient)
com.google.android.gms.common.api.internal.LifecycleCallback: android.app.Activity getActivity()
androidx.fragment.app.FragmentTransitionCompat21: void setEpicenter(java.lang.Object,android.view.View)
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
com.google.android.gms.common.api.zzb: java.lang.Object createFromParcel(android.os.Parcel)
kotlinx.coroutines.channels.ArrayChannel: java.lang.Object pollInternal()
kotlinx.coroutines.scheduling.WorkQueue: long tryStealBlockingFrom(kotlinx.coroutines.scheduling.WorkQueue)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
androidx.appcompat.widget.ListPopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.android.FlutterImageView: void logW(java.lang.String,java.lang.Object[])
kotlinx.coroutines.internal.DispatchedContinuation: boolean postponeCancellation(java.lang.Throwable)
io.flutter.plugin.mouse.MouseCursorPlugin: MouseCursorPlugin(io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate,io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
androidx.lifecycle.LiveData$AlwaysActiveObserver: boolean shouldBeActive()
androidx.fragment.app.FragmentManager: void showFragment(androidx.fragment.app.Fragment)
androidx.fragment.app.FragmentStore: androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String)
io.flutter.plugins.googlemaps.GoogleMapController: void setCameraTargetBounds(com.google.android.gms.maps.model.LatLngBounds)
com.google.firebase.provider.FirebaseInitProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setTitle(int)
androidx.activity.ComponentActivity$3: ComponentActivity$3(androidx.activity.ComponentActivity)
com.google.firebase.database.connection.PersistentConnectionImpl: com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingListen removeListen(com.google.firebase.database.connection.PersistentConnectionImpl$QuerySpec)
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: long getItemId(int)
com.google.firebase.components.Dependency: java.lang.Class getInterface()
kotlin.jvm.internal.TypeIntrinsics: TypeIntrinsics()
com.google.firebase.database.Query: com.google.firebase.database.Query endAt(java.lang.String,java.lang.String)
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)
androidx.appcompat.widget.AppCompatTextView: void consumeTextFutureAndSetBlocking()
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.platform.PlatformViewRegistry getPlatformViewRegistry()
com.google.zxing.oned.rss.expanded.RSSExpandedReader: boolean isValidSequence(java.util.List)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
io.flutter.embedding.android.FlutterSurfaceView: void connectSurfaceToRenderer()
com.google.firebase.database.core.ChildEventRegistration: ChildEventRegistration(com.google.firebase.database.core.Repo,com.google.firebase.database.ChildEventListener,com.google.firebase.database.core.view.QuerySpec)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
com.google.firebase.database.core.Repo$24: Repo$24(com.google.firebase.database.core.Repo,int)
androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)
androidx.appcompat.widget.ListPopupWindow: void setPopupClipToScreenEnabled(boolean)
kotlinx.coroutines.CompletedContinuation: boolean equals(java.lang.Object)
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: StringsKt__StringsKt$rangesDelimitedBy$2(java.util.List,boolean)
com.google.firebase.database.Query: com.google.firebase.database.Query startAfter(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
androidx.appcompat.widget.SearchView: android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
androidx.core.widget.NestedScrollView: boolean isWithinDeltaOfScreen(android.view.View,int,int)
androidx.fragment.app.BackStackRecord: void runOnCommitRunnables()
com.google.android.gms.maps.model.zzr: java.lang.Object[] newArray(int)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$State getTargetState()
com.google.firebase.database.core.utilities.DefaultRunLoop$FirebaseThreadFactory: DefaultRunLoop$FirebaseThreadFactory(com.google.firebase.database.core.utilities.DefaultRunLoop,com.google.firebase.database.core.utilities.DefaultRunLoop$1)
com.google.firebase.database.core.persistence.LRUCachePolicy: long getMaxNumberOfQueriesToKeep()
androidx.appcompat.graphics.drawable.DrawableWrapper: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
androidx.appcompat.app.AppCompatActivity: void onDestroy()
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setMenu(androidx.appcompat.view.menu.MenuBuilder)
com.google.android.gms.common.api.Status: Status(int)
io.flutter.plugin.common.BasicMessageChannel: BasicMessageChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MessageCodec)
io.flutter.embedding.engine.dart.DartExecutor: void onDetachedFromJNI()
androidx.appcompat.widget.ResourcesWrapper: android.content.res.TypedArray obtainTypedArray(int)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void onInactive()
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingGet: java.util.Map getRequest()
com.google.firebase.database.core.view.filter.RangedFilter: com.google.firebase.database.snapshot.NamedNode getStartPost()
androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)
com.google.firebase.database.core.utilities.ImmutableTree: boolean equals(java.lang.Object)
androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Operation findRunningOperation(androidx.fragment.app.Fragment)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: java.util.List checkRows(java.util.List,int)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.google.android.gms.common.api.GoogleApiActivity: void onSaveInstanceState(android.os.Bundle)
io.flutter.plugin.platform.PlatformViewsController: boolean access$000(int)
com.google.android.gms.maps.internal.zzg: void setTrafficEnabled(boolean)
androidx.fragment.app.FragmentActivity: void onPostResume()
io.flutter.plugin.platform.PlatformViewsController: android.content.Context access$200(io.flutter.plugin.platform.PlatformViewsController)
io.flutter.plugins.googlemaps.TileProviderController$Worker: TileProviderController$Worker(io.flutter.plugins.googlemaps.TileProviderController,int,int,int)
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()
com.google.firebase.database.core.persistence.TrackedQueryManager: TrackedQueryManager(com.google.firebase.database.core.persistence.PersistenceStorageEngine,com.google.firebase.database.logging.LogWrapper,com.google.firebase.database.core.utilities.Clock)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: void onPrepareSubMenu(android.view.SubMenu)
com.google.firebase.database.core.view.filter.LimitedFilter: com.google.firebase.database.core.view.filter.NodeFilter getIndexedFilter()
com.journeyapps.barcodescanner.camera.CameraInstance: void setSurface(com.journeyapps.barcodescanner.camera.CameraSurface)
androidx.lifecycle.LiveData: void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
com.google.firebase.database.Query: com.google.firebase.database.Query startAt(java.lang.String)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)
io.flutter.plugin.editing.FlutterTextUtils: int getOffsetAfter(java.lang.CharSequence,int)
androidx.appcompat.app.WindowDecorActionBar: boolean onKeyShortcut(int,android.view.KeyEvent)
com.journeyapps.barcodescanner.BarcodeView: void previewStarted()
com.google.android.gms.common.ErrorDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
androidx.appcompat.widget.ListPopupWindow: void setModal(boolean)
androidx.core.app.ActivityCompat: void finishAffinity(android.app.Activity)
io.flutter.plugins.imagepicker.ImagePickerDelegate$1: void askForPermission(java.lang.String,int)
io.flutter.plugins.googlemaps.PolygonBuilder: void setStrokeWidth(float)
com.google.zxing.common.PerspectiveTransform: void transformPoints(float[])
androidx.core.content.res.ComplexColorCompat: android.graphics.Shader getShader()
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader(io.flutter.embedding.engine.FlutterJNI,java.util.concurrent.ExecutorService)
androidx.core.view.KeyEventDispatcher: android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog)
io.flutter.plugins.imagepicker.ImagePickerPlugin: ImagePickerPlugin()
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context)
androidx.core.content.ContextCompat: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: com.google.zxing.ResultPoint getFrom()
com.google.firebase.database.android.SqlPersistenceStorageEngine: void verifyInsideTransaction()
com.google.firebase.FirebaseApp: java.util.List getAllAppNames()
com.google.zxing.pdf417.decoder.BoundingBox: BoundingBox(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)
com.journeyapps.barcodescanner.BarcodeResult: java.lang.String getText()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
androidx.appcompat.widget.TooltipCompatHandler: void setTooltipText(android.view.View,java.lang.CharSequence)
io.flutter.plugins.googlemaps.TileOverlaysController: void changeTileOverlays(java.util.List)
com.google.android.gms.common.GoogleApiAvailabilityLight: java.lang.String getErrorString(int)
com.lyokone.location.NotificationOptions: boolean equals(java.lang.Object)
androidx.collection.MapCollections$MapIterator: void remove()
com.google.android.gms.maps.GoogleMap: boolean isBuildingsEnabled()
androidx.appcompat.widget.AppCompatSpinner: void showPopup()
androidx.appcompat.view.menu.MenuPopupHelper: void setGravity(int)
androidx.core.view.NestedScrollingParentHelper: NestedScrollingParentHelper(android.view.ViewGroup)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode getRootSemanticsNode()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
com.google.android.gms.common.internal.GmsClient: java.util.Set validateScopes(java.util.Set)
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: ExecutorCoroutineDispatcher$Key$1()
androidx.appcompat.widget.ActionBarContainer: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int)
kotlinx.coroutines.channels.Closed: java.lang.Throwable getReceiveException()
com.journeyapps.barcodescanner.camera.CameraSettings: boolean isExposureEnabled()
androidx.fragment.app.FragmentManagerViewModel: FragmentManagerViewModel(boolean)
com.google.zxing.aztec.AztecDetectorResult: boolean isCompact()
androidx.core.os.CancellationSignal: CancellationSignal()
kotlinx.coroutines.CompletionStateKt: java.lang.Object toState(java.lang.Object,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.Toolbar$SavedState: Toolbar$SavedState(android.os.Parcel,java.lang.ClassLoader)
com.google.zxing.client.android.DecodeFormatManager: java.util.Set parseDecodeFormats(java.lang.Iterable,java.lang.String)
io.flutter.plugin.common.JSONMethodCodec: java.lang.Object unwrapNull(java.lang.Object)
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
com.google.firebase.database.core.Context: void restartServices()
androidx.fragment.app.FragmentManager: void dispatchResume()
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
kotlinx.coroutines.channels.AbstractChannel: void access$removeReceiveOnCancel(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.channels.Receive)
com.google.firebase.database.core.utilities.ImmutableTree: boolean isEmpty()
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: AppCompatDelegateImpl$AutoTimeNightModeManager(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_0_1()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setRawTextSize(float)
androidx.activity.ImmLeaksCleaner: ImmLeaksCleaner(android.app.Activity)
com.baseflow.geolocator.location.FusedLocationClient: void requestPositionUpdates(com.baseflow.geolocator.location.LocationOptions)
androidx.fragment.app.FragmentManager: void dispatchCreate()
kotlin.collections.EmptyList: boolean removeAll(java.util.Collection)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.MenuPopup: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
androidx.fragment.app.DefaultSpecialEffectsController$3: DefaultSpecialEffectsController$3(androidx.fragment.app.DefaultSpecialEffectsController,android.animation.Animator)
com.google.firebase.database.DatabaseReference: int hashCode()
androidx.appcompat.view.menu.BaseMenuWrapper: void internalClear()
kotlinx.coroutines.CoroutineStart: boolean isLazy()
androidx.appcompat.widget.ActionBarOverlayLayout: void dismissPopups()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: AppCompatTextViewAutoSizeHelper(android.widget.TextView)
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void setup()
com.google.firebase.database.InternalHelpers: com.google.firebase.database.DataSnapshot createDataSnapshot(com.google.firebase.database.DatabaseReference,com.google.firebase.database.snapshot.IndexedNode)
androidx.lifecycle.LiveData$LifecycleBoundObserver: LiveData$LifecycleBoundObserver(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSubText(java.lang.CharSequence)
kotlin.coroutines.CombinedContext$toString$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String access$400(io.flutter.plugins.pathprovider.PathProviderPlugin)
io.flutter.view.AccessibilityBridge: void predictCursorMovement(io.flutter.view.AccessibilityBridge$SemanticsNode,int,boolean,boolean)
androidx.lifecycle.SavedStateHandleController: void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)
androidx.core.graphics.TypefaceCompatUtil: void closeQuietly(java.io.Closeable)
com.lyokone.location.MethodCallHandlerImpl: void onChangeSettings(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: void success(java.lang.Object)
com.google.firebase.database.core.Path: Path(com.google.firebase.database.snapshot.ChildKey[],int,int)
kotlin.jvm.internal.CallableReference: boolean isFinal()
androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)
com.baseflow.geolocator.LocationServiceHandlerImpl: void stopListening()
com.google.android.gms.common.api.internal.zaf: void zaa(com.google.android.gms.common.api.internal.zaz,boolean)
io.flutter.plugins.googlemaps.TileProviderController$Worker: void error(java.lang.String,java.lang.String,java.lang.Object)
androidx.appcompat.app.TwilightCalculator: TwilightCalculator()
androidx.appcompat.view.SupportActionModeWrapper: android.view.View getCustomView()
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean getPadding(android.graphics.Rect)
androidx.window.layout.WindowMetrics: WindowMetrics(android.graphics.Rect)
com.google.android.gms.internal.maps.zzae: boolean isVisible()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: DrawableSplashScreen$DrawableSplashScreenView(android.content.Context)
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object setValue(java.lang.Object)
net.touchcapture.qr.flutterqr.QRView: net.touchcapture.qr.flutterqr.CustomFramingRectBarcodeView initBarCodeView()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
androidx.core.app.NotificationManagerCompat$SideChannelManager: void updateListenerMap()
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmojiModifier(int)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
com.google.android.gms.common.GoogleApiAvailability: boolean isUserResolvableError(int)
com.google.firebase.database.core.view.ViewProcessor: com.google.firebase.database.core.view.ViewCache generateEventCacheAfterServerEvent(com.google.firebase.database.core.view.ViewCache,com.google.firebase.database.core.Path,com.google.firebase.database.core.WriteTreeRef,com.google.firebase.database.core.view.filter.NodeFilter$CompleteChildSource,com.google.firebase.database.core.view.filter.ChildChangeAccumulator)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onKeyDown(int,android.view.KeyEvent)
kotlinx.coroutines.android.HandlerContext: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: FlutterActivityAndFragmentDelegate$2(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,io.flutter.embedding.android.FlutterView)
com.google.firebase.database.DatabaseError: java.lang.String toString()
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry nextNode()
io.flutter.plugin.common.StandardMethodCodec: io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer)
com.google.zxing.qrcode.detector.FinderPatternFinder: float crossCheckHorizontal(int,int,int,int)
com.google.android.gms.common.api.internal.zabo: void run()
com.journeyapps.barcodescanner.CaptureManager: void lockOrientation()
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter)
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState: void setPosition(int)
com.google.firebase.database.core.utilities.ImmutableTree$2: ImmutableTree$2(com.google.firebase.database.core.utilities.ImmutableTree,java.util.List)
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
com.google.firebase.FirebaseApp$UiExecutor: void execute(java.lang.Runnable)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onSaveInstanceState(android.os.Bundle)
kotlinx.coroutines.CancellableContinuationImpl: boolean resetStateReusable()
androidx.fragment.app.Fragment: boolean equals(java.lang.Object)
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23: void rebase(android.content.res.Resources$Theme)
androidx.collection.ArrayMap$1: void colClear()
androidx.core.view.ContentInfoCompat: ContentInfoCompat(androidx.core.view.ContentInfoCompat$Builder)
com.baseflow.geolocator.errors.ErrorCodes: java.lang.String toDescription()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantHeight()
androidx.appcompat.widget.AppCompatSpinner: android.os.Parcelable onSaveInstanceState()
com.google.firebase.database.connection.WebsocketConnection: com.google.firebase.database.connection.WebsocketConnection$WSClient access$900(com.google.firebase.database.connection.WebsocketConnection)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setChecked(boolean)
com.google.android.gms.signin.zad: zad()
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String toString()
androidx.appcompat.widget.SearchView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
kotlinx.coroutines.DebugKt: java.util.concurrent.atomic.AtomicLong getCOROUTINE_ID()
com.google.firebase.database.DataSnapshot: boolean exists()
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: java.util.concurrent.atomic.AtomicReference access$300(io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler)
kotlinx.coroutines.internal.FastServiceLoader: java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader)
io.flutter.embedding.android.FlutterSplashView: void onRestoreInstanceState(android.os.Parcelable)
com.google.firebase.database.core.Repo: com.google.firebase.database.core.Path access$1200(com.google.firebase.database.core.Repo,com.google.firebase.database.core.Path,int)
androidx.fragment.app.FragmentTransitionImpl: void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map)
com.journeyapps.barcodescanner.CameraPreview: void previewSized(com.journeyapps.barcodescanner.Size)
com.google.android.gms.maps.model.TileOverlay: float getZIndex()
androidx.fragment.app.FragmentController: boolean dispatchOptionsItemSelected(android.view.MenuItem)
com.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: ComponentDiscovery$MetadataRegistrarNameRetriever(java.lang.Class)
androidx.lifecycle.DefaultLifecycleObserver: void onStart(androidx.lifecycle.LifecycleOwner)
androidx.appcompat.view.StandaloneActionMode: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
com.journeyapps.barcodescanner.CameraPreview: android.os.Handler access$500(com.journeyapps.barcodescanner.CameraPreview)
androidx.appcompat.app.AlertController$AlertParams$2: void bindView(android.view.View,android.content.Context,android.database.Cursor)
androidx.appcompat.widget.ResourcesWrapper: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)
com.google.firebase.database.collection.ImmutableSortedSet$WrappedEntryIterator: void remove()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence access$3100(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.fragment.app.FragmentManager: void makeRemovedFragmentsInvisible(androidx.collection.ArraySet)
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: java.lang.Object invokeSuspend(java.lang.Object)
androidx.fragment.app.DialogFragment$4: DialogFragment$4(androidx.fragment.app.DialogFragment)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setAdapter(android.widget.ListAdapter)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName)
kotlinx.coroutines.CancellableContinuationImpl: void releaseClaimedReusableContinuation()
androidx.appcompat.view.menu.ActionMenuItemView: boolean hasText()
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
com.google.common.base.MoreObjects$ToStringHelper: java.lang.String toString()
com.google.android.gms.location.zzk: zzk()
androidx.appcompat.widget.AppCompatBackgroundHelper: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
com.journeyapps.barcodescanner.CaptureManager$2: CaptureManager$2(com.journeyapps.barcodescanner.CaptureManager)
androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)
com.google.firebase.database.core.persistence.TrackedQueryManager$5: java.lang.Object onNodeValue(com.google.firebase.database.core.Path,java.lang.Object,java.lang.Object)
com.journeyapps.barcodescanner.CaptureManager: void displayFrameworkBugMessageAndExit(java.lang.String)
com.google.zxing.pdf417.decoder.ec.ModulusGF: com.google.zxing.pdf417.decoder.ec.ModulusPoly getZero()
com.google.android.gms.dynamite.zzd: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$zzb zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$zza)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
com.baseflow.geolocator.location.ForegroundNotificationOptions: com.baseflow.geolocator.location.AndroidIconResource getNotificationIcon()
androidx.fragment.app.FragmentStateManager: androidx.fragment.app.FragmentState saveState()
androidx.appcompat.widget.TintTypedArray: int getColor(int,int)
androidx.appcompat.widget.AppCompatTextView: void drawableStateChanged()
com.journeyapps.barcodescanner.CameraPreview: void setCameraSettings(com.journeyapps.barcodescanner.camera.CameraSettings)
androidx.window.layout.WindowMetricsCalculatorCompat: int getNavigationBarHeight(android.content.Context)
com.google.android.gms.internal.maps.zzab: void setClickable(boolean)
com.google.android.gms.internal.base.zaa: android.os.IBinder asBinder()
com.google.firebase.database.collection.RBTreeSortedMap$Builder: void buildPennant(com.google.firebase.database.collection.LLRBNode$Color,int,int)
androidx.core.view.WindowInsetsControllerCompat$Impl20: void setSystemUiFlag(int)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.firebase.database.Transaction$Result: com.google.firebase.database.snapshot.Node getNode()
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
com.google.firebase.database.core.ServerValues: java.lang.Object resolveComplexDeferredValue(java.util.Map,com.google.firebase.database.core.ValueProvider,java.util.Map)
androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition)
com.google.firebase.database.core.SyncTree: java.util.List removeEventRegistration(com.google.firebase.database.core.EventRegistration)
com.google.firebase.database.snapshot.ChildrenNode: void toString(java.lang.StringBuilder,int)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.google.firebase.database.core.Repo$TransactionStatus: com.google.firebase.database.core.Repo$TransactionStatus[] values()
com.google.android.gms.maps.model.zzl: zzl()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$000(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.database.core.SyncTree: com.google.firebase.database.snapshot.Node getServerValue(com.google.firebase.database.core.view.QuerySpec)
androidx.fragment.app.FragmentStore: void restoreAddedFragments(java.util.List)
com.google.android.gms.tasks.zzk: void cancel()
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn: void adjustIncompleteIndicatorColumnRowNumbers(com.google.zxing.pdf417.decoder.BarcodeMetadata)
com.google.firebase.database.core.SyncPoint: com.google.firebase.database.snapshot.Node getCompleteServerCache(com.google.firebase.database.core.Path)
com.google.firebase.database.core.utilities.Validation: java.util.Map parseAndValidateUpdate(com.google.firebase.database.core.Path,java.util.Map)
com.google.firebase.database.core.view.EventGenerator$1: int compare(java.lang.Object,java.lang.Object)
io.flutter.plugins.imagepicker.ImagePickerCache: void clear()
io.flutter.plugin.editing.TextInputPlugin$1: void clearClient()
androidx.appcompat.view.menu.MenuBuilder: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: android.content.Context createDisplayContext(android.view.Display)
com.google.firebase.components.OptionalProvider: com.google.firebase.components.OptionalProvider of(com.google.firebase.inject.Provider)
com.google.android.gms.common.internal.GmsClientSupervisor$zza: android.content.ComponentName getComponentName()
androidx.fragment.app.FragmentManagerState$1: FragmentManagerState$1()
com.google.zxing.oned.EAN8Reader: int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder)
com.google.firebase.database.core.EventRegistration: boolean isUserInitiated()
com.google.android.gms.dynamic.zaf: zaf(com.google.android.gms.dynamic.DeferredLifecycleHelper)
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.Feature[] getAvailableFeatures()
androidx.collection.SparseArrayCompat: java.lang.String toString()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map mapOf(kotlin.Pair)
com.google.firebase.database.core.utilities.PushIdGenerator: java.lang.String successor(java.lang.String)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugin.editing.ListenableEditingState: void endBatchEdit()
com.google.android.gms.common.zzb: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.app.AppCompatActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation: DecodedInformation(int,java.lang.String)
com.google.firebase.database.tubesock.WebSocketHandshake: java.lang.String createNonce()
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyDown(int,android.view.KeyEvent)
com.google.zxing.aztec.detector.Detector$Point: com.google.zxing.ResultPoint toResultPoint()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.gms.maps.model.PolygonOptions: boolean isGeodesic()
androidx.fragment.app.FragmentTransition$3: FragmentTransition$3(androidx.fragment.app.FragmentTransition$Callback,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getMinimumWidth()
com.google.firebase.database.core.SyncTree$16: void visitEntry(java.lang.Object,java.lang.Object)
kotlinx.coroutines.internal.LockFreeTaskQueue: boolean addLast(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
androidx.versionedparcelable.VersionedParcel: void writeCharSequence(java.lang.CharSequence,int)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingListen: PersistentConnectionImpl$OutstandingListen(com.google.firebase.database.connection.RequestResultCallback,com.google.firebase.database.connection.PersistentConnectionImpl$QuerySpec,java.lang.Long,com.google.firebase.database.connection.ListenHashProvider,com.google.firebase.database.connection.PersistentConnectionImpl$1)
kotlinx.coroutines.flow.FlowKt__BuildersKt: kotlinx.coroutines.flow.Flow flow(kotlin.jvm.functions.Function2)
kotlin.collections.CollectionsKt__CollectionsJVMKt: java.util.List listOf(java.lang.Object)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: boolean isValidBarcodeColumn(com.google.zxing.pdf417.decoder.DetectionResult,int)
com.google.firebase.components.CycleDetector$ComponentNode: void removeDependent(com.google.firebase.components.CycleDetector$ComponentNode)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
kotlinx.coroutines.scheduling.DefaultScheduler: java.lang.String toString()
com.google.android.gms.common.api.GoogleApiActivity: void onCancel(android.content.DialogInterface)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel)
com.google.android.gms.maps.model.Marker: void remove()
com.google.android.gms.maps.model.zzt: zzt(com.google.android.gms.maps.model.TileOverlayOptions,com.google.android.gms.maps.model.TileProvider)
com.google.zxing.oned.Code39Reader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScroll(int,int,int,int,int[])
com.journeyapps.barcodescanner.camera.CameraInstance$4: void run()
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
kotlinx.coroutines.AbstractCoroutine: void resumeWith(java.lang.Object)
androidx.fragment.app.FragmentLayoutInflaterFactory$1: FragmentLayoutInflaterFactory$1(androidx.fragment.app.FragmentLayoutInflaterFactory,androidx.fragment.app.FragmentStateManager)
androidx.appcompat.app.AppCompatActivity: void openOptionsMenu()
kotlinx.coroutines.internal.ThreadSafeHeap: void addImpl(kotlinx.coroutines.internal.ThreadSafeHeapNode)
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.PolylineOptions clickable(boolean)
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object)
com.google.firebase.database.connection.PersistentConnectionImpl$1: PersistentConnectionImpl$1(com.google.firebase.database.connection.PersistentConnectionImpl,com.google.android.gms.tasks.TaskCompletionSource)
com.google.firebase.database.snapshot.BooleanNode: java.lang.String getHashRepresentation(com.google.firebase.database.snapshot.Node$HashVersion)
com.journeyapps.barcodescanner.camera.CameraSettings: boolean isScanInverted()
androidx.fragment.app.Fragment: boolean isStateSaved()
com.google.android.gms.maps.model.zzg: java.lang.Object[] newArray(int)
androidx.arch.core.internal.SafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentManager: void setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
kotlinx.coroutines.scheduling.NonBlockingContext: NonBlockingContext()
com.google.android.gms.common.ErrorDialogFragment: com.google.android.gms.common.ErrorDialogFragment newInstance(android.app.Dialog,android.content.DialogInterface$OnCancelListener)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.String nameString()
com.google.android.gms.maps.CameraUpdate: CameraUpdate(com.google.android.gms.dynamic.IObjectWrapper)
com.google.firebase.database.core.SyncTree: com.google.firebase.database.DataSnapshot persistenceServerCache(com.google.firebase.database.Query)
com.google.firebase.database.core.persistence.PruneForest: com.google.firebase.database.core.persistence.PruneForest keep(com.google.firebase.database.core.Path)
androidx.fragment.app.FragmentManager: void attachFragment(androidx.fragment.app.Fragment)
androidx.appcompat.widget.AppCompatSeekBar: void drawableStateChanged()
androidx.exifinterface.media.ExifInterface: void getRw2Attributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature: FlutterRenderer$DisplayFeature(android.graphics.Rect,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState)
kotlin.collections.EmptyMap: int hashCode()
com.google.firebase.database.snapshot.StringNode: int compareLeafValues(com.google.firebase.database.snapshot.LeafNode)
androidx.core.app.NotificationCompat$Action: android.app.PendingIntent getActionIntent()
com.google.zxing.oned.EAN13Reader: com.google.zxing.BarcodeFormat getBarcodeFormat()
kotlinx.coroutines.channels.LinkedListChannel: LinkedListChannel(kotlin.jvm.functions.Function1)
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: int hashCode()
io.flutter.plugin.editing.TextEditingDelta: org.json.JSONObject toJSON()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onUserLeaveHint()
kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineResumed(kotlin.coroutines.Continuation)
androidx.core.widget.NestedScrollView: int computeVerticalScrollExtent()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$2200(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action)
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn: java.lang.String toString()
io.flutter.plugins.imagepicker.ImagePickerUtils: boolean isPermissionPresentInManifest(android.content.Context,java.lang.String)
io.flutter.embedding.android.FlutterSplashView$1: void onFlutterEngineAttachedToFlutterView(io.flutter.embedding.engine.FlutterEngine)
com.google.zxing.qrcode.decoder.DataMask$1: DataMask$1(java.lang.String,int)
com.google.zxing.datamatrix.decoder.Version: java.lang.String toString()
com.google.android.gms.maps.model.Dash: java.lang.String toString()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay fromValue(java.lang.String)
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean)
androidx.core.widget.NestedScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)
com.google.firebase.database.core.SyncTree$KeepSyncedEventRegistration: boolean isSameListener(com.google.firebase.database.core.EventRegistration)
kotlin.random.jdk8.PlatformThreadLocalRandom: java.util.Random getImpl()
io.flutter.plugins.googlemaps.TileProviderController: java.lang.String access$100(io.flutter.plugins.googlemaps.TileProviderController)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderBackgroundThread: void getApplicationSupportDirectory(io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.common.api.internal.zace: void zaa(com.google.android.gms.common.api.internal.zacf)
androidx.activity.result.IntentSenderRequest$1: androidx.activity.result.IntentSenderRequest createFromParcel(android.os.Parcel)
com.google.zxing.qrcode.detector.FinderPatternFinder: com.google.zxing.qrcode.detector.FinderPatternInfo find(java.util.Map)
com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState: com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState[] values()
io.flutter.embedding.android.DrawableSplashScreen: DrawableSplashScreen(android.graphics.drawable.Drawable,android.widget.ImageView$ScaleType,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: VectorDrawableCompat$VGroup()
androidx.collection.MapCollections: boolean removeAllHelper(java.util.Map,java.util.Collection)
kotlinx.coroutines.internal.ThreadSafeHeap: boolean remove(kotlinx.coroutines.internal.ThreadSafeHeapNode)
com.google.android.gms.maps.model.zze: java.lang.Object[] newArray(int)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void zac(com.google.android.gms.common.api.Status)
com.google.firebase.database.core.EventRegistration: void setIsUserInitiated(boolean)
kotlinx.coroutines.JobImpl: boolean handlesException()
com.google.zxing.aztec.detector.Detector$Point: java.lang.String toString()
androidx.fragment.app.Fragment: java.lang.Object getReenterTransition()
com.google.android.gms.maps.MapView$zza: void onSaveInstanceState(android.os.Bundle)
com.google.firebase.database.core.persistence.TrackedQueryManager$2: TrackedQueryManager$2()
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.String toString()
kotlin.collections.ArraysKt___ArraysKt: java.util.List sortedWith(java.lang.Object[],java.util.Comparator)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean childHasFocus(android.view.View)
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: AccessibilityViewCommand$CommandArguments()
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet,int)
com.google.android.gms.common.api.GoogleApi: int getInstanceId()
com.google.android.gms.common.api.internal.ListenerHolder: com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey getListenerKey()
androidx.window.embedding.ActivityStack: int hashCode()
io.flutter.plugins.imagepicker.FileUtils: java.lang.String getPathFromUri(android.content.Context,android.net.Uri)
com.google.zxing.qrcode.decoder.Decoder: com.google.zxing.common.DecoderResult decode(com.google.zxing.qrcode.decoder.BitMatrixParser,java.util.Map)
com.google.firebase.database.core.SyncTree: java.util.List ackUserWrite(long,boolean,boolean,com.google.firebase.database.core.utilities.Clock)
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getWrappedDrawable()
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState: boolean isIsoIec646()
com.google.firebase.FirebaseApp: java.lang.Object access$300()
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getTitle()
kotlin.ranges.RangesKt___RangesKt: long coerceAtMost(long,long)
kotlinx.coroutines.DispatchedTask: java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object)
androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean frameworkAvailable()
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: com.google.zxing.common.DecoderResult decodeCodewords(int[],int,int[])
io.flutter.embedding.android.FlutterActivity: void onCreate(android.os.Bundle)
com.google.firebase.database.core.persistence.TrackedQueryManager$6: int compare(java.lang.Object,java.lang.Object)
com.google.android.gms.common.api.internal.zabm: void onSignOutComplete()
com.google.firebase.database.core.Repo$17: Repo$17(com.google.firebase.database.core.Repo)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(int,int,int,java.lang.CharSequence)
com.google.zxing.oned.ITFReader: int[] findGuardPattern(com.google.zxing.common.BitArray,int,int[])
androidx.core.view.DisplayCutoutCompat: boolean equals(java.lang.Object)
androidx.appcompat.widget.SearchView: boolean onItemSelected(int)
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: ScrollingTabContainerView$TabAdapter(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.appcompat.view.menu.MenuPopupHelper: boolean tryShow()
com.google.zxing.aztec.detector.Detector: int getRotation(int[],int)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
kotlin.collections.IntIterator: void remove()
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key)
androidx.fragment.app.FragmentController: void dispatchResume()
com.google.firebase.database.Query: com.google.firebase.database.Query limitToFirst(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean hasSpans()
com.google.firebase.database.core.utilities.DefaultRunLoop: DefaultRunLoop()
kotlinx.coroutines.InvokeOnCompletion: InvokeOnCompletion(kotlin.jvm.functions.Function1)
com.google.firebase.database.connection.WebsocketConnection: void close()
androidx.fragment.app.FragmentStore: boolean containsActiveFragment(java.lang.String)
androidx.appcompat.view.menu.SubMenuBuilder: SubMenuBuilder(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
com.google.firebase.database.collection.ArraySortedMap: java.util.Iterator reverseIterator()
com.google.firebase.database.core.SyncTree: com.google.firebase.database.core.WriteTree access$300(com.google.firebase.database.core.SyncTree)
com.google.android.gms.common.ConnectionResult: void writeToParcel(android.os.Parcel,int)
androidx.fragment.app.FragmentManager: android.os.Parcelable saveAllState()
com.lyokone.location.FlutterLocationService: FlutterLocationService()
com.google.firebase.database.core.ValueProvider$ExistingValueProvider: com.google.firebase.database.snapshot.Node node()
com.lyokone.location.LocationPlugin: void access$000(com.lyokone.location.LocationPlugin,com.lyokone.location.FlutterLocationService)
androidx.arch.core.internal.SafeIterableMap$ListIterator: java.util.Map$Entry next()
com.google.firebase.FirebaseOptions$Builder: com.google.firebase.FirebaseOptions$Builder setGaTrackingId(java.lang.String)
com.google.firebase.database.core.WriteTree: com.google.firebase.database.snapshot.NamedNode calcNextNodeAfterPost(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node,com.google.firebase.database.snapshot.NamedNode,boolean,com.google.firebase.database.snapshot.Index)
kotlin.ranges.RangesKt___RangesKt: int coerceIn(int,int,int)
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder: void encodeCompressedDate(java.lang.StringBuilder,int)
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: RestorationChannel$1(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: DrawableSplashScreen$DrawableSplashScreenView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatBackgroundHelper: boolean shouldApplyFrameworkTintUsingColorFilter()
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean)
com.journeyapps.barcodescanner.camera.FitXYStrategy: float absRatio(float)
com.google.firebase.database.android.SqlPersistenceStorageEngine: void overwriteServerCache(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node)
androidx.exifinterface.media.ExifInterface: void readExifSegment(byte[],int)
androidx.core.text.PrecomputedTextCompat$Params: PrecomputedTextCompat$Params(android.text.PrecomputedText$Params)
com.google.android.gms.maps.model.CircleOptions: double getRadius()
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String getVariationSettings()
com.google.firebase.internal.DataCollectionConfigStorage: DataCollectionConfigStorage(android.content.Context,java.lang.String,com.google.firebase.events.Publisher)
androidx.appcompat.app.AppCompatDialog: void setContentView(android.view.View)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: int getStartColumn(com.google.zxing.pdf417.decoder.DetectionResult,int,int,boolean)
com.google.android.gms.common.api.Status: int hashCode()
com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)
androidx.arch.core.internal.SafeIterableMap$ListIterator: void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry)
io.flutter.plugin.editing.TextInputPlugin: void setPlatformViewTextInputClient(int,boolean)
androidx.fragment.app.Fragment: void callStartTransitionListener(boolean)
com.google.firebase.platforminfo.AutoValue_LibraryVersion: int hashCode()
kotlinx.coroutines.NonDisposableHandle: kotlinx.coroutines.Job getParent()
com.google.android.gms.dynamite.zzb: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$zzb zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$zza)
androidx.fragment.app.FragmentTransitionCompat21: void removeTarget(java.lang.Object,android.view.View)
com.google.firebase.database.core.utilities.Pair: Pair(java.lang.Object,java.lang.Object)
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric: boolean isFirstDigitFNC1()
com.google.firebase.database.android.AndroidPlatform: com.google.firebase.database.core.RunLoop newRunLoop(com.google.firebase.database.core.Context)
com.google.firebase.database.core.SyncTree: com.google.firebase.database.snapshot.Node calcCompleteEventCache(com.google.firebase.database.core.Path,java.util.List)
kotlinx.coroutines.JobSupport: java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object)
com.google.android.gms.common.internal.ClientSettings: java.util.Set getAllRequestedScopes()
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: java.lang.String toString()
io.flutter.plugins.googlemaps.PolylineBuilder: boolean consumeTapEvents()
com.google.firebase.database.snapshot.BooleanNode: int compareLeafValues(com.google.firebase.database.snapshot.BooleanNode)
androidx.fragment.app.FragmentStateManager: void create()
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
com.lyokone.location.MethodCallHandlerImpl: void onServiceEnabled(io.flutter.plugin.common.MethodChannel$Result)
androidx.window.embedding.ActivityStack: java.lang.String toString()
com.google.zxing.common.StringUtils: java.lang.String guessEncoding(byte[],java.util.Map)
com.google.firebase.database.core.operation.Operation: com.google.firebase.database.core.operation.Operation$OperationType getType()
io.flutter.plugins.googlemaps.TileProviderController: TileProviderController(io.flutter.plugin.common.MethodChannel,java.lang.String)
kotlinx.coroutines.internal.StackTraceRecoveryKt: kotlin.Pair causeAndStacktrace(java.lang.Throwable)
kotlin.collections.EmptySet: boolean isEmpty()
kotlinx.coroutines.Dispatchers: Dispatchers()
com.google.android.gms.common.GoogleApiAvailability: java.lang.String getErrorString(int)
com.google.android.gms.maps.GoogleMap: void setOnInfoWindowClickListener(com.google.android.gms.maps.GoogleMap$OnInfoWindowClickListener)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getPrimaryNavigationFragment()
androidx.fragment.app.FragmentController: android.os.Parcelable saveAllState()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: VectorDrawableCompat$VFullPath()
com.google.firebase.database.collection.StandardComparator: int compare(java.lang.Comparable,java.lang.Comparable)
com.google.android.gms.maps.model.zza: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.core.view.ViewCompat$UnhandledKeyEventManager: android.util.SparseArray getCapturedKeys()
com.google.firebase.database.core.operation.Merge: com.google.firebase.database.core.operation.Operation operationForChild(com.google.firebase.database.snapshot.ChildKey)
com.google.firebase.database.core.CompoundWrite: boolean hasCompleteWrite(com.google.firebase.database.core.Path)
androidx.core.content.res.ComplexColorCompat: boolean isGradient()
com.baseflow.geolocator.permission.PermissionUtils: boolean hasPermissionInManifest(android.content.Context,java.lang.String)
com.google.firebase.database.DataSnapshot: java.lang.Iterable getChildren()
com.google.firebase.database.core.Repo: void runOnDisconnectEvents()
androidx.appcompat.widget.AppCompatSeekBar: AppCompatSeekBar(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void draw(android.graphics.Canvas)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode fromValue(java.lang.String)
com.google.android.gms.common.api.internal.zzc: android.os.Bundle zzb(com.google.android.gms.common.api.internal.zzc)
androidx.core.text.PrecomputedTextCompat: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: boolean onStateChanged(int[])
androidx.appcompat.widget.Toolbar: void onDetachedFromWindow()
androidx.collection.MapCollections$EntrySet: boolean containsAll(java.util.Collection)
androidx.lifecycle.ClassesInfoCache$CallbackInfo: ClassesInfoCache$CallbackInfo(java.util.Map)
com.google.android.gms.maps.model.TileOverlay: void setVisible(boolean)
com.google.zxing.qrcode.decoder.Version$ECBlocks: int getECCodewordsPerBlock()
com.google.firebase.database.tubesock.WebSocketReceiver: WebSocketReceiver(com.google.firebase.database.tubesock.WebSocket)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.Removed removed()
com.google.firebase.database.core.Repo$TransactionData: long access$1900(com.google.firebase.database.core.Repo$TransactionData)
androidx.core.widget.TextViewCompat: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
io.flutter.plugin.common.MethodChannel: void setMethodCallHandler(io.flutter.plugin.common.MethodChannel$MethodCallHandler)
androidx.appcompat.graphics.drawable.DrawableContainer: void applyTheme(android.content.res.Resources$Theme)
com.google.android.gms.dynamite.DynamiteModule: DynamiteModule(android.content.Context)
com.google.firebase.components.RestrictedComponentContainer: com.google.firebase.inject.Deferred getDeferred(java.lang.Class)
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.internal.LockFreeLinkedListHead getQueue()
com.google.android.gms.internal.maps.zzj: void setStrokeColor(int)
androidx.fragment.app.FragmentTransitionCompat21: void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)
com.google.android.gms.dynamite.zzb: zzb()
androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onHasView()
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchTrackballEvent(android.view.MotionEvent)
kotlinx.coroutines.JobSupport: java.lang.Object makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object)
androidx.core.widget.NestedScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
androidx.core.view.WindowInsetsControllerCompat$Impl: void setAppearanceLightStatusBars(boolean)
com.google.firebase.database.connection.PersistentConnectionImpl$9: void run()
com.google.android.gms.common.internal.ConnectionErrorMessages: java.lang.String getErrorNotificationMessage(android.content.Context,int)
androidx.fragment.app.FragmentManager: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)
androidx.collection.LongSparseArray: long keyAt(int)
com.google.android.gms.signin.internal.zai: zai(int,com.google.android.gms.common.internal.ResolveAccountRequest)
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
androidx.window.layout.WindowMetrics: java.lang.String toString()
com.google.zxing.qrcode.decoder.DecodedBitStreamParser: void decodeByteSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,com.google.zxing.common.CharacterSetECI,java.util.Collection,java.util.Map)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
kotlin.jvm.internal.CallableReference$NoReceiver: kotlin.jvm.internal.CallableReference$NoReceiver access$000()
androidx.appcompat.widget.ResourcesWrapper: ResourcesWrapper(android.content.res.Resources)
androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()
com.google.firebase.database.snapshot.ChildrenNode: com.google.firebase.database.snapshot.Node getChild(com.google.firebase.database.core.Path)
androidx.multidex.MultiDex$V14$ICSElementConstructor: MultiDex$V14$ICSElementConstructor(java.lang.Class)
com.google.android.gms.signin.internal.zaj: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.plugin.platform.PlatformPlugin$1: void showSystemUiMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode)
com.google.firebase.database.core.WriteTree: com.google.firebase.database.snapshot.Node calcCompleteEventCache(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node,java.util.List,boolean)
androidx.appcompat.app.AppCompatDelegateImpl: void onSaveInstanceState(android.os.Bundle)
androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitPlaceholderRule plus$window_release(androidx.window.embedding.ActivityFilter)
com.google.android.gms.internal.maps.zzg: zzg(android.os.IBinder)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean performPrivateCommand(java.lang.String,android.os.Bundle)
com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnCanceledListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.common.internal.BaseGmsClient$zzd: BaseGmsClient$zzd(com.google.android.gms.common.internal.BaseGmsClient,int)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingPut: PersistentConnectionImpl$OutstandingPut(java.lang.String,java.util.Map,com.google.firebase.database.connection.RequestResultCallback,com.google.firebase.database.connection.PersistentConnectionImpl$1)
androidx.appcompat.app.AppCompatDelegateImpl$6: AppCompatDelegateImpl$6(androidx.appcompat.app.AppCompatDelegateImpl)
io.flutter.plugins.googlemaps.Convert: java.lang.String interpretMarkerOptions(java.lang.Object,io.flutter.plugins.googlemaps.MarkerOptionsSink)
com.google.android.gms.maps.internal.zzk: void onStop()
com.google.firebase.database.connection.PersistentConnectionImpl: boolean isInterrupted(java.lang.String)
com.google.zxing.Result: void addResultPoints(com.google.zxing.ResultPoint[])
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean updateTint(int[])
com.google.zxing.Binarizer: com.google.zxing.LuminanceSource getLuminanceSource()
com.google.firebase.database.core.view.ViewCache: ViewCache(com.google.firebase.database.core.view.CacheNode,com.google.firebase.database.core.view.CacheNode)
com.google.android.gms.internal.location.zzb: zzb(java.lang.String)
kotlinx.coroutines.internal.ThreadState: ThreadState(kotlin.coroutines.CoroutineContext,int)
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn: void adjustCompleteIndicatorColumnRowNumbers(com.google.zxing.pdf417.decoder.BarcodeMetadata)
io.flutter.plugins.firebase.database.FlutterFirebaseAppRegistrar: java.util.List getComponents()
com.google.zxing.maxicode.MaxiCodeReader: MaxiCodeReader()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewAttachedToWindow(android.view.View)
io.flutter.plugin.platform.PlatformPlugin: io.flutter.embedding.engine.systemchannels.PlatformChannel access$1200(io.flutter.plugin.platform.PlatformPlugin)
androidx.fragment.app.DefaultSpecialEffectsController$4: void onAnimationStart(android.view.animation.Animation)
androidx.fragment.app.FragmentStore: FragmentStore()
com.google.android.gms.maps.internal.zzas: zzas()
androidx.core.widget.AutoScrollHelper$ClampedScroller: int getHorizontalDirection()
androidx.appcompat.view.SupportMenuInflater$MenuState: void resetGroup()
io.flutter.embedding.android.FlutterImageView: void init()
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)
io.flutter.plugin.platform.PlatformViewsController: void access$1300(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean doPerformContextMenuAction(int)
com.google.firebase.database.core.utilities.Tree$1: void visitTree(com.google.firebase.database.core.utilities.Tree)
androidx.fragment.app.FragmentActivity: void onStop()
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$4500(io.flutter.view.AccessibilityBridge$SemanticsNode,java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
io.flutter.plugins.imagepicker.ImagePickerDelegate: void handleChooseVideoResult(int,android.content.Intent)
net.touchcapture.qr.flutterqr.CustomFramingRectBarcodeView: android.graphics.Rect calculateFramingRect(android.graphics.Rect,android.graphics.Rect)
androidx.fragment.app.FragmentHostCallback: void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: void complete(java.lang.Object,java.lang.Object)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: AnimatedVectorDrawableCompat(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources)
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.ContextMenu$ContextMenuInfo getMenuInfo()
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
com.google.android.gms.tasks.zzv: zzv(com.google.android.gms.tasks.zzu,java.util.concurrent.Callable)
com.google.android.gms.maps.model.PolygonOptions: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.MenuItem getItem()
com.google.firebase.database.core.persistence.TrackedQueryManager$2: boolean evaluate(java.util.Map)
com.google.android.gms.common.internal.GmsClientSupervisor$zza: java.lang.String toString()
androidx.fragment.app.Fragment: java.lang.Object getSharedElementReturnTransition()
androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String)
com.google.firebase.database.core.RepoInfo: java.lang.String toString()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.dynamic.DeferredLifecycleHelper: void onStop()
com.journeyapps.barcodescanner.camera.CameraSurface: CameraSurface(android.view.SurfaceHolder)
kotlinx.coroutines.InactiveNodeList: InactiveNodeList(kotlinx.coroutines.NodeList)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initCubic(float,float,float,float)
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: CascadingMenuPopup$3$1(androidx.appcompat.view.menu.CascadingMenuPopup$3,androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,androidx.appcompat.view.menu.MenuBuilder)
com.google.android.gms.common.internal.zze: boolean zza(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)
com.google.firebase.database.core.UserWriteRecord: boolean isVisible()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener)
androidx.appcompat.view.menu.ListMenuPresenter: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.appcompat.view.menu.MenuBuilder: android.content.Context getContext()
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
androidx.fragment.app.DialogFragment$4: void onChanged(androidx.lifecycle.LifecycleOwner)
net.touchcapture.qr.flutterqr.QRView: void setScanAreaSize(double,double,double)
com.google.firebase.components.ComponentRuntime: com.google.firebase.inject.Provider setOfProvider(java.lang.Class)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.google.android.gms.common.GoogleApiAvailability: void zaa(android.app.Activity,android.app.Dialog,java.lang.String,android.content.DialogInterface$OnCancelListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)
androidx.appcompat.widget.AbsActionBarView: void onConfigurationChanged(android.content.res.Configuration)
androidx.window.R$attr: R$attr()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.ColorFilter getColorFilter()
com.google.android.gms.internal.location.zzbd: boolean equals(java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController$1: void createAndroidViewForPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
com.google.firebase.database.android.SqlPersistenceStorageEngine: void setTransactionSuccessful()
androidx.core.app.TaskStackBuilder: void startActivities()
com.google.firebase.database.core.Repo: void access$500(com.google.firebase.database.core.Repo,java.util.List)
com.google.firebase.database.connection.WebsocketConnection: WebsocketConnection(com.google.firebase.database.connection.ConnectionContext,com.google.firebase.database.connection.HostInfo,java.lang.String,java.lang.String,com.google.firebase.database.connection.WebsocketConnection$Delegate,java.lang.String)
kotlinx.coroutines.JobSupport: void promoteSingleToNodeList(kotlinx.coroutines.JobNode)
com.google.firebase.database.collection.ImmutableSortedMapIterator: boolean hasNext()
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.activity.ComponentActivity$1: ComponentActivity$1(androidx.activity.ComponentActivity)
androidx.appcompat.widget.SuggestionsAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderPlatformThread: void getTemporaryDirectory(io.flutter.plugin.common.MethodChannel$Result)
androidx.multidex.MultiDex: void clearOldDexDir(android.content.Context)
androidx.collection.MapCollections$KeySet: void clear()
com.google.firebase.components.ComponentRuntime: java.util.List processInstanceComponents(java.util.List)
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: VectorDrawableCompat$VClipPath()
com.google.zxing.oned.UPCEANReader: boolean checkStandardUPCEANChecksum(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void onSetButtonDrawable()
com.google.android.gms.tasks.zzr: zzr()
io.flutter.plugins.firebase.database.ChildEventsProxy: void onChildChanged(com.google.firebase.database.DataSnapshot,java.lang.String)
com.google.firebase.database.collection.LLRBBlackValueNode: boolean isRed()
io.flutter.plugins.googlemaps.PolylinesController: java.lang.String getPolylineId(java.lang.Object)
com.google.zxing.aztec.detector.Detector: int sampleLine(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int)
com.google.firebase.database.Query: com.google.firebase.database.Query startAt(boolean)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence)
com.google.firebase.database.tubesock.MessageBuilderFactory$TextBuilder$1: java.nio.charset.CharsetDecoder initialValue()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void afterTask(int)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task whenAll(com.google.android.gms.tasks.Task[])
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable recoverStackTrace(java.lang.Throwable)
kotlin.text.StringsKt__StringsKt: kotlin.ranges.IntRange getIndices(java.lang.CharSequence)
com.google.firebase.database.tubesock.MessageBuilderFactory$TextBuilder$1: MessageBuilderFactory$TextBuilder$1()
kotlin.internal.ProgressionUtilKt: int differenceModulo(int,int,int)
com.google.android.gms.internal.maps.zzy: void setClickable(boolean)
com.google.firebase.database.connection.PersistentConnectionImpl: void onReady(long,java.lang.String)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void addView(java.lang.Object[])
com.google.zxing.pdf417.decoder.ec.ModulusGF: int inverse(int)
com.journeyapps.barcodescanner.camera.CameraInstance: com.journeyapps.barcodescanner.Size getPreviewSize()
androidx.core.app.Person: boolean isBot()
io.flutter.plugin.localization.LocalizationPlugin$1: java.lang.String getStringResource(java.lang.String,java.lang.String)
com.google.android.gms.common.internal.ApiExceptionUtil: com.google.android.gms.common.api.ApiException fromStatus(com.google.android.gms.common.api.Status)
com.google.android.gms.maps.model.ButtCap: java.lang.String toString()
androidx.appcompat.view.menu.MenuWrapperICS: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: AccessibilityViewEmbedder$ViewAndId(android.view.View,int)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String getGivenName()
com.google.firebase.database.snapshot.KeyIndex: com.google.firebase.database.snapshot.NamedNode makePost(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node)
com.google.android.gms.location.zzac: zzac()
com.google.android.gms.maps.model.Polyline: void setPattern(java.util.List)
androidx.appcompat.app.AlertController: void setView(android.view.View)
androidx.appcompat.widget.ContentFrameLayout: void onAttachedToWindow()
com.google.zxing.ResultPoint: float getX()
kotlin.coroutines.EmptyCoroutineContext: java.lang.String toString()
kotlinx.coroutines.scheduling.LimitingDispatcher: void afterTask()
androidx.core.widget.CompoundButtonCompat: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$100(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo)
com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.CameraUpdate newCameraPosition(com.google.android.gms.maps.model.CameraPosition)
com.google.android.gms.common.api.Api: java.lang.String getName()
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task add$default(kotlinx.coroutines.scheduling.WorkQueue,kotlinx.coroutines.scheduling.Task,boolean,int,java.lang.Object)
io.flutter.embedding.android.KeyChannelResponder: KeyChannelResponder(io.flutter.embedding.engine.systemchannels.KeyEventChannel)
com.google.zxing.pdf417.decoder.DecodedBitStreamParser: java.lang.String decodeBase900toBase10(int[],int)
androidx.appcompat.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.appcompat.app.AlertController: void setupCustomContent(android.view.ViewGroup)
io.flutter.plugins.firebase.database.QueryBuilder: void startAfter(java.util.Map)
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: void completeResumeReceive(java.lang.Object)
kotlin.text.StringsKt__StringsKt: int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object)
androidx.fragment.app.SpecialEffectsController: android.view.ViewGroup getContainer()
kotlinx.coroutines.JobSupport$ChildCompletion: void invoke(java.lang.Throwable)
androidx.core.view.ViewCompat: void setScrollIndicators(android.view.View,int,int)
com.baseflow.geolocator.GeolocatorLocationService$LocalBinder: GeolocatorLocationService$LocalBinder(com.baseflow.geolocator.GeolocatorLocationService,com.baseflow.geolocator.GeolocatorLocationService)
com.baseflow.geolocator.permission.LocationPermission: LocationPermission(java.lang.String,int)
com.google.android.gms.common.internal.zze: android.os.Handler zzb(com.google.android.gms.common.internal.zze)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)
com.google.android.gms.internal.maps.zzae: void clearTileCache()
androidx.appcompat.widget.ButtonBarLayout: int getNextVisibleChildIndex(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void setExitFadeDuration(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle: PlatformChannel$SystemChromeStyle(java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Boolean,java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Integer,java.lang.Boolean)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
kotlinx.coroutines.JobSupport: java.lang.String access$cancellationExceptionMessage(kotlinx.coroutines.JobSupport)
kotlinx.coroutines.internal.InlineList: java.lang.Object plus-FjFbRPM(java.lang.Object,java.lang.Object)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.NodeList getOrPromoteCancellingList(kotlinx.coroutines.Incomplete)
androidx.core.widget.NestedScrollView: void ensureGlows()
androidx.appcompat.view.menu.MenuBuilder: void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)
com.google.android.gms.dynamic.zaf: void zaa(com.google.android.gms.dynamic.LifecycleDelegate)
androidx.appcompat.view.menu.MenuBuilder: java.lang.String getActionViewStatesKey()
com.google.firebase.database.snapshot.KeyIndex: com.google.firebase.database.snapshot.NamedNode maxPost()
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderBackgroundThread: void getExternalStorageDirectories(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: int unrandomize255State(int,int)
com.google.android.gms.maps.model.Cap: Cap(int,android.os.IBinder,java.lang.Float)
com.google.firebase.database.core.utilities.ImmutableTree: com.google.firebase.database.core.utilities.ImmutableTree getChild(com.google.firebase.database.snapshot.ChildKey)
androidx.collection.MapCollections$ValuesCollection: MapCollections$ValuesCollection(androidx.collection.MapCollections)
com.lyokone.location.FlutterLocation$2: FlutterLocation$2(com.lyokone.location.FlutterLocation)
com.google.android.gms.common.api.internal.LifecycleCallback: void onSaveInstanceState(android.os.Bundle)
com.google.firebase.database.collection.RBTreeSortedMap: java.util.Comparator getComparator()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: WindowInfoTrackerImpl$windowLayoutInfo$1(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: boolean timeToExecute(long)
com.google.firebase.database.core.view.Change: com.google.firebase.database.core.view.Change valueChange(com.google.firebase.database.snapshot.IndexedNode)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$1600(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.window.embedding.SplitPairRule: boolean getClearTop()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setPriority(int)
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable)
com.lyokone.location.MethodCallHandlerImpl: void onChangeNotificationOptions(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.common.api.internal.BackgroundDetector: void addListener(com.google.android.gms.common.api.internal.BackgroundDetector$BackgroundStateChangeListener)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: java.lang.String toString()
com.google.firebase.database.util.JsonMapper: java.util.List unwrapJsonArray(org.json.JSONArray)
com.google.zxing.oned.UPCEANExtension5Support: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[])
com.google.android.gms.maps.model.BitmapDescriptorFactory: com.google.android.gms.maps.model.BitmapDescriptor fromBitmap(android.graphics.Bitmap)
com.google.common.util.concurrent.AbstractFuture: java.lang.Object get()
com.journeyapps.barcodescanner.CameraPreview: void onLayout(boolean,int,int,int,int)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setWindowTitle(java.lang.CharSequence)
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: ActionBarOverlayLayout$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.lifecycle.SavedStateHandleController: void attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode[] realloc()
androidx.fragment.app.DialogFragment$3: void onDismiss(android.content.DialogInterface)
androidx.appcompat.view.menu.ExpandedMenuView: void initialize(androidx.appcompat.view.menu.MenuBuilder)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: MethodChannel$IncomingMethodCallHandler$1(io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.google.firebase.database.connection.util.RetryHelper$Builder: com.google.firebase.database.connection.util.RetryHelper$Builder withRetryExponent(double)
androidx.appcompat.widget.SuggestionsAdapter: void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable)
com.google.firebase.database.logging.DefaultLogger: com.google.firebase.database.logging.Logger$Level getLogLevel()
androidx.activity.result.ActivityResult: ActivityResult(int,android.content.Intent)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setCheckable(boolean)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task trySteal(boolean)
androidx.lifecycle.ReportFragment: void dispatch(androidx.lifecycle.Lifecycle$Event)
com.google.zxing.pdf417.decoder.BoundingBox: BoundingBox(com.google.zxing.pdf417.decoder.BoundingBox)
com.google.firebase.database.android.SqlPersistenceStorageEngine: void pruneCache(com.google.firebase.database.core.Path,com.google.firebase.database.core.persistence.PruneForest)
com.google.zxing.qrcode.detector.Detector: com.google.zxing.common.PerspectiveTransform createTransform(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int)
com.google.firebase.database.Transaction: com.google.firebase.database.Transaction$Result success(com.google.firebase.database.MutableData)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$1: java.lang.Object invoke(java.lang.Object)
androidx.collection.ArrayMap: java.util.Collection values()
androidx.appcompat.app.AppCompatActivity: void setContentView(int)
androidx.appcompat.app.AlertDialog: android.widget.ListView getListView()
io.flutter.plugins.googlemaps.CircleController: java.lang.String getGoogleMapsCircleId()
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
com.google.android.gms.common.internal.StringResourceValueReader: StringResourceValueReader(android.content.Context)
com.google.zxing.datamatrix.decoder.Version$ECB: Version$ECB(int,int)
androidx.window.layout.HardwareFoldingFeature: int hashCode()
io.flutter.plugins.firebase.database.QueryBuilder: void startAt(java.util.Map)
kotlinx.coroutines.scheduling.TaskImpl: java.lang.String toString()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)
androidx.core.text.PrecomputedTextCompat: android.text.PrecomputedText getPrecomputedText()
androidx.collection.MapCollections$MapIterator: java.lang.Object getKey()
androidx.lifecycle.LiveData$ObserverWrapper: boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)
com.google.android.gms.maps.model.PolylineOptions: int getJointType()
com.google.zxing.pdf417.decoder.Codeword: int getRowNumber()
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.LatLng getPosition()
androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)
com.google.firebase.database.core.CompoundWrite$2: CompoundWrite$2(com.google.firebase.database.core.CompoundWrite,java.util.Map,boolean)
com.google.firebase.database.core.Repo: void access$3100(com.google.firebase.database.core.Repo,java.util.List,com.google.firebase.database.core.utilities.Tree)
androidx.appcompat.widget.ActionMenuView: void dismissPopupMenus()
com.google.zxing.pdf417.PDF417Reader: int getMinWidth(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)
com.google.android.gms.internal.maps.zzv: boolean isInfoWindowShown()
com.google.zxing.datamatrix.decoder.Version$ECBlocks: Version$ECBlocks(int,com.google.zxing.datamatrix.decoder.Version$ECB,com.google.zxing.datamatrix.decoder.Version$ECB,com.google.zxing.datamatrix.decoder.Version$1)
io.flutter.plugins.googlemaps.GoogleMapController: android.view.View getView()
androidx.appcompat.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)
androidx.collection.MapCollections$ValuesCollection: boolean removeAll(java.util.Collection)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
com.google.android.gms.maps.model.TileOverlayOptions: com.google.android.gms.maps.model.TileOverlayOptions tileProvider(com.google.android.gms.maps.model.TileProvider)
com.google.firebase.database.core.SyncTree$10: SyncTree$10(com.google.firebase.database.core.SyncTree,com.google.firebase.database.core.Tag,com.google.firebase.database.core.Path,java.util.Map)
com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: void setFailedResult(com.google.android.gms.common.api.Status)
androidx.fragment.app.Fragment: void onPause()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1: AppCompatSpinner$DropdownPopup$1(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,androidx.appcompat.widget.AppCompatSpinner)
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: void resolveMethod(android.content.Context)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
kotlinx.coroutines.JobSupport: java.lang.String toDebugString()
com.google.android.gms.common.ConnectionResult: ConnectionResult(int)
com.journeyapps.barcodescanner.camera.CameraManager: int getCameraRotation()
kotlin.text.DelimitedRangesSequence$iterator$1: java.lang.Object next()
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
com.google.firebase.database.core.utilities.ImmutableTree: java.lang.String toString()
kotlin.Pair: java.lang.Object getSecond()
androidx.appcompat.widget.DropDownListView: void clickPressedItem(android.view.View,int)
com.google.firebase.database.core.utilities.Pair: java.lang.String toString()
com.google.firebase.database.core.view.EventRaiser: EventRaiser(com.google.firebase.database.core.Context)
com.google.android.gms.common.internal.BaseGmsClient$zzd: void onPostInitComplete(int,android.os.IBinder,android.os.Bundle)
com.google.android.gms.dynamite.DynamiteModule: android.content.Context getModuleContext()
com.google.zxing.oned.rss.expanded.decoders.DecodedChar: boolean isFNC1()
com.google.zxing.DecodeHintType: java.lang.Class getValueType()
androidx.appcompat.widget.ListPopupWindow: int getWidth()
androidx.core.graphics.drawable.IconCompat: int getType()
androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity requireActivity()
com.google.zxing.oned.OneDReader: void recordPatternInReverse(com.google.zxing.common.BitArray,int,int[])
com.google.firebase.provider.FirebaseInitProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)
com.google.zxing.oned.rss.expanded.decoders.AI013x0xDecoder: AI013x0xDecoder(com.google.zxing.common.BitArray)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet)
com.google.firebase.database.core.utilities.Utilities: int compareLongs(long,long)
io.flutter.embedding.android.FlutterActivity: android.graphics.drawable.Drawable getSplashScreenFromManifest()
androidx.appcompat.app.AppCompatDelegateImpl: int updateStatusGuard(androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.core.view.DisplayCutoutCompat: int getSafeInsetLeft()
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.google.firebase.database.OnDisconnect$3: void run()
com.google.firebase.database.core.view.DataEvent: com.google.firebase.database.DataSnapshot getSnapshot()
com.google.android.gms.common.api.internal.BasePendingResult: void zab(com.google.android.gms.common.api.Result)
com.baseflow.geolocator.location.LocationAccuracyStatus: LocationAccuracyStatus(java.lang.String,int)
androidx.fragment.app.FragmentActivity: void onLowMemory()
com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: void run(com.google.android.gms.common.api.Api$AnyClient)
com.google.firebase.database.android.SqlPersistenceStorageEngine: void removeAllUserWrites()
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionPause(android.transition.Transition)
com.google.firebase.database.Query: void addEventRegistration(com.google.firebase.database.core.EventRegistration)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean isStateful()
com.google.android.gms.maps.internal.zzg: void setOnInfoWindowClickListener(com.google.android.gms.maps.internal.zzab)
androidx.window.layout.WindowInfoTrackerImpl: WindowInfoTrackerImpl(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.WindowBackend)
androidx.appcompat.app.AppCompatActivity: void invalidateOptionsMenu()
kotlinx.coroutines.scheduling.LimitingDispatcher: int getTaskMode()
androidx.window.embedding.EmbeddingAdapter: boolean translateParentMetricsPredicate$lambda-4(androidx.window.embedding.SplitRule,android.view.WindowMetrics)
com.google.firebase.database.core.utilities.ImmutableTree: java.util.Iterator iterator()
androidx.appcompat.app.AlertController$AlertParams: void createListView(androidx.appcompat.app.AlertController)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: SidecarCompat$DistinctSidecarElementCallback(androidx.window.layout.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback)
androidx.versionedparcelable.VersionedParcelParcel: boolean readField(int)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.util.concurrent.Executor getExecutor()
androidx.core.graphics.TypefaceCompatBaseImpl: TypefaceCompatBaseImpl()
io.flutter.plugin.editing.TextInputPlugin: void autofill(android.util.SparseArray)
com.google.android.gms.location.zzy: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.MarkerOptions zIndex(float)
com.google.common.util.concurrent.AbstractFuture: void interruptTask()
com.google.android.gms.tasks.Tasks$zza: void onSuccess(java.lang.Object)
io.flutter.plugins.googlemaps.TileProviderController: com.google.android.gms.maps.model.Tile getTile(int,int,int)
androidx.appcompat.view.menu.MenuItemImpl: boolean showsTextAsAction()
kotlin.coroutines.jvm.internal.DebugMetadataKt: int getLabel(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.google.android.gms.maps.model.Marker: void setDraggable(boolean)
androidx.core.provider.FontRequest: java.lang.String getProviderPackage()
com.google.android.gms.common.api.Api$ClientKey: Api$ClientKey()
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.internal.Symbol tryResumeImpl(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1)
com.google.zxing.common.HybridBinarizer: void thresholdBlock(byte[],int,int,int,int,com.google.zxing.common.BitMatrix)
androidx.versionedparcelable.ParcelImpl$1: ParcelImpl$1()
com.google.firebase.database.connection.PersistentConnectionImpl: void refreshAuthToken(java.lang.String)
androidx.appcompat.view.menu.MenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
kotlinx.coroutines.EventLoopImplBase: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.appcompat.widget.ListPopupWindow: int buildDropDown()
androidx.lifecycle.ViewModelProvider$KeyedFactory: ViewModelProvider$KeyedFactory()
androidx.window.embedding.MatcherUtils: MatcherUtils()
com.journeyapps.barcodescanner.CameraPreview$5: void cameraClosed()
com.google.android.gms.maps.UiSettings: boolean isCompassEnabled()
com.google.zxing.common.BitArray: int getNextUnset(int)
androidx.core.graphics.drawable.DrawableCompat: void jumpToCurrentState(android.graphics.drawable.Drawable)
com.google.android.gms.internal.maps.zzv: void setDraggable(boolean)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: android.graphics.drawable.Drawable newDrawable()
io.flutter.embedding.android.FlutterActivity: void onPostResume()
androidx.collection.SimpleArrayMap: int indexOfValue(java.lang.Object)
kotlinx.coroutines.EventLoopKt: kotlinx.coroutines.EventLoop createEventLoop()
io.flutter.plugin.platform.PlatformViewsController: void unlockInputConnection(io.flutter.plugin.platform.VirtualDisplayController)
com.google.zxing.client.android.InactivityTimer: android.os.Handler access$100(com.google.zxing.client.android.InactivityTimer)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean onStateChange(int[])
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getNextNode()
androidx.fragment.app.FragmentController: boolean dispatchPrepareOptionsMenu(android.view.Menu)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionResume(android.transition.Transition)
androidx.exifinterface.media.ExifInterface: int getMimeType(java.io.BufferedInputStream)
com.google.zxing.oned.MultiFormatUPCEANReader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: boolean isAlphaTo646ToAlphaLatch(int)
com.google.zxing.qrcode.detector.FinderPatternFinder: float crossCheckVertical(int,int,int,int)
androidx.core.widget.NestedScrollView: void fling(int)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory getFragmentFactory()
androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)
com.google.firebase.database.core.SyncTree$KeepSyncedEventRegistration: com.google.firebase.database.core.view.DataEvent createEvent(com.google.firebase.database.core.view.Change,com.google.firebase.database.core.view.QuerySpec)
androidx.fragment.app.FragmentController: void dispatchStop()
androidx.customview.view.AbsSavedState: android.os.Parcelable getSuperState()
androidx.appcompat.widget.ResourceManagerInternal: void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[])
com.google.android.gms.common.internal.zzd: zzd()
com.google.zxing.common.HybridBinarizer: com.google.zxing.common.BitMatrix getBlackMatrix()
androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable getDrawable(int)
com.baseflow.geolocator.LocationServiceHandlerImpl: void startListening(android.content.Context,io.flutter.plugin.common.BinaryMessenger)
com.google.android.gms.internal.maps.zzc: void writeBoolean(android.os.Parcel,boolean)
kotlin.Pair: java.lang.String toString()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void touch(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlinx.coroutines.internal.StackTraceRecoveryKt: void mergeRecoveredTraces(java.lang.StackTraceElement[],java.util.ArrayDeque)
com.google.android.gms.common.GoogleApiAvailabilityLight: int isGooglePlayServicesAvailable(android.content.Context,int)
androidx.appcompat.view.menu.MenuItemImpl: boolean isActionButton()
com.google.android.gms.maps.model.Polyline: void setJointType(int)
androidx.fragment.app.BackStackRecord: androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment)
kotlin.collections.IntIterator: java.lang.Object next()
com.google.android.gms.dynamic.zab: zab(com.google.android.gms.dynamic.DeferredLifecycleHelper,android.os.Bundle)
kotlinx.coroutines.CoroutineDispatcher$Key$1: CoroutineDispatcher$Key$1()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: VectorDrawableCompat$VGroup(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)
com.journeyapps.barcodescanner.camera.PreviewScalingStrategy: com.journeyapps.barcodescanner.Size getBestPreviewSize(java.util.List,com.journeyapps.barcodescanner.Size)
io.flutter.plugins.googlemaps.Convert: java.util.Map tileOverlayArgumentsToJson(java.lang.String,int,int,int)
kotlin.ranges.IntProgression: boolean equals(java.lang.Object)
androidx.window.embedding.ActivityFilter: boolean matchesActivity(android.app.Activity)
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$3000(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)
kotlin.collections.EmptyList: java.lang.Object remove(int)
androidx.exifinterface.media.ExifInterface: void closeFileDescriptor(java.io.FileDescriptor)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: FlutterActivityLaunchConfigs$BackgroundMode(java.lang.String,int)
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key: ExecutorCoroutineDispatcher$Key()
com.google.firebase.database.android.AndroidEventTarget: void restart()
io.flutter.embedding.engine.systemchannels.RestorationChannel: io.flutter.plugin.common.MethodChannel$Result access$402(io.flutter.embedding.engine.systemchannels.RestorationChannel,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.app.AlertController$AlertParams$2: AlertController$AlertParams$2(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController)
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect maximumWindowBounds(android.app.Activity)
androidx.core.app.ComponentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.core.app.ActivityRecreator: java.lang.Class getActivityThreadClass()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.zxing.qrcode.detector.AlignmentPatternFinder: float crossCheckVertical(int,int,int,int)
com.google.firebase.database.collection.ArraySortedMap: java.lang.Object[] access$000(com.google.firebase.database.collection.ArraySortedMap)
androidx.appcompat.app.AlertController$2: void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int)
com.google.android.gms.maps.model.TileOverlayOptions: boolean isVisible()
androidx.core.text.PrecomputedTextCompat: int getSpanStart(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.String toString()
com.google.android.gms.maps.UiSettings: void setMapToolbarEnabled(boolean)
androidx.appcompat.widget.ActionMenuPresenter: boolean hideSubMenus()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: ExtensionEmbeddingBackend$EmbeddingCallbackImpl(androidx.window.embedding.ExtensionEmbeddingBackend)
androidx.appcompat.widget.Toolbar$1: boolean onMenuItemClick(android.view.MenuItem)
com.google.firebase.database.OnDisconnect: com.google.android.gms.tasks.Task cancelInternal(com.google.firebase.database.DatabaseReference$CompletionListener)
kotlin.ranges.IntProgression$Companion: IntProgression$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.firebase.database.connection.PersistentConnectionImpl: com.google.firebase.database.logging.LogWrapper access$1500(com.google.firebase.database.connection.PersistentConnectionImpl)
androidx.core.app.ActivityCompat$2: void run()
com.google.android.gms.common.api.internal.BasePendingResult$CallbackHandler: BasePendingResult$CallbackHandler(android.os.Looper)
com.google.firebase.database.android.SqlPersistenceStorageEngine$PersistentCacheOpenHelper: SqlPersistenceStorageEngine$PersistentCacheOpenHelper(android.content.Context,java.lang.String)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: AnimatedStateListDrawableCompat$FrameInterpolator(android.graphics.drawable.AnimationDrawable,boolean)
com.google.firebase.database.util.GAuthToken: java.lang.String getToken()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
kotlin.ExceptionsKt__ExceptionsKt: void addSuppressed(java.lang.Throwable,java.lang.Throwable)
kotlinx.coroutines.channels.Closed: java.lang.Object getPollResult()
com.google.android.gms.signin.internal.zab: zab(int,int,android.content.Intent)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments: AccessibilityViewCommand$MoveWindowArguments()
com.google.firebase.FirebaseApp: void notifyBackgroundStateChangeListeners(boolean)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeByteArray(android.os.Parcel,int,byte[],boolean)
androidx.fragment.app.SpecialEffectsController$Operation$1: SpecialEffectsController$Operation$1(androidx.fragment.app.SpecialEffectsController$Operation)
com.google.zxing.pdf417.decoder.Codeword: boolean isValidRowNumber(int)
androidx.appcompat.app.TwilightManager: android.location.Location getLastKnownLocation()
com.google.zxing.maxicode.decoder.Decoder: Decoder()
com.google.android.gms.common.api.internal.zza: void onCreate(android.os.Bundle)
com.baseflow.geolocator.location.BackgroundNotification: int getDrawableId(java.lang.String,java.lang.String)
com.google.firebase.components.ComponentRuntime: ComponentRuntime(java.util.concurrent.Executor,java.lang.Iterable,java.util.Collection,com.google.firebase.components.ComponentRuntime$1)
com.google.firebase.database.core.SyncTree$4: java.lang.Object call()
androidx.window.core.Version: Version(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.maps.zzp: void zza(com.google.android.gms.internal.maps.zzw)
io.flutter.plugin.editing.ListenableEditingState: ListenableEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState,android.view.View)
androidx.appcompat.view.menu.MenuPopup: boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder)
io.flutter.embedding.engine.dart.DartExecutor: void executeDartEntrypoint(io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint)
com.google.firebase.database.core.utilities.Tree: Tree(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.core.utilities.Tree,com.google.firebase.database.core.utilities.TreeNode)
com.google.firebase.database.core.SyncTree: java.util.List applyTaggedRangeMerges(com.google.firebase.database.core.Path,java.util.List,com.google.firebase.database.core.Tag)
com.google.android.gms.location.zzad: com.google.android.gms.common.api.Api$Client buildClient(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,java.lang.Object,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)
androidx.lifecycle.ReportFragment: void onDestroy()
androidx.core.view.inputmethod.EditorInfoCompat: void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[])
com.google.firebase.components.RestrictedComponentContainer$RestrictedPublisher: RestrictedComponentContainer$RestrictedPublisher(java.util.Set,com.google.firebase.events.Publisher)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_RETRY$p()
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setIcon(android.graphics.drawable.Drawable)
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper: WindowInfoRepositoryCallbackAdapterWrapper(androidx.window.java.layout.WindowInfoTrackerCallbackAdapter)
androidx.appcompat.graphics.drawable.DrawableContainer: int getAlpha()
io.flutter.view.AccessibilityBridge: android.content.ContentResolver access$1000(io.flutter.view.AccessibilityBridge)
com.journeyapps.barcodescanner.camera.DisplayConfiguration: com.journeyapps.barcodescanner.Size getBestPreviewSize(java.util.List,boolean)
com.google.zxing.maxicode.MaxiCodeReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map)
androidx.fragment.app.FragmentTransition: void configureTransitionsOrdered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback)
com.google.zxing.oned.rss.expanded.ExpandedPair: java.lang.String toString()
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setTiltGesturesEnabled(boolean)
com.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnSuccessListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener)
com.google.firebase.database.snapshot.PriorityIndex: int compare(java.lang.Object,java.lang.Object)
com.google.firebase.database.core.Repo$TransactionData: com.google.firebase.database.snapshot.Node access$1502(com.google.firebase.database.core.Repo$TransactionData,com.google.firebase.database.snapshot.Node)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()
kotlinx.coroutines.EventLoopImplBase: long getNextTime()
com.google.android.gms.signin.internal.zaa: zaa()
com.google.firebase.database.connection.HostInfo: HostInfo(java.lang.String,java.lang.String,boolean)
com.google.android.gms.common.internal.DialogRedirect: com.google.android.gms.common.internal.DialogRedirect getInstance(com.google.android.gms.common.api.internal.LifecycleFragment,android.content.Intent,int)
com.google.firebase.database.core.utilities.encoding.CustomClassMapper: java.lang.Object serialize(java.lang.Object)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List emptyList()
com.google.android.gms.common.api.internal.zzc: void onCreate(android.os.Bundle)
com.google.android.gms.maps.zzq: zzq(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnPolylineClickListener)
androidx.multidex.MultiDex: java.lang.reflect.Method access$200(java.lang.Object,java.lang.String,java.lang.Class[])
androidx.appcompat.widget.Toolbar$2: void run()
com.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions,java.lang.String)
androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)
androidx.appcompat.widget.ResourcesWrapper: java.io.InputStream openRawResource(int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister: void registerGeneratedPlugins(io.flutter.embedding.engine.FlutterEngine)
androidx.appcompat.view.menu.MenuAdapter: long getItemId(int)
androidx.appcompat.widget.DropDownListView: int measureHeightOfChildrenCompat(int,int,int,int,int)
com.google.firebase.database.Query: com.google.firebase.database.ValueEventListener addValueEventListener(com.google.firebase.database.ValueEventListener)
androidx.savedstate.ViewTreeSavedStateRegistryOwner: void set(android.view.View,androidx.savedstate.SavedStateRegistryOwner)
androidx.appcompat.view.menu.StandardMenuPopup: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int getSize()
io.flutter.embedding.android.FlutterSplashView$2: void onFlutterUiNoLongerDisplayed()
com.google.firebase.database.core.Tag: boolean equals(java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$6000(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)
com.google.android.gms.common.internal.ResolveAccountRequest: com.google.android.gms.auth.api.signin.GoogleSignInAccount getSignInAccountHint()
com.google.firebase.database.core.utilities.Tree: java.lang.String toString(java.lang.String)
androidx.lifecycle.LifecycleRegistry: LifecycleRegistry(androidx.lifecycle.LifecycleOwner,boolean)
io.flutter.view.AccessibilityBridge: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation)
io.flutter.plugins.googlemaps.GoogleMapController: void setInitialPolylines(java.lang.Object)
com.google.android.gms.maps.model.Polygon: void setPoints(java.util.List)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingDisconnect: com.google.firebase.database.connection.RequestResultCallback getOnComplete()
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderPlatformThread$1: void onSuccess(java.lang.Object)
androidx.exifinterface.media.ExifInterface: boolean isPngFormat(byte[])
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateIntentPredicates(java.util.Set)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2: void onGlobalLayout()
androidx.fragment.app.Fragment: void onResume()
com.google.android.gms.maps.model.MarkerOptions: boolean isDraggable()
androidx.activity.result.ActivityResult$1: ActivityResult$1()
com.google.firebase.database.DatabaseReference: com.google.android.gms.tasks.Task setValue(java.lang.Object)
com.google.firebase.database.core.utilities.DefaultRunLoop$1: void afterExecute(java.lang.Runnable,java.lang.Throwable)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
com.google.android.gms.common.internal.BaseGmsClient: void getRemoteService(com.google.android.gms.common.internal.IAccountAccessor,java.util.Set)
androidx.core.view.inputmethod.EditorInfoCompat: boolean isPasswordInputType(int)
com.google.common.util.concurrent.AbstractFuture$Waiter: void setNext(com.google.common.util.concurrent.AbstractFuture$Waiter)
com.google.firebase.database.core.ChildEventRegistration: com.google.firebase.database.core.EventRegistration clone(com.google.firebase.database.core.view.QuerySpec)
com.google.firebase.database.snapshot.ChildrenNode$ChildVisitor: void visitEntry(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node)
com.google.android.gms.maps.MapView: MapView(android.content.Context,com.google.android.gms.maps.GoogleMapOptions)
com.google.common.base.Strings: java.lang.String lenientFormat(java.lang.String,java.lang.Object[])
kotlinx.coroutines.channels.Receive: java.lang.Object getOfferResult()
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient$1: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Throwable getContinuationCancellationCause(kotlinx.coroutines.Job)
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.lang.Object parseResult(int,android.content.Intent)
com.google.firebase.database.collection.RBTreeSortedMap$Builder: RBTreeSortedMap$Builder(java.util.List,java.util.Map,com.google.firebase.database.collection.ImmutableSortedMap$Builder$KeyTranslator)
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$3500(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
kotlinx.coroutines.channels.Receive: kotlinx.coroutines.internal.Symbol getOfferResult()
androidx.appcompat.widget.AppCompatSpinner$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.fragment.app.DialogFragment$3: DialogFragment$3(androidx.fragment.app.DialogFragment)
com.google.android.gms.common.api.Scope: java.lang.String getScopeUri()
androidx.fragment.app.FragmentTransition$4: void run()
com.google.firebase.database.core.utilities.Tree: boolean forEachAncestor(com.google.firebase.database.core.utilities.Tree$TreeFilter)
com.google.android.gms.common.internal.zam: java.lang.Object[] newArray(int)
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol access$getCLOSED_EMPTY$p()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
com.google.firebase.database.core.view.QueryParams: boolean loadsAllData()
com.google.android.gms.common.api.internal.zac: zac(int)
androidx.appcompat.graphics.drawable.StateListDrawable: void applyTheme(android.content.res.Resources$Theme)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: VectorDrawableCompat$VectorDrawableCompatState(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.internal.zaad zaf(com.google.android.gms.common.api.internal.GoogleApiManager)
androidx.appcompat.app.AppCompatDelegateImpl$3: AppCompatDelegateImpl$3(androidx.appcompat.app.AppCompatDelegateImpl)
com.google.firebase.database.snapshot.LongNode: int compareLeafValues(com.google.firebase.database.snapshot.LeafNode)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2: AppCompatSpinner$DropdownPopup$2(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup)
com.google.firebase.database.core.Context: com.google.firebase.database.logging.LogWrapper getLogger(java.lang.String)
com.google.zxing.oned.UPCAReader: int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void scheduleListenerRetry(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
androidx.appcompat.widget.AppCompatBackgroundHelper: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.widget.NestedScrollView$SavedState$1: androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String toString()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToActivity()
androidx.fragment.app.FragmentActivity: boolean onPrepareOptionsPanel(android.view.View,android.view.Menu)
com.google.android.gms.signin.internal.zaf: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat getEmbeddingExtension()
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions tiltGesturesEnabled(boolean)
com.baseflow.geolocator.location.LocationOptions: com.baseflow.geolocator.location.LocationOptions parseArguments(java.util.Map)
com.google.android.gms.common.api.Scope: Scope(java.lang.String)
com.google.zxing.oned.UPCEANReader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Map)
com.google.android.gms.common.internal.zzg: android.content.Intent zzs()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setHotspot(float,float)
com.journeyapps.barcodescanner.CameraPreview$2: void surfaceDestroyed(android.view.SurfaceHolder)
androidx.exifinterface.media.ExifInterface: void updateImageSizeValues(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int)
androidx.appcompat.widget.SearchView: void updateSubmitArea()
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: android.content.Intent createIntent(android.content.Context,java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: boolean canReverse()
com.google.zxing.oned.ITFReader: int[] decodeStart(com.google.zxing.common.BitArray)
io.flutter.plugins.firebase.database.TransactionExecutor: TransactionExecutor(io.flutter.plugin.common.MethodChannel)
kotlinx.coroutines.JobSupport: void afterCompletion(java.lang.Object)
com.google.firebase.database.snapshot.DeferredValueNode: com.google.firebase.database.snapshot.Node updatePriority(com.google.firebase.database.snapshot.Node)
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()
com.google.firebase.database.core.SyncTree: SyncTree(com.google.firebase.database.core.Context,com.google.firebase.database.core.persistence.PersistenceManager,com.google.firebase.database.core.SyncTree$ListenProvider)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.SubMenu addSubMenu(int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfTransition(int,int)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1: java.lang.Object run()
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBNode removeMin()
com.google.android.gms.common.internal.BaseGmsClient$zzc: void removeListener()
io.flutter.plugins.googlemaps.PolylineController: void setPoints(java.util.List)
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
androidx.window.embedding.SplitController: void addSplitListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.fragment.app.DialogFragment: void onDismiss(android.content.DialogInterface)
com.google.zxing.MultiFormatReader: com.google.zxing.Result decodeWithState(com.google.zxing.BinaryBitmap)
androidx.appcompat.app.AlertDialog: AlertDialog(android.content.Context,int)
com.google.firebase.database.Query: com.google.firebase.database.Query startAfter(boolean)
androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.widget.ActionMenuPresenter: boolean isOverflowMenuShowing()
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
com.google.firebase.database.core.persistence.DefaultPersistenceManager: com.google.firebase.database.core.view.CacheNode serverCache(com.google.firebase.database.core.view.QuerySpec)
kotlin.coroutines.AbstractCoroutineContextKey: kotlin.coroutines.CoroutineContext$Element tryCast$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.scheduling.LimitingDispatcher: java.lang.String toString()
com.google.zxing.FormatException: FormatException(java.lang.Throwable)
com.google.firebase.database.connection.PersistentConnectionImpl$8: void onResponse(java.util.Map)
com.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnFailureListener(android.app.Activity,com.google.android.gms.tasks.OnFailureListener)
com.google.firebase.database.core.operation.Overwrite: Overwrite(com.google.firebase.database.core.operation.OperationSource,com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node)
com.google.firebase.database.snapshot.ChildrenNode$NamedNodeIterator: com.google.firebase.database.snapshot.NamedNode next()
androidx.lifecycle.LiveData$1: void run()
androidx.appcompat.app.AppCompatDialog: boolean supportRequestWindowFeature(int)
androidx.appcompat.widget.SearchView: boolean hasVoiceSearch()
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: java.lang.String invoke(java.lang.String)
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
com.google.firebase.components.ComponentRuntime: void discoverComponents(java.util.List)
androidx.appcompat.widget.ToolbarWidgetWrapper: int getDisplayOptions()
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.window.layout.SidecarWindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.firebase.database.snapshot.PriorityIndex: com.google.firebase.database.snapshot.NamedNode makePost(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node)
com.journeyapps.barcodescanner.DecoderThread: void stop()
kotlin.coroutines.CoroutineContext$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext)
kotlin.collections.ArraysKt___ArraysJvmKt: java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int)
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2$1: com.google.firebase.database.collection.RBTreeSortedMap$Builder$BooleanChunk next()
com.google.android.gms.common.internal.ResolveAccountResponse: boolean equals(java.lang.Object)
com.google.firebase.database.core.ZombieEventManager: void onZombied(com.google.firebase.database.core.EventRegistration)
com.baseflow.geolocator.location.FusedLocationClient$1: void onLocationAvailability(com.google.android.gms.location.LocationAvailability)
androidx.window.core.Bounds: Bounds(android.graphics.Rect)
androidx.fragment.app.FragmentStateManager: void destroy()
com.google.firebase.database.core.ValidationPath: void checkValid()
com.google.android.gms.common.internal.ResolveAccountResponse: com.google.android.gms.common.ConnectionResult getConnectionResult()
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int[],java.nio.ByteOrder)
androidx.appcompat.app.WindowDecorActionBar: int getDisplayOptions()
com.google.firebase.database.Query: void validateLimit(com.google.firebase.database.core.view.QueryParams)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView$3: SearchView$3(androidx.appcompat.widget.SearchView)
com.google.firebase.database.core.SyncTree$3: java.util.List call()
androidx.fragment.app.FragmentTransition: java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)
io.flutter.util.PathUtils: java.lang.String getCacheDirectory(android.content.Context)
kotlin.sequences.TransformingSequence: kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingSequence)
io.flutter.plugins.imagepicker.ImagePickerDelegate: boolean onActivityResult(int,int,android.content.Intent)
kotlin.collections.EmptyList: java.util.ListIterator listIterator()
androidx.exifinterface.media.ExifInterface: void handleThumbnailFromJfif(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap)
com.baseflow.geolocator.GeolocatorPlugin$1: GeolocatorPlugin$1(com.baseflow.geolocator.GeolocatorPlugin)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityIntentPredicates$lambda-3(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean isTerminated()
androidx.appcompat.app.AlertController$CheckedItemAdapter: boolean hasStableIds()
androidx.appcompat.app.AppCompatDelegate: AppCompatDelegate()
com.google.zxing.common.DecoderResult: int getNumBits()
com.google.firebase.database.snapshot.EmptyNode: com.google.firebase.database.snapshot.EmptyNode Empty()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void setAccessibilityFeatures(int)
androidx.collection.ContainerHelpers: int idealLongArraySize(int)
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void teardownChannel()
kotlin.text.StringsKt__StringsKt: int indexOfAny(java.lang.CharSequence,char[],int,boolean)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: void cancel()
com.google.firebase.database.core.persistence.NoopPersistenceManager: void setQueryInactive(com.google.firebase.database.core.view.QuerySpec)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setActionProvider(android.view.ActionProvider)
com.google.firebase.database.snapshot.LeafNode: java.lang.Object getValue(boolean)
io.flutter.embedding.android.FlutterView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)
com.google.firebase.database.connection.util.StringListReader: int read(char[],int,int)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setVisible(boolean)
androidx.exifinterface.media.ExifInterface: void copyWebPChunk(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream,byte[])
androidx.appcompat.app.TwilightManager: boolean isNight()
androidx.collection.ArraySet: java.lang.String toString()
androidx.activity.result.ActivityResultRegistry: boolean dispatchResult(int,java.lang.Object)
kotlinx.coroutines.internal.UndeliveredElementException: UndeliveredElementException(java.lang.String,java.lang.Throwable)
com.google.android.gms.common.internal.zan: java.lang.Object[] newArray(int)
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric: int getSecondDigit()
net.touchcapture.qr.flutterqr.QRView$startScan$2: void barcodeResult(com.journeyapps.barcodescanner.BarcodeResult)
kotlin.jvm.internal.FunctionReference: boolean isInline()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean getPadding(android.graphics.Rect)
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getValue()
com.google.android.gms.common.api.zza: java.lang.Object[] newArray(int)
com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: void setFailedResult(android.os.RemoteException)
io.flutter.embedding.android.FlutterActivity: void onStart()
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: ActionBarOverlayLayout$LayoutParams(int,int)
com.google.zxing.qrcode.decoder.DecodedBitStreamParser: com.google.zxing.common.DecoderResult decode(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,java.util.Map)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.FoldingFeature translate$window_release(android.app.Activity,androidx.window.extensions.layout.FoldingFeature)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
androidx.fragment.app.Fragment: boolean performPrepareOptionsMenu(android.view.Menu)
androidx.appcompat.widget.ActionBarContextView: void onDetachedFromWindow()
kotlin.Unit: java.lang.String toString()
androidx.appcompat.widget.SuggestionsAdapter: void onClick(android.view.View)
kotlinx.coroutines.internal.StackTraceRecoveryKt: boolean isArtificial(java.lang.StackTraceElement)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
io.flutter.plugin.platform.PlatformViewsController$1: void resizePlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest,java.lang.Runnable)
io.flutter.plugin.platform.PlatformViewsController$1: void synchronizeToNativeViewHierarchy(boolean)
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderPlatformThread$1: void onFailure(java.lang.Throwable)
com.google.android.gms.maps.internal.zzg: com.google.android.gms.internal.maps.zzw addPolygon(com.google.android.gms.maps.model.PolygonOptions)
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)
com.google.firebase.database.core.SyncTree$9: SyncTree$9(com.google.firebase.database.core.SyncTree,com.google.firebase.database.core.Tag,com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node)
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions camera(com.google.android.gms.maps.model.CameraPosition)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization fromValue(java.lang.String)
com.baseflow.geolocator.StreamHandlerImpl: void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object)
androidx.core.widget.TextViewCompat$OreoCallback: void onDestroyActionMode(android.view.ActionMode)
io.flutter.embedding.engine.dart.DartMessenger: DartMessenger(io.flutter.embedding.engine.FlutterJNI)
androidx.appcompat.view.menu.MenuPopup: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
com.journeyapps.barcodescanner.CameraPreview: void setFramingRectSize(com.journeyapps.barcodescanner.Size)
kotlinx.coroutines.JobNode: java.lang.String toString()
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo: androidx.fragment.app.SpecialEffectsController$Operation getOperation()
com.google.common.util.concurrent.SettableFuture: boolean set(java.lang.Object)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
androidx.appcompat.app.AppCompatActivity: void onContentChanged()
io.flutter.plugins.googlemaps.Convert: com.google.android.gms.maps.model.Tile interpretTile(java.util.Map)
androidx.activity.ComponentActivity$1: void run()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence)
com.google.android.gms.location.zzak: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int)
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: FragmentTransition$FragmentContainerTransition()
com.google.firebase.database.core.utilities.ImmutableTree$2: java.lang.Void onNodeValue(com.google.firebase.database.core.Path,java.lang.Object,java.lang.Void)
kotlinx.coroutines.DispatchedTask: DispatchedTask(int)
androidx.activity.result.IntentSenderRequest$Builder: IntentSenderRequest$Builder(android.content.IntentSender)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getAlpha()
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
androidx.fragment.app.Fragment: void onPrimaryNavigationFragmentChanged(boolean)
kotlinx.coroutines.JobSupport: java.lang.Object makeCancelling(java.lang.Object)
com.google.android.gms.common.api.internal.zal: zal(com.google.android.gms.common.api.internal.zak,com.google.android.gms.common.api.internal.zam)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void readList(android.os.Parcel,int,java.util.List,java.lang.ClassLoader)
io.flutter.embedding.android.FlutterSplashView$1: void onFlutterEngineDetachedFromFlutterView()
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: void decodeEdifactSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder)
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState: com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState valueOf(java.lang.String)
kotlin.Result: java.lang.Object constructor-impl(java.lang.Object)
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState: CurrentParsingState()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()
kotlinx.coroutines.scheduling.CoroutineScheduler: void runSafely(kotlinx.coroutines.scheduling.Task)
androidx.fragment.app.FragmentHostCallback: boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
androidx.core.widget.AutoScrollHelper: float constrainEdgeValue(float,float)
androidx.versionedparcelable.VersionedParcel: boolean isStream()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
com.baseflow.geolocator.location.GeolocationManager: void stopPositionUpdates(com.baseflow.geolocator.location.LocationClient)
kotlinx.coroutines.intrinsics.UndispatchedKt: void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.gms.common.api.Scope: int hashCode()
androidx.core.content.ContextCompat: int getColor(android.content.Context,int)
com.google.firebase.database.tubesock.WebSocket: void send(java.lang.String)
com.google.firebase.database.snapshot.ChildKey: java.lang.String access$100(com.google.firebase.database.snapshot.ChildKey)
kotlin.text.StringsKt__StringsKt: int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object)
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.camera.PreviewScalingStrategy getPreviewScalingStrategy()
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.MarkerOptions visible(boolean)
kotlinx.coroutines.JobCancellationException: kotlinx.coroutines.JobCancellationException createCopy()
com.google.android.gms.common.api.internal.BasePendingResult: void setResult(com.google.android.gms.common.api.Result)
com.baseflow.geolocator.location.FusedLocationClient: boolean onActivityResult(int,int)
androidx.appcompat.view.menu.ActionMenuItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
com.google.android.gms.common.internal.ConnectionErrorMessages: java.lang.String zaa(android.content.Context,java.lang.String,java.lang.String)
com.google.android.gms.maps.internal.zzbt: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
com.google.firebase.database.logging.LogWrapper: void debug(java.lang.String,java.lang.Object[])
androidx.arch.core.executor.DefaultTaskExecutor: DefaultTaskExecutor()
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
androidx.window.layout.SidecarCompat$Companion: androidx.window.core.Version getSidecarVersion()
androidx.appcompat.widget.TooltipCompatHandler: boolean updateAnchorPos(android.view.MotionEvent)
kotlin.collections.EmptyIterator: int nextIndex()
androidx.collection.MapCollections$ArrayIterator: MapCollections$ArrayIterator(androidx.collection.MapCollections,int)
com.google.android.gms.maps.model.Gap: java.lang.String toString()
com.google.android.gms.internal.base.zab: zab(android.os.IBinder,java.lang.String)
androidx.collection.MapCollections: boolean retainAllHelper(java.util.Map,java.util.Collection)
androidx.core.widget.AutoScrollHelper: AutoScrollHelper(android.view.View)
com.google.firebase.database.core.utilities.NodeSizeEstimator: long estimateSerializedNodeSize(com.google.firebase.database.snapshot.Node)
com.google.android.gms.maps.model.zzh: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.FirebaseApp$UiExecutor: FirebaseApp$UiExecutor()
com.google.firebase.database.FirebaseDatabase$1: FirebaseDatabase$1(com.google.firebase.database.FirebaseDatabase)
com.lyokone.location.MethodCallHandlerImpl: void startListening(io.flutter.plugin.common.BinaryMessenger)
com.baseflow.geolocator.MethodCallHandlerImpl: void onGetLastKnownPosition(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.journeyapps.barcodescanner.camera.CameraInstance: com.journeyapps.barcodescanner.Size access$400(com.journeyapps.barcodescanner.camera.CameraInstance)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable tryCopyAndVerify(java.lang.Throwable)
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
androidx.appcompat.app.WindowDecorActionBar: void updateVisibility(boolean)
androidx.core.content.res.ComplexColorCompat: int getColor()
androidx.exifinterface.media.ExifInterface: void saveWebpAttributes(java.io.InputStream,java.io.OutputStream)
io.flutter.plugin.platform.PlatformPlugin: void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType)
androidx.appcompat.widget.ActionBarOverlayLayout: void draw(android.graphics.Canvas)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getLinkUri()
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getString(int)
androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl: void applyOverrideConfiguration(android.view.ContextThemeWrapper,android.content.res.Configuration)
kotlin.text.DelimitedRangesSequence: int access$getLimit$p(kotlin.text.DelimitedRangesSequence)
com.google.firebase.database.util.GAuthToken: GAuthToken(java.lang.String,java.util.Map)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
androidx.window.core.Bounds: boolean isZero()
androidx.fragment.app.FragmentController: void dispatchStart()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
io.flutter.plugin.editing.ListenableEditingState: int getComposingEnd()
com.google.firebase.database.snapshot.StringNode: int compareLeafValues(com.google.firebase.database.snapshot.StringNode)
androidx.appcompat.app.AppCompatDelegateImpl$2: AppCompatDelegateImpl$2(androidx.appcompat.app.AppCompatDelegateImpl)
com.google.android.gms.common.internal.zzp: void zze(android.content.Context)
com.google.firebase.database.snapshot.ValueIndex: boolean equals(java.lang.Object)
io.flutter.embedding.android.FlutterImageView: void closeCurrentImage()
io.flutter.plugin.platform.PlatformPlugin: java.lang.CharSequence access$900(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
io.flutter.plugins.firebase.database.TransactionHandler: com.google.android.gms.tasks.Task getTask()
androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleServiceConnected(android.content.ComponentName,android.os.IBinder)
com.google.firebase.database.core.ServerValues: java.lang.Object resolveDeferredLeafValue(java.lang.Object,com.google.firebase.database.core.ValueProvider,java.util.Map)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Collection toCollection(java.lang.Iterable,java.util.Collection)
com.journeyapps.barcodescanner.camera.CameraInstance: void configureCamera()
androidx.customview.view.AbsSavedState$2: androidx.customview.view.AbsSavedState[] newArray(int)
net.touchcapture.qr.flutterqr.QRView: int convertDpToPixels(double)
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
com.google.zxing.pdf417.decoder.BarcodeMetadata: int getRowCount()
com.google.android.gms.maps.GoogleMap: void setOnPolylineClickListener(com.google.android.gms.maps.GoogleMap$OnPolylineClickListener)
androidx.appcompat.app.AlertController$AlertParams$2: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
com.journeyapps.barcodescanner.CameraPreview: void setMarginFraction(double)
kotlin.text.CharsKt__CharKt: boolean equals(char,char,boolean)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAutoMirrored(boolean)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: FragmentAnim$EndViewTransitionAnimation(android.view.animation.Animation,android.view.ViewGroup,android.view.View)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode getOrCreateSemanticsNode(int)
androidx.core.view.AccessibilityDelegateCompat: java.util.List getActionList(android.view.View)
androidx.core.app.NotificationCompat$Action: int getSemanticAction()
androidx.appcompat.widget.AbsActionBarView: boolean onHoverEvent(android.view.MotionEvent)
com.google.android.gms.internal.common.zzc: android.os.Parcelable zza(android.os.Parcel,android.os.Parcelable$Creator)
com.google.android.gms.internal.maps.zzab: void setZIndex(float)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
io.flutter.view.AccessibilityBridge: int access$1172(io.flutter.view.AccessibilityBridge,int)
kotlinx.coroutines.JobKt__JobKt: void ensureActive(kotlin.coroutines.CoroutineContext)
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.PolylineOptions addAll(java.lang.Iterable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onDestroy(androidx.lifecycle.LifecycleOwner)
kotlin.jvm.internal.TypeIntrinsics: java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
com.google.android.gms.internal.location.zzaz: void zza(com.google.android.gms.location.LocationSettingsRequest,com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,java.lang.String)
com.google.android.gms.common.internal.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes[] values()
com.google.android.gms.tasks.zzc: void onComplete(com.google.android.gms.tasks.Task)
com.google.firebase.database.core.Path: Path(java.util.List)
com.google.firebase.database.core.Repo: void onDisconnectCancel(com.google.firebase.database.core.Path,com.google.firebase.database.DatabaseReference$CompletionListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: VectorDrawableCompat(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void doInitialFlutterViewRun()
com.google.firebase.FirebaseApp$GlobalBackgroundStateListener: FirebaseApp$GlobalBackgroundStateListener()
net.touchcapture.qr.flutterqr.QRView: QRView(android.content.Context,io.flutter.plugin.common.BinaryMessenger,int,java.util.HashMap)
com.google.firebase.database.core.persistence.TrackedQueryManager: void cacheTrackedQuery(com.google.firebase.database.core.persistence.TrackedQuery)
kotlin.jvm.internal.Reflection: kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class)
androidx.fragment.app.BackStackState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.Result get()
com.google.firebase.database.core.Path: int access$000(com.google.firebase.database.core.Path)
com.google.android.gms.common.api.internal.zak: void onStop()
com.google.firebase.events.Event: java.lang.Class getType()
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
io.flutter.plugins.googlemaps.CircleController: void setZIndex(float)
com.google.android.gms.internal.location.zza: android.os.IBinder asBinder()
com.google.android.gms.tasks.zzg: com.google.android.gms.tasks.OnCanceledListener zzb(com.google.android.gms.tasks.zzg)
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.CancelHandler makeCancelHandler(kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.AccessibilityChannel getAccessibilityChannel()
androidx.fragment.app.FragmentTransitionImpl: void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map)
com.google.firebase.database.collection.LLRBEmptyNode: com.google.firebase.database.collection.LLRBNode remove(java.lang.Object,java.util.Comparator)
com.google.android.gms.maps.GoogleMap: boolean setIndoorEnabled(boolean)
androidx.lifecycle.ReportFragment: void onPause()
androidx.window.embedding.SplitController: void setStaticSplitRules(java.util.Set)
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider: void run()
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyUpPanel(int,android.view.KeyEvent)
androidx.appcompat.widget.SearchView$5: SearchView$5(androidx.appcompat.widget.SearchView)
com.google.zxing.client.android.InactivityTimer$PowerStatusReceiver: InactivityTimer$PowerStatusReceiver(com.google.zxing.client.android.InactivityTimer)
com.google.android.gms.common.api.Scope: void writeToParcel(android.os.Parcel,int)
com.google.zxing.aztec.decoder.Decoder: byte[] convertBoolArrayToByteArray(boolean[])
com.google.android.gms.internal.maps.zzi: com.google.android.gms.internal.maps.zzh zzc(android.os.IBinder)
androidx.appcompat.widget.VectorEnabledTintResources: VectorEnabledTintResources(android.content.Context,android.content.res.Resources)
androidx.multidex.MultiDex$V19: java.lang.Object[] makeDexElements(java.lang.Object,java.util.ArrayList,java.io.File,java.util.ArrayList)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
kotlin.collections.EmptyMap: java.lang.Object get(java.lang.Object)
com.google.android.gms.common.api.internal.zabm: zabm(com.google.android.gms.common.api.internal.GoogleApiManager$zaa)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()
androidx.core.app.CoreComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)
com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder: java.lang.String parseInformation()
com.google.firebase.database.Query: Query(com.google.firebase.database.core.Repo,com.google.firebase.database.core.Path,com.google.firebase.database.core.view.QueryParams,boolean)
io.flutter.plugins.googlemaps.CircleController: boolean consumeTapEvents()
com.google.firebase.database.core.utilities.Predicate$1: boolean evaluate(java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
com.google.firebase.database.snapshot.LeafNode: java.util.Iterator iterator()
com.google.firebase.database.core.utilities.ImmutableTree: com.google.firebase.database.core.utilities.ImmutableTree set(com.google.firebase.database.core.Path,java.lang.Object)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.lang.Object next()
com.google.android.gms.internal.location.zzas: void zzb()
com.google.firebase.database.core.Repo: void onDisconnectUpdate(com.google.firebase.database.core.Path,java.util.Map,com.google.firebase.database.DatabaseReference$CompletionListener,java.util.Map)
com.google.firebase.database.android.SqlPersistenceStorageEngine: void saveUserOverwrite(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node,long)
com.google.zxing.oned.UPCEANReader: int[] findStartGuardPattern(com.google.zxing.common.BitArray)
com.google.zxing.common.BitArray: java.lang.String toString()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$1: FlutterRenderer$SurfaceTextureRegistryEntry$1(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry)
com.google.firebase.database.Query: com.google.firebase.database.Query endBefore(java.lang.String,java.lang.String)
io.flutter.plugins.firebase.database.EventsProxy: java.util.Map buildAdditionalParams(java.lang.String,java.lang.String)
androidx.appcompat.view.menu.CascadingMenuPopup$3: void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.core.view.ViewCompat: int getWindowSystemUiVisibility(android.view.View)
com.google.android.gms.common.api.Status: void writeToParcel(android.os.Parcel,int)
com.baseflow.geolocator.location.ForegroundNotificationOptions: com.baseflow.geolocator.location.ForegroundNotificationOptions parseArguments(java.util.Map)
com.google.firebase.database.core.persistence.TrackedQueryManager$1: boolean evaluate(java.util.Map)
io.flutter.view.AccessibilityBridge: AccessibilityBridge(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.view.AccessibilityViewEmbedder,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate)
io.flutter.plugin.platform.PlatformPlugin: void access$000(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: ExifInterface$ByteOrderedDataInputStream(byte[])
com.google.android.gms.maps.GoogleMap: void moveCamera(com.google.android.gms.maps.CameraUpdate)
kotlin.ResultKt: java.lang.Object createFailure(java.lang.Throwable)
androidx.fragment.app.Fragment: void setNextTransition(int)
com.google.zxing.qrcode.decoder.DecodedBitStreamParser: void decodeHanziSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int)
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
androidx.exifinterface.media.ExifInterface: void closeQuietly(java.io.Closeable)
androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)
com.google.android.gms.common.api.internal.zaz: void zaag()
com.google.android.gms.maps.model.zzl: java.lang.Object createFromParcel(android.os.Parcel)
com.google.zxing.qrcode.decoder.QRCodeDecoderMetaData: QRCodeDecoderMetaData(boolean)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getResourceName(int)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: void dispose()
io.flutter.plugins.firebase.database.FlutterFirebaseDatabaseException: io.flutter.plugins.firebase.database.FlutterFirebaseDatabaseException unknown(java.lang.String)
androidx.core.content.FileProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])
com.google.firebase.database.connection.PersistentConnectionImpl: void interrupt(java.lang.String)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterView$ZeroSides calculateShouldZeroSides()
com.google.android.gms.maps.model.Polygon: void setFillColor(int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
androidx.core.view.WindowInsetsCompat: void setRootViewData(androidx.core.graphics.Insets)
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.SidecarWindowBackend getInstance(android.content.Context)
androidx.appcompat.widget.AppCompatImageHelper: void setSupportImageTintList(android.content.res.ColorStateList)
com.journeyapps.barcodescanner.DecoderThread: void setDecoder(com.journeyapps.barcodescanner.Decoder)
androidx.fragment.app.Fragment: void onLowMemory()
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderPlatformThread: void executeInBackground(java.util.concurrent.Callable,io.flutter.plugin.common.MethodChannel$Result)
androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentById(int)
androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)
com.lyokone.location.FlutterLocation$2: void onLocationResult(com.google.android.gms.location.LocationResult)
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: boolean isStillNumeric(int)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.content.res.ColorStateList getIconTintList()
com.baseflow.geolocator.permission.PermissionManager: java.util.List getLocationPermissionsFromManifest(android.content.Context)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
androidx.collection.MapCollections: boolean equalsSetHelper(java.util.Set,java.lang.Object)
io.flutter.plugins.flutterexifrotation.FlutterExifRotationPlugin: FlutterExifRotationPlugin()
com.google.android.gms.dynamic.zaf: int getState()
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.zxing.oned.Code39Reader: Code39Reader()
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.google.firebase.database.android.AndroidAppCheckTokenProvider: void addTokenChangeListener(java.util.concurrent.ExecutorService,com.google.firebase.database.core.TokenProvider$TokenChangeListener)
com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.CameraUpdate zoomIn()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBooleanProperty(int,boolean)
com.google.firebase.database.tubesock.WebSocket$2: WebSocket$2(com.google.firebase.database.tubesock.WebSocket)
androidx.appcompat.widget.Toolbar: void ensureContentInsets()
io.flutter.plugin.platform.VirtualDisplayController$1$1: VirtualDisplayController$1$1(io.flutter.plugin.platform.VirtualDisplayController$1)
androidx.appcompat.widget.SearchView$1: void run()
androidx.core.view.ViewParentCompat: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int)
androidx.appcompat.widget.ActionMenuView: boolean isOverflowReserved()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void clearFocus(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.zxing.datamatrix.decoder.Version$ECB: int getDataCodewords()
androidx.appcompat.widget.SuggestionsAdapter: SuggestionsAdapter(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap)
com.google.firebase.database.connection.WebsocketConnection: void handleNewFrameCount(int)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.util.ArrayDeque createStackTrace(kotlin.coroutines.jvm.internal.CoroutineStackFrame)
kotlinx.coroutines.DefaultExecutor: boolean isShutdownRequested()
androidx.fragment.app.Fragment: android.animation.Animator getAnimator()
androidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)
com.google.android.gms.common.api.internal.zah: com.google.android.gms.common.Feature[] zaa(com.google.android.gms.common.api.internal.GoogleApiManager$zaa)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
io.flutter.plugins.imagepicker.ImagePickerPlugin: void onDetachedFromActivityForConfigChanges()
io.flutter.plugins.imagepicker.ImagePickerDelegate: void handleCaptureVideoResult(int)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: DropDownListView$GateKeeperDrawable(android.graphics.drawable.Drawable)
io.flutter.plugin.platform.PlatformPlugin$1: void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType)
androidx.fragment.app.SpecialEffectsController: void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager)
io.flutter.plugins.googlemaps.MarkerController: void setPosition(com.google.android.gms.maps.model.LatLng)
androidx.window.embedding.ActivityFilter: java.lang.String toString()
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getApplicationSupportDirectory()
com.google.android.gms.maps.model.Cap: int hashCode()
androidx.appcompat.widget.AppCompatTextHelper: void setAllCaps(boolean)
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1: java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.arch.core.internal.SafeIterableMap$Entry: int hashCode()
androidx.appcompat.view.menu.MenuItemWrapperICS: MenuItemWrapperICS(android.content.Context,androidx.core.internal.view.SupportMenuItem)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetTop(android.view.DisplayCutout)
androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.view.menu.BaseMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
com.google.android.gms.common.api.Api$AnyClientKey: Api$AnyClientKey()
kotlinx.coroutines.CoroutineDispatcher$Key$1: kotlinx.coroutines.CoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element)
io.flutter.plugin.common.JSONMethodCodec: java.lang.Object decodeEnvelope(java.nio.ByteBuffer)
androidx.appcompat.app.AlertDialog: void setTitle(java.lang.CharSequence)
com.google.firebase.database.snapshot.PriorityIndex: int hashCode()
com.google.firebase.database.connection.PersistentConnectionImpl: void onAppCheckRevoked(java.lang.String,java.lang.String)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)
com.google.firebase.database.DatabaseReference: com.google.android.gms.tasks.Task setValueInternal(java.lang.Object,com.google.firebase.database.snapshot.Node,com.google.firebase.database.DatabaseReference$CompletionListener)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingDisconnect: java.lang.String getAction()
io.flutter.plugin.localization.LocalizationPlugin: LocalizationPlugin(android.content.Context,io.flutter.embedding.engine.systemchannels.LocalizationChannel)
com.google.firebase.components.LazySet: void updateSet()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
com.google.zxing.common.reedsolomon.GenericGFPoly: boolean isZero()
com.google.zxing.pdf417.decoder.Codeword: boolean hasValidRowNumber()
com.google.firebase.database.collection.ArraySortedMap$1: java.lang.Object next()
androidx.exifinterface.media.ExifInterface: void swapBasedOnImageSize(int,int)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void zaf(com.google.android.gms.common.api.internal.GoogleApiManager$zaa)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
com.google.zxing.common.reedsolomon.GenericGFPoly: com.google.zxing.common.reedsolomon.GenericGFPoly addOrSubtract(com.google.zxing.common.reedsolomon.GenericGFPoly)
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createSRational(androidx.exifinterface.media.ExifInterface$Rational[],java.nio.ByteOrder)
com.google.zxing.client.android.AmbientLightManager: void start()
com.google.android.gms.common.api.internal.zzc: void onResume()
kotlin.KotlinVersion: int compareTo(kotlin.KotlinVersion)
com.google.android.gms.dynamite.DynamiteModule: int getLocalVersion(android.content.Context,java.lang.String)
kotlinx.coroutines.CompletedContinuation: CompletedContinuation(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable)
io.flutter.plugins.imagepicker.ImageResizer: java.lang.String resizeImageIfNeeded(java.lang.String,java.lang.Double,java.lang.Double,java.lang.Integer)
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence getTitle()
com.google.android.gms.maps.model.VisibleRegion: int hashCode()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPredicates(java.util.Set)
com.google.firebase.database.core.Tag: java.lang.String toString()
io.flutter.embedding.engine.dart.DartMessenger: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
kotlin.jvm.JvmClassMappingKt: java.lang.Class getJavaObjectType(kotlin.reflect.KClass)
io.flutter.embedding.android.FlutterSurfaceView: void access$300(io.flutter.embedding.android.FlutterSurfaceView,int,int)
io.flutter.plugins.googlemaps.MarkerBuilder: void setDraggable(boolean)
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType fromJson(org.json.JSONObject)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.StackTraceElement getStackTraceElement()
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.core.content.res.ResourcesCompat$FontCallback$1: void run()
kotlin.jvm.internal.Reflection: java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda)
com.google.android.gms.maps.internal.zzby: android.os.Parcelable zza(android.os.Bundle,java.lang.String)
androidx.appcompat.widget.SearchView$9: SearchView$9(androidx.appcompat.widget.SearchView)
com.google.android.gms.maps.model.PolygonOptions: float getStrokeWidth()
com.google.android.gms.maps.UiSettings: void setZoomGesturesEnabled(boolean)
com.google.firebase.database.connection.PersistentConnectionImpl$2: void onError(java.lang.String)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setHotspot(float,float)
androidx.appcompat.widget.Toolbar: boolean hasExpandedActionView()
androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumWidth()
io.flutter.embedding.android.FlutterSplashView: android.os.Parcelable onSaveInstanceState()
androidx.fragment.app.Fragment$OnPreAttachedListener: Fragment$OnPreAttachedListener()
io.flutter.plugins.imagepicker.ImagePickerDelegate: void handleVideoResult(java.lang.String)
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: LockFreeLinkedListNode$CondAddOp(kotlinx.coroutines.internal.LockFreeLinkedListNode)
com.google.firebase.database.core.utilities.ImmutableTree: java.lang.Object fold(com.google.firebase.database.core.Path,com.google.firebase.database.core.utilities.ImmutableTree$TreeVisitor,java.lang.Object)
androidx.fragment.app.FragmentController: void dispatchPictureInPictureModeChanged(boolean)
androidx.fragment.app.Fragment$AnimationInfo: Fragment$AnimationInfo()
com.google.firebase.database.core.utilities.DefaultRunLoop$FirebaseThreadFactory: DefaultRunLoop$FirebaseThreadFactory(com.google.firebase.database.core.utilities.DefaultRunLoop)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.gms.internal.common.zza: android.os.Parcel zza(int,android.os.Parcel)
com.google.android.gms.tasks.zzj: void run()
androidx.appcompat.view.menu.MenuBuilder: void setOverrideVisibleItems(boolean)
com.google.zxing.qrcode.QRCodeReader: QRCodeReader()
com.google.zxing.common.BitArray: com.google.zxing.common.BitArray clone()
com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: AbstractFuture$SynchronizedHelper(com.google.common.util.concurrent.AbstractFuture$1)
androidx.fragment.app.FragmentManager: void handleOnBackPressed()
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback)
io.flutter.plugins.googlemaps.GoogleMapController: GoogleMapController(int,android.content.Context,io.flutter.plugin.common.BinaryMessenger,io.flutter.plugins.googlemaps.LifecycleProvider,com.google.android.gms.maps.GoogleMapOptions)
io.flutter.plugins.googlemaps.TileOverlaysController: void addTileOverlays(java.util.List)
kotlinx.coroutines.CoroutineId: java.lang.String toString()
androidx.fragment.app.DialogFragment: void onAttach(android.content.Context)
androidx.appcompat.widget.AppCompatRadioButton: void drawableStateChanged()
com.google.zxing.oned.rss.Pair: void incrementCount()
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
com.google.firebase.database.core.persistence.TrackedQueryManager$2: boolean evaluate(java.lang.Object)
androidx.core.os.CancellationSignal: boolean isCanceled()
androidx.appcompat.widget.DropDownListView: void drawableStateChanged()
com.journeyapps.barcodescanner.CameraPreview$3: CameraPreview$3(com.journeyapps.barcodescanner.CameraPreview)
com.google.android.gms.maps.model.zzk: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.graphics.TypefaceCompatBaseImpl: java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.ActionProvider getActionProvider()
com.journeyapps.barcodescanner.BarcodeView: void pause()
androidx.core.widget.ListViewAutoScrollHelper: ListViewAutoScrollHelper(android.widget.ListView)
androidx.lifecycle.CompositeGeneratedAdaptersObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.android.gms.maps.internal.zzb: com.google.android.gms.dynamic.IObjectWrapper zoomByWithFocus(float,int,int)
kotlin.KotlinVersion: int versionOf(int,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
com.google.android.gms.internal.maps.zzv: com.google.android.gms.maps.model.LatLng getPosition()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.WindowLayoutInfo translate$window_release(android.app.Activity,androidx.window.extensions.layout.WindowLayoutInfo)
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPlaceholderRule parseSplitPlaceholderRule(android.content.Context,android.content.res.XmlResourceParser)
io.flutter.plugin.platform.PlatformViewsController: void detach()
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeDouble(android.os.Parcel,int,double)
androidx.core.provider.CallbackWithHandler: void onTypefaceRetrieved(android.graphics.Typeface)
androidx.core.app.ActivityRecreator$3: ActivityRecreator$3(java.lang.Object,java.lang.Object)
androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: CoroutineScheduler$Worker(kotlinx.coroutines.scheduling.CoroutineScheduler)
androidx.core.widget.AutoScrollHelper$ClampedScroller: float getValueAt(long)
com.google.firebase.components.Dependency: boolean isRequired()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$5700(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.CameraUpdate zoomBy(float,android.graphics.Point)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
com.google.firebase.database.core.SyncTree$ListenContainer: SyncTree$ListenContainer(com.google.firebase.database.core.SyncTree,com.google.firebase.database.core.view.View)
androidx.fragment.app.Fragment: boolean isHideReplaced()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.android.FlutterView access$900(io.flutter.plugin.platform.PlatformViewsController)
androidx.appcompat.app.ActionBar: boolean openOptionsMenu()
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setAlphabeticShortcut(char)
com.google.android.gms.common.api.internal.zag: void zaa(com.google.android.gms.common.api.internal.zaz,boolean)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
com.google.zxing.InvertedLuminanceSource: boolean isRotateSupported()
com.google.firebase.components.Component$Builder: com.google.firebase.components.Component build()
com.google.zxing.LuminanceSource: com.google.zxing.LuminanceSource invert()
com.google.android.gms.maps.internal.zzbe: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
com.google.android.gms.maps.UiSettings: boolean isZoomGesturesEnabled()
com.google.android.gms.common.internal.zzc: zzc()
com.google.android.gms.maps.model.VisibleRegion: VisibleRegion(com.google.android.gms.maps.model.LatLng,com.google.android.gms.maps.model.LatLng,com.google.android.gms.maps.model.LatLng,com.google.android.gms.maps.model.LatLng,com.google.android.gms.maps.model.LatLngBounds)
com.google.firebase.database.core.view.Change: com.google.firebase.database.snapshot.IndexedNode getIndexedNode()
com.journeyapps.barcodescanner.BarcodeResult: byte[] getRawBytes()
com.google.firebase.database.snapshot.ChildrenNode: boolean hasChild(com.google.firebase.database.snapshot.ChildKey)
androidx.window.embedding.SplitRule: boolean equals(java.lang.Object)
io.flutter.embedding.android.FlutterView: void sendUserSettingsToFlutter()
kotlinx.coroutines.scheduling.CoroutineScheduler: void shutdown(long)
com.google.android.gms.location.FusedLocationProviderClient: com.google.android.gms.internal.location.zzaj zza(com.google.android.gms.location.FusedLocationProviderClient,com.google.android.gms.tasks.TaskCompletionSource)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill fromJson(org.json.JSONObject)
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler: java.lang.String toString()
com.google.firebase.database.connection.util.RetryHelper$Builder: com.google.firebase.database.connection.util.RetryHelper build()
androidx.lifecycle.ReflectiveGenericLifecycleObserver: ReflectiveGenericLifecycleObserver(java.lang.Object)
kotlin.collections.EmptyIterator: java.lang.Void previous()
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterTextureView)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: android.view.View onCreateActionView(android.view.MenuItem)
com.google.firebase.database.core.CompoundWrite: com.google.firebase.database.core.CompoundWrite emptyWrite()
com.google.android.gms.maps.internal.zzf: com.google.android.gms.maps.internal.IMapViewDelegate zza(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.maps.GoogleMapOptions)
androidx.fragment.app.Fragment$4: Fragment$4(androidx.fragment.app.Fragment)
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.core.provider.FontRequest: java.util.List getCertificates()
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)
kotlinx.coroutines.channels.ArrayChannel: java.lang.String getBufferDebugString()
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(androidx.appcompat.app.ActionBar$LayoutParams)
kotlinx.coroutines.EventLoop: boolean isUnconfinedLoopActive()
androidx.appcompat.widget.AppCompatTextHelper: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode()
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1: androidx.fragment.app.FragmentManager$LaunchedFragmentInfo createFromParcel(android.os.Parcel)
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission valueOf(java.lang.String)
io.flutter.embedding.android.FlutterView$3: void accept(java.lang.Object)
androidx.lifecycle.SavedStateHandleController$1: SavedStateHandleController$1(androidx.lifecycle.Lifecycle,androidx.savedstate.SavedStateRegistry)
com.google.android.gms.internal.maps.zzc: boolean zza(android.os.Parcel)
com.google.android.gms.maps.internal.zzbx: boolean isZoomGesturesEnabled()
androidx.core.widget.AutoScrollHelper: float computeTargetVelocity(int,float,float,float)
io.flutter.plugin.platform.PlatformPlugin: void restoreSystemChromeSystemUIOverlays()
io.flutter.embedding.android.FlutterView: int guessBottomKeyboardInset(android.view.WindowInsets)
androidx.window.core.Bounds: boolean isEmpty()
io.flutter.plugin.platform.PlatformViewsController$1: void clearFocus(int)
com.google.firebase.database.core.Repo$TransactionData: Repo$TransactionData(com.google.firebase.database.core.Path,com.google.firebase.database.Transaction$Handler,com.google.firebase.database.ValueEventListener,com.google.firebase.database.core.Repo$TransactionStatus,boolean,long)
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: ResourceManagerInternal$ColorFilterLruCache(int)
androidx.appcompat.view.menu.BaseMenuWrapper: android.view.MenuItem getMenuItemWrapper(android.view.MenuItem)
androidx.core.widget.TextViewCompat$OreoCallback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)
androidx.appcompat.app.AppCompatDelegateImpl: void dismissPopups()
androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
com.google.firebase.database.core.ThreadInitializer$1: ThreadInitializer$1()
com.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class,java.lang.Class[])
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function2,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
androidx.appcompat.widget.ResourcesWrapper: int getColor(int)
androidx.collection.LongSparseArray: java.lang.Object get(long)
com.google.zxing.pdf417.decoder.ec.ModulusPoly: int getDegree()
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
io.flutter.plugins.imagepicker.ImagePickerPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task poll()
androidx.core.provider.FontsContractCompat$FontInfo: android.net.Uri getUri()
com.google.firebase.database.logging.LogWrapper: void error(java.lang.String,java.lang.Throwable)
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence)
kotlin.coroutines.ContinuationInterceptor$DefaultImpls: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key)
com.google.firebase.database.core.persistence.CachePolicy$1: boolean shouldPrune(long,long)
kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext)
androidx.fragment.app.FragmentContainerView: void removeViewInLayout(android.view.View)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: char readChar()
kotlinx.coroutines.scheduling.LimitingDispatcher: void dispatch(java.lang.Runnable,boolean)
com.google.android.gms.maps.GoogleMap: void setPadding(int,int,int,int)
com.google.android.gms.dynamite.zzl: com.google.android.gms.dynamic.IObjectWrapper zzb(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,int,com.google.android.gms.dynamic.IObjectWrapper)
com.google.firebase.database.connection.PersistentConnectionImpl: java.util.Map access$2300(com.google.firebase.database.connection.PersistentConnectionImpl)
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.savedstate.SavedStateRegistry: SavedStateRegistry()
kotlinx.coroutines.CoroutineStart: void invoke(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.view.menu.SubMenuBuilder: void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)
com.lyokone.location.BackgroundNotification: BackgroundNotification(android.content.Context,java.lang.String,int)
kotlinx.coroutines.JobSupport: java.lang.String cancellationExceptionMessage()
androidx.fragment.app.FragmentContainerView: void dispatchDraw(android.graphics.Canvas)
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$3: void run()
com.google.firebase.database.snapshot.LeafNode$LeafType: com.google.firebase.database.snapshot.LeafNode$LeafType valueOf(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItem: boolean hasSubMenu()
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setTextAppearance(android.content.Context,int)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo findFocus(int)
com.google.android.gms.common.api.internal.zaad: void onResume()
com.google.firebase.database.snapshot.PathIndex: boolean equals(java.lang.Object)
io.flutter.plugins.googlemaps.GoogleMapController: void setCompassEnabled(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedPreScroll(android.view.View,int,int,int[],int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void ensureImeVisible()
io.flutter.embedding.android.FlutterImageView: FlutterImageView(android.content.Context,android.media.ImageReader,io.flutter.embedding.android.FlutterImageView$SurfaceKind)
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
androidx.appcompat.app.AppCompatDelegateImpl: void onPostResume()
com.google.android.gms.location.LocationSettingsResponse: com.google.android.gms.location.LocationSettingsStates getLocationSettingsStates()
com.google.firebase.database.core.utilities.Validation: void validateWritableKey(java.lang.String)
com.google.android.gms.maps.internal.zzbx: boolean isTiltGesturesEnabled()
io.flutter.plugin.editing.ListenableEditingState: void addEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher)
androidx.appcompat.view.menu.MenuPopupHelper$1: void onDismiss()
androidx.appcompat.view.menu.StandardMenuPopup: boolean flagActionItems()
com.google.zxing.InvertedLuminanceSource: byte[] getMatrix()
com.google.firebase.database.tubesock.WebSocketMessage: java.lang.String getText()
com.google.zxing.qrcode.detector.FinderPatternInfo: com.google.zxing.qrcode.detector.FinderPattern getBottomLeft()
androidx.multidex.ZipUtil$CentralDirectory: ZipUtil$CentralDirectory()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setContentDescription(java.lang.CharSequence)
com.google.android.gms.internal.maps.zzv: void setSnippet(java.lang.String)
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)
androidx.appcompat.view.menu.MenuBuilder: void dispatchPresenterUpdate(boolean)
com.google.firebase.database.collection.ArraySortedMap: int findKey(java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void setEnterFadeDuration(int)
io.flutter.plugin.editing.TextInputPlugin: boolean composingChanged(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
io.flutter.plugin.platform.PlatformViewsController$1: void disposeVirtualDisplayForPlatformView(int)
com.google.android.gms.maps.internal.zzak: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
com.google.firebase.database.core.SyncTree: java.util.Map access$1000(com.google.firebase.database.core.SyncTree)
kotlinx.coroutines.InvokeOnCompletion: java.lang.Object invoke(java.lang.Object)
com.google.firebase.database.tubesock.MessageBuilderFactory$TextBuilder: java.lang.String decodeString(byte[])
com.google.firebase.database.connection.PersistentConnectionImpl: com.google.firebase.database.connection.Connection access$1600(com.google.firebase.database.connection.PersistentConnectionImpl)
androidx.core.app.NotificationCompat$Action: java.lang.CharSequence getTitle()
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityStarted(android.app.Activity)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: boolean isVisibleToUser(android.view.View)
com.google.android.gms.location.LocationSettingsRequest$Builder: com.google.android.gms.location.LocationSettingsRequest build()
androidx.appcompat.widget.AppCompatToggleButton: AppCompatToggleButton(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.DialogFragment$4: void onChanged(java.lang.Object)
androidx.window.embedding.EmbeddingCompat$Companion: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingComponent()
androidx.appcompat.view.menu.ListMenuPresenter: void updateMenuView(boolean)
com.google.firebase.database.core.utilities.ParsedUrl: boolean equals(java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: TextInputChannel$TextInputType(java.lang.String,int,java.lang.String)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setLogo(int)
com.google.firebase.database.collection.RBTreeSortedMap: java.util.Iterator reverseIterator()
androidx.fragment.app.FragmentStore: java.util.List getActiveFragmentStateManagers()
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object[] sortedArrayWith(java.lang.Object[],java.util.Comparator)
androidx.appcompat.widget.AppCompatEditText: boolean onTextContextMenuItem(int)
androidx.appcompat.view.ContextThemeWrapper: android.content.res.AssetManager getAssets()
com.google.android.gms.signin.zad: com.google.android.gms.common.api.Api$Client buildClient(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,java.lang.Object,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)
com.google.zxing.qrcode.decoder.BitMatrixParser: int copyBit(int,int,int)
io.flutter.view.AccessibilityBridge: boolean performCursorMoveAction(io.flutter.view.AccessibilityBridge$SemanticsNode,int,android.os.Bundle,boolean)
com.google.firebase.database.collection.ArraySortedMap: java.lang.Object[] access$100(com.google.firebase.database.collection.ArraySortedMap)
com.google.firebase.FirebaseApp: boolean equals(java.lang.Object)
io.flutter.plugins.googlemaps.TileProviderController$Worker: void success(java.lang.Object)
com.google.firebase.components.Component: java.util.Set getDependencies()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int getId()
com.google.firebase.database.DataSnapshot: com.google.firebase.database.DatabaseReference access$000(com.google.firebase.database.DataSnapshot)
kotlinx.coroutines.scheduling.Task: Task(long,kotlinx.coroutines.scheduling.TaskContext)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.google.android.gms.maps.model.Circle: int hashCode()
io.flutter.embedding.engine.FlutterShellArgs: io.flutter.embedding.engine.FlutterShellArgs fromIntent(android.content.Intent)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
androidx.window.layout.HardwareFoldingFeature: boolean isSeparating()
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void zac(com.google.android.gms.common.api.internal.zac)
com.google.android.gms.maps.model.Polygon: int hashCode()
com.google.firebase.database.core.utilities.Validation: void validateNullableKey(java.lang.String)
io.flutter.util.PathUtils: java.lang.String getDataDirPath(android.content.Context)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void computeContentWidth()
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator)
androidx.core.app.NotificationCompat$Action: boolean isContextual()
com.google.android.gms.common.internal.BaseGmsClient$zze: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.google.android.gms.location.LocationResult: java.lang.String toString()
io.flutter.plugin.platform.PlatformViewsController: void attachToFlutterRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
com.google.zxing.oned.rss.expanded.decoders.DecodedChar: DecodedChar(int,char)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
com.google.android.gms.common.internal.BaseGmsClient$zzb: boolean zzb(android.os.Message)
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void success(java.lang.Object)
net.touchcapture.qr.flutterqr.Shared: io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding getBinding()
kotlinx.coroutines.channels.Receive: Receive()
com.google.android.gms.internal.maps.zzv: void setVisible(boolean)
io.flutter.plugin.platform.VirtualDisplayController: void onFlutterViewAttached(android.view.View)
androidx.versionedparcelable.VersionedParcelParcel: java.lang.CharSequence readCharSequence()
androidx.customview.view.AbsSavedState$2: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.database.snapshot.ChildKey: int hashCode()
androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)
com.google.android.gms.common.internal.zab: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.database.core.view.filter.IndexedFilter: IndexedFilter(com.google.firebase.database.snapshot.Index)
kotlinx.coroutines.internal.FastServiceLoader: java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core()
androidx.fragment.app.Fragment: boolean isRemoving()
com.google.firebase.database.core.persistence.DefaultPersistenceManager: void removeUserWrite(long)
io.flutter.embedding.android.FlutterSplashView$2: FlutterSplashView$2(io.flutter.embedding.android.FlutterSplashView)
androidx.appcompat.view.menu.MenuItemImpl: boolean expandActionView()
com.google.firebase.database.core.Repo$20: Repo$20(com.google.firebase.database.core.Repo,com.google.firebase.database.core.Repo$TransactionData)
io.flutter.plugin.editing.ListenableEditingState: void setSpan(java.lang.Object,int,int,int)
io.flutter.util.ViewUtils: int generateViewId(int)
androidx.fragment.app.FragmentTransition$2: void run()
io.flutter.plugins.googlemaps.MarkerController: void setInfoWindowText(java.lang.String,java.lang.String)
androidx.core.app.ActivityRecreator: java.lang.reflect.Field getMainThreadField()
io.flutter.plugin.localization.LocalizationPlugin: android.content.Context access$000(io.flutter.plugin.localization.LocalizationPlugin)
io.flutter.plugins.googlemaps.CirclesController: void setGoogleMap(com.google.android.gms.maps.GoogleMap)
com.google.android.gms.signin.internal.zak: com.google.android.gms.common.internal.ResolveAccountResponse zacv()
androidx.appcompat.widget.ListPopupWindow: android.widget.ListView getListView()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: void onAnimationEnd(android.view.View)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.android.gms.common.internal.Preconditions: void checkNotMainThread(java.lang.String)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$2902(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String)
com.google.firebase.internal.DataCollectionConfigStorage: boolean isEnabled()
com.google.firebase.FirebaseApp: void initializeAllApis()
androidx.fragment.app.FragmentController: void dispatchCreate()
com.google.firebase.database.android.AndroidPlatform: java.lang.String getUserAgent(com.google.firebase.database.core.Context)
com.google.android.gms.common.util.ProcessUtils: java.lang.String getMyProcessName()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4400(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry newest()
com.google.android.gms.signin.SignInOptions: boolean waitForAccessTokenRefresh()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
com.google.firebase.database.core.utilities.PushIdGenerator: java.lang.String predecessor(java.lang.String)
com.google.firebase.database.core.Repo$18$1: Repo$18$1(com.google.firebase.database.core.Repo$18,com.google.firebase.database.core.Repo$TransactionData,com.google.firebase.database.DataSnapshot)
kotlinx.coroutines.internal.MainDispatchersKt: kotlinx.coroutines.MainCoroutineDispatcher tryCreateDispatcher(kotlinx.coroutines.internal.MainDispatcherFactory,java.util.List)
com.google.android.gms.signin.internal.zab: zab()
kotlinx.coroutines.CommonPool: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus valueOf(java.lang.String)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: android.os.Handler access$000(io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int hashCode()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setDuration(long)
com.google.android.gms.common.api.internal.zaf: boolean zab(com.google.android.gms.common.api.internal.GoogleApiManager$zaa)
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface getSidecar()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.google.firebase.database.core.Repo: void onConnect()
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int getIndex()
com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey: int hashCode()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String findAppBundlePath()
androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)
androidx.exifinterface.media.ExifInterface: void getJpegAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int,int)
com.google.firebase.database.core.view.CancelEvent: CancelEvent(com.google.firebase.database.core.EventRegistration,com.google.firebase.database.DatabaseError,com.google.firebase.database.core.Path)
com.google.firebase.database.snapshot.Index: boolean indexedValueChanged(com.google.firebase.database.snapshot.Node,com.google.firebase.database.snapshot.Node)
androidx.fragment.app.FragmentContainerView: boolean drawChild(android.graphics.Canvas,android.view.View,long)
com.google.firebase.database.android.SqlPersistenceStorageEngine: java.util.Set loadTrackedQueryKeys(long)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: void onDraw()
androidx.arch.core.executor.DefaultTaskExecutor: boolean isMainThread()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
androidx.appcompat.widget.AppCompatTextHelper: void setTextSize(int,float)
androidx.appcompat.graphics.drawable.DrawableContainer: void setAutoMirrored(boolean)
com.google.android.gms.maps.model.zzb: java.lang.Object[] newArray(int)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean handleVerticalMovement(boolean,boolean)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.google.firebase.database.collection.LLRBRedValueNode: boolean isRed()
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
kotlinx.coroutines.internal.ArrayQueue: void addLast(java.lang.Object)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingPut: boolean wasSent()
com.baseflow.geolocator.StreamHandlerImpl: void onCancel(java.lang.Object)
com.lyokone.location.StreamHandlerImpl: void setLocation(com.lyokone.location.FlutterLocation)
io.flutter.plugins.imagepicker.ImageResizer: boolean isImageQualityValid(java.lang.Integer)
androidx.appcompat.widget.SearchView$7: SearchView$7(androidx.appcompat.widget.SearchView)
androidx.appcompat.app.LayoutIncludeDetector: boolean detect(android.util.AttributeSet)
androidx.core.provider.FontRequest: int getCertificatesArrayResId()
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.MarkerOptions position(com.google.android.gms.maps.model.LatLng)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setTint(int)
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingPut: PersistentConnectionImpl$OutstandingPut(java.lang.String,java.util.Map,com.google.firebase.database.connection.RequestResultCallback)
androidx.fragment.app.Fragment: boolean performContextItemSelected(android.view.MenuItem)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPackageName()
com.google.android.gms.maps.MapView$zza: void onDestroy()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn: int[] getRowHeights()
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: boolean isItalic()
androidx.appcompat.app.WindowDecorActionBar: void animateToMode(boolean)
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
androidx.fragment.app.FragmentManager: void launchStartActivityForResult(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
com.google.firebase.database.FirebaseDatabaseComponent: FirebaseDatabaseComponent(com.google.firebase.FirebaseApp,com.google.firebase.inject.Deferred,com.google.firebase.inject.Deferred)
com.google.firebase.database.Query: com.google.firebase.database.Query orderByValue()
com.lyokone.location.FlutterLocationService: void setResult(io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.database.collection.RBTreeSortedMap: java.lang.Object get(java.lang.Object)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
androidx.core.widget.NestedScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable: AutoScrollHelper$ScrollAnimationRunnable(androidx.core.widget.AutoScrollHelper)
com.google.zxing.common.DecoderResult: void setOther(java.lang.Object)
androidx.appcompat.widget.ViewStubCompat: void onMeasure(int,int)
com.google.firebase.components.ComponentRuntime: java.lang.Object get(java.lang.Class)
com.google.android.gms.maps.model.PolygonOptions: float getZIndex()
com.google.android.gms.common.util.DeviceProperties: boolean isWearable(android.content.Context)
com.google.firebase.database.android.SqlPersistenceStorageEngine: void mergeIntoServerCache(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node)
kotlinx.coroutines.internal.FastServiceLoader: java.util.List parse(java.net.URL)
com.google.common.util.concurrent.Futures$CallbackListener: java.lang.String toString()
com.google.android.gms.common.internal.ClientIdentity: int hashCode()
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: int atMost(int)
com.google.android.gms.common.internal.BaseGmsClient$zze: BaseGmsClient$zze(com.google.android.gms.common.internal.BaseGmsClient,int)
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver: void onChange(boolean)
com.google.zxing.oned.rss.expanded.ExpandedPair: boolean equals(java.lang.Object)
com.google.zxing.common.reedsolomon.GenericGFPoly: com.google.zxing.common.reedsolomon.GenericGFPoly multiply(com.google.zxing.common.reedsolomon.GenericGFPoly)
com.google.firebase.database.core.Context: com.google.firebase.database.core.TokenProvider getAppCheckTokenProvider()
com.google.firebase.database.connection.ConnectionUtils: java.lang.String pathToString(java.util.List)
com.google.firebase.database.connection.util.StringListReader: int currentStringRemainingChars()
androidx.appcompat.view.menu.MenuItemImpl: void appendModifier(java.lang.StringBuilder,int,int,java.lang.String)
com.google.firebase.database.core.ValueEventRegistration: com.google.firebase.database.core.EventRegistration clone(com.google.firebase.database.core.view.QuerySpec)
androidx.appcompat.view.menu.ListMenuItemView: boolean prefersCondensedTitle()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object single(java.lang.Iterable)
com.google.android.gms.maps.GoogleMap: void setOnMapClickListener(com.google.android.gms.maps.GoogleMap$OnMapClickListener)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2120(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
kotlinx.coroutines.DispatchedTask: void handleFatalException(java.lang.Throwable,java.lang.Throwable)
com.google.android.gms.common.internal.BaseGmsClient: android.os.IInterface getService()
androidx.appcompat.graphics.drawable.DrawableContainer: void getOutline(android.graphics.Outline)
com.google.android.gms.location.zzk: java.lang.Object createFromParcel(android.os.Parcel)
com.journeyapps.barcodescanner.Size: boolean equals(java.lang.Object)
androidx.customview.view.AbsSavedState$2: java.lang.Object[] newArray(int)
androidx.fragment.app.FragmentHostCallback: android.app.Activity getActivity()
com.google.android.gms.common.api.internal.zzc: com.google.android.gms.common.api.internal.LifecycleCallback getCallbackOrNull(java.lang.String,java.lang.Class)
androidx.activity.OnBackPressedCallback: boolean isEnabled()
androidx.exifinterface.media.ExifInterface: void getOrfAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
com.google.android.gms.common.api.internal.zaac: void onComplete(com.google.android.gms.common.api.Status)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingGet: PersistentConnectionImpl$OutstandingGet(java.lang.String,java.util.Map,com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionRequestCallback)
androidx.appcompat.app.WindowDecorActionBar: void setDisplayOptions(int,int)
androidx.appcompat.app.AppCompatActivity: void onNightModeChanged(int)
androidx.core.view.ViewCompat$4: java.lang.CharSequence frameworkGet(android.view.View)
com.google.firebase.database.DatabaseError: com.google.firebase.database.DatabaseError fromStatus(java.lang.String)
com.google.firebase.database.FirebaseDatabase: void goOffline()
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
androidx.fragment.app.FragmentTransitionCompat21$5: android.graphics.Rect onGetEpicenter(android.transition.Transition)
androidx.appcompat.view.menu.ActionMenuItem: boolean isCheckable()
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingListen: com.google.firebase.database.connection.RequestResultCallback access$800(com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingListen)
kotlin.collections.MapsKt__MapsKt: java.util.Map mapOf(kotlin.Pair[])
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingGet: PersistentConnectionImpl$OutstandingGet(java.lang.String,java.util.Map,com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionRequestCallback,com.google.firebase.database.connection.PersistentConnectionImpl$1)
com.google.zxing.qrcode.decoder.Version: com.google.zxing.qrcode.decoder.Version decodeVersionInformation(int)
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock: void close()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$1: void onFrameAvailable(android.graphics.SurfaceTexture)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float getInterpolation(float)
androidx.versionedparcelable.VersionedParcel: void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel)
io.flutter.plugin.platform.PlatformPlugin: java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
androidx.fragment.app.DialogFragment$5: boolean onHasView()
androidx.fragment.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
com.google.zxing.Binarizer: int getHeight()
io.flutter.plugin.platform.PlatformViewsController: void attach(android.content.Context,io.flutter.view.TextureRegistry,io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.plugin.editing.TextInputPlugin$1: void finishAutofillContext(boolean)
com.google.firebase.platforminfo.DefaultUserAgentPublisher: com.google.firebase.components.Component component()
com.google.zxing.aztec.decoder.Decoder: com.google.zxing.aztec.decoder.Decoder$Table getTable(char)
com.google.android.gms.common.internal.zzj: zzj()
com.google.android.gms.internal.location.zzb: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.google.common.util.concurrent.Futures$CallbackListener: Futures$CallbackListener(java.util.concurrent.Future,com.google.common.util.concurrent.FutureCallback)
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: android.view.WindowManager getWindowManager()
androidx.appcompat.widget.Toolbar: boolean onHoverEvent(android.view.MotionEvent)
androidx.fragment.app.FragmentStore: void moveToExpectedState()
com.google.android.gms.signin.internal.SignInClientImpl: void zaa(com.google.android.gms.signin.internal.zac)
com.google.zxing.oned.rss.expanded.decoders.DecodedObject: int getNewPosition()
androidx.arch.core.internal.SafeIterableMap$ListIterator: SafeIterableMap$ListIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
kotlin.sequences.TransformingSequence$iterator$1: boolean hasNext()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean endBatchEdit()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: int measureHeightOfChildrenCompat(int,int,int,int,int)
androidx.window.embedding.SplitRule: int getMinSmallestWidth()
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setHomeButtonEnabled(boolean)
androidx.window.layout.SidecarAdapter: java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.google.android.gms.maps.model.zzf: java.lang.Object[] newArray(int)
com.lyokone.location.StreamHandlerImpl: StreamHandlerImpl()
androidx.appcompat.app.WindowDecorActionBar: void setShowHideAnimationEnabled(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
com.google.firebase.database.connection.PersistentConnectionImpl: void onDisconnectPut(java.util.List,java.lang.Object,com.google.firebase.database.connection.RequestResultCallback)
kotlinx.coroutines.JobSupport$Finishing: java.lang.String toString()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
androidx.core.graphics.drawable.DrawableCompat: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.google.android.gms.internal.maps.zzb: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.fragment.app.FragmentStore: void resetActiveFragments()
androidx.core.view.ViewCompat$5: java.lang.Object frameworkGet(android.view.View)
androidx.appcompat.widget.SearchView: void setInputType(int)
androidx.fragment.app.LogWriter: void flushBuilder()
com.google.zxing.oned.rss.expanded.decoders.AI01weightDecoder: void encodeCompressedWeight(java.lang.StringBuilder,int,int)
com.google.firebase.database.collection.LLRBNode$NodeVisitor: LLRBNode$NodeVisitor()
kotlinx.coroutines.JobSupport: boolean tryFinalizeSimpleState(kotlinx.coroutines.Incomplete,java.lang.Object)
kotlinx.coroutines.channels.ChannelKt: kotlinx.coroutines.channels.Channel Channel(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.appcompat.widget.ActionBarContextView: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
com.google.zxing.datamatrix.decoder.Decoder: Decoder()
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: void growArray(int,int)
androidx.fragment.app.Fragment: void performLowMemory()
kotlinx.coroutines.flow.internal.SafeCollector: void exceptionTransparencyViolated(kotlinx.coroutines.flow.internal.DownstreamExceptionElement,java.lang.Object)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String getDisplayName()
com.google.firebase.database.Query: com.google.firebase.database.Query endAt(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
com.google.zxing.common.detector.MathUtils: int round(float)
com.google.android.gms.tasks.zzv: void run()
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: long updateHead(long,int)
kotlin.random.FallbackThreadLocalRandom: java.util.Random getImpl()
com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastIceCreamSandwichMR1()
androidx.appcompat.view.menu.MenuPopupHelper: boolean tryShow(int,int)
com.baseflow.geolocator.MethodCallHandlerImpl: void onIsLocationServiceEnabled(io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.database.snapshot.ValueIndex: java.lang.String toString()
com.google.firebase.database.core.Repo: void access$800(com.google.firebase.database.core.Repo,long,com.google.firebase.database.core.Path,com.google.firebase.database.DatabaseError)
com.google.zxing.qrcode.decoder.Version: java.lang.String toString()
androidx.appcompat.view.menu.MenuBuilder: boolean isShortcutsVisible()
androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)
androidx.appcompat.view.menu.BaseMenuWrapper: void internalRemoveItem(int)
com.journeyapps.barcodescanner.RotationListener: int access$202(com.journeyapps.barcodescanner.RotationListener,int)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void setCameraDevice(io.flutter.plugins.imagepicker.CameraDevice)
com.journeyapps.barcodescanner.camera.CameraInstance$2: void run()
androidx.fragment.app.FragmentManager: int reverseTransit(int)
androidx.core.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent(int)
androidx.appcompat.widget.Toolbar: void ensureLogoView()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2: java.lang.Object invoke(java.lang.Object)
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: com.google.firebase.database.DatabaseReference getReference(java.util.Map)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
com.google.firebase.components.CycleDetector$ComponentNode: com.google.firebase.components.Component getComponent()
com.baseflow.geolocator.MethodCallHandlerImpl: void startListening(android.content.Context,io.flutter.plugin.common.BinaryMessenger)
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.MarkerOptions alpha(float)
com.google.firebase.database.snapshot.NamedNode: java.lang.String toString()
androidx.fragment.app.FragmentManager: androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory()
com.google.android.gms.internal.maps.zzc: void zza(android.os.Parcel,android.os.Parcelable)
com.google.firebase.database.logging.AndroidLogger: void error(java.lang.String,java.lang.String)
com.google.android.gms.location.zzak: java.lang.Object[] newArray(int)
androidx.appcompat.widget.ActionMenuView: void onConfigurationChanged(android.content.res.Configuration)
kotlinx.coroutines.DefaultExecutor: java.lang.Thread getThread()
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
com.google.zxing.common.BitMatrix: void flip(int,int)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
androidx.fragment.app.FragmentTransition: void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap)
androidx.appcompat.widget.AppCompatSeekBarHelper: void drawableStateChanged()
com.google.firebase.database.connection.HostInfo: java.lang.String toString()
com.baseflow.geolocator.location.GeolocationManager: boolean isGooglePlayServicesAvailable(android.content.Context)
kotlin.coroutines.AbstractCoroutineContextKey: AbstractCoroutineContextKey(kotlin.coroutines.CoroutineContext$Key,kotlin.jvm.functions.Function1)
com.google.android.gms.location.zzac: java.lang.Object[] newArray(int)
com.google.firebase.database.DatabaseReference: DatabaseReference(com.google.firebase.database.core.Repo,com.google.firebase.database.core.Path)
androidx.appcompat.view.menu.ActionMenuItem: android.graphics.PorterDuff$Mode getIconTintMode()
kotlinx.coroutines.JobSupport: java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object)
androidx.collection.MapCollections$MapIterator: java.lang.String toString()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setActionView(android.view.View)
kotlinx.coroutines.CompletedExceptionally: CompletedExceptionally(java.lang.Throwable,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$3: ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$3(java.lang.reflect.Constructor)
com.journeyapps.barcodescanner.camera.AutoFocusManager: void start()
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.fragment.app.DialogFragment: void setShowsDialog(boolean)
com.google.common.util.concurrent.AbstractFuture$AtomicHelper: AbstractFuture$AtomicHelper()
com.google.firebase.database.core.Repo$TransactionData: int compareTo(java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void start()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: TextInputChannel$TextCapitalization(java.lang.String,int,java.lang.String)
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.drawable.shapes.Shape getDrawableShape()
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
androidx.appcompat.widget.SearchView: void forceSuggestionQuery()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setActionProvider(android.view.ActionProvider)
kotlinx.coroutines.flow.SafeFlow: java.lang.Object collectSafely(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
com.google.android.gms.maps.internal.zzby: zzby()
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState: boolean hasSelection()
com.google.firebase.database.tubesock.WebSocketReceiver: void run()
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler: MethodChannel$IncomingMethodCallHandler(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$MethodCallHandler)
com.google.firebase.components.RestrictedComponentContainer: com.google.firebase.inject.Provider setOfProvider(java.lang.Class)
androidx.activity.OnBackPressedCallback: void addCancellable(androidx.activity.Cancellable)
com.google.firebase.database.core.ValidationPath: java.lang.String joinStringList(java.lang.String,java.util.List)
com.google.android.gms.dynamite.zze: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$zzb zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$zza)
com.journeyapps.barcodescanner.BarcodeCallback: void possibleResultPoints(java.util.List)
com.google.android.gms.location.LocationAvailability: int hashCode()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void setNextParkedWorker(java.lang.Object)
com.google.android.gms.maps.internal.zzk: void getMapAsync(com.google.android.gms.maps.internal.zzap)
androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()
androidx.appcompat.widget.SearchView: void onCloseClicked()
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.google.firebase.database.core.operation.Overwrite: com.google.firebase.database.snapshot.Node getSnapshot()
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getCapacity()
com.google.firebase.database.core.Repo$1: Repo$1(com.google.firebase.database.core.Repo)
androidx.appcompat.app.AppCompatDelegateImpl$5: void onAttachedFromWindow()
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
com.google.firebase.database.OnDisconnect$3: OnDisconnect$3(com.google.firebase.database.OnDisconnect,com.google.firebase.database.core.utilities.Pair)
io.flutter.plugin.editing.TextInputPlugin: void access$200(io.flutter.plugin.editing.TextInputPlugin)
com.google.android.gms.maps.model.CircleOptions: int getStrokeColor()
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: void start()
com.google.android.gms.maps.model.Marker: void setInfoWindowAnchor(float,float)
com.google.firebase.database.android.AndroidPlatform$1: void handleException(java.lang.Throwable)
kotlinx.coroutines.JobSupport$Finishing: kotlinx.coroutines.NodeList getList()
com.google.android.gms.common.internal.ResolveAccountRequest: android.accounts.Account getAccount()
com.google.firebase.database.core.UserWriteRecord: UserWriteRecord(long,com.google.firebase.database.core.Path,com.google.firebase.database.core.CompoundWrite)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setNumericShortcut(char,int)
com.google.firebase.provider.FirebaseInitProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])
androidx.fragment.app.FragmentStore: java.util.List getFragments()
io.flutter.embedding.engine.renderer.FlutterRenderer: void surfaceChanged(int,int)
androidx.appcompat.widget.ActionMenuPresenter: android.graphics.drawable.Drawable getOverflowIcon()
com.google.firebase.database.core.Repo$4: void startListening(com.google.firebase.database.core.view.QuerySpec,com.google.firebase.database.core.Tag,com.google.firebase.database.connection.ListenHashProvider,com.google.firebase.database.core.SyncTree$CompletionListener)
kotlin.collections.EmptyMap: java.util.Set getKeys()
androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition)
androidx.appcompat.app.AppCompatDelegateImpl: AppCompatDelegateImpl(android.app.Activity,androidx.appcompat.app.AppCompatCallback)
com.google.android.gms.common.internal.ResolveAccountRequest: int getSessionId()
com.google.android.gms.location.LocationSettingsStates: LocationSettingsStates(boolean,boolean,boolean,boolean,boolean,boolean)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsDetached()
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
io.flutter.plugins.googlemaps.PolylinesController: void changePolylines(java.util.List)
io.flutter.plugins.googlemaps.MarkerController: void setRotation(float)
androidx.appcompat.app.ResourcesFlusher: void flushThemedResourcesCache(java.lang.Object)
com.google.firebase.database.logging.LogWrapper: LogWrapper(com.google.firebase.database.logging.Logger,java.lang.String,java.lang.String)
com.google.firebase.database.core.CompoundWrite$2: java.lang.Object onNodeValue(com.google.firebase.database.core.Path,java.lang.Object,java.lang.Object)
com.google.firebase.database.connection.PersistentConnectionImpl$9: PersistentConnectionImpl$9(com.google.firebase.database.connection.PersistentConnectionImpl)
com.google.android.gms.internal.maps.zzab: void setEndCap(com.google.android.gms.maps.model.Cap)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment)
androidx.appcompat.widget.ForwardingListener: boolean pointInView(android.view.View,float,float,float)
com.google.firebase.database.core.utilities.DefaultRunLoop: void scheduleNow(java.lang.Runnable)
com.google.firebase.database.collection.ArraySortedMap: ArraySortedMap(java.util.Comparator)
androidx.appcompat.widget.TooltipCompatHandler: void show(boolean)
com.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp getInstance(java.lang.String)
com.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp getInstance()
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp()
com.google.zxing.common.BitMatrix: com.google.zxing.common.BitMatrix clone()
com.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnCompleteListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCompleteListener)
androidx.fragment.app.FragmentTransitionImpl: java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: void setHotspotBounds(int,int,int,int)
com.google.android.gms.common.api.internal.zaad: void onStop()
kotlinx.coroutines.UndispatchedCoroutine: void saveThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)
com.google.firebase.database.logging.LogWrapper: java.lang.String toLog(java.lang.String,java.lang.Object[])
com.google.android.gms.maps.internal.zzg: void setOnPolylineClickListener(com.google.android.gms.maps.internal.zzbf)
androidx.core.graphics.PathParser: float[] copyOfRange(float[],int,int)
androidx.appcompat.content.res.AppCompatResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
kotlinx.coroutines.Empty: kotlinx.coroutines.NodeList getList()
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: DefaultHeartBeatInfo(com.google.firebase.inject.Provider,java.util.Set,java.util.concurrent.Executor)
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: int extractNumericValueFromBitArray(com.google.zxing.common.BitArray,int,int)
io.flutter.view.AccessibilityBridge: void sendLatestAccessibilityFlagsToFlutter()
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: java.lang.String toString()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void getHotspotBounds(android.graphics.Rect)
com.google.zxing.oned.Code128Reader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void onViewDetachedFromWindow(android.view.View)
com.google.android.gms.common.internal.zzg: android.content.Intent zza(java.lang.String,java.lang.String)
kotlin.coroutines.CombinedContext: boolean contains(kotlin.coroutines.CoroutineContext$Element)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4202(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker$MotionEventId track(android.view.MotionEvent)
androidx.appcompat.widget.AppCompatSpinner: boolean performClick()
androidx.core.app.NotificationCompat$Action: android.os.Bundle getExtras()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onNestedFling(android.view.View,float,float,boolean)
com.google.zxing.datamatrix.decoder.BitMatrixParser: com.google.zxing.datamatrix.decoder.Version readVersion(com.google.zxing.common.BitMatrix)
androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getInsets(int)
com.google.firebase.database.collection.ArraySortedMap$1: boolean hasNext()
com.google.firebase.database.core.DatabaseConfig: void setPersistenceEnabled(boolean)
com.baseflow.geolocator.MethodCallHandlerImpl: void onGetCurrentPosition(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.ToolbarWidgetWrapper: void dismissPopupMenus()
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: FontResourcesParserCompat$FontFamilyFilesResourceEntry(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[])
androidx.appcompat.widget.SearchView: void onLayout(boolean,int,int,int,int)
androidx.fragment.app.FragmentFactory: java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String)
com.baseflow.geolocator.location.ForegroundNotificationOptions: boolean isEnableWakeLock()
androidx.collection.MapCollections$EntrySet: boolean equals(java.lang.Object)
io.flutter.plugins.googlemaps.GoogleMapController: void setPadding(float,float,float,float)
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getFragment(android.app.Activity)
androidx.appcompat.app.AppCompatDelegateImpl$7: AppCompatDelegateImpl$7(androidx.appcompat.app.AppCompatDelegateImpl)
com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode: com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode valueOf(java.lang.String)
io.flutter.plugin.platform.PlatformPlugin$1: java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat)
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean isDisplayingFlutterUi()
com.google.firebase.database.snapshot.Node$1: boolean hasChild(com.google.firebase.database.snapshot.ChildKey)
com.google.firebase.components.RestrictedComponentContainer: java.util.Set setOf(java.lang.Class)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void setConstantSize(boolean)
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
androidx.appcompat.widget.AppCompatTextHelper: void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)
com.baseflow.geolocator.location.LocationManagerClient: LocationManagerClient(android.content.Context,com.baseflow.geolocator.location.LocationOptions)
kotlinx.coroutines.DebugKt: boolean getASSERTIONS_ENABLED()
com.journeyapps.barcodescanner.camera.CameraInstance: void open()
androidx.fragment.app.FragmentManager: void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: java.lang.Object prepare(java.lang.Object)
com.journeyapps.barcodescanner.DecoderThread: void decode(com.journeyapps.barcodescanner.SourceData)
com.google.android.gms.common.internal.BaseGmsClient: boolean requiresSignIn()
com.google.android.gms.maps.model.zzh: java.lang.Object[] newArray(int)
com.google.android.gms.internal.location.zzaz: void zzb(com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey,com.google.android.gms.internal.location.zzaj)
com.google.android.gms.common.api.Status: com.google.android.gms.common.api.Status getStatus()
androidx.core.view.ContentInfoCompat$Builder: androidx.core.view.ContentInfoCompat$Builder setExtras(android.os.Bundle)
androidx.activity.OnBackPressedDispatcher: androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback)
androidx.fragment.app.FragmentHostCallback: FragmentHostCallback(androidx.fragment.app.FragmentActivity)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setFilterBitmap(boolean)
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: void setFocusArea(android.hardware.Camera$Parameters)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
androidx.appcompat.app.AlertController: android.view.ViewGroup resolvePanel(android.view.View,android.view.View)
com.google.android.gms.common.internal.ClientIdentity: ClientIdentity(int,java.lang.String)
com.baseflow.geolocator.location.FusedLocationClient: com.baseflow.geolocator.location.PositionChangedCallback access$000(com.baseflow.geolocator.location.FusedLocationClient)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: ViewCompat$AccessibilityPaneVisibilityManager()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void add(io.flutter.embedding.engine.plugins.FlutterPlugin)
com.google.android.gms.signin.internal.zad: void zag(com.google.android.gms.common.api.Status)
androidx.appcompat.widget.Toolbar: void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)
io.flutter.embedding.engine.dart.DartMessenger: void dispatchMessageToQueue(java.lang.String,io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,int,long)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
androidx.appcompat.widget.TintInfo: void clear()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
androidx.fragment.app.FragmentAnim: void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentAnim$AnimationOrAnimator,androidx.fragment.app.FragmentTransition$Callback)
com.google.android.gms.maps.internal.zzbr: zzbr(android.os.IBinder)
androidx.appcompat.view.menu.MenuItemWrapperICS: char getNumericShortcut()
com.google.android.gms.internal.location.zzl: void checkConnected()
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStateManager addFragment(androidx.fragment.app.Fragment)
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.BaseGmsClient$BaseOnConnectionFailedListener zzg(com.google.android.gms.common.internal.BaseGmsClient)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
androidx.activity.ComponentActivity: void setContentView(android.view.View)
com.google.firebase.database.connection.WebsocketConnection: com.google.firebase.database.connection.WebsocketConnection$WSClient createConnection(com.google.firebase.database.connection.HostInfo,java.lang.String,java.lang.String,java.lang.String)
com.google.android.gms.common.api.internal.GoogleApiManager: GoogleApiManager(android.content.Context,android.os.Looper,com.google.android.gms.common.GoogleApiAvailability)
com.google.android.gms.common.api.internal.BackgroundDetector: void initialize(android.app.Application)
com.google.firebase.database.core.utilities.Tree: boolean isEmpty()
com.google.android.gms.common.api.internal.LifecycleCallback: void onCreate(android.os.Bundle)
kotlin.collections.EmptyList: java.lang.Object set(int,java.lang.Object)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
kotlin.jvm.internal.TypeIntrinsics: java.lang.ClassCastException throwCce(java.lang.ClassCastException)
com.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder factory(com.google.firebase.components.ComponentFactory)
com.google.zxing.datamatrix.detector.Detector: Detector(com.google.zxing.common.BitMatrix)
kotlin.jvm.internal.PackageReference: boolean equals(java.lang.Object)
com.google.firebase.database.core.Repo: void updateChildren(com.google.firebase.database.core.Path,com.google.firebase.database.core.CompoundWrite,com.google.firebase.database.DatabaseReference$CompletionListener,java.util.Map)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean has(java.lang.Class)
io.flutter.embedding.android.FlutterTextureView: void changeSurfaceSize(int,int)
com.google.zxing.datamatrix.detector.Detector: void increment(java.util.Map,com.google.zxing.ResultPoint)
io.flutter.plugins.firebase.database.EventStreamHandler: void onCancel(java.lang.Object)
androidx.appcompat.widget.ListPopupWindow: void setInputMethodMode(int)
com.journeyapps.barcodescanner.camera.PreviewScalingStrategy$1: int compare(java.lang.Object,java.lang.Object)
com.google.android.gms.maps.UiSettings: void setTiltGesturesEnabled(boolean)
com.google.firebase.database.DataSnapshot$1$1: void remove()
com.google.firebase.database.core.Context: com.google.firebase.database.connection.PersistentConnection newPersistentConnection(com.google.firebase.database.connection.HostInfo,com.google.firebase.database.connection.PersistentConnection$Delegate)
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter)
io.flutter.plugins.googlemaps.GoogleMapController: void setMapToolbarEnabled(boolean)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPredicates$lambda-6(java.util.Set,android.app.Activity)
androidx.core.content.res.ColorStateListInflaterCompat: boolean isColorInt(android.content.res.Resources,int)
com.journeyapps.barcodescanner.CameraPreview: boolean isPreviewActive()
com.google.firebase.database.core.SyncTree$ListenContainer: java.util.List onListenComplete(com.google.firebase.database.DatabaseError)
com.google.zxing.pdf417.decoder.DetectionResult: boolean adjustRowNumber(com.google.zxing.pdf417.decoder.Codeword,com.google.zxing.pdf417.decoder.Codeword)
com.google.android.gms.common.api.CommonStatusCodes: java.lang.String getStatusCodeString(int)
androidx.activity.contextaware.ContextAwareHelper: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
androidx.appcompat.widget.AppCompatSeekBar: void jumpDrawablesToCurrentState()
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderPlatformThread: PathProviderPlugin$PathProviderPlatformThread(io.flutter.plugins.pathprovider.PathProviderPlugin)
androidx.appcompat.widget.AppCompatTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
com.lyokone.location.FlutterLocation: void createLocationCallback()
androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
io.flutter.embedding.engine.loader.FlutterApplicationInfo: FlutterApplicationInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
com.google.firebase.database.core.Context: java.lang.String getSessionPersistenceKey()
com.google.firebase.database.collection.RBTreeSortedMap: java.lang.Object getPredecessorKey(java.lang.Object)
com.google.android.gms.maps.model.TileOverlayOptions: TileOverlayOptions()
androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: java.lang.CharSequence getTitle()
io.flutter.plugins.googlemaps.TileOverlaysController: TileOverlaysController(io.flutter.plugin.common.MethodChannel)
com.google.firebase.database.snapshot.Index: com.google.firebase.database.snapshot.NamedNode minPost()
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList getActionItems()
com.google.common.util.concurrent.AbstractFuture: java.lang.Object access$500(com.google.common.util.concurrent.ListenableFuture)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
androidx.core.content.res.FontResourcesParserCompat: void skip(org.xmlpull.v1.XmlPullParser)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest: PlatformViewsChannel$PlatformViewCreationRequest(int,java.lang.String,double,double,int,java.nio.ByteBuffer)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.TransparencyMode getTransparencyMode()
kotlinx.coroutines.internal.LockFreeLinkedListNode: int tryCondAddNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp)
com.google.firebase.database.core.SyncTree$6: java.util.List call()
androidx.fragment.app.FragmentManager: void onContainerAvailable(androidx.fragment.app.FragmentContainerView)
com.google.firebase.database.connection.ConnectionContext: java.lang.String getClientSdkVersion()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
androidx.core.widget.AutoScrollHelper: float getEdgeValue(float,float,float,float)
com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar getInstance()
com.google.android.gms.maps.model.MarkerOptions: float getAlpha()
com.google.firebase.database.android.SqlPersistenceStorageEngine: void mergeIntoServerCache(com.google.firebase.database.core.Path,com.google.firebase.database.core.CompoundWrite)
com.google.android.gms.common.internal.BaseGmsClient: void zza(com.google.android.gms.common.internal.BaseGmsClient,int)
com.google.android.gms.maps.model.CameraPosition: void writeToParcel(android.os.Parcel,int)
kotlinx.coroutines.flow.internal.SafeCollector: void checkContext(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext,java.lang.Object)
androidx.window.embedding.SplitRuleParser: SplitRuleParser()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt: java.lang.Object getCOROUTINE_SUSPENDED()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: VectorDrawableCompat$VPathRenderer()
kotlin.coroutines.jvm.internal.CompletedContinuation: kotlin.coroutines.CoroutineContext getContext()
io.flutter.plugins.flutter_plugin_android_lifecycle.FlutterAndroidLifecyclePlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.zxing.client.android.AmbientLightManager: AmbientLightManager(android.content.Context,com.journeyapps.barcodescanner.camera.CameraManager,com.journeyapps.barcodescanner.camera.CameraSettings)
com.google.firebase.components.CycleDetector: void detect(java.util.List)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.appcompat.view.menu.MenuPopup: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
com.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnCompleteListener(com.google.android.gms.tasks.OnCompleteListener)
com.google.zxing.common.reedsolomon.ReedSolomonException: ReedSolomonException(java.lang.String)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: SidecarCompat$FirstAttachAdapter(androidx.window.layout.SidecarCompat,android.app.Activity)
io.flutter.embedding.android.FlutterActivity: void onActivityResult(int,int,android.content.Intent)
androidx.fragment.app.FragmentAnim$1: FragmentAnim$1(androidx.fragment.app.Fragment)
com.google.firebase.database.core.SyncTree: com.google.firebase.database.core.Tag getNextQueryTag()
io.flutter.view.VsyncWaiter$1$1: void doFrame(long)
androidx.appcompat.widget.AppCompatImageView: boolean hasOverlappingRendering()
androidx.fragment.app.DialogFragment: void onCancel(android.content.DialogInterface)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getOpacity()
com.google.firebase.database.core.ValueEventRegistration: boolean equals(java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
androidx.core.widget.NestedScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)
com.google.firebase.database.tubesock.WebSocket: void close()
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)
androidx.window.layout.ActivityCompatHelperApi24: boolean isInMultiWindowMode(android.app.Activity)
kotlin.collections.CollectionsKt__IterablesKt: int collectionSizeOrDefault(java.lang.Iterable,int)
io.flutter.plugin.common.StandardMessageCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: FlutterEngineConnectionRegistry(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.embedding.engine.loader.FlutterLoader)
io.flutter.plugins.flutterexifrotation.FlutterExifRotationPlugin: android.graphics.Bitmap rotate(android.graphics.Bitmap,float)
androidx.window.core.Version$Companion: androidx.window.core.Version getUNKNOWN()
androidx.core.content.FileProvider: java.lang.Object[] copyOf(java.lang.Object[],int)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3: AppCompatSpinner$DropdownPopup$3(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.lyokone.location.MethodCallHandlerImpl: void onRequestPermission(io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.database.core.Tag: long getTagNumber()
androidx.appcompat.widget.SearchView: void onTextChanged(java.lang.CharSequence)
com.google.firebase.database.Query$2: Query$2(com.google.firebase.database.Query,com.google.firebase.database.core.EventRegistration)
com.journeyapps.barcodescanner.camera.PreviewScalingStrategy$1: PreviewScalingStrategy$1(com.journeyapps.barcodescanner.camera.PreviewScalingStrategy,com.journeyapps.barcodescanner.Size)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setWrappedDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionMenuPresenter: void setExpandedActionViewsExclusive(boolean)
androidx.appcompat.view.menu.ActionMenuItem: int getOrder()
androidx.collection.MapCollections$MapIterator: java.lang.Object setValue(java.lang.Object)
com.google.zxing.qrcode.detector.FinderPatternFinder: boolean handlePossibleCenter(int[],int,int)
com.google.firebase.database.core.persistence.TrackedQueryManager: java.util.Set filteredQueryIdsAtPath(com.google.firebase.database.core.Path)
kotlin.coroutines.jvm.internal.ModuleNameRetriever: kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache buildCache(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getFOLD()
com.google.android.gms.maps.model.PolylineOptions: float getWidth()
io.flutter.embedding.android.FlutterImageView: void pause()
androidx.fragment.app.FragmentManager: void moveToState(int,boolean)
com.google.firebase.database.core.view.QueryParams: com.google.firebase.database.core.view.QueryParams limitToFirst(int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: android.graphics.Matrix getMatrix()
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: boolean onPerformDefaultAction()
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task doRead(com.google.android.gms.common.api.internal.TaskApiCall)
com.google.firebase.database.FirebaseDatabase: void assertUnfrozen(java.lang.String)
com.google.firebase.FirebaseOptions$Builder: com.google.firebase.FirebaseOptions$Builder setApiKey(java.lang.String)
com.google.firebase.database.connection.WebsocketConnection: void access$300(com.google.firebase.database.connection.WebsocketConnection)
androidx.core.widget.NestedScrollView: void onOverScrolled(int,int,boolean,boolean)
androidx.fragment.app.FragmentTransitionCompat21: void addTarget(java.lang.Object,android.view.View)
androidx.core.content.res.ColorStateListInflaterCompat: android.util.TypedValue getTypedValue()
com.google.firebase.database.snapshot.ChildKey: int compareTo(com.google.firebase.database.snapshot.ChildKey)
com.google.firebase.database.collection.ArraySortedMap: void inOrderTraversal(com.google.firebase.database.collection.LLRBNode$NodeVisitor)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: LoaderManagerImpl$LoaderViewModel$1()
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void registerForLayoutCallback(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
androidx.appcompat.view.menu.MenuItemImpl: int getOrder()
kotlinx.coroutines.channels.AbstractSendChannel: void helpClose(kotlinx.coroutines.channels.Closed)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo unwrap()
com.google.android.gms.internal.location.zzas: void zzb(com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey,com.google.android.gms.internal.location.zzaj)
androidx.appcompat.widget.ListPopupWindow: void setEpicenterBounds(android.graphics.Rect)
androidx.appcompat.view.menu.ActionMenuItem: char getNumericShortcut()
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.collection.ArraySet$1: void colClear()
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
com.google.android.gms.common.api.internal.zabp: zabp()
com.google.android.gms.maps.internal.zzao: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
androidx.fragment.app.FragmentViewLifecycleOwner: void performSave(android.os.Bundle)
com.google.firebase.database.snapshot.RangeMerge: com.google.firebase.database.snapshot.Node updateRangeInNode(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node,com.google.firebase.database.snapshot.Node)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet,int)
com.google.firebase.database.core.WriteTree$2: boolean evaluate(java.lang.Object)
kotlinx.coroutines.internal.ThreadSafeHeap: void setSize(int)
com.baseflow.geolocator.location.GeolocationManager: void isLocationServiceEnabled(android.content.Context,com.baseflow.geolocator.location.LocationServiceListener)
androidx.appcompat.view.menu.MenuBuilder: boolean getOptionalIconsVisible()
com.google.android.gms.common.api.internal.zak: zak(com.google.android.gms.common.api.internal.LifecycleFragment)
com.google.android.gms.internal.maps.zzah: com.google.android.gms.maps.model.Tile getTile(int,int,int)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void zaa(com.google.android.gms.common.api.internal.GoogleApiManager$zaa,com.google.android.gms.common.api.internal.GoogleApiManager$zac)
androidx.appcompat.view.menu.MenuBuilder: boolean isGroupDividerEnabled()
kotlin.collections.EmptyMap: java.util.Set entrySet()
androidx.appcompat.view.menu.MenuItemImpl: int getNumericModifiers()
com.google.android.gms.tasks.zzm: zzm(java.util.concurrent.Executor,com.google.android.gms.tasks.OnSuccessListener)
androidx.fragment.app.Fragment: android.content.res.Resources getResources()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void replaceText(java.lang.CharSequence)
androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence getText(int)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()
kotlin.ranges.IntRange$Companion: IntRange$Companion()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean setupAutoSizeUniformPresetSizesConfiguration()
androidx.appcompat.widget.DropDownListView: void drawSelectorCompat(android.graphics.Canvas)
androidx.window.embedding.EmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.BaseGmsClient$BaseConnectionCallbacks zze(com.google.android.gms.common.internal.BaseGmsClient)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void ensureAlive()
androidx.fragment.app.FragmentController: void restoreSaveState(android.os.Parcelable)
com.google.android.gms.common.internal.BaseGmsClient: boolean zza(int,int,android.os.IInterface)
com.google.firebase.database.core.utilities.Tree: com.google.firebase.database.core.utilities.Tree subTree(com.google.firebase.database.core.Path)
io.flutter.embedding.engine.dart.DartExecutor$1: DartExecutor$1(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.plugins.googlemaps.MarkerBuilder: void setIcon(com.google.android.gms.maps.model.BitmapDescriptor)
com.google.android.gms.common.internal.ClientSettings$Builder: com.google.android.gms.common.internal.ClientSettings$Builder setRealClientClassName(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean isRemoved()
com.google.android.gms.common.api.internal.zad: void zac(com.google.android.gms.common.api.internal.GoogleApiManager$zaa)
com.google.zxing.datamatrix.decoder.Version: Version(int,int,int,int,int,com.google.zxing.datamatrix.decoder.Version$ECBlocks)
com.google.firebase.database.core.Context: java.lang.String buildUserAgent(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: boolean shouldDelayChildPressedState()
io.flutter.plugins.firebase.database.ChildEventsProxy: ChildEventsProxy(io.flutter.plugin.common.EventChannel$EventSink,java.lang.String)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuff$Mode getTintMode(int)
androidx.window.embedding.SplitPairFilter: java.lang.String getSecondaryActivityIntentAction()
androidx.fragment.app.Fragment: int getNextTransition()
com.google.zxing.oned.rss.AbstractRSSReader: int[] getDataCharacterCounters()
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isVisible()
io.flutter.plugins.googlemaps.GoogleMapController: void setTrafficEnabled(boolean)
androidx.window.layout.WindowMetricsCalculatorCompat: WindowMetricsCalculatorCompat()
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void connect()
com.google.firebase.database.android.SqlPersistenceStorageEngine: void saveNode(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node)
com.google.android.gms.maps.model.zzg: zzg()
com.google.android.gms.internal.maps.zzae: void setZIndex(float)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet,int)
kotlin.random.FallbackThreadLocalRandom$implStorage$1: java.lang.Object initialValue()
com.google.zxing.pdf417.decoder.DetectionResultColumn: void setCodeword(int,com.google.zxing.pdf417.decoder.Codeword)
com.google.firebase.database.core.view.QuerySpec: int hashCode()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: ImeSyncDeferringInsetsCallback$InsetsListener(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.gms.common.api.internal.LifecycleActivity: boolean isSupport()
com.google.zxing.Result: byte[] getRawBytes()
com.google.zxing.qrcode.decoder.Version: com.google.zxing.qrcode.decoder.Version[] buildVersions()
androidx.appcompat.app.ActionBar: boolean closeOptionsMenu()
androidx.core.app.NotificationCompat$Style: NotificationCompat$Style()
com.google.firebase.database.core.RepoInfo: void applyEmulatorSettings(com.google.firebase.emulators.EmulatedServiceSettings)
com.google.android.gms.maps.model.PolygonOptions: java.util.List getStrokePattern()
com.google.firebase.database.core.Repo$TransactionData: com.google.firebase.database.snapshot.Node access$1600(com.google.firebase.database.core.Repo$TransactionData)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable getWrappedDrawable()
com.google.firebase.database.android.SqlPersistenceStorageEngine$PersistentCacheOpenHelper: void dropTable(android.database.sqlite.SQLiteDatabase,java.lang.String)
androidx.versionedparcelable.VersionedParcel: java.lang.String readString(java.lang.String,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicHeight()
com.google.zxing.qrcode.detector.FinderPattern: int getCount()
com.google.firebase.database.core.Repo$17: void visitTree(com.google.firebase.database.core.utilities.Tree)
com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult: BlockParsedResult(boolean)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void tryTerminateWorker()
kotlinx.coroutines.NonDisposableHandle: NonDisposableHandle()
com.google.android.gms.common.api.internal.zacl: zacl()
com.lyokone.location.FlutterLocation: void requestService(io.flutter.plugin.common.MethodChannel$Result)
com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode: com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode[] values()
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric: DecodedNumeric(int,int,int)
com.google.android.gms.maps.model.Polygon: void setStrokeColor(int)
kotlin.coroutines.jvm.internal.CompletedContinuation: CompletedContinuation()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: boolean isExtensionVersionSupported(java.lang.Integer)
androidx.appcompat.widget.ToolbarWidgetWrapper$2: void onAnimationEnd(android.view.View)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: DartExecutor$DartEntrypoint(java.lang.String,java.lang.String)
kotlin.collections.MapsKt__MapsJVMKt: int mapCapacity(int)
androidx.core.graphics.TypefaceCompatUtil: boolean copyToFile(java.io.File,android.content.res.Resources,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void jumpToCurrentState()
androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu)
com.google.android.gms.maps.internal.zzaq: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
androidx.core.view.ContentInfoCompat: java.lang.String sourceToString(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()
androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)
com.google.firebase.database.android.AndroidPlatform: com.google.firebase.database.logging.Logger newLogger(com.google.firebase.database.core.Context,com.google.firebase.database.logging.Logger$Level,java.util.List)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getParentFragment()
kotlin.collections.EmptyList: boolean contains(java.lang.Object)
com.google.firebase.database.connection.RangeMerge: java.util.List getOptExclusiveStart()
com.google.firebase.database.core.CompoundWrite: java.lang.String toString()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onResume()
androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setPromptText(java.lang.CharSequence)
androidx.appcompat.widget.Toolbar: boolean isOverflowMenuShowing()
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean suggestedSizeFitsInSpace(int,android.graphics.RectF)
androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(int)
kotlinx.coroutines.DefaultExecutor: java.lang.Thread createThreadSync()
com.google.firebase.database.core.SyncTree$1: java.util.List call()
io.flutter.embedding.engine.dart.DartMessenger: void handleError(java.lang.Error)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int[] getState()
com.google.common.base.MoreObjects$ToStringHelper$ValueHolder: MoreObjects$ToStringHelper$ValueHolder()
kotlin.coroutines.CoroutineContext$plus$1: CoroutineContext$plus$1()
io.flutter.embedding.android.KeyboardManager: void onUnhandled(android.view.KeyEvent)
com.google.firebase.database.snapshot.ChildrenNode: boolean isLeafNode()
androidx.multidex.MultiDexExtractor: void extract(java.util.zip.ZipFile,java.util.zip.ZipEntry,java.io.File,java.lang.String)
com.google.firebase.database.core.view.ViewProcessor: com.google.firebase.database.core.view.ViewCache applyUserMerge(com.google.firebase.database.core.view.ViewCache,com.google.firebase.database.core.Path,com.google.firebase.database.core.CompoundWrite,com.google.firebase.database.core.WriteTreeRef,com.google.firebase.database.snapshot.Node,com.google.firebase.database.core.view.filter.ChildChangeAccumulator)
androidx.collection.ArrayMap: void putAll(java.util.Map)
kotlinx.coroutines.internal.OnUndeliveredElementKt: void callUndeliveredElement(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext)
com.google.android.gms.common.api.internal.ListenerHolder: ListenerHolder(android.os.Looper,java.lang.Object,java.lang.String)
io.flutter.view.VsyncWaiter$1$1: VsyncWaiter$1$1(io.flutter.view.VsyncWaiter$1,long)
com.google.firebase.database.snapshot.LongNode: int hashCode()
com.google.android.gms.common.internal.BaseGmsClient: int getMinApkVersion()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onStop()
com.google.firebase.database.core.Path: boolean isEmpty()
androidx.appcompat.view.menu.MenuItemImpl: void setShowAsAction(int)
androidx.core.app.NotificationManagerCompat: void pushSideChannelQueue(androidx.core.app.NotificationManagerCompat$Task)
com.google.firebase.database.snapshot.DeferredValueNode: com.google.firebase.database.snapshot.LeafNode$LeafType getLeafType()
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: int hashCode()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: PlatformChannel$HapticFeedbackType(java.lang.String,int,java.lang.String)
com.google.zxing.maxicode.decoder.Decoder: com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,java.util.Map)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setComposingText(java.lang.CharSequence,int)
com.baseflow.geolocator.location.FusedLocationClient: void isLocationServiceEnabled(com.baseflow.geolocator.location.LocationServiceListener)
com.google.zxing.pdf417.decoder.DetectionResult: int getBarcodeECLevel()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1(androidx.core.util.Consumer)
io.flutter.plugin.mouse.MouseCursorPlugin: void destroy()
androidx.appcompat.widget.ForwardingListener$TriggerLongPress: void run()
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)
com.google.android.gms.dynamite.zzd: zzd()
com.google.android.gms.maps.internal.zzk: void onCreate(android.os.Bundle)
com.google.firebase.database.core.view.View: java.util.List removeEventRegistration(com.google.firebase.database.core.EventRegistration,com.google.firebase.database.DatabaseError)
androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
io.flutter.embedding.android.FlutterTextureView: android.view.Surface access$502(io.flutter.embedding.android.FlutterTextureView,android.view.Surface)
com.google.android.gms.maps.internal.zzo: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
com.google.firebase.database.core.persistence.TrackedQueryManager: void removeTrackedQuery(com.google.firebase.database.core.view.QuerySpec)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: void mutate()
com.google.firebase.database.core.SyncTree: void access$1100(com.google.firebase.database.core.SyncTree,com.google.firebase.database.core.view.QuerySpec,com.google.firebase.database.core.view.View)
androidx.core.provider.FontsContractCompat$FontInfo: int getTtcIndex()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.String toString()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onActivityResult(int,int,android.content.Intent)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme)
com.google.android.gms.common.SupportErrorDialogFragment: com.google.android.gms.common.SupportErrorDialogFragment newInstance(android.app.Dialog,android.content.DialogInterface$OnCancelListener)
androidx.fragment.app.DefaultSpecialEffectsController$4$1: DefaultSpecialEffectsController$4$1(androidx.fragment.app.DefaultSpecialEffectsController$4)
androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)
com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder: com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder getGeneralDecoder()
io.flutter.embedding.android.FlutterSplashView: boolean hasSplashCompleted()
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: boolean isStillIsoIec646(int)
androidx.appcompat.widget.AppCompatRatingBar: AppCompatRatingBar(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void performPrivateCommand(int,java.lang.String,android.os.Bundle)
androidx.appcompat.widget.Toolbar: void postShowOverflowMenu()
io.flutter.plugins.imagepicker.ImagePickerDelegate$1: boolean needRequestCameraPermission()
androidx.core.view.MarginLayoutParamsCompat: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
android.support.v4.app.INotificationSideChannel$Stub$Proxy: INotificationSideChannel$Stub$Proxy(android.os.IBinder)
io.flutter.embedding.android.FlutterView: void autofill(android.util.SparseArray)
com.google.firebase.database.snapshot.NodeUtilities: com.google.firebase.database.snapshot.Node NodeFromJSON(java.lang.Object)
com.google.zxing.client.android.camera.open.OpenCameraInterface: int getCameraId(int)
com.google.android.gms.common.internal.BaseGmsClient: void triggerConnectionSuspended(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$2400(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderBackgroundThread: void getTemporaryDirectory(io.flutter.plugin.common.MethodChannel$Result)
androidx.exifinterface.media.ExifInterface$Rational: double calculate()
com.journeyapps.barcodescanner.DecoderThread: void requestNextPreview()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat fromValue(java.lang.String)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: java.lang.Integer invoke(int,kotlin.coroutines.CoroutineContext$Element)
com.journeyapps.barcodescanner.camera.CameraSettings: com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode getFocusMode()
androidx.appcompat.app.WindowDecorActionBar: void showForActionMode()
androidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintList(android.content.Context,int)
androidx.appcompat.widget.ResourceManagerInternal: boolean isVectorDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void zabf()
androidx.appcompat.graphics.drawable.DrawableWrapper: void setChangingConfigurations(int)
androidx.collection.LongSparseArray: void remove(long)
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
com.google.zxing.oned.UPCAReader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[],java.util.Map)
androidx.core.app.NotificationManagerCompat$NotifyTask: void send(android.support.v4.app.INotificationSideChannel)
androidx.exifinterface.media.ExifInterface$ExifTag: ExifInterface$ExifTag(java.lang.String,int,int,int)
androidx.appcompat.widget.MenuPopupWindow: void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
androidx.appcompat.widget.AppCompatTextHelper: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
io.flutter.plugin.platform.PlatformViewsController: void destroyOverlaySurfaces()
com.google.firebase.database.connection.PersistentConnectionImpl: com.google.android.gms.tasks.Task fetchAppCheckToken(boolean)
androidx.core.graphics.drawable.DrawableCompat: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
androidx.arch.core.internal.SafeIterableMap$ListIterator: java.lang.Object next()
androidx.fragment.app.FragmentManager: void dispatchActivityCreated()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean onTouchEvent(android.view.MotionEvent)
com.google.zxing.datamatrix.decoder.BitMatrixParser: int readCorner2(int,int)
com.google.firebase.database.snapshot.PathIndex: boolean isDefinedOn(com.google.firebase.database.snapshot.Node)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getPathProviderApplicationDocumentsDirectory()
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumHeight()
com.google.firebase.database.snapshot.EmptyNode: com.google.firebase.database.snapshot.EmptyNode updatePriority(com.google.firebase.database.snapshot.Node)
com.google.android.gms.common.api.internal.TaskUtil: void setResultOrApiException(com.google.android.gms.common.api.Status,java.lang.Object,com.google.android.gms.tasks.TaskCompletionSource)
kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)
androidx.fragment.app.SpecialEffectsController: void executePendingOperations()
com.google.firebase.database.core.Context: void ensureSessionIdentifier()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
androidx.appcompat.graphics.drawable.DrawableWrapper: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List getActionList()
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderBackgroundThread: void getApplicationDocumentsDirectory(io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.AppCompatImageHelper: void setImageResource(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$4000(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createURational(androidx.exifinterface.media.ExifInterface$Rational,java.nio.ByteOrder)
com.google.firebase.database.snapshot.Node$1: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.CascadingMenuPopup: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
androidx.fragment.app.DialogFragment$5: android.view.View onFindViewById(int)
com.google.firebase.database.connection.HostInfo: java.lang.String getNamespace()
com.google.android.gms.dynamite.DynamiteModule: int zzb(android.content.Context,java.lang.String,boolean)
androidx.lifecycle.Lifecycling: java.lang.String getAdapterName(java.lang.String)
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: void reply(java.nio.ByteBuffer)
androidx.appcompat.app.AppCompatActivity: void onSupportActionModeFinished(androidx.appcompat.view.ActionMode)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int,int)
com.google.firebase.components.OptionalProvider: OptionalProvider(com.google.firebase.inject.Deferred$DeferredHandler,com.google.firebase.inject.Provider)
androidx.fragment.app.DefaultSpecialEffectsController: void captureTransitioningViews(java.util.ArrayList,android.view.View)
androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationY(float)
com.google.firebase.database.collection.RBTreeSortedMap: com.google.firebase.database.collection.ImmutableSortedMap remove(java.lang.Object)
com.google.firebase.database.DatabaseReference$3: DatabaseReference$3(com.google.firebase.database.DatabaseReference,com.google.firebase.database.core.CompoundWrite,com.google.firebase.database.core.utilities.Pair,java.util.Map)
androidx.core.widget.NestedScrollView: void onSecondaryPointerUp(android.view.MotionEvent)
com.google.firebase.database.core.Context: com.google.firebase.database.connection.ConnectionContext getConnectionContext()
androidx.core.view.inputmethod.EditorInfoCompat$Impl30: void setInitialSurroundingSubText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int)
com.google.android.gms.maps.internal.zzs: zzs()
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void skipTag(android.content.res.XmlResourceParser)
com.journeyapps.barcodescanner.RawImageData: com.journeyapps.barcodescanner.RawImageData cropAndScale(android.graphics.Rect,int)
androidx.appcompat.app.AppCompatDelegateImpl: boolean shouldAnimateActionModeView()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
androidx.appcompat.view.menu.CascadingMenuPopup: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: int generateCacheKey(int,android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String access$000(io.flutter.embedding.engine.dart.DartExecutor)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getSEALED$p()
com.google.android.gms.location.LocationResult: boolean equals(java.lang.Object)
com.google.android.gms.maps.internal.zzbx: boolean isMyLocationButtonEnabled()
androidx.window.layout.SidecarCompat$DistinctElementCallback: SidecarCompat$DistinctElementCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.appcompat.widget.ActionBarContextView: void onMeasure(int,int)
com.journeyapps.barcodescanner.CameraPreview$1: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
com.google.firebase.database.DataSnapshot$1$1: java.lang.Object next()
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
com.google.firebase.database.core.view.QueryParams: com.google.firebase.database.core.view.QueryParams copy()
androidx.core.app.ComponentActivity: boolean superDispatchKeyEvent(android.view.KeyEvent)
com.google.firebase.components.Component: boolean isValue()
kotlinx.coroutines.internal.DispatchedContinuation: void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable)
androidx.core.graphics.TypefaceCompatApi26Impl: void abortCreation(java.lang.Object)
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments: AccessibilityViewCommand$SetTextArguments()
androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)
androidx.collection.ArraySet: boolean containsAll(java.util.Collection)
androidx.cursoradapter.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.google.android.gms.common.api.internal.zabu: zabu(com.google.android.gms.common.api.internal.zac,int,com.google.android.gms.common.api.GoogleApi)
androidx.fragment.app.FragmentManager: int getBackStackEntryCount()
com.google.firebase.database.core.view.QueryParams: com.google.firebase.database.snapshot.Index getIndex()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationIcon(android.graphics.drawable.Drawable)
com.google.zxing.qrcode.detector.Detector: com.google.zxing.common.DetectorResult processFinderPatternInfo(com.google.zxing.qrcode.detector.FinderPatternInfo)
com.google.android.gms.location.LocationRequest: long getMaxWaitTime()
com.google.android.gms.common.internal.IGmsServiceBroker$Stub$zza: void getService(com.google.android.gms.common.internal.IGmsCallbacks,com.google.android.gms.common.internal.GetServiceRequest)
io.flutter.plugin.localization.LocalizationPlugin: java.util.Locale localeFromString(java.lang.String)
com.google.android.gms.common.internal.ResolveAccountRequest: void writeToParcel(android.os.Parcel,int)
io.flutter.plugins.googlemaps.Convert: java.util.Map toObjectMap(java.lang.Object)
androidx.window.layout.WindowMetrics: WindowMetrics(androidx.window.core.Bounds)
io.flutter.plugin.common.EventChannel: EventChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String)
com.google.firebase.database.core.Repo$5: void stopListening(com.google.firebase.database.core.view.QuerySpec,com.google.firebase.database.core.Tag)
androidx.fragment.app.FragmentStateManager: void createView()
com.google.firebase.database.core.persistence.DefaultPersistenceManager: DefaultPersistenceManager(com.google.firebase.database.core.Context,com.google.firebase.database.core.persistence.PersistenceStorageEngine,com.google.firebase.database.core.persistence.CachePolicy,com.google.firebase.database.core.utilities.Clock)
kotlin.jvm.internal.ClassReference: java.lang.String toString()
androidx.lifecycle.ViewModelProvider$KeyedFactory: androidx.lifecycle.ViewModel create(java.lang.Class)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
com.google.android.gms.common.api.internal.zaab: zaab(com.google.android.gms.common.api.internal.zaz,com.google.android.gms.tasks.TaskCompletionSource)
androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)
com.google.android.gms.maps.model.Marker: void setAlpha(float)
com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: boolean casListeners(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener,com.google.common.util.concurrent.AbstractFuture$Listener)
com.google.android.gms.internal.location.zzad: zzad(com.google.android.gms.common.api.Status)
com.google.firebase.database.connection.Connection: void onControlMessage(java.util.Map)
com.google.android.gms.maps.internal.zzg: com.google.android.gms.maps.internal.IProjectionDelegate getProjection()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setNumericShortcut(char,int)
com.baseflow.geolocator.GeolocatorLocationService: android.os.IBinder onBind(android.content.Intent)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.android.SplashScreen provideSplashScreen()
androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
androidx.versionedparcelable.VersionedParcelParcel: void setOutputField(int)
com.google.firebase.database.snapshot.EmptyNode: java.lang.Object getValue()
androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)
com.google.firebase.database.util.JsonMapper: java.util.Map unwrapJsonObject(org.json.JSONObject)
com.google.firebase.database.snapshot.DeferredValueNode: java.lang.String getHashRepresentation(com.google.firebase.database.snapshot.Node$HashVersion)
kotlinx.coroutines.DispatchedTask: void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable)
androidx.customview.view.AbsSavedState: int describeContents()
androidx.core.widget.ListViewAutoScrollHelper: boolean canTargetScrollHorizontally(int)
kotlin.coroutines.jvm.internal.CompletedContinuation: void resumeWith(java.lang.Object)
kotlinx.coroutines.ThreadLocalEventLoop: ThreadLocalEventLoop()
androidx.activity.result.IntentSenderRequest: int describeContents()
net.touchcapture.qr.flutterqr.QRView: boolean access$isPaused$p(net.touchcapture.qr.flutterqr.QRView)
androidx.fragment.app.FragmentActivity$1: android.os.Bundle saveState()
androidx.appcompat.view.menu.MenuItemImpl: MenuItemImpl(androidx.appcompat.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int)
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String fullAssetPathFrom(java.lang.String)
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: void cancel()
androidx.appcompat.view.SupportActionModeWrapper: java.lang.CharSequence getSubtitle()
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(androidx.appcompat.widget.ActionMenuView$LayoutParams)
androidx.arch.core.executor.DefaultTaskExecutor: android.os.Handler createAsync(android.os.Looper)
androidx.appcompat.widget.TooltipCompatHandler$1: TooltipCompatHandler$1(androidx.appcompat.widget.TooltipCompatHandler)
com.google.firebase.database.core.SyncTree: java.util.List applyTaggedOperation(com.google.firebase.database.core.view.QuerySpec,com.google.firebase.database.core.operation.Operation)
com.google.firebase.database.collection.LLRBNode$Color: LLRBNode$Color(java.lang.String,int)
com.journeyapps.barcodescanner.DecoratedBarcodeView: void pause()
com.google.firebase.database.core.Path: com.google.firebase.database.core.Path getParent()
com.google.firebase.internal.DataCollectionConfigStorage: android.content.Context directBootSafe(android.content.Context)
kotlinx.coroutines.CommonPool: java.lang.Thread createPlainPool$lambda-12(java.util.concurrent.atomic.AtomicInteger,java.lang.Runnable)
com.google.zxing.BinaryBitmap: com.google.zxing.common.BitMatrix getBlackMatrix()
io.flutter.embedding.engine.dart.DartMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
com.google.zxing.oned.Code128Reader: int decodeCode(com.google.zxing.common.BitArray,int[],int)
androidx.appcompat.app.AlertController$ButtonHandler: void handleMessage(android.os.Message)
com.google.firebase.database.core.DatabaseConfig: void setAppCheckTokenProvider(com.google.firebase.database.core.TokenProvider)
com.google.zxing.oned.rss.DataCharacter: int hashCode()
com.baseflow.geolocator.GeolocatorPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.journeyapps.barcodescanner.ViewfinderView$1: void previewStopped()
com.google.firebase.components.ComponentDiscovery: ComponentDiscovery(java.lang.Object,com.google.firebase.components.ComponentDiscovery$RegistrarNameRetriever)
io.flutter.plugin.common.BasicMessageChannel: java.lang.String access$300(io.flutter.plugin.common.BasicMessageChannel)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingGet: boolean markSent()
com.google.firebase.components.RestrictedComponentContainer: java.lang.Object get(java.lang.Class)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.app.Activity getAppComponent()
io.flutter.plugins.googlemaps.PolylinesController: void addPolyline(java.lang.String,com.google.android.gms.maps.model.PolylineOptions,boolean)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder: LockFreeTaskQueueCore$Placeholder(int)
androidx.versionedparcelable.ParcelImpl: ParcelImpl(android.os.Parcel)
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.ResultCallback zaa(com.google.android.gms.common.api.ResultCallback)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingListen: PersistentConnectionImpl$OutstandingListen(com.google.firebase.database.connection.RequestResultCallback,com.google.firebase.database.connection.PersistentConnectionImpl$QuerySpec,java.lang.Long,com.google.firebase.database.connection.ListenHashProvider)
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
androidx.collection.ArraySet: boolean addAll(java.util.Collection)
com.google.android.gms.location.LocationResult: void writeToParcel(android.os.Parcel,int)
com.google.firebase.database.snapshot.EmptyNode: com.google.firebase.database.snapshot.Node updateChild(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void zae(com.google.android.gms.common.api.internal.GoogleApiManager$zaa)
com.google.firebase.database.core.Path$1: boolean hasNext()
com.google.zxing.qrcode.detector.Detector: float calculateModuleSizeOneWay(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedPreScroll(android.view.View,int,int,int[])
com.journeyapps.barcodescanner.CameraPreview: void access$100(com.journeyapps.barcodescanner.CameraPreview)
kotlin.Unit: Unit()
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.view.menu.BaseMenuWrapper: void internalRemoveGroup(int)
io.flutter.view.VsyncWaiter: long access$000(io.flutter.view.VsyncWaiter)
androidx.window.layout.ActivityCompatHelperApi30: ActivityCompatHelperApi30()
com.google.firebase.database.snapshot.ChildKey: boolean equals(java.lang.Object)
com.google.android.gms.tasks.zzu$zza: zzu$zza(com.google.android.gms.common.api.internal.LifecycleFragment)
kotlinx.coroutines.JobSupport: java.lang.Object cancelMakeCompleting(java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController: boolean checkInputConnectionProxy(android.view.View)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener$1: void run()
com.google.firebase.database.core.Repo$15: Repo$15(com.google.firebase.database.core.Repo)
androidx.core.provider.FontRequestWorker$3: androidx.core.provider.FontRequestWorker$TypefaceResult call()
com.google.firebase.database.DataSnapshot: com.google.firebase.database.DatabaseReference getRef()
com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator: FinderPatternFinder$CenterComparator(float,com.google.zxing.qrcode.detector.FinderPatternFinder$1)
com.google.firebase.database.core.view.QueryParams: boolean hasAnchoredLimit()
io.flutter.embedding.android.FlutterActivity: void onDestroy()
androidx.core.view.ViewCompat: java.lang.CharSequence getStateDescription(android.view.View)
io.flutter.embedding.engine.dart.DartExecutor: io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener access$100(io.flutter.embedding.engine.dart.DartExecutor)
androidx.core.provider.FontsContractCompat$FontFamilyResult: int getStatusCode()
androidx.appcompat.app.AppCompatActivity: void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
com.google.firebase.database.core.operation.AckUserWrite: com.google.firebase.database.core.operation.Operation operationForChild(com.google.firebase.database.snapshot.ChildKey)
com.google.firebase.database.core.Repo: Repo(com.google.firebase.database.core.RepoInfo,com.google.firebase.database.core.Context,com.google.firebase.database.FirebaseDatabase)
com.google.firebase.database.core.utilities.ImmutableTree: java.lang.Object leafMostValueMatching(com.google.firebase.database.core.Path,com.google.firebase.database.core.utilities.Predicate)
com.google.firebase.events.Event: Event(java.lang.Class,java.lang.Object)
androidx.window.embedding.ActivityRule: java.util.Set getFilters()
com.google.firebase.database.core.utilities.encoding.CustomClassMapper$BeanMapper: java.util.Map serialize(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
com.google.firebase.database.core.Repo$TransactionData: com.google.firebase.database.snapshot.Node access$1602(com.google.firebase.database.core.Repo$TransactionData,com.google.firebase.database.snapshot.Node)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentHostCallback getHost()
com.google.firebase.database.core.SyncTree$12: java.lang.Object call()
com.google.zxing.common.BitArray: boolean equals(java.lang.Object)
com.google.zxing.qrcode.detector.Detector: com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.common.PerspectiveTransform,int)
com.google.android.gms.internal.location.zzbf: com.google.android.gms.internal.location.zzbf zza(com.google.android.gms.location.zzx,com.google.android.gms.internal.location.zzaj)
com.google.firebase.database.connection.PersistentConnectionImpl: void putInternal(java.lang.String,java.util.List,java.lang.Object,java.lang.String,com.google.firebase.database.connection.RequestResultCallback)
com.google.android.gms.maps.model.Polyline: Polyline(com.google.android.gms.internal.maps.zzz)
androidx.exifinterface.media.ExifInterface: java.lang.String byteArrayToHexString(byte[])
com.journeyapps.barcodescanner.CaptureManager: void onDestroy()
androidx.core.widget.AutoScrollHelper$ClampedScroller: int getVerticalDirection()
androidx.appcompat.view.SupportMenuInflater$MenuState: char getShortcut(java.lang.String)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: OnUndeliveredElementKt$bindCancellationFun$1(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext)
io.flutter.plugins.googlemaps.MarkerController: void setZIndex(float)
kotlinx.coroutines.channels.ConflatedChannel: java.lang.Object pollInternal()
com.google.android.gms.maps.model.RoundCap: RoundCap()
androidx.fragment.app.FragmentTransition$5: void run()
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatActivity tryUnwrapContext()
com.google.firebase.components.AbstractComponentContainer: java.util.Set setOf(java.lang.Class)
com.google.firebase.database.DatabaseReference: java.lang.String getKey()
kotlinx.coroutines.channels.AbstractChannel: boolean access$enqueueReceive(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.channels.Receive)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEvent(android.view.View,int)
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getTOO_LATE_TO_CANCEL$p()
androidx.fragment.app.Fragment: int getPopExitAnim()
com.google.zxing.aztec.detector.Detector: com.google.zxing.ResultPoint[] expandSquare(com.google.zxing.ResultPoint[],int,int)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void retrieveLostImage(io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.AppCompatTextHelper: int getAutoSizeTextType()
com.google.android.gms.auth.api.signin.internal.Storage: Storage(android.content.Context)
androidx.arch.core.internal.SafeIterableMap: java.util.Iterator descendingIterator()
androidx.core.content.res.ResourcesCompat$ColorStateListCacheEntry: ResourcesCompat$ColorStateListCacheEntry(android.content.res.ColorStateList,android.content.res.Configuration)
androidx.core.graphics.PathParser$ExtractFloatResult: PathParser$ExtractFloatResult()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.widget.TextViewCompat: void setLastBaselineToBottomHeight(android.widget.TextView,int)
androidx.fragment.app.Fragment: void setFocusedView(android.view.View)
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
io.flutter.embedding.android.FlutterView$1: void onAccessibilityChanged(boolean,boolean)
com.journeyapps.barcodescanner.CameraPreview: double getMarginFraction()
io.flutter.plugins.googlemaps.GoogleMapController: void onInputConnectionUnlocked()
com.google.android.gms.maps.internal.zzg: boolean setIndoorEnabled(boolean)
com.google.firebase.database.core.SyncTree$5: java.lang.Object call()
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity onGetHost()
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager)
kotlinx.coroutines.scheduling.SchedulerTimeSource: SchedulerTimeSource()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)
androidx.core.widget.NestedScrollView: void initScrollView()
kotlinx.coroutines.AbstractCoroutine: java.lang.String nameString$kotlinx_coroutines_core()
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean onStateChange(int[])
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: long wo(long,long)
com.google.android.gms.dynamic.DeferredLifecycleHelper: void onSaveInstanceState(android.os.Bundle)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.String toString()
kotlin.jvm.internal.Reflection: java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5500(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action)
androidx.fragment.app.FragmentContainerView: void removeAllViewsInLayout()
androidx.core.view.OneShotPreDrawListener: OneShotPreDrawListener(android.view.View,java.lang.Runnable)
com.google.firebase.database.core.view.filter.RangedFilter: com.google.firebase.database.core.view.filter.NodeFilter getIndexedFilter()
com.google.android.gms.common.GoogleApiAvailability: android.app.Dialog zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)
androidx.core.provider.FontRequestWorker: java.lang.String createCacheId(androidx.core.provider.FontRequest,int)
com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState: PersistentConnectionImpl$ConnectionState(java.lang.String,int)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: boolean performClick()
io.flutter.plugins.googlemaps.CirclesController: void addCircle(java.lang.String,com.google.android.gms.maps.model.CircleOptions,boolean)
com.journeyapps.barcodescanner.BarcodeView$1: BarcodeView$1(com.journeyapps.barcodescanner.BarcodeView)
com.google.android.gms.auth.api.signin.internal.Storage: com.google.android.gms.auth.api.signin.GoogleSignInAccount getSavedDefaultGoogleSignInAccount()
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromAppComponent()
io.flutter.embedding.android.FlutterSplashView$2: void onFlutterUiDisplayed()
androidx.appcompat.widget.AppCompatHintHelper: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View)
androidx.appcompat.view.menu.MenuBuilder: android.view.View getHeaderView()
androidx.window.embedding.EmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap)
io.flutter.plugins.googlemaps.Convert: java.util.List toPoints(java.lang.Object)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2: boolean onPreDraw()
io.flutter.embedding.engine.systemchannels.LifecycleChannel: LifecycleChannel(io.flutter.embedding.engine.dart.DartExecutor)
io.flutter.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void detachFromFlutterEngine()
kotlinx.coroutines.DispatchedTaskKt: boolean isReusableMode(int)
com.journeyapps.barcodescanner.MixedDecoder: MixedDecoder(com.google.zxing.Reader)
androidx.appcompat.widget.SuggestionsAdapter: boolean hasStableIds()
com.google.zxing.aztec.AztecDetectorResult: AztecDetectorResult(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint[],boolean,int,int)
androidx.fragment.app.Fragment$5: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.zxing.aztec.detector.Detector: com.google.zxing.aztec.detector.Detector$Point getMatrixCenter()
androidx.appcompat.widget.ResourcesWrapper: android.util.DisplayMetrics getDisplayMetrics()
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setUse24HourFormat(boolean)
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: java.lang.Object parseResult(int,android.content.Intent)
androidx.exifinterface.media.ExifInterface: void readImageFileDirectory(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int)
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation: java.lang.String getNewString()
com.google.android.gms.tasks.zzg: void onComplete(com.google.android.gms.tasks.Task)
com.google.android.gms.internal.maps.zzj: void setFillColor(int)
com.google.firebase.database.collection.LLRBValueNode: boolean isEmpty()
com.google.zxing.pdf417.detector.Detector: void copyToResult(com.google.zxing.ResultPoint[],com.google.zxing.ResultPoint[],int[])
androidx.appcompat.widget.ActionMenuView: int measureChildForCells(android.view.View,int,int,int,int)
androidx.appcompat.widget.TooltipCompatHandler: void cancelPendingShow()
androidx.window.embedding.SplitRule: int getLayoutDirection()
com.google.firebase.database.core.SparseSnapshotTree$2: SparseSnapshotTree$2(com.google.firebase.database.core.SparseSnapshotTree,com.google.firebase.database.core.Path,com.google.firebase.database.core.SparseSnapshotTree$SparseSnapshotTreeVisitor)
androidx.appcompat.widget.SearchView$2: SearchView$2(androidx.appcompat.widget.SearchView)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
androidx.appcompat.widget.ActionBarOverlayLayout$1: void onAnimationEnd(android.animation.Animator)
io.flutter.embedding.android.FlutterTextureView: void disconnectSurfaceFromRenderer()
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void zabg()
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
io.flutter.plugin.platform.PlatformPlugin: void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
com.google.firebase.database.core.utilities.Validation: boolean isWritableKey(java.lang.String)
com.google.firebase.database.core.SnapshotHolder: com.google.firebase.database.snapshot.Node getRootNode()
io.flutter.plugins.googlemaps.PolylinesController: PolylinesController(io.flutter.plugin.common.MethodChannel,float)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)
com.google.android.gms.common.api.internal.GoogleApiManager$zac: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setActionView(int)
com.google.android.gms.common.api.internal.zaz: void zaaf()
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall)
io.flutter.embedding.engine.systemchannels.SettingsChannel: SettingsChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.Toolbar: boolean showOverflowMenu()
androidx.appcompat.graphics.drawable.DrawableWrapper: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
com.google.android.gms.auth.api.signin.internal.Storage: java.lang.String zab(java.lang.String,java.lang.String)
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.String getBufferDebugString()
com.google.android.gms.common.api.internal.GoogleApiManager: long zac(com.google.android.gms.common.api.internal.GoogleApiManager)
com.google.firebase.database.snapshot.DoubleNode: int hashCode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
kotlin.ranges.RangesKt___RangesKt: int coerceAtMost(int,int)
io.flutter.plugin.localization.LocalizationPlugin$1: LocalizationPlugin$1(io.flutter.plugin.localization.LocalizationPlugin)
androidx.appcompat.widget.ActionBarContainer: void onMeasure(int,int)
androidx.appcompat.view.menu.CascadingMenuPopup: int getNextMenuPosition(int)
androidx.fragment.app.FragmentTransitionImpl: FragmentTransitionImpl()
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: void commitAsync(android.content.SharedPreferences$Editor,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.TintTypedArray: java.lang.String getString(int)
com.google.android.gms.dynamite.zzg: com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$zzb zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$zza)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
androidx.fragment.app.Fragment: void onDestroy()
com.google.firebase.database.android.AndroidPlatform$2: void onBackgroundStateChanged(boolean)
androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction disallowAddToBackStack()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.android.FlutterActivity: void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView)
io.flutter.embedding.engine.dart.DartExecutor: boolean isExecutingDart()
kotlinx.coroutines.DispatchedTask: java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder: int findInsertIndex(java.util.ArrayList,int)
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
com.google.firebase.components.OptionalProvider: void set(com.google.firebase.inject.Provider)
androidx.core.provider.FontRequest: java.lang.String toString()
kotlin.jvm.internal.Intrinsics: void checkNotNull(java.lang.Object)
com.google.zxing.common.reedsolomon.ReedSolomonDecoder: void decode(int[],int)
androidx.appcompat.view.menu.ListMenuPresenter: boolean flagActionItems()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.view.MenuInflater getMenuInflater()
androidx.core.widget.NestedScrollView: void scrollToChild(android.view.View)
com.google.firebase.database.core.persistence.PruneForest: java.lang.Object foldKeptNodes(java.lang.Object,com.google.firebase.database.core.utilities.ImmutableTree$TreeVisitor)
com.google.firebase.database.core.Repo$4$1: void run()
com.journeyapps.barcodescanner.CameraPreview: void access$300(com.journeyapps.barcodescanner.CameraPreview,com.journeyapps.barcodescanner.Size)
com.google.zxing.BinaryBitmap: int getHeight()
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentManager: void completeShowHideFragment(androidx.fragment.app.Fragment)
com.google.zxing.pdf417.decoder.DetectionResult: int adjustRowNumbersByRow()
com.google.zxing.maxicode.decoder.BitMatrixParser: BitMatrixParser(com.google.zxing.common.BitMatrix)
androidx.appcompat.app.AppCompatDialog: void dismiss()
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void resume()
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.util.Map$Entry next()
androidx.collection.MapCollections$KeySet: MapCollections$KeySet(androidx.collection.MapCollections)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setTintList(android.content.res.ColorStateList)
androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: StringsKt__IndentKt$getIndentFunction$1()
com.google.firebase.database.core.Repo: com.google.firebase.database.core.SparseSnapshotTree access$1100(com.google.firebase.database.core.Repo)
androidx.collection.ArraySet: java.lang.Object valueAt(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void onMeasure(int,int)
androidx.fragment.app.FragmentManager: void scheduleCommit()
kotlinx.coroutines.internal.ScopeCoroutine: kotlinx.coroutines.Job getParent$kotlinx_coroutines_core()
com.google.zxing.datamatrix.DataMatrixReader: com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix)
androidx.appcompat.view.menu.MenuPopupHelper: MenuPopupHelper(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String getRouteName()
androidx.fragment.app.SpecialEffectsController: void forcePostponedExecutePendingOperations()
com.google.android.gms.common.zze: com.google.android.gms.dynamic.IObjectWrapper zzb()
androidx.arch.core.internal.SafeIterableMap$Entry: boolean equals(java.lang.Object)
com.google.android.gms.maps.model.TileOverlayOptions: void writeToParcel(android.os.Parcel,int)
androidx.activity.result.ActivityResultRegistry: ActivityResultRegistry()
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.google.android.gms.maps.internal.zzo: zzo()
androidx.versionedparcelable.ParcelImpl$1: androidx.versionedparcelable.ParcelImpl[] newArray(int)
com.google.android.gms.common.api.internal.LifecycleCallback: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.google.android.gms.common.internal.BaseGmsClient: boolean zzl()
androidx.fragment.app.FragmentTransition$4: FragmentTransition$4(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object)
androidx.core.view.NestedScrollingChildHelper: NestedScrollingChildHelper(android.view.View)
androidx.arch.core.internal.SafeIterableMap: SafeIterableMap()
com.google.firebase.database.connection.RangeMerge: java.util.List getOptInclusiveEnd()
androidx.window.java.R: R()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setWindowCallback(android.view.Window$Callback)
kotlinx.coroutines.CompletionStateKt: java.lang.Object recoverResult(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.journeyapps.barcodescanner.DecoderThread: android.os.Handler access$400(com.journeyapps.barcodescanner.DecoderThread)
androidx.appcompat.widget.Toolbar$SavedState$1: Toolbar$SavedState$1()
com.google.android.gms.common.api.internal.GoogleApiManager: void zaa(com.google.android.gms.common.api.GoogleApi)
com.google.firebase.database.core.UserWriteRecord: boolean isOverwrite()
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void removeViewImmediate(java.lang.Object[])
com.baseflow.geolocator.LocationServiceHandlerImpl: void setActivity(android.app.Activity)
io.flutter.plugins.googlemaps.GoogleMapController: void setGoogleMapListener(io.flutter.plugins.googlemaps.GoogleMapListener)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
androidx.appcompat.view.menu.MenuPopup: void setEpicenterBounds(android.graphics.Rect)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt: kotlinx.coroutines.Job transitiveCoroutineParent(kotlinx.coroutines.Job,kotlinx.coroutines.Job)
io.flutter.plugins.googlemaps.PolylineBuilder: void setPoints(java.util.List)
androidx.core.provider.RequestExecutor$ReplyRunnable$1: void run()
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn: void setRowNumbers()
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: LockFreeTaskQueueCore$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void error(java.lang.String,java.lang.String,java.lang.Object)
kotlinx.coroutines.EventLoopImplBase: void schedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBar getSupportActionBar()
com.google.firebase.database.core.Repo$19: void visitTree(com.google.firebase.database.core.utilities.Tree)
androidx.fragment.app.Fragment: boolean getAllowReturnTransitionOverlap()
androidx.window.embedding.SplitInfo: SplitInfo(androidx.window.embedding.ActivityStack,androidx.window.embedding.ActivityStack,float)
io.flutter.plugins.imagepicker.ImagePickerPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.fragment.app.SpecialEffectsController: void markPostponedState()
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.ApiKey getApiKey()
com.google.firebase.database.core.ServerValues: com.google.firebase.database.snapshot.Node access$000(com.google.firebase.database.snapshot.Node,com.google.firebase.database.core.ValueProvider,java.util.Map)
com.google.android.gms.common.api.internal.LifecycleActivity: androidx.fragment.app.FragmentActivity asFragmentActivity()
com.google.firebase.components.Dependency: com.google.firebase.components.Dependency required(java.lang.Class)
androidx.core.graphics.TypefaceCompatBaseImpl$1: int getWeight(java.lang.Object)
androidx.appcompat.widget.ActionMenuView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.AppCompatTextHelper: void applyCompoundDrawablesTints()
com.google.android.gms.maps.model.PolygonOptions: com.google.android.gms.maps.model.PolygonOptions geodesic(boolean)
com.google.zxing.oned.EAN8Reader: EAN8Reader()
com.google.android.gms.common.internal.Preconditions: void checkHandlerThread(android.os.Handler,java.lang.String)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean)
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onActivityDestroyed(android.app.Activity)
androidx.appcompat.view.menu.ActionMenuItemView: void setPadding(int,int,int,int)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo getLastInfo()
androidx.window.core.Bounds: int hashCode()
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
com.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder add(com.google.firebase.components.Dependency)
androidx.core.view.WindowInsetsCompat: boolean equals(java.lang.Object)
kotlin.Pair: java.lang.Object getFirst()
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext getImmediate()
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
io.flutter.plugin.common.StandardMessageCodec: void readAlignment(java.nio.ByteBuffer,int)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher()
androidx.fragment.app.BackStackRecord: int commitAllowingStateLoss()
com.baseflow.geolocator.GeolocatorPlugin: void deregisterListeners()
com.google.android.gms.maps.internal.zzbx: void setMapToolbarEnabled(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: VectorDrawableCompat$VObject()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable mutate()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairFilter parseSplitPairFilter(android.content.Context,android.content.res.XmlResourceParser)
androidx.versionedparcelable.VersionedParcel: int readInt(int,int)
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode forBits(int)
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
com.google.android.gms.internal.location.zzat: void onLocationAvailability(com.google.android.gms.location.LocationAvailability)
androidx.collection.SimpleArrayMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
com.google.zxing.pdf417.decoder.DetectionResult: com.google.zxing.pdf417.decoder.DetectionResultColumn[] getDetectionResultColumns()
androidx.exifinterface.media.ExifInterface: void initForFilename(java.lang.String)
com.google.android.gms.maps.zzv: zzv(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnCameraMoveListener)
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGFPoly buildMonomial(int,int)
androidx.appcompat.view.menu.CascadingMenuPopup: void updateMenuView(boolean)
kotlin.collections.EmptySet: int getSize()
androidx.appcompat.widget.SearchView: void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect)
androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator)
androidx.fragment.app.FragmentState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.widget.NestedScrollView: void onNestedPreScroll(android.view.View,int,int,int[],int)
androidx.window.embedding.EmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.firebase.database.core.persistence.CachePolicy$1: long getMaxNumberOfQueriesToKeep()
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: int addFailReason(long)
com.google.common.util.concurrent.ThreadFactoryBuilder: ThreadFactoryBuilder()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setLocalOnly(boolean)
androidx.core.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.String toString()
androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
com.google.android.gms.common.api.internal.zak: zak(com.google.android.gms.common.api.internal.LifecycleFragment,com.google.android.gms.common.GoogleApiAvailability)
com.google.android.gms.internal.maps.zzv: void remove()
androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)
kotlinx.coroutines.EventLoop: void incrementUseCount$default(kotlinx.coroutines.EventLoop,boolean,int,java.lang.Object)
androidx.core.graphics.Insets: androidx.core.graphics.Insets of(int,int,int,int)
androidx.appcompat.app.AppCompatDelegate: void attachBaseContext(android.content.Context)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)
com.google.firebase.database.DatabaseReference: com.google.android.gms.tasks.Task updateChildrenInternal(java.util.Map,com.google.firebase.database.DatabaseReference$CompletionListener)
com.google.firebase.database.core.persistence.TrackedQueryManager: boolean includedInDefaultCompleteQuery(com.google.firebase.database.core.Path)
com.google.android.gms.internal.location.zzaf: zzaf()
kotlinx.coroutines.flow.internal.SafeCollectorKt: kotlin.jvm.functions.Function3 access$getEmitFun$p()
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
androidx.appcompat.widget.SearchView: void onActionViewCollapsed()
kotlinx.coroutines.JobSupportKt: java.lang.Object boxIncomplete(java.lang.Object)
net.touchcapture.qr.flutterqr.Shared: void setActivity(android.app.Activity)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void applyTheme(android.content.res.Resources$Theme)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: boolean isEmpty()
androidx.lifecycle.LifecycleRegistry$ObserverWithState: LifecycleRegistry$ObserverWithState(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State)
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String getLookupKeyForAsset(java.lang.String)
androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.appcompat.view.menu.MenuItemImpl: android.content.res.ColorStateList getIconTintList()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean getPadding(android.graphics.Rect)
com.lyokone.location.FlutterLocation: void createLocationRequest()
androidx.appcompat.widget.Toolbar$LayoutParams: void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams)
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[])
com.google.firebase.database.core.utilities.encoding.CustomClassMapper: java.lang.Object convertToPlainJavaTypes(java.lang.Object)
kotlin.collections.EmptyMap: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op(int,androidx.fragment.app.Fragment)
com.journeyapps.barcodescanner.Decoder: void foundPossibleResultPoint(com.google.zxing.ResultPoint)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
com.google.firebase.database.collection.ImmutableSortedMapIterator: ImmutableSortedMapIterator(com.google.firebase.database.collection.LLRBNode,java.lang.Object,java.util.Comparator,boolean)
androidx.fragment.app.FragmentManager$1: FragmentManager$1(androidx.fragment.app.FragmentManager,boolean)
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: FragmentManager$FragmentIntentSenderContract()
androidx.fragment.app.FragmentController: FragmentController(androidx.fragment.app.FragmentHostCallback)
com.google.firebase.database.snapshot.LeafNode: com.google.firebase.database.snapshot.Node getChild(com.google.firebase.database.core.Path)
androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)
kotlinx.coroutines.JobSupport: java.lang.String nameString$kotlinx_coroutines_core()
com.google.zxing.common.DecoderResult: java.lang.Object getOther()
androidx.fragment.app.FragmentStore: void makeInactive(androidx.fragment.app.FragmentStateManager)
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: AbstractChannel$RemoveReceiveOnCancel(kotlinx.coroutines.channels.AbstractChannel,kotlinx.coroutines.channels.Receive)
androidx.appcompat.widget.AppCompatTextHelper$2: void run()
com.google.android.gms.location.LocationSettingsResult: LocationSettingsResult(com.google.android.gms.common.api.Status,com.google.android.gms.location.LocationSettingsStates)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)
com.google.zxing.qrcode.detector.FinderPatternFinder: boolean haveMultiplyConfirmedCenters()
com.google.zxing.oned.rss.expanded.ExpandedRow: boolean isEquivalent(java.util.List)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setHotspotBounds(int,int,int,int)
com.google.firebase.database.collection.RBTreeSortedMap$Builder: java.lang.Object getValue(java.lang.Object)
com.journeyapps.barcodescanner.camera.CenterCropStrategy: android.graphics.Rect scalePreview(com.journeyapps.barcodescanner.Size,com.journeyapps.barcodescanner.Size)
androidx.appcompat.widget.AppCompatEditText: void setTextAppearance(android.content.Context,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setActionProvider(android.view.ActionProvider)
com.google.firebase.components.CycleDetector$Dep: boolean access$100(com.google.firebase.components.CycleDetector$Dep)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: ListMenuPresenter$MenuAdapter(androidx.appcompat.view.menu.ListMenuPresenter)
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.appcompat.app.AlertController$CheckedItemAdapter: long getItemId(int)
androidx.appcompat.widget.TooltipPopup: void hide()
com.google.android.gms.tasks.zzu: void zze()
com.google.zxing.oned.OneDReader: void recordPattern(com.google.zxing.common.BitArray,int,int[])
com.journeyapps.barcodescanner.camera.CameraInstance: boolean access$602(com.journeyapps.barcodescanner.camera.CameraInstance,boolean)
com.google.android.gms.internal.location.zzk: java.lang.String getServiceDescriptor()
com.google.firebase.database.core.Repo: void onDisconnectSetValue(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node,com.google.firebase.database.DatabaseReference$CompletionListener)
androidx.fragment.app.FragmentManager: void destroyFragmentView(androidx.fragment.app.Fragment)
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceDestroyed(android.view.SurfaceHolder)
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper: io.flutter.plugin.common.MethodChannel$Result access$100(io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper)
com.google.firebase.database.connection.PersistentConnectionImpl$8: PersistentConnectionImpl$8(com.google.firebase.database.connection.PersistentConnectionImpl)
com.journeyapps.barcodescanner.camera.CameraManager: void setTorch(boolean)
com.google.zxing.qrcode.decoder.DataMask$1: boolean isMasked(int,int)
com.google.zxing.client.android.DecodeHintManager: DecodeHintManager()
androidx.appcompat.widget.TintInfo: TintInfo()
androidx.core.graphics.TypefaceCompatBaseImpl$2: int getWeight(java.lang.Object)
androidx.core.widget.CompoundButtonCompat: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderTitle(java.lang.CharSequence)
com.google.android.gms.maps.model.Polygon: boolean equals(java.lang.Object)
androidx.core.graphics.PathParser$PathDataNode: void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$5100(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugins.googlemaps.MarkersController: void changeMarkers(java.util.List)
androidx.interpolator.view.animation.FastOutLinearInInterpolator: FastOutLinearInInterpolator()
com.google.android.gms.common.api.internal.zal: void run()
androidx.fragment.app.Fragment: void performStart()
com.google.common.util.concurrent.AbstractFuture$Failure$1: java.lang.Throwable fillInStackTrace()
io.flutter.embedding.android.DrawableSplashScreen: android.view.View createSplashView(android.content.Context,android.os.Bundle)
kotlinx.coroutines.CancellableContinuation$DefaultImpls: java.lang.Object tryResume$default(kotlinx.coroutines.CancellableContinuation,java.lang.Object,java.lang.Object,int,java.lang.Object)
com.google.zxing.common.DecoderResult: void setNumBits(int)
androidx.appcompat.view.menu.ListMenuPresenter: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
com.google.firebase.database.core.Repo$TransactionData: com.google.firebase.database.core.Repo$TransactionStatus access$1800(com.google.firebase.database.core.Repo$TransactionData)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeParcelable(android.os.Parcel,int,android.os.Parcelable,int,boolean)
androidx.window.core.Version$bigInteger$2: java.math.BigInteger invoke()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.Menu getParentMenu()
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException()
com.google.android.gms.common.api.internal.GoogleApiManager: void zaa(com.google.android.gms.common.api.internal.zaad)
com.google.android.gms.internal.maps.zza: android.os.Parcel zza()
com.google.android.gms.maps.model.Polygon: void setHoles(java.util.List)
com.google.firebase.database.Query: com.google.firebase.database.Query startAt(com.google.firebase.database.snapshot.Node,java.lang.String)
androidx.core.view.ActionProvider: void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener)
androidx.core.widget.NestedScrollView: void recycleVelocityTracker()
androidx.collection.MapCollections$ArrayIterator: java.lang.Object next()
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock$2: WebsocketConnection$WSClientTubesock$2(com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock,java.lang.String)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.appcompat.app.AlertController$ButtonHandler: AlertController$ButtonHandler(android.content.DialogInterface)
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: void decodeC40Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder)
com.google.android.gms.common.api.internal.BackgroundDetector: void onBackgroundStateChanged(boolean)
com.google.firebase.database.core.WriteTreeRef: com.google.firebase.database.snapshot.Node calcCompleteEventCache(com.google.firebase.database.snapshot.Node,java.util.List)
androidx.core.view.ViewCompat$3: ViewCompat$3(int,java.lang.Class,int,int)
com.google.firebase.database.core.ChildEventRegistration: com.google.firebase.database.core.view.DataEvent createEvent(com.google.firebase.database.core.view.Change,com.google.firebase.database.core.view.QuerySpec)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: FlutterEngineConnectionRegistry$DefaultFlutterAssets(io.flutter.embedding.engine.loader.FlutterLoader)
androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.content.res.ColorStateList getSupportButtonTintList()
androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)
io.flutter.embedding.engine.dart.DartMessenger: DartMessenger(io.flutter.embedding.engine.FlutterJNI,io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory)
com.journeyapps.barcodescanner.camera.CameraSettings: boolean isMeteringEnabled()
com.google.android.gms.internal.maps.zzy: void setPoints(java.util.List)
androidx.appcompat.widget.AppCompatBackgroundHelper: void onSetBackgroundResource(int)
com.google.android.gms.location.zzaf: java.lang.Object[] newArray(int)
com.google.android.gms.maps.model.Circle: void setStrokeWidth(float)
com.google.firebase.database.core.persistence.NoopPersistenceManager: java.util.List loadUserWrites()
com.google.android.gms.common.api.internal.BackgroundDetector: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.fragment.app.FragmentManager: void hideFragment(androidx.fragment.app.Fragment)
io.flutter.embedding.engine.renderer.FlutterRenderer$1: FlutterRenderer$1(io.flutter.embedding.engine.renderer.FlutterRenderer)
com.google.android.gms.internal.location.zzc: zzc()
androidx.core.widget.NestedScrollView: boolean onNestedFling(android.view.View,float,float,boolean)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
kotlin.sequences.SequencesKt___SequencesKt: kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.core.content.ContextCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.Context,int)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: com.google.android.gms.common.Feature zaa(com.google.android.gms.common.Feature[])
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
com.google.android.gms.maps.zzv: void onCameraMove()
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void sendAccessibilityEvent(android.view.View,int)
io.flutter.plugin.editing.TextInputPlugin$2: void inspect(double,double)
androidx.core.graphics.ColorUtils: int compositeColors(int,int)
androidx.fragment.app.DefaultSpecialEffectsController$5: DefaultSpecialEffectsController$5(androidx.fragment.app.DefaultSpecialEffectsController,android.view.View,android.view.ViewGroup,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo)
androidx.core.view.ViewCompat: androidx.core.view.OnReceiveContentViewBehavior getFallback(android.view.View)
androidx.appcompat.view.SupportActionModeWrapper: boolean getTitleOptionalHint()
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.PolylineOptions endCap(com.google.android.gms.maps.model.Cap)
kotlinx.coroutines.JobSupport$Finishing: void setRootCause(java.lang.Throwable)
com.google.firebase.database.connection.CompoundHash: java.util.List getPosts()
io.flutter.view.AccessibilityBridge: void release()
com.google.common.util.concurrent.SettableFuture: SettableFuture()
com.google.android.gms.maps.model.Circle: void setCenter(com.google.android.gms.maps.model.LatLng)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getPrimaryActivityStack()
kotlin.jvm.internal.ReflectionFactory: ReflectionFactory()
com.google.zxing.qrcode.decoder.BitMatrixParser: BitMatrixParser(com.google.zxing.common.BitMatrix)
com.google.zxing.pdf417.decoder.DecodedBitStreamParser: int decodeMacroBlock(int[],int,com.google.zxing.pdf417.PDF417ResultMetadata)
androidx.core.view.AccessibilityDelegateCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
io.flutter.plugins.googlemaps.MarkerController: void setIcon(com.google.android.gms.maps.model.BitmapDescriptor)
com.google.firebase.components.Component: java.util.Set getProvidedInterfaces()
com.google.zxing.oned.rss.expanded.RSSExpandedReader: java.util.List checkRows(boolean)
com.google.android.gms.location.LocationServices$zza: LocationServices$zza(com.google.android.gms.common.api.GoogleApiClient)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion()
com.google.firebase.database.core.Path: int size()
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(int,int)
androidx.appcompat.widget.ResourceManagerInternal: void onConfigurationChanged(android.content.Context)
androidx.appcompat.widget.AlertDialogLayout: void onMeasure(int,int)
com.google.firebase.database.snapshot.NamedNode: com.google.firebase.database.snapshot.ChildKey getName()
androidx.multidex.ZipUtil: long getZipCrc(java.io.File)
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.core.view.ActionProvider: boolean isVisible()
kotlin.text.StringsKt__StringsKt: int indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object)
kotlinx.coroutines.Job$DefaultImpls: void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object)
androidx.core.view.ViewCompat: int getAccessibilityLiveRegion(android.view.View)
io.flutter.plugin.editing.TextInputPlugin: void destroy()
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion()
androidx.core.content.res.TypedArrayUtils: boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean)
com.google.zxing.pdf417.decoder.BarcodeMetadata: int getRowCountLowerPart()
com.google.zxing.aztec.detector.Detector: boolean isValid(com.google.zxing.ResultPoint)
com.google.firebase.database.core.view.ViewCache: com.google.firebase.database.core.view.ViewCache updateEventSnap(com.google.firebase.database.snapshot.IndexedNode,boolean,boolean)
androidx.activity.ComponentActivity: void reportFullyDrawn()
io.flutter.plugin.common.StandardMessageCodec: void writeAlignment(java.io.ByteArrayOutputStream,int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect,float[])
com.google.android.gms.internal.maps.zzab: int zzj()
com.journeyapps.barcodescanner.ViewfinderView$1: void previewSized()
androidx.versionedparcelable.VersionedParcelParcel: void writeParcelable(android.os.Parcelable)
androidx.core.widget.NestedScrollView: boolean isNestedScrollingEnabled()
kotlin.coroutines.jvm.internal.Boxing: java.lang.Boolean boxBoolean(boolean)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean onMenuOpened(int,android.view.Menu)
io.flutter.embedding.android.FlutterImageView: void updateCurrentBitmap()
androidx.core.provider.FontRequestWorker: android.graphics.Typeface requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler)
com.google.firebase.database.core.Repo$19: Repo$19(com.google.firebase.database.core.Repo)
androidx.appcompat.view.menu.ListMenuItemView: void addContentView(android.view.View)
com.google.android.gms.maps.model.Cap: Cap(int,com.google.android.gms.maps.model.BitmapDescriptor,java.lang.Float)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.String getStateDebugRepresentation()
com.google.firebase.database.core.persistence.DefaultPersistenceManager: void saveUserMerge(com.google.firebase.database.core.Path,com.google.firebase.database.core.CompoundWrite,long)
kotlinx.coroutines.Empty: java.lang.String toString()
androidx.appcompat.widget.Toolbar: int getChildTop(android.view.View,int)
kotlin.coroutines.CombinedContext: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.core.app.NotificationManagerCompat: java.util.Set getEnabledListenerPackages(android.content.Context)
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
com.google.firebase.database.connection.PersistentConnectionImpl: com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingListen access$2700(com.google.firebase.database.connection.PersistentConnectionImpl,com.google.firebase.database.connection.PersistentConnectionImpl$QuerySpec)
com.google.firebase.database.core.operation.AckUserWrite: AckUserWrite(com.google.firebase.database.core.Path,com.google.firebase.database.core.utilities.ImmutableTree,boolean)
androidx.appcompat.view.menu.MenuAdapter: java.lang.Object getItem(int)
androidx.appcompat.widget.ResourcesWrapper: void getValue(int,android.util.TypedValue,boolean)
com.google.zxing.qrcode.decoder.Version: Version(int,int[],com.google.zxing.qrcode.decoder.Version$ECBlocks[])
androidx.exifinterface.media.ExifInterface$ExifAttribute: java.lang.Object getValue(java.nio.ByteOrder)
com.journeyapps.barcodescanner.CameraPreview: void setupSurfaceView()
com.google.firebase.database.snapshot.ChildrenNode$NamedNodeIterator: java.lang.Object next()
com.lyokone.location.LocationPlugin: void onDetachedFromActivity()
androidx.core.widget.NestedScrollView: boolean dispatchNestedScroll(int,int,int,int,int[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
com.google.zxing.oned.rss.expanded.decoders.AI01AndOtherAIs: java.lang.String parseInformation()
io.flutter.plugin.platform.PlatformViewsController: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: FontResourcesParserCompat$ProviderResourceEntry(androidx.core.provider.FontRequest,int,int,java.lang.String)
androidx.appcompat.widget.TintTypedArray: float getFloat(int,float)
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getTitleCondensed()
com.google.android.gms.common.api.internal.zza: com.google.android.gms.common.api.internal.zza zza(android.app.Activity)
io.flutter.plugins.imagepicker.ImagePickerCache: void saveDimensionWithMethodCall(io.flutter.plugin.common.MethodCall)
androidx.appcompat.app.AlertController$AlertParams$1: AlertController$AlertParams$1(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],androidx.appcompat.app.AlertController$RecycleListView)
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: void cancelTransaction()
com.google.firebase.database.collection.LLRBValueNode: LLRBValueNode(java.lang.Object,java.lang.Object,com.google.firebase.database.collection.LLRBNode,com.google.firebase.database.collection.LLRBNode)
androidx.fragment.app.Fragment$5: Fragment$5(androidx.fragment.app.Fragment)
com.journeyapps.barcodescanner.BarcodeView: void setDecoderFactory(com.journeyapps.barcodescanner.DecoderFactory)
com.google.firebase.emulators.EmulatedServiceSettings: EmulatedServiceSettings(java.lang.String,int)
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State: com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State[] values()
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: com.google.android.gms.tasks.Task update(java.util.Map)
io.flutter.plugin.platform.VirtualDisplayController: void dispatchTouchEvent(android.view.MotionEvent)
androidx.fragment.app.FragmentStateManager$1: FragmentStateManager$1(androidx.fragment.app.FragmentStateManager,android.view.View)
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate: ResourceManagerInternal$AsldcInflateDelegate()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setShortcut(char,char)
androidx.window.embedding.ActivityFilter: java.lang.String getIntentAction()
androidx.appcompat.view.StandaloneActionMode: android.view.MenuInflater getMenuInflater()
io.flutter.plugins.pathprovider.StorageDirectoryMapper: java.lang.String androidType(java.lang.Integer)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isAutoMirrored()
kotlin.ranges.IntRange$Companion: IntRange$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets: FlutterEngineConnectionRegistry$DefaultFlutterAssets(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterEngineConnectionRegistry$1)
com.google.firebase.database.snapshot.ChildrenNode: com.google.firebase.database.snapshot.Node getImmediateChild(com.google.firebase.database.snapshot.ChildKey)
com.google.firebase.database.snapshot.ChildrenNode: void addIndentation(java.lang.StringBuilder,int)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController access$getGlobalInstance$cp()
androidx.appcompat.widget.ActionBarOverlayLayout$2: ActionBarOverlayLayout$2(androidx.appcompat.widget.ActionBarOverlayLayout)
com.google.android.gms.common.zzg: zzg(byte[])
io.flutter.plugin.editing.ListenableEditingState: android.text.Editable replace(int,int,java.lang.CharSequence,int,int)
io.flutter.view.AccessibilityBridge: void access$1200(io.flutter.view.AccessibilityBridge)
com.google.firebase.components.ComponentDiscoveryService: android.os.IBinder onBind(android.content.Intent)
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: java.lang.Object getItem(int)
androidx.core.view.KeyEventDispatcher: boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent)
com.google.firebase.database.core.Repo$TransactionStatus: Repo$TransactionStatus(java.lang.String,int)
androidx.collection.ContainerHelpers: boolean equal(java.lang.Object,java.lang.Object)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean handleKeyEvent(android.view.KeyEvent)
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: SingleViewPresentation$FakeWindowViewGroup(android.content.Context)
com.google.firebase.components.Component$Builder: void validateInterface(java.lang.Class)
com.lyokone.location.NotificationOptions: NotificationOptions()
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback: androidx.appcompat.view.menu.ShowableListMenu getPopup()
com.google.firebase.database.core.utilities.Predicate$1: Predicate$1()
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
com.google.android.gms.common.GooglePlayServicesNotAvailableException: GooglePlayServicesNotAvailableException(int)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void updateMenuView(boolean)
androidx.fragment.app.FragmentController: void dispatchDestroy()
com.google.android.gms.common.internal.BaseGmsClient: void onConnectionSuspended(int)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: long getItemId(int)
com.google.zxing.oned.rss.RSSUtils: int getRSSvalue(int[],int,boolean)
com.google.firebase.database.connection.PersistentConnectionImpl$QuerySpec: int hashCode()
kotlinx.coroutines.JobNode: kotlinx.coroutines.JobSupport getJob()
androidx.window.layout.WindowInfoTrackerImpl: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
kotlin.collections.EmptyList: int lastIndexOf(java.lang.Object)
androidx.fragment.app.Fragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.android.gms.internal.base.zad: void zaa(android.os.Parcel,android.os.IInterface)
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
androidx.appcompat.widget.ResourcesWrapper: java.lang.CharSequence[] getTextArray(int)
androidx.appcompat.view.menu.ExpandedMenuView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.google.android.gms.internal.location.zza: zza(android.os.IBinder,java.lang.String)
androidx.fragment.app.FragmentManager: void detachFragment(androidx.fragment.app.Fragment)
androidx.appcompat.view.menu.MenuDialogHelper: boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
com.google.firebase.database.core.operation.Operation: com.google.firebase.database.core.operation.OperationSource getSource()
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
com.google.firebase.database.core.RepoManager: RepoManager()
androidx.exifinterface.media.ExifInterface$1: void close()
com.journeyapps.barcodescanner.CaptureActivity: void onSaveInstanceState(android.os.Bundle)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void removeCollectedSpans(android.view.View)
com.google.firebase.database.snapshot.CompoundHash: com.google.firebase.database.snapshot.CompoundHash fromNode(com.google.firebase.database.snapshot.Node,com.google.firebase.database.snapshot.CompoundHash$SplitStrategy)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowBackend windowBackend$window_release(android.content.Context)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Integer toIntOrNull(java.lang.String)
kotlinx.coroutines.internal.DispatchedContinuation: void awaitReusability()
androidx.fragment.app.DefaultSpecialEffectsController: void findNamedViews(java.util.Map,android.view.View)
com.google.android.gms.maps.model.Polyline: void remove()
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(java.lang.Iterable)
com.google.firebase.database.collection.ImmutableSortedMap: java.lang.String toString()
androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean handleHorizontalMovement(boolean,boolean)
io.flutter.plugins.googlemaps.PolylineController: void setZIndex(float)
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)
androidx.appcompat.app.AppCompatDialog: void onSupportActionModeFinished(androidx.appcompat.view.ActionMode)
io.flutter.embedding.engine.systemchannels.RestorationChannel: java.util.Map access$300(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
com.journeyapps.barcodescanner.camera.CameraManager$CameraPreviewCallback: void setResolution(com.journeyapps.barcodescanner.Size)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView access$300(io.flutter.embedding.android.FlutterView)
io.flutter.plugins.googlemaps.TileOverlayBuilder: void setFadeIn(boolean)
io.flutter.plugins.urllauncher.WebViewActivity: void onDestroy()
io.flutter.plugins.googlemaps.GoogleMapController: void setMyLocationEnabled(boolean)
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderPlatformThread: void getExternalCacheDirectories(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.android.FlutterView: void sendViewportMetricsToFlutter()
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] access$000(io.flutter.embedding.engine.systemchannels.RestorationChannel)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class)
androidx.appcompat.widget.AppCompatEditText: void drawableStateChanged()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setActionView(int)
io.flutter.embedding.android.FlutterView: void removeFlutterEngineAttachmentListener(io.flutter.embedding.android.FlutterView$FlutterEngineAttachmentListener)
io.flutter.plugin.common.MethodChannel: void invokeMethod(java.lang.String,java.lang.Object)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: void reset()
com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator: int compare(java.lang.Object,java.lang.Object)
com.google.firebase.database.core.view.View: java.util.List generateEventsForChanges(java.util.List,com.google.firebase.database.snapshot.IndexedNode,com.google.firebase.database.core.EventRegistration)
com.google.firebase.database.core.WriteTreeRef: com.google.firebase.database.snapshot.NamedNode calcNextNodeAfterPost(com.google.firebase.database.snapshot.Node,com.google.firebase.database.snapshot.NamedNode,boolean,com.google.firebase.database.snapshot.Index)
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: com.google.android.gms.tasks.Task cancelOnDisconnect(java.util.Map)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
androidx.core.view.ViewPropertyAnimatorListenerAdapter: void onAnimationCancel(android.view.View)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void finishWithSuccess(java.lang.String)
com.google.firebase.database.connection.PersistentConnectionImpl: void restoreState()
com.google.firebase.database.connection.WebsocketConnection: java.util.concurrent.ScheduledExecutorService access$400(com.google.firebase.database.connection.WebsocketConnection)
com.lyokone.location.NotificationOptions: java.lang.String getSubtitle()
kotlinx.coroutines.Job$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.google.android.gms.common.internal.BaseGmsClient: java.lang.String getLocalStartServiceAction()
com.google.firebase.components.EventBus: java.util.Set getHandlers(com.google.firebase.events.Event)
com.google.android.gms.maps.model.Marker: com.google.android.gms.maps.model.LatLng getPosition()
com.google.zxing.datamatrix.detector.Detector: com.google.zxing.common.DetectorResult detect()
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView)
io.flutter.plugins.googlemaps.CircleController: void setFillColor(int)
androidx.appcompat.view.menu.CascadingMenuPopup: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
com.google.zxing.qrcode.decoder.BitMatrixParser: com.google.zxing.qrcode.decoder.FormatInformation readFormatInformation()
androidx.window.layout.SidecarCompat$Companion: android.os.IBinder getActivityWindowToken$window_release(android.app.Activity)
com.google.zxing.qrcode.decoder.FormatInformation: boolean equals(java.lang.Object)
com.google.firebase.database.core.Repo: void access$2800(com.google.firebase.database.core.Repo)
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: com.google.android.gms.tasks.Task setOnDisconnect(java.util.Map)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel getRestorationChannel()
androidx.appcompat.widget.ListPopupWindow: void setDropDownGravity(int)
com.google.firebase.database.snapshot.PriorityIndex: java.lang.String getQueryDefinition()
com.google.android.gms.internal.maps.zzy: void setStrokeColor(int)
com.google.android.gms.common.internal.BaseGmsClient: android.os.Bundle getConnectionHint()
androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
com.google.android.gms.dynamic.DeferredLifecycleHelper: java.util.LinkedList zaa(com.google.android.gms.dynamic.DeferredLifecycleHelper)
kotlinx.coroutines.JobSupport: java.lang.String toString()
com.google.android.gms.maps.model.Marker: void setSnippet(java.lang.String)
io.flutter.view.AccessibilityBridge: int access$7000()
com.baseflow.geolocator.GeolocatorLocationService: void onDestroy()
com.google.zxing.oned.UPCEANExtensionSupport: UPCEANExtensionSupport()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
com.google.android.gms.common.internal.IGmsServiceBroker$Stub$zza: android.os.IBinder asBinder()
androidx.collection.LongSparseArray: void append(long,java.lang.Object)
androidx.core.view.ViewPropertyAnimatorListenerAdapter: ViewPropertyAnimatorListenerAdapter()
com.google.firebase.database.connection.ConnectionContext: com.google.firebase.database.connection.ConnectionTokenProvider getAppCheckTokenProvider()
com.google.zxing.qrcode.decoder.Version$ECBlocks: Version$ECBlocks(int,com.google.zxing.qrcode.decoder.Version$ECB[])
androidx.appcompat.view.ActionBarPolicy: boolean hasEmbeddedTabs()
com.google.firebase.database.snapshot.EmptyNode: com.google.firebase.database.snapshot.Node getChild(com.google.firebase.database.core.Path)
androidx.fragment.app.FragmentManager: boolean popBackStackImmediate()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setContentDescription(java.lang.CharSequence)
io.flutter.plugins.googlemaps.CircleController: void setStrokeWidth(float)
io.flutter.view.AccessibilityBridge: AccessibilityBridge(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate)
androidx.fragment.app.FragmentManager: void dispatchConfigurationChanged(android.content.res.Configuration)
androidx.appcompat.view.SupportActionModeWrapper: void invalidate()
androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager)
androidx.core.graphics.TypefaceCompatUtil: java.util.Map readFontInfoIntoByteBuffer(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
com.google.firebase.components.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.google.android.gms.common.internal.Objects: int hashCode(java.lang.Object[])
androidx.appcompat.widget.LinearLayoutCompat: void measureChildBeforeLayout(android.view.View,int,int,int,int,int)
kotlinx.coroutines.scheduling.LimitingDispatcher: void close()
androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)
kotlinx.coroutines.flow.AbstractFlow: AbstractFlow()
io.flutter.embedding.android.DrawableSplashScreen: DrawableSplashScreen(android.graphics.drawable.Drawable)
androidx.collection.LruCache: java.lang.Object get(java.lang.Object)
io.flutter.plugins.flutterexifrotation.FlutterExifRotationPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getMinimumHeight()
com.google.android.gms.common.api.internal.GoogleApiManager: int zabb()
com.google.zxing.aztec.detector.Detector: com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.embedding.engine.dart.DartExecutor: void executeDartEntrypoint(io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint,java.util.List)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$$inlined$sortedByDescending$1: int compare(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatSeekBar: AppCompatSeekBar(android.content.Context,android.util.AttributeSet,int)
com.google.firebase.database.core.Context: com.google.firebase.database.core.Platform getPlatform()
com.google.firebase.database.core.view.Change: com.google.firebase.database.snapshot.IndexedNode getOldIndexedNode()
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
com.google.common.util.concurrent.AbstractFuture: void releaseWaiters()
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setRotateGesturesEnabled(boolean)
com.google.android.gms.tasks.Tasks$zzc: Tasks$zzc(int,com.google.android.gms.tasks.zzu)
androidx.core.view.WindowInsetsControllerCompat$Impl30: void setAppearanceLightStatusBars(boolean)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
androidx.collection.MapCollections$KeySet: int size()
androidx.collection.ArraySet$1: int colIndexOfValue(java.lang.Object)
androidx.fragment.app.BackStackRecord: void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
androidx.appcompat.view.menu.MenuAdapter: androidx.appcompat.view.menu.MenuBuilder getAdapterMenu()
kotlin.collections.MapsKt__MapsKt: java.util.Map toMap(kotlin.Pair[],java.util.Map)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void park()
com.google.android.gms.common.internal.ResolveAccountRequest: ResolveAccountRequest(android.accounts.Account,int,com.google.android.gms.auth.api.signin.GoogleSignInAccount)
kotlinx.coroutines.UndispatchedCoroutine: boolean clearThreadContext()
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setTrafficEnabled(boolean)
com.google.android.gms.maps.model.Polygon: java.lang.String getId()
androidx.fragment.app.FragmentManager: boolean isMenuAvailable(androidx.fragment.app.Fragment)
com.google.firebase.database.connection.ConnectionUtils: void hardAssert(boolean)
com.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper packageManager(android.content.Context)
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.CoroutineScheduler$Worker parkedWorkersStackPop()
com.google.android.gms.maps.model.BitmapDescriptorFactory: com.google.android.gms.maps.model.BitmapDescriptor defaultMarker(float)
androidx.fragment.app.Fragment: void performDestroy()
androidx.appcompat.widget.ForwardingListener: boolean onTouchObserved(android.view.MotionEvent)
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
androidx.appcompat.app.AlertController: void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int)
kotlinx.coroutines.scheduling.CoroutineScheduler: void signalCpuWork()
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: AbsActionBarView$VisibilityAnimListener(androidx.appcompat.widget.AbsActionBarView)
com.google.android.gms.internal.maps.zzy: void setFillColor(int)
com.google.firebase.database.core.view.filter.IndexedFilter: com.google.firebase.database.snapshot.IndexedNode updateFullNode(com.google.firebase.database.snapshot.IndexedNode,com.google.firebase.database.snapshot.IndexedNode,com.google.firebase.database.core.view.filter.ChildChangeAccumulator)
androidx.appcompat.widget.AppCompatTextHelper: int getAutoSizeMaxTextSize()
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: int getItemViewType(int)
androidx.appcompat.app.WindowDecorActionBar: void onWindowVisibilityChanged(int)
com.google.android.gms.common.api.internal.GoogleApiManager$zab: com.google.android.gms.common.api.internal.ApiKey zaa(com.google.android.gms.common.api.internal.GoogleApiManager$zab)
androidx.appcompat.view.menu.MenuPopupHelper: void showPopup(int,int,boolean,boolean)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingPut: com.google.firebase.database.connection.RequestResultCallback access$400(com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingPut)
androidx.fragment.app.FragmentState: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getCachedColorStateList(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int)
com.baseflow.geolocator.GeolocatorLocationService: void enableBackgroundMode(com.baseflow.geolocator.location.ForegroundNotificationOptions)
androidx.versionedparcelable.VersionedParcel: VersionedParcel(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
androidx.window.embedding.ExtensionEmbeddingBackend: void setSplitRules(java.util.Set)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.journeyapps.barcodescanner.Size: com.journeyapps.barcodescanner.Size scaleCrop(com.journeyapps.barcodescanner.Size)
androidx.appcompat.widget.ForwardingListener: boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent)
io.flutter.plugins.googlemaps.PolygonBuilder: PolygonBuilder(float)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setChecked(boolean)
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createString(java.lang.String)
com.google.android.gms.maps.model.PolygonOptions: com.google.android.gms.maps.model.PolygonOptions addHole(java.lang.Iterable)
androidx.cursoradapter.widget.CursorAdapter: void changeCursor(android.database.Cursor)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void growArray(int,int)
androidx.collection.LongSparseArray: java.lang.Object clone()
androidx.window.core.Version$Companion: androidx.window.core.Version getCURRENT()
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: com.google.android.gms.tasks.Task queryKeepSynced(java.util.Map)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
kotlin.collections.SetsKt__SetsJVMKt: java.util.Set setOf(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.google.firebase.database.core.Repo$5: Repo$5(com.google.firebase.database.core.Repo)
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus valueOf(java.lang.String)
io.flutter.FlutterInjector$Builder$NamedThreadFactory: FlutterInjector$Builder$NamedThreadFactory(io.flutter.FlutterInjector$Builder,io.flutter.FlutterInjector$1)
androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: FlutterRenderer$DisplayFeatureType(java.lang.String,int,int)
io.flutter.view.VsyncWaiter$DisplayListener: void onDisplayAdded(int)
androidx.activity.result.ActivityResultRegistry$3: void launch(java.lang.Object,androidx.core.app.ActivityOptionsCompat)
kotlin.coroutines.jvm.internal.DebugMetadataKt: kotlin.coroutines.jvm.internal.DebugMetadata getDebugMetadataAnnotation(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
io.flutter.plugins.googlemaps.MarkerController: boolean consumeTapEvents()
androidx.appcompat.widget.TintContextWrapper: android.content.res.AssetManager getAssets()
io.flutter.plugins.googlemaps.PolygonsController: void removePolygons(java.util.List)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getActions()
com.google.firebase.database.collection.ImmutableSortedSet: int hashCode()
androidx.collection.ArraySet$1: ArraySet$1(androidx.collection.ArraySet)
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener: void onClick(android.view.View)
androidx.fragment.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)
androidx.multidex.MultiDex: void install(android.content.Context)
com.journeyapps.barcodescanner.camera.CameraManager: void setCameraSettings(com.journeyapps.barcodescanner.camera.CameraSettings)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object getNextParkedWorker()
com.google.zxing.oned.CodaBarReader: int toNarrowWidePattern(int)
com.google.zxing.oned.rss.DataCharacter: int getValue()
com.google.firebase.database.connection.ConnectionContext: boolean isPersistenceEnabled()
androidx.core.view.inputmethod.InputContentInfoCompat: android.net.Uri getContentUri()
androidx.appcompat.app.AlertController: void setupView()
com.google.firebase.components.OptionalProvider: java.lang.Object get()
androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleServiceDisconnected(android.content.ComponentName)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet,int)
kotlinx.coroutines.InactiveNodeList: java.lang.String toString()
androidx.fragment.app.DefaultSpecialEffectsController: DefaultSpecialEffectsController(android.view.ViewGroup)
com.google.android.gms.maps.internal.zzg: void setOnCameraIdleListener(com.google.android.gms.maps.internal.zzn)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeByte(int)
androidx.customview.view.AbsSavedState: AbsSavedState(android.os.Parcel,java.lang.ClassLoader)
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitPairRule plus$window_release(androidx.window.embedding.SplitPairFilter)
com.journeyapps.barcodescanner.DecoratedBarcodeView: void pauseAndWait()
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object getNext()
net.touchcapture.qr.flutterqr.QRViewFactory: io.flutter.plugin.platform.PlatformView create(android.content.Context,int,java.lang.Object)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingGet: java.util.Map access$2200(com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingGet)
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.CoroutineContext getContext()
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics: boolean validate()
com.lyokone.location.BackgroundNotification: void updateChannel(java.lang.String)
com.google.firebase.database.tubesock.WebSocketHandshake: void verifyServerHandshakeHeaders(java.util.HashMap)
com.google.firebase.database.core.utilities.Tree: void updateParents()
com.google.firebase.database.collection.LLRBEmptyNode: com.google.firebase.database.collection.LLRBNode getMin()
com.google.zxing.oned.rss.expanded.ExpandedRow: int hashCode()
com.google.firebase.database.tubesock.WebSocketWriter: java.nio.ByteBuffer frameInBuffer(byte,boolean,byte[])
androidx.fragment.app.BackStackRecord: boolean interactsWith(int)
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException getChildJobCancellationCause()
com.google.android.gms.internal.maps.zzv: zzv(android.os.IBinder)
androidx.fragment.app.FragmentManager: java.util.Set collectChangedControllers(java.util.ArrayList,int,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: boolean access$100(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void setIndexInArray(int)
com.google.firebase.database.core.persistence.NoopPersistenceManager: void updateTrackedQueryKeys(com.google.firebase.database.core.view.QuerySpec,java.util.Set,java.util.Set)
com.google.firebase.database.DatabaseReference$1: void run()
kotlin.text.StringsKt__StringsKt: int getLastIndex(java.lang.CharSequence)
io.flutter.plugin.platform.PlatformViewRegistryImpl: io.flutter.plugin.platform.PlatformViewFactory getFactory(java.lang.String)
net.touchcapture.qr.flutterqr.FlutterQrPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem)
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader createImageReader(int,int)
androidx.appcompat.widget.TintTypedArray: int getInteger(int,int)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
androidx.customview.view.AbsSavedState$1: AbsSavedState$1()
com.google.zxing.qrcode.decoder.Version: com.google.zxing.qrcode.decoder.Version getVersionForNumber(int)
androidx.collection.MapCollections$ValuesCollection: boolean addAll(java.util.Collection)
com.google.android.gms.maps.GoogleMap: void setOnPolygonClickListener(com.google.android.gms.maps.GoogleMap$OnPolygonClickListener)
com.google.android.gms.maps.model.CircleOptions: com.google.android.gms.maps.model.CircleOptions visible(boolean)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: boolean readBoolean()
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast(java.lang.String,char,java.lang.String)
com.google.android.gms.signin.internal.zaf: zaf()
androidx.arch.core.internal.SafeIterableMap: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.CascadingMenuPopup: void setVerticalOffset(int)
androidx.fragment.app.FragmentStore: void setNonConfig(androidx.fragment.app.FragmentManagerViewModel)
com.google.android.gms.common.api.internal.zah: void zaa(com.google.android.gms.common.api.internal.zaz,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean)
com.google.android.gms.common.internal.BaseGmsClient$zzf: BaseGmsClient$zzf(com.google.android.gms.common.internal.BaseGmsClient,int,android.os.IBinder,android.os.Bundle)
androidx.window.layout.SidecarCompat: boolean validateExtensionInterface()
com.google.firebase.database.collection.ImmutableSortedSet: java.util.Iterator iterator()
androidx.exifinterface.media.ExifInterface$1: long getSize()
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRampUpDuration(int)
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException toCancellationException(java.lang.Throwable,java.lang.String)
kotlin.coroutines.jvm.internal.DebugProbesKt: kotlin.coroutines.Continuation probeCoroutineCreated(kotlin.coroutines.Continuation)
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: void setInvertColor(android.hardware.Camera$Parameters)
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object offerInternal(java.lang.Object)
androidx.core.content.res.ComplexColorCompat: boolean willDraw()
com.journeyapps.barcodescanner.CameraPreview: void onAttachedToWindow()
androidx.core.widget.NestedScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)
androidx.fragment.app.FragmentController: void noteStateNotSaved()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: boolean validBounds(android.app.Activity,androidx.window.core.Bounds)
androidx.fragment.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
io.flutter.plugins.imagepicker.ImagePickerDelegate$1: boolean isPermissionGranted(java.lang.String)
androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
com.google.android.gms.common.internal.Preconditions: void checkHandlerThread(android.os.Handler)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getIcon1(android.database.Cursor)
com.google.zxing.datamatrix.decoder.Version: int getTotalCodewords()
androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.common.api.Status: void startResolutionForResult(android.app.Activity,int)
androidx.core.graphics.TypefaceCompatBaseImpl$1: boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo)
androidx.lifecycle.LifecycleRegistry: boolean isSynced()
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: int getApplyableNightMode()
io.flutter.view.VsyncWaiter: long access$002(io.flutter.view.VsyncWaiter,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float cross(float,float,float,float)
com.journeyapps.barcodescanner.CameraPreview$4: CameraPreview$4(com.journeyapps.barcodescanner.CameraPreview)
com.google.zxing.oned.CodaBarReader: void counterAppend(int)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void readFully(byte[])
com.google.firebase.database.connection.util.StringListReader: StringListReader()
kotlinx.coroutines.flow.internal.SafeCollector: void releaseIntercepted()
com.google.android.gms.internal.maps.zzv: void hideInfoWindow()
kotlinx.coroutines.JobSupport: boolean cancelImpl$kotlinx_coroutines_core(java.lang.Object)
com.google.android.gms.common.GoogleApiAvailabilityLight: android.content.Intent getErrorResolutionIntent(android.content.Context,int,java.lang.String)
kotlinx.coroutines.AbstractCoroutine: void onCompleted(java.lang.Object)
androidx.fragment.app.FragmentStore: java.util.List getActiveFragments()
com.google.firebase.database.core.utilities.TreeNode: java.lang.String toString(java.lang.String)
androidx.window.layout.DisplayCompatHelperApi28: DisplayCompatHelperApi28()
androidx.appcompat.widget.Toolbar: void setTitle(int)
com.lyokone.location.MethodCallHandlerImpl: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context)
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint: int hashCode()
io.flutter.plugins.googlemaps.GoogleMapController: void updateInitialPolylines()
androidx.window.layout.WindowMetricsCalculatorDecorator: androidx.window.layout.WindowMetricsCalculator decorate(androidx.window.layout.WindowMetricsCalculator)
com.google.zxing.oned.UPCEANReader: int decodeDigit(com.google.zxing.common.BitArray,int[],int,int[][])
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.Size getFramingRectSize()
com.google.firebase.FirebaseApp: void notifyOnAppDeleted()
com.google.firebase.database.core.Repo$11: void onRequestResult(java.lang.String,java.lang.String)
io.flutter.embedding.engine.systemchannels.LocalizationChannel: void sendLocales(java.util.List)
androidx.appcompat.widget.AppCompatSeekBarHelper: void loadFromAttributes(android.util.AttributeSet,int)
io.flutter.embedding.android.AndroidTouchProcessor: int getPointerChangeForAction(int)
com.google.firebase.database.core.view.Change: com.google.firebase.database.core.view.Event$EventType getEventType()
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI[] values()
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
com.google.android.gms.maps.GoogleMap: void setMaxZoomPreference(float)
androidx.appcompat.widget.ActionMenuView: void initialize(androidx.appcompat.view.menu.MenuBuilder)
com.google.android.gms.common.internal.GetServiceRequest: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.Toolbar$SavedState$1: androidx.appcompat.widget.Toolbar$SavedState[] newArray(int)
kotlinx.coroutines.CancellableContinuationImpl: void detachChildIfNonResuable()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.core.app.ActivityCompat: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
androidx.core.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)
com.google.android.gms.maps.model.Marker: int hashCode()
io.flutter.plugin.editing.FlutterTextUtils: boolean isRegionalIndicatorSymbol(int)
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: void access$300(com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder,com.google.firebase.database.snapshot.LeafNode)
androidx.activity.result.ActivityResult$1: androidx.activity.result.ActivityResult createFromParcel(android.os.Parcel)
io.flutter.plugins.firebase.database.QueryBuilder: void cursor(java.util.Map)
androidx.appcompat.view.menu.MenuBuilder: int getOrdering(int)
kotlinx.coroutines.UndispatchedCoroutine: void afterResume(java.lang.Object)
io.flutter.plugin.platform.AccessibilityEventsDelegate: void setAccessibilityBridge(io.flutter.view.AccessibilityBridge)
androidx.fragment.app.FragmentTransitionCompat21: FragmentTransitionCompat21()
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderBackgroundThread: PathProviderPlugin$PathProviderBackgroundThread(io.flutter.plugins.pathprovider.PathProviderPlugin)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getPathProviderStorageDirectory()
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentStore getFragmentStore()
com.google.android.gms.common.internal.zzf: android.os.IBinder getBinder()
com.google.firebase.database.core.Path: int access$100(com.google.firebase.database.core.Path)
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: com.google.zxing.oned.rss.expanded.decoders.DecodedChar decodeIsoIec646(int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
com.google.android.gms.common.internal.Preconditions: void checkMainThread(java.lang.String)
kotlin.jvm.internal.CallableReference: CallableReference()
com.google.zxing.common.detector.WhiteRectangleDetector: boolean containsBlackPoint(int,int,int,boolean)
io.flutter.plugins.googlemaps.Convert: int toInt(java.lang.Object)
com.google.zxing.pdf417.PDF417Reader: int getMaxCodewordWidth(com.google.zxing.ResultPoint[])
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: long readLong()
com.google.firebase.database.connection.HostInfo: boolean isSecure()
androidx.fragment.app.SpecialEffectsController$Operation$State: SpecialEffectsController$Operation$State(java.lang.String,int)
com.google.android.gms.common.internal.Objects$ToStringHelper: Objects$ToStringHelper(java.lang.Object,com.google.android.gms.common.internal.zzq)
io.flutter.plugins.googlemaps.GoogleMapController: void updateInitialCircles()
io.flutter.plugins.googlemaps.CircleBuilder: void setConsumeTapEvents(boolean)
androidx.appcompat.view.SupportActionModeWrapper: void setTag(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
androidx.appcompat.app.AppCompatDelegateImpl: void setContentView(android.view.View)
androidx.appcompat.view.menu.MenuItemImpl: void setIsActionButton(boolean)
com.google.android.gms.location.LocationRequest: com.google.android.gms.location.LocationRequest setSmallestDisplacement(float)
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
kotlin.text.StringsKt__IndentKt: kotlin.jvm.functions.Function1 getIndentFunction$StringsKt__IndentKt(java.lang.String)
com.google.firebase.database.snapshot.ChildrenNode: ChildrenNode(com.google.firebase.database.collection.ImmutableSortedMap,com.google.firebase.database.snapshot.Node)
com.journeyapps.barcodescanner.camera.AutoFocusManager: void access$400(com.journeyapps.barcodescanner.camera.AutoFocusManager)
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object readValue(java.nio.ByteBuffer)
com.google.firebase.components.Dependency: boolean isDeferred()
io.flutter.plugins.googlemaps.GoogleMapBuilder: io.flutter.plugins.googlemaps.GoogleMapController build(int,android.content.Context,io.flutter.plugin.common.BinaryMessenger,io.flutter.plugins.googlemaps.LifecycleProvider)
com.google.firebase.database.core.ServerValues: boolean canBeRepresentedAsLong(java.lang.Number)
com.google.android.gms.common.zze: int hashCode()
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: boolean flagActionItems()
com.google.android.gms.auth.api.signin.GoogleSignInAccount: com.google.android.gms.auth.api.signin.GoogleSignInAccount zaa(java.lang.String)
com.google.firebase.database.core.utilities.DefaultRunLoop$FirebaseThreadFactory$1: void uncaughtException(java.lang.Thread,java.lang.Throwable)
io.flutter.plugins.googlemaps.PolylinesController: boolean onPolylineTap(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
com.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
kotlinx.coroutines.CommonPool: int getParallelism()
com.google.android.gms.maps.model.MarkerOptions: float getRotation()
androidx.appcompat.app.WindowDecorActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)
com.google.android.gms.common.internal.ConnectionErrorMessages: java.lang.String getAppName(android.content.Context)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToBroadcastReceiver()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onRestoreInstanceState(android.os.Bundle)
androidx.core.widget.NestedScrollView$SavedState: java.lang.String toString()
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)
com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: ActivityResultContracts$RequestMultiplePermissions()
kotlinx.coroutines.scheduling.WorkQueue: WorkQueue()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.graphics.drawable.Drawable getIcon()
com.google.firebase.database.core.ValueEventRegistration: void fireEvent(com.google.firebase.database.core.view.DataEvent)
com.google.android.gms.tasks.zzk: zzk(java.util.concurrent.Executor,com.google.android.gms.tasks.OnFailureListener)
androidx.appcompat.widget.ViewStubCompat: void dispatchDraw(android.graphics.Canvas)
com.google.android.gms.maps.model.Tile: Tile(int,int,byte[])
androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(java.io.File)
com.google.firebase.database.core.ValidationPath: void validateWithObject(com.google.firebase.database.core.Path,java.lang.Object)
com.journeyapps.barcodescanner.CameraPreview$1: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)
com.google.android.gms.maps.GoogleMap: void setOnMarkerClickListener(com.google.android.gms.maps.GoogleMap$OnMarkerClickListener)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingDisconnect: com.google.firebase.database.connection.RequestResultCallback access$500(com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingDisconnect)
androidx.appcompat.view.ActionBarPolicy: boolean enableHomeButtonByDefault()
androidx.appcompat.view.ActionBarPolicy: int getStackedTabMaxWidth()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintList(android.content.res.ColorStateList)
androidx.collection.MapCollections$MapIterator: boolean equals(java.lang.Object)
androidx.core.app.NotificationCompatBuilder: java.util.List combineLists(java.util.List,java.util.List)
androidx.lifecycle.LiveData: boolean hasActiveObservers()
androidx.appcompat.app.AppCompatDelegateImpl: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: void notifyDataSetChanged()
com.google.android.gms.common.internal.GmsClientSupervisor$zza: int hashCode()
com.google.firebase.database.collection.LLRBRedValueNode: LLRBRedValueNode(java.lang.Object,java.lang.Object)
io.flutter.plugin.platform.PlatformPlugin: boolean access$1100(io.flutter.plugin.platform.PlatformPlugin)
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int)
androidx.appcompat.view.menu.MenuWrapperICS: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])
com.google.firebase.database.core.utilities.TreeNode: TreeNode()
io.flutter.plugins.firebase.database.FlutterFirebaseDatabaseException: FlutterFirebaseDatabaseException(java.lang.String,java.lang.String,java.util.Map)
com.google.android.gms.common.api.internal.LifecycleCallback: void onActivityResult(int,int,android.content.Intent)
io.flutter.embedding.android.FlutterActivity: boolean shouldAttachEngineToActivity()
com.google.android.gms.signin.internal.zak: zak(com.google.android.gms.common.ConnectionResult,com.google.android.gms.common.internal.ResolveAccountResponse)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void mutate()
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: com.google.firebase.heartbeatinfo.HeartBeatInfoStorage getInstance(android.content.Context)
com.google.zxing.oned.UPCEANReader: boolean checkChecksum(java.lang.String)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: long getItemId(int)
com.google.android.gms.tasks.zzh: void run()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)
com.google.zxing.qrcode.decoder.FormatInformation: FormatInformation(int)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
androidx.appcompat.widget.RtlSpacingHelper: int getEnd()
androidx.core.widget.ListViewAutoScrollHelper: boolean canTargetScrollVertically(int)
com.google.firebase.database.connection.PersistentConnectionImpl: boolean canSendReads()
androidx.lifecycle.LiveData$LifecycleBoundObserver: boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)
androidx.exifinterface.media.ExifInterface: long[] convertToLongArray(java.lang.Object)
com.google.android.gms.maps.model.Dot: Dot()
io.flutter.plugin.editing.ListenableEditingState: void beginBatchEdit()
io.flutter.embedding.android.FlutterActivity: android.os.Bundle getMetaData()
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuBuilder access$500(androidx.appcompat.widget.ActionMenuPresenter)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: AccessibilityNodeProviderCompat(java.lang.Object)
com.google.android.gms.common.api.internal.GoogleApiManager$zab: void zag(com.google.android.gms.common.ConnectionResult)
androidx.exifinterface.media.ExifInterface: void savePngAttributes(java.io.InputStream,java.io.OutputStream)
com.google.firebase.database.core.view.QuerySpec: boolean isDefault()
androidx.appcompat.app.AppCompatDelegateImpl: void invalidatePanelMenu(int)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State from(int)
com.google.firebase.database.core.SyncTree: com.google.firebase.database.logging.LogWrapper access$100(com.google.firebase.database.core.SyncTree)
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.lifecycle.Lifecycle getLifecycle()
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.collection.MapCollections$EntrySet: void clear()
com.google.android.gms.common.api.internal.zace: zace(android.content.Context,android.os.Handler,com.google.android.gms.common.internal.ClientSettings)
io.flutter.plugin.platform.PlatformPlugin: void access$600(io.flutter.plugin.platform.PlatformPlugin)
com.google.zxing.pdf417.PDF417ResultMetadata: void setAddressee(java.lang.String)
com.google.firebase.database.core.Path$1: void remove()
io.flutter.plugins.imagepicker.ImagePickerCache: void saveResult(java.util.ArrayList,java.lang.String,java.lang.String)
com.google.firebase.database.connection.Connection$State: com.google.firebase.database.connection.Connection$State valueOf(java.lang.String)
com.google.android.gms.common.api.Api$BaseClientBuilder: Api$BaseClientBuilder()
com.google.android.gms.dynamic.DeferredLifecycleHelper: android.os.Bundle zaa(com.google.android.gms.dynamic.DeferredLifecycleHelper,android.os.Bundle)
com.baseflow.geolocator.location.LocationManagerClient: void getLastKnownPosition(com.baseflow.geolocator.location.PositionChangedCallback,com.baseflow.geolocator.errors.ErrorCallback)
com.baseflow.geolocator.permission.LocationPermission: com.baseflow.geolocator.permission.LocationPermission[] values()
androidx.core.graphics.TypefaceCompatBaseImpl$2: TypefaceCompatBaseImpl$2(androidx.core.graphics.TypefaceCompatBaseImpl)
com.lyokone.location.StreamHandlerImpl: void startListening(io.flutter.plugin.common.BinaryMessenger)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: io.flutter.embedding.android.MotionEventTracker$MotionEventId createUnique()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: ViewPropertyAnimatorCompatSet$1(androidx.appcompat.view.ViewPropertyAnimatorCompatSet)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore(java.lang.String,java.lang.String,java.lang.String)
com.google.android.gms.dynamic.DeferredLifecycleHelper: void zal(int)
com.google.android.gms.location.zzah: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.database.core.SyncPoint: com.google.firebase.database.core.utilities.Pair removeEventRegistration(com.google.firebase.database.core.view.QuerySpec,com.google.firebase.database.core.EventRegistration,com.google.firebase.database.DatabaseError)
androidx.core.graphics.Insets: int hashCode()
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.google.firebase.database.core.Repo: void updateInfo(com.google.firebase.database.snapshot.ChildKey,java.lang.Object)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setMenuPrepared()
com.google.android.gms.common.internal.GmsClient: com.google.android.gms.common.internal.BaseGmsClient$BaseOnConnectionFailedListener zaa(com.google.android.gms.common.api.internal.OnConnectionFailedListener)
androidx.fragment.app.Fragment: void setAnimator(android.animation.Animator)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: android.view.Menu getMenuWrapper(android.view.Menu)
com.google.firebase.database.collection.RBTreeSortedMap: boolean isEmpty()
androidx.appcompat.widget.ListPopupWindow: void setPromptPosition(int)
com.google.firebase.database.core.CompoundWrite: java.util.List getCompleteChildren()
kotlinx.coroutines.CommonPool: CommonPool()
kotlin.random.Random: Random()
com.lyokone.location.FlutterLocation: boolean onActivityResult(int,int,android.content.Intent)
androidx.appcompat.widget.ActionBarOverlayLayout$3: void run()
androidx.appcompat.view.WindowCallbackWrapper: void onPointerCaptureChanged(boolean)
com.google.zxing.qrcode.decoder.BitMatrixParser: void setMirror(boolean)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
androidx.core.text.PrecomputedTextCompat$Params$Builder: PrecomputedTextCompat$Params$Builder(android.text.TextPaint)
androidx.appcompat.app.AppCompatDelegateImpl$1: AppCompatDelegateImpl$1(java.lang.Thread$UncaughtExceptionHandler)
com.google.firebase.database.core.ValueProvider$ExistingValueProvider: ValueProvider$ExistingValueProvider(com.google.firebase.database.snapshot.Node)
com.google.firebase.database.snapshot.ChildKey: int intValue()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: MethodCallHandlerImpl$1(io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl,android.content.SharedPreferences$Editor,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.view.menu.MenuBuilder: void removeItemAtInt(int,boolean)
androidx.collection.SimpleArrayMap: void allocArrays(int)
androidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.channels.ArrayChannel: kotlinx.coroutines.internal.Symbol updateBufferSize(int)
kotlinx.coroutines.ChildContinuation: void invoke(java.lang.Throwable)
com.google.android.gms.maps.model.CameraPosition$Builder: com.google.android.gms.maps.model.CameraPosition$Builder target(com.google.android.gms.maps.model.LatLng)
androidx.appcompat.view.menu.StandardMenuPopup: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.window.layout.WindowMetricsCalculatorCompat: void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect)
com.google.android.gms.common.internal.Preconditions: java.lang.String checkNotEmpty(java.lang.String)
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
io.flutter.embedding.android.MotionEventTracker: io.flutter.embedding.android.MotionEventTracker getInstance()
io.flutter.embedding.android.MotionEventTracker: MotionEventTracker()
com.google.firebase.components.CycleDetector: java.util.Set getRoots(java.util.Set)
com.google.zxing.pdf417.decoder.DecodedBitStreamParser: com.google.zxing.common.DecoderResult decode(int[],java.lang.String)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void finishObjectHeader(android.os.Parcel,int)
com.google.zxing.qrcode.decoder.DataMask$3: DataMask$3(java.lang.String,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupColorAnimator(android.animation.Animator)
com.google.firebase.database.core.utilities.Validation: void validateDoubleValue(double)
com.google.firebase.database.InternalHelpers: com.google.firebase.database.MutableData createMutableData(com.google.firebase.database.snapshot.Node)
com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task forResult(java.lang.Object)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.view.menu.CascadingMenuPopup$2: void onViewAttachedToWindow(android.view.View)
androidx.appcompat.view.menu.MenuPopupHelper: MenuPopupHelper(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
androidx.appcompat.view.menu.StandardMenuPopup: void setVerticalOffset(int)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: void removeView(java.lang.Object[])
kotlinx.coroutines.BuildersKt: kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2)
com.google.zxing.common.detector.MathUtils: int sum(int[])
com.google.zxing.common.DecoderResult: void setErrorsCorrected(java.lang.Integer)
kotlinx.coroutines.CancellableContinuationImpl: void resumeImpl(java.lang.Object,int,kotlin.jvm.functions.Function1)
com.google.firebase.database.core.view.EventGenerator: com.google.firebase.database.core.view.DataEvent generateEvent(com.google.firebase.database.core.view.Change,com.google.firebase.database.core.EventRegistration,com.google.firebase.database.snapshot.IndexedNode)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: InputContentInfoCompat$InputContentInfoCompatBaseImpl(android.net.Uri,android.content.ClipDescription,android.net.Uri)
com.google.android.gms.common.api.internal.zabq: void onReceive(android.content.Context,android.content.Intent)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void invalidate()
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator: Detector$ResultPointsAndTransitionsComparator(com.google.zxing.datamatrix.detector.Detector$1)
com.google.zxing.datamatrix.decoder.DataBlock: DataBlock(int,byte[])
androidx.core.widget.TextViewCompat$OreoCallback: boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context)
kotlinx.coroutines.internal.MainDispatchersKt: java.lang.Void throwMissingMainDispatcherException()
com.google.zxing.oned.UPCAReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map)
androidx.window.embedding.SplitController: void clearRegisteredRules()
androidx.fragment.app.FragmentStateManager: void ensureInflatedView()
io.flutter.embedding.engine.systemchannels.PlatformChannel: java.util.List decodeSystemUiOverlays(org.json.JSONArray)
androidx.appcompat.widget.ToolbarWidgetWrapper: ToolbarWidgetWrapper(androidx.appcompat.widget.Toolbar,boolean,int,int)
kotlinx.coroutines.channels.Closed: kotlinx.coroutines.channels.Closed getOfferResult()
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: kotlinx.coroutines.scheduling.CoroutineScheduler createScheduler()
com.google.firebase.database.connection.WebsocketConnection$2: void run()
kotlinx.coroutines.JobCancellationException: java.lang.Throwable createCopy()
kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.UndispatchedCoroutine updateUndispatchedCompletion(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean isAutoMirrored()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isFlutterEngineFromHost()
com.google.firebase.database.core.view.QueryParams: com.google.firebase.database.core.view.QueryParams endAt(com.google.firebase.database.snapshot.Node,com.google.firebase.database.snapshot.ChildKey)
androidx.core.app.NotificationManagerCompat: void notify(int,android.app.Notification)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuItemImpl getExpandedItem()
com.journeyapps.barcodescanner.DecoratedBarcodeView: boolean onKeyDown(int,android.view.KeyEvent)
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: android.content.Intent createIntent(android.content.Context,java.lang.String[])
com.lyokone.location.FlutterLocationService: void setActivity(android.app.Activity)
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
kotlinx.coroutines.internal.LockFreeTaskQueue: void close()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupAnimatorsForTarget(java.lang.String,android.animation.Animator)
com.google.android.gms.maps.model.TileOverlayOptions: float getZIndex()
com.google.firebase.database.android.AndroidPlatform: com.google.firebase.database.core.EventTarget newEventTarget(com.google.firebase.database.core.Context)
androidx.fragment.app.DialogFragment: androidx.fragment.app.FragmentContainer createFragmentContainer()
androidx.core.app.CoreComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setZoomControlsEnabled(boolean)
com.google.android.gms.maps.model.PolylineOptions: PolylineOptions()
com.google.firebase.database.core.ValidationPath: void push(java.lang.String)
com.google.android.gms.maps.MapsInitializer: int initialize(android.content.Context)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void removeAll()
com.google.firebase.database.connection.Connection: void close()
kotlin.internal.jdk7.JDK7PlatformImplementations: JDK7PlatformImplementations()
com.google.firebase.database.connection.PersistentConnectionImpl: void initialize()
androidx.fragment.app.FragmentManager: void addAddedFragments(androidx.collection.ArraySet)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: AnimatedStateListDrawableCompat()
androidx.core.view.WindowInsetsControllerCompat$Impl30: WindowInsetsControllerCompat$Impl30(android.view.WindowInsetsController,androidx.core.view.WindowInsetsControllerCompat)
com.journeyapps.barcodescanner.camera.CameraManager$CameraPreviewCallback: void setCallback(com.journeyapps.barcodescanner.camera.PreviewCallback)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
androidx.core.view.ContentInfoCompat: android.content.ClipData getClip()
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
io.flutter.plugins.googlemaps.PolygonsController: void addPolygon(java.lang.String,com.google.android.gms.maps.model.PolygonOptions,boolean)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
com.google.firebase.database.android.SqlPersistenceStorageEngine: java.util.List loadTrackedQueries()
androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.flutter.view.AccessibilityBridge: android.view.View access$100(io.flutter.view.AccessibilityBridge)
androidx.appcompat.widget.AppCompatTextHelper: void onSetTextAppearance(android.content.Context,int)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void zabh()
io.flutter.plugins.imagepicker.ImagePickerCache: void setMaxDimension(java.lang.Double,java.lang.Double,int)
com.google.firebase.database.core.Repo: long nextTransactionOrder()
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getCurrent()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: VectorDrawableCompat()
com.google.firebase.database.core.operation.Merge: Merge(com.google.firebase.database.core.operation.OperationSource,com.google.firebase.database.core.Path,com.google.firebase.database.core.CompoundWrite)
androidx.loader.app.LoaderManager: LoaderManager()
androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Object get(android.view.View)
androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context)
com.google.firebase.database.connection.WebsocketConnection: void closeIfNeverConnected()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String)
androidx.core.graphics.drawable.IconCompat: IconCompat(int)
com.google.android.gms.maps.internal.zzbr: com.google.android.gms.maps.model.LatLng fromScreenLocation(com.google.android.gms.dynamic.IObjectWrapper)
com.google.firebase.database.core.SyncTree$9: java.lang.Object call()
kotlinx.coroutines.internal.ScopeCoroutine: boolean isScopedCoroutine()
kotlinx.coroutines.ExecutorsKt: kotlinx.coroutines.CoroutineDispatcher from(java.util.concurrent.Executor)
androidx.appcompat.widget.SearchView$9: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
com.google.firebase.database.connection.Connection: void onDataMessage(java.util.Map)
com.google.android.gms.maps.internal.zzg: float getMinZoomLevel()
androidx.core.graphics.drawable.WrappedDrawableApi14: void jumpToCurrentState()
androidx.lifecycle.ViewModel: void onCleared()
com.journeyapps.barcodescanner.camera.CenterCropStrategy: float getScore(com.journeyapps.barcodescanner.Size,com.journeyapps.barcodescanner.Size)
androidx.appcompat.app.AlertController: void setupButtons(android.view.ViewGroup)
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect access$1700(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createByte(java.lang.String)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(int,int)
io.flutter.embedding.engine.systemchannels.NavigationChannel: void pushRoute(java.lang.String)
com.google.firebase.database.core.Repo$TransactionStatus: com.google.firebase.database.core.Repo$TransactionStatus valueOf(java.lang.String)
kotlinx.coroutines.internal.LockFreeLinkedListKt: kotlinx.coroutines.internal.LockFreeLinkedListNode unwrap(java.lang.Object)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void handleCaptureImageResult(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void updateCachedBitmap(int,int)
androidx.fragment.app.LogWriter: void flush()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setColorized(boolean)
com.baseflow.geolocator.errors.ErrorCodes: ErrorCodes(java.lang.String,int)
com.google.zxing.qrcode.decoder.DataMask$6: DataMask$6(java.lang.String,int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
androidx.core.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()
com.google.firebase.database.core.operation.Operation$OperationType: com.google.firebase.database.core.operation.Operation$OperationType[] values()
androidx.appcompat.graphics.drawable.DrawableContainer: int resolveDensity(android.content.res.Resources,int)
com.google.android.gms.maps.model.MarkerOptions: java.lang.String getTitle()
androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])
androidx.appcompat.app.WindowDecorActionBar: void onContentScrollStarted()
androidx.appcompat.view.menu.ListMenuItemView: void insertCheckBox()
androidx.appcompat.view.menu.MenuBuilder: void close()
com.google.firebase.database.FirebaseDatabase: void setPersistenceCacheSizeBytes(long)
com.google.android.gms.common.api.internal.zak: void zao()
com.google.firebase.database.connection.util.StringListReader: long advance(long)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence)
com.google.android.gms.common.api.internal.zabk: zabk(com.google.android.gms.common.api.internal.GoogleApiManager$zaa)
com.google.firebase.database.core.ServerValues: java.lang.Object resolveScalarDeferredValue(java.lang.String,java.util.Map)
androidx.appcompat.widget.ListPopupWindow: void setContentWidth(int)
com.google.firebase.database.core.utilities.ImmutableTree: int hashCode()
kotlinx.coroutines.JobCancellationException: JobCancellationException(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job)
io.flutter.plugins.googlemaps.Convert: android.graphics.Point toPoint(java.lang.Object)
com.google.firebase.database.core.SyncTree$10: java.util.List call()
kotlin.jvm.internal.Intrinsics: Intrinsics()
kotlin.random.FallbackThreadLocalRandom$implStorage$1: FallbackThreadLocalRandom$implStorage$1()
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: int[] getModuleBitCount(com.google.zxing.common.BitMatrix,int,int,boolean,int,int)
androidx.appcompat.app.AppCompatActivity: android.view.MenuInflater getMenuInflater()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTooltipText(java.lang.CharSequence)
androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)
androidx.appcompat.widget.AbsActionBarView: void access$101(androidx.appcompat.widget.AbsActionBarView,int)
androidx.fragment.app.FragmentStore: void addFragment(androidx.fragment.app.Fragment)
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: com.google.zxing.oned.rss.expanded.decoders.DecodedInformation parseBlocks()
com.journeyapps.barcodescanner.camera.FitCenterStrategy: FitCenterStrategy()
com.journeyapps.barcodescanner.camera.CameraInstance: void access$200(com.journeyapps.barcodescanner.camera.CameraInstance,java.lang.Exception)
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
com.google.zxing.aztec.detector.Detector: Detector(com.google.zxing.common.BitMatrix)
com.google.zxing.pdf417.decoder.ec.ModulusGF: com.google.zxing.pdf417.decoder.ec.ModulusPoly getOne()
com.google.android.gms.maps.GoogleMap: void setTrafficEnabled(boolean)
io.flutter.plugins.firebase.database.QueryBuilder: void endBefore(java.util.Map)
io.flutter.plugin.common.EventChannel: void setStreamHandler(io.flutter.plugin.common.EventChannel$StreamHandler)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
com.google.common.util.concurrent.AbstractFuture: java.lang.Object access$400(com.google.common.util.concurrent.AbstractFuture)
com.google.firebase.database.core.view.QueryParams$ViewFrom: com.google.firebase.database.core.view.QueryParams$ViewFrom valueOf(java.lang.String)
androidx.appcompat.widget.AlertDialogLayout: void forceUniformWidth(int,int)
kotlin.collections.EmptyIterator: java.lang.Void next()
com.google.android.gms.common.api.internal.zace: void zaa(com.google.android.gms.common.api.internal.zace,com.google.android.gms.signin.internal.zak)
com.google.android.gms.internal.maps.zzy: boolean zzb(com.google.android.gms.internal.maps.zzw)
com.journeyapps.barcodescanner.ViewfinderView: void setMaskColor(int)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)
io.flutter.view.AccessibilityBridge: void onWindowNameChange(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.android.gms.common.internal.IGmsCallbacks$zza: IGmsCallbacks$zza()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)
androidx.appcompat.view.menu.SubMenuBuilder: boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
kotlin.coroutines.jvm.internal.CompletedContinuation: java.lang.String toString()
androidx.appcompat.view.WindowCallbackWrapper: boolean onMenuItemSelected(int,android.view.MenuItem)
androidx.core.view.inputmethod.EditorInfoCompat: java.lang.String[] getContentMimeTypes(android.view.inputmethod.EditorInfo)
androidx.fragment.app.FragmentManager$3: FragmentManager$3(androidx.fragment.app.FragmentManager)
com.google.firebase.database.core.Repo$18$1: void run()
androidx.arch.core.executor.ArchTaskExecutor: ArchTaskExecutor()
com.google.android.gms.common.api.internal.zabn: android.os.Looper getLooper()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray)
androidx.core.provider.FontRequestWorker$2: FontRequestWorker$2(androidx.core.provider.CallbackWithHandler)
com.google.android.gms.maps.model.CircleOptions: CircleOptions()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu: void onDismiss()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)
com.google.android.gms.maps.internal.zzk: void onResume()
com.google.android.gms.internal.maps.zzab: boolean zzb(com.google.android.gms.internal.maps.zzz)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.google.firebase.database.OnDisconnect: com.google.firebase.database.core.Repo access$100(com.google.firebase.database.OnDisconnect)
com.google.android.gms.location.zzs: com.google.android.gms.location.zzr zza(android.os.IBinder)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
io.flutter.plugin.platform.PlatformViewsController: java.util.List parsePointerCoordsList(java.lang.Object,float)
androidx.appcompat.content.res.AppCompatResources: void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList)
com.google.android.gms.maps.model.CameraPosition: boolean equals(java.lang.Object)
com.google.firebase.database.core.persistence.NoopPersistenceManager: void updateServerCache(com.google.firebase.database.core.Path,com.google.firebase.database.core.CompoundWrite)
com.google.android.gms.common.internal.zzb: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.SearchView$5: void onClick(android.view.View)
kotlin.collections.EmptyList: java.util.List subList(int,int)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task pollBuffer()
androidx.fragment.app.Fragment: int getExitAnim()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
androidx.fragment.app.FragmentTransaction: void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int)
com.google.zxing.client.android.InactivityTimer: void activity()
io.flutter.plugins.firebase.database.TransactionExecutor$1: void success(java.lang.Object)
com.google.firebase.database.OnDisconnect: com.google.android.gms.tasks.Task updateChildren(java.util.Map)
androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
kotlin.collections.EmptyList: int hashCode()
com.google.android.gms.common.api.internal.TaskApiCall: com.google.android.gms.common.Feature[] zabr()
com.google.firebase.database.Query: com.google.firebase.database.Query endAt(boolean)
io.flutter.embedding.android.FlutterView: boolean acquireLatestImageViewFrame()
io.flutter.plugins.firebase.database.ChildEventsProxy: void onChildAdded(com.google.firebase.database.DataSnapshot,java.lang.String)
androidx.fragment.app.FragmentManager$2: FragmentManager$2(androidx.fragment.app.FragmentManager)
com.google.zxing.datamatrix.DataMatrixReader: int moduleSize(int[],com.google.zxing.common.BitMatrix)
com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context)
androidx.fragment.app.FragmentManager: boolean isDestroyed()
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: com.google.zxing.oned.rss.DataCharacter decodeDataCharacter(com.google.zxing.common.BitArray,com.google.zxing.oned.rss.FinderPattern,boolean,boolean)
com.google.android.gms.internal.maps.zzg: com.google.android.gms.dynamic.IObjectWrapper zza(java.lang.String)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.PlatformChannel getPlatformChannel()
io.flutter.embedding.android.FlutterSurfaceView: boolean access$100(io.flutter.embedding.android.FlutterSurfaceView)
com.google.android.gms.common.ConnectionResult: int getErrorCode()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: java.lang.Object invoke(java.lang.Object)
androidx.fragment.app.FragmentAnim: androidx.fragment.app.FragmentAnim$AnimationOrAnimator loadAnimation(android.content.Context,androidx.fragment.app.Fragment,boolean,boolean)
androidx.appcompat.widget.AppCompatButton: void onTextChanged(java.lang.CharSequence,int,int,int)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
io.flutter.plugins.googlemaps.PolygonBuilder: void setFillColor(int)
com.google.firebase.database.connection.WebsocketConnection: java.lang.String[] splitIntoFrames(java.lang.String,int)
com.google.android.gms.auth.api.signin.zab: java.lang.Object createFromParcel(android.os.Parcel)
androidx.lifecycle.ViewModelStore: void put(java.lang.String,androidx.lifecycle.ViewModel)
io.flutter.plugin.editing.TextInputPlugin: int inputTypeFromTextInputType(io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,boolean,boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization)
com.google.zxing.maxicode.decoder.DecodedBitStreamParser: int getPostCode2(byte[])
com.google.android.gms.dynamite.zzg: zzg()
io.flutter.embedding.android.KeyChannelResponder: java.lang.Character applyCombiningCharacterToBaseCharacter(int)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.net.Uri getPhotoUrl()
io.flutter.plugins.googlemaps.CircleBuilder: void setRadius(double)
androidx.versionedparcelable.VersionedParcel: java.lang.CharSequence readCharSequence(java.lang.CharSequence,int)
androidx.fragment.app.FragmentTransition: void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList)
com.google.android.gms.common.api.GoogleApi: GoogleApi(android.content.Context,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,com.google.android.gms.common.api.internal.StatusExceptionMapper)
io.flutter.plugin.platform.PlatformViewsController: void finishFrame(boolean)
androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)
androidx.appcompat.app.AppCompatDelegateImpl$2: void run()
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationCancel(android.view.View)
com.google.android.gms.tasks.zzc: zzc(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation,com.google.android.gms.tasks.zzu)
androidx.core.app.NotificationCompat$Action: boolean getShowsUserInterface()
io.flutter.embedding.engine.systemchannels.NavigationChannel$1: NavigationChannel$1(io.flutter.embedding.engine.systemchannels.NavigationChannel)
io.flutter.plugins.googlemaps.GoogleMapsPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1: void error(java.lang.String,java.lang.String,java.lang.Object)
com.google.zxing.maxicode.decoder.DecodedBitStreamParser: int getInt(byte[],byte[])
androidx.appcompat.view.menu.ActionMenuItemView: void onMeasure(int,int)
com.google.android.gms.common.internal.zze: com.google.android.gms.common.stats.ConnectionTracker zzd(com.google.android.gms.common.internal.zze)
io.flutter.plugin.editing.ListenableEditingState: void setComposingRange(int,int)
androidx.window.embedding.SplitController: void registerRule(androidx.window.embedding.EmbeddingRule)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore fillPlaceholder(int,java.lang.Object)
kotlinx.coroutines.internal.FastServiceLoader: java.util.List load(java.lang.Class,java.lang.ClassLoader)
io.flutter.embedding.android.FlutterTextureView: void init()
androidx.fragment.app.FragmentTransitionImpl: void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable)
com.google.android.gms.common.internal.BaseGmsClient: void onPostInitHandler(int,android.os.IBinder,android.os.Bundle,int)
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable)
androidx.appcompat.app.AlertController: android.widget.ListView getListView()
com.google.zxing.common.DecoderResult: boolean hasStructuredAppend()
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isCheckable()
com.google.android.gms.internal.location.zzau: zzau(com.google.android.gms.internal.location.zzat,com.google.android.gms.location.LocationResult)
com.google.firebase.database.core.SyncTree$14: SyncTree$14(com.google.firebase.database.core.SyncTree,com.google.firebase.database.core.view.QuerySpec,com.google.firebase.database.core.EventRegistration,com.google.firebase.database.DatabaseError)
androidx.core.util.Preconditions: int checkArgumentInRange(int,int,int,java.lang.String)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
com.google.android.gms.common.api.GoogleApi$Settings$Builder: com.google.android.gms.common.api.GoogleApi$Settings$Builder setLooper(android.os.Looper)
com.lyokone.location.FlutterLocation: void sendError(java.lang.String,java.lang.String,java.lang.Object)
kotlinx.coroutines.JobCancellationException: int hashCode()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void mark(int)
androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)
com.google.android.gms.tasks.zzk: void onComplete(com.google.android.gms.tasks.Task)
com.google.firebase.database.core.Repo$5: void startListening(com.google.firebase.database.core.view.QuerySpec,com.google.firebase.database.core.Tag,com.google.firebase.database.connection.ListenHashProvider,com.google.firebase.database.core.SyncTree$CompletionListener)
com.google.firebase.database.core.view.View: com.google.firebase.database.snapshot.Node getCompleteNode()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
com.journeyapps.barcodescanner.ViewfinderView: void refreshSizes()
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object hasNext(kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.LockFreeLinkedListNode: void helpRemove()
androidx.tracing.Trace: boolean isEnabled()
com.google.zxing.common.detector.MathUtils: float distance(float,float,float,float)
com.google.android.gms.location.zzab: zzab()
kotlinx.coroutines.JobNode: JobNode()
com.google.firebase.database.snapshot.EmptyNode: com.google.firebase.database.snapshot.Node getImmediateChild(com.google.firebase.database.snapshot.ChildKey)
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: ActivityResultContracts$StartActivityForResult()
androidx.fragment.app.DefaultSpecialEffectsController$1: DefaultSpecialEffectsController$1(androidx.fragment.app.DefaultSpecialEffectsController,java.util.List,androidx.fragment.app.SpecialEffectsController$Operation)
com.google.firebase.database.collection.ImmutableSortedMapIterator: void remove()
com.google.firebase.database.snapshot.DeferredValueNode: int hashCode()
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: com.google.android.gms.common.api.Api$Client zaad()
kotlinx.coroutines.InvokeOnCancel: java.lang.Object invoke(java.lang.Object)
androidx.cursoradapter.widget.CursorFilter: CursorFilter(androidx.cursoradapter.widget.CursorFilter$CursorFilterClient)
com.google.android.gms.maps.model.PatternItem: boolean equals(java.lang.Object)
androidx.collection.SimpleArrayMap: int hashCode()
androidx.fragment.app.Fragment: void setArguments(android.os.Bundle)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
androidx.core.widget.ImageViewCompat: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder: com.google.zxing.common.BitArray getInformation()
com.google.android.gms.common.api.internal.zad: void zaa(com.google.android.gms.common.api.Status)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$1: void run()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object tryResumeWithException(java.lang.Throwable)
com.journeyapps.barcodescanner.camera.CameraInstance: CameraInstance(android.content.Context)
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()
com.google.firebase.database.snapshot.DoubleNode: int compareLeafValues(com.google.firebase.database.snapshot.LeafNode)
com.google.zxing.pdf417.decoder.BarcodeValue: BarcodeValue()
androidx.core.provider.FontProvider: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)
io.flutter.plugin.common.EventChannel: java.lang.String access$200(io.flutter.plugin.common.EventChannel)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: PlatformChannel$SoundType(java.lang.String,int,java.lang.String)
io.flutter.plugins.googlemaps.TileOverlaysController: void changeTileOverlay(java.util.Map)
androidx.activity.result.ActivityResultRegistry: int registerKey(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int applyAlpha(int,float)
androidx.collection.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setAlphabeticShortcut(char,int)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: android.content.ClipDescription getDescription()
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.firebase.database.snapshot.PriorityIndex: java.lang.String toString()
androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean isAutoMirrored()
io.flutter.plugins.googlemaps.PolylineController: void setJointType(int)
com.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder intoSet()
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentContainer createFragmentContainer()
com.google.android.gms.common.internal.zaf: zaf(com.google.android.gms.common.api.internal.ConnectionCallbacks)
androidx.appcompat.view.menu.MenuItemImpl: void setExclusiveCheckable(boolean)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
io.flutter.plugins.googlemaps.Convert: float toFractionalPixels(java.lang.Object,float)
io.flutter.plugins.googlemaps.MarkerBuilder: void setVisible(boolean)
com.google.firebase.database.connection.WebsocketConnection: void handleIncomingFrame(java.lang.String)
com.google.android.gms.maps.model.Cap: boolean equals(java.lang.Object)
io.flutter.view.AccessibilityBridge$1: void onLongPress(int)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void access$100(io.flutter.plugins.imagepicker.ImagePickerDelegate,java.lang.String)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,io.flutter.embedding.android.FlutterSurfaceView)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setNumericShortcut(char)
kotlinx.coroutines.internal.AtomicOp: java.lang.Object decide(java.lang.Object)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: java.lang.String toString()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setCheckable(boolean)
com.google.android.gms.common.api.internal.TaskUtil: void setResultOrApiException(com.google.android.gms.common.api.Status,com.google.android.gms.tasks.TaskCompletionSource)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: boolean zaa(com.google.android.gms.common.api.internal.GoogleApiManager$zaa,boolean)
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient: boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message)
androidx.appcompat.widget.ResourcesWrapper: int getInteger(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener: ImeSyncDeferringInsetsCallback$InsetsListener(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$1)
androidx.appcompat.widget.AppCompatDrawableManager: AppCompatDrawableManager()
kotlinx.coroutines.internal.ExceptionsConstuctorKt: kotlin.jvm.functions.Function1 createConstructor(java.lang.reflect.Constructor)
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14(androidx.core.view.ViewPropertyAnimatorCompat)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean hasFocus()
androidx.window.embedding.SplitController: void access$setStaticSplitRules(androidx.window.embedding.SplitController,java.util.Set)
androidx.fragment.app.FragmentActivity: void onDestroy()
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isSelected()
androidx.core.view.ContentInfoCompat: int getSource()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: AccessibilityBridge$CustomAccessibilityAction()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.maps.model.BitmapDescriptorFactory: com.google.android.gms.maps.model.BitmapDescriptor defaultMarker()
com.google.firebase.database.core.view.CacheNode: CacheNode(com.google.firebase.database.snapshot.IndexedNode,boolean,boolean)
androidx.appcompat.view.menu.MenuBuilder: void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: byte[] createByteArray(android.os.Parcel,int)
com.google.android.gms.common.api.internal.zzc: void onDestroy()
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(android.view.ViewGroup$LayoutParams)
kotlinx.coroutines.JobSupport$ChildCompletion: java.lang.Object invoke(java.lang.Object)
androidx.core.widget.NestedScrollView: android.view.View findFocusableViewInBounds(boolean,int,int)
com.google.firebase.database.core.view.ViewProcessor: void maybeAddValueEvent(com.google.firebase.database.core.view.ViewCache,com.google.firebase.database.core.view.ViewCache,java.util.List)
androidx.appcompat.view.menu.MenuBuilder: void flagActionItems()
kotlinx.coroutines.CancelledContinuation: CancelledContinuation(kotlin.coroutines.Continuation,java.lang.Throwable,boolean)
androidx.appcompat.graphics.drawable.DrawableWrapper: DrawableWrapper(android.graphics.drawable.Drawable)
com.google.zxing.oned.CodaBarReader: void validatePattern(int)
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceCreated(android.view.SurfaceHolder)
com.google.android.gms.common.api.internal.GoogleApiManager$zab: void zac(com.google.android.gms.common.api.internal.GoogleApiManager$zab)
androidx.appcompat.view.SupportMenuInflater: java.lang.Object findRealOwner(java.lang.Object)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void loadFromAttributes(android.util.AttributeSet,int)
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy[] values()
com.google.android.gms.maps.internal.zzbx: void setTiltGesturesEnabled(boolean)
androidx.core.os.ExecutorCompat$HandlerExecutor: ExecutorCompat$HandlerExecutor(android.os.Handler)
androidx.appcompat.widget.ForwardingListener$DisallowIntercept: ForwardingListener$DisallowIntercept(androidx.appcompat.widget.ForwardingListener)
androidx.appcompat.widget.AppCompatTextHelper: void onAsyncTypefaceReceived(java.lang.ref.WeakReference,android.graphics.Typeface)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode findPrevNonRemoved(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.core.content.res.ResourcesCompat$FontCallback: ResourcesCompat$FontCallback()
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: void stopListening()
androidx.appcompat.view.menu.CascadingMenuPopup: CascadingMenuPopup(android.content.Context,android.view.View,int,int,boolean)
com.google.zxing.oned.rss.expanded.decoders.AI01decoder: void appendCheckDigit(java.lang.StringBuilder,int)
com.google.firebase.database.core.Repo: void access$2700(com.google.firebase.database.core.Repo,com.google.firebase.database.core.utilities.Tree)
androidx.appcompat.view.menu.MenuItemImpl: boolean requiresActionButton()
kotlinx.coroutines.channels.AbstractChannel$Itr: boolean hasNextResult(java.lang.Object)
androidx.appcompat.graphics.drawable.StateListDrawable: int[] extractStateSet(android.util.AttributeSet)
com.google.android.gms.maps.zzr: void zzb(com.google.android.gms.dynamic.IObjectWrapper)
androidx.fragment.app.Fragment: void onHiddenChanged(boolean)
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.PolylineOptions geodesic(boolean)
kotlinx.coroutines.scheduling.DefaultScheduler: DefaultScheduler()
androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)
com.google.zxing.client.android.InactivityTimer: InactivityTimer(android.content.Context,java.lang.Runnable)
androidx.multidex.MultiDexExtractor: java.util.List performExtractions()
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuView access$600(androidx.appcompat.widget.ActionMenuPresenter)
com.google.zxing.oned.rss.AbstractRSSReader: AbstractRSSReader()
io.flutter.embedding.engine.FlutterJNI$Factory: FlutterJNI$Factory()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setActionView(android.view.View)
com.google.android.gms.common.internal.GmsClient: GmsClient(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.GmsClientSupervisor,com.google.android.gms.common.GoogleApiAvailability,int,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.api.internal.ConnectionCallbacks,com.google.android.gms.common.api.internal.OnConnectionFailedListener)
kotlin.text.StringsKt__StringsJVMKt: boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
com.google.zxing.common.BitSource: int readBits(int)
androidx.appcompat.widget.Toolbar: boolean hideOverflowMenu()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
io.flutter.view.AccessibilityBridge: void willRemoveSemanticsNode(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.android.gms.maps.model.PolygonOptions: int getFillColor()
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Throwable tryReleaseClaimedContinuation(kotlinx.coroutines.CancellableContinuation)
com.google.android.gms.location.FusedLocationProviderClient: com.google.android.gms.tasks.Task getLastLocation()
androidx.fragment.app.FragmentActivity$HostCallbacks: void onSupportInvalidateOptionsMenu()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: SidecarWindowBackend$WindowLayoutChangeCallbackWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.appcompat.widget.SearchView: boolean onItemClicked(int,int,java.lang.String)
kotlinx.coroutines.channels.AbstractChannel: boolean enqueueReceive(kotlinx.coroutines.channels.Receive)
kotlinx.coroutines.InactiveNodeList: boolean isActive()
com.google.android.gms.internal.maps.zzv: void setRotation(float)
com.baseflow.geolocator.location.LocationOptions: long getDistanceFilter()
com.google.android.gms.common.internal.zzf: void zza(android.content.ServiceConnection,java.lang.String)
androidx.core.widget.AutoScrollHelper$ClampedScroller: int getDeltaX()
com.google.firebase.database.core.operation.ListenComplete: java.lang.String toString()
com.google.firebase.provider.FirebaseInitProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com.google.android.gms.common.internal.BaseGmsClient$zzf: void zza(com.google.android.gms.common.ConnectionResult)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$4: ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$4(java.lang.reflect.Constructor)
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: DrawableContainer$BlockInvalidateCallback()
com.google.android.gms.common.api.ApiException: int getStatusCode()
com.google.android.gms.maps.internal.zzbz: java.lang.Object zza(java.lang.ClassLoader,java.lang.String)
com.google.firebase.components.CycleDetector$ComponentNode: void addDependent(com.google.firebase.components.CycleDetector$ComponentNode)
androidx.fragment.app.FragmentActivity$HostCallbacks: FragmentActivity$HostCallbacks(androidx.fragment.app.FragmentActivity)
com.google.android.gms.common.api.internal.zacg: void run()
com.google.firebase.database.core.Repo$TransactionData: boolean access$3000(com.google.firebase.database.core.Repo$TransactionData)
io.flutter.plugin.platform.PlatformPlugin$1: void setSystemUiOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
androidx.window.embedding.EmbeddingAdapter: java.util.List translate(java.util.List)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable getCurrent()
com.google.android.gms.tasks.zzu$zza: void zzb(com.google.android.gms.tasks.zzq)
kotlin.SynchronizedLazyImpl: SynchronizedLazyImpl(kotlin.jvm.functions.Function0,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
io.flutter.embedding.android.FlutterView$4: void onFlutterUiNoLongerDisplayed()
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object readValueOfType(byte,java.nio.ByteBuffer)
androidx.window.embedding.MatcherUtils: boolean wildcardMatch(java.lang.String,java.lang.String)
androidx.window.embedding.SplitPairFilter: int hashCode()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.fragment.app.Fragment: float getPostOnViewCreatedAlpha()
com.google.android.gms.common.internal.SimpleClientAdapter: void onSetConnectState(int,android.os.IInterface)
com.journeyapps.barcodescanner.camera.CameraManager: android.hardware.Camera$CameraInfo access$000(com.journeyapps.barcodescanner.camera.CameraManager)
androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
androidx.core.view.NestedScrollingChildHelper: void stopNestedScroll(int)
kotlinx.coroutines.scheduling.NanoTimeSource: NanoTimeSource()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
com.journeyapps.barcodescanner.RawImageData: byte[] getData()
com.google.android.gms.maps.internal.zzg: void setMapType(int)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
com.journeyapps.barcodescanner.CaptureManager$1: CaptureManager$1(com.journeyapps.barcodescanner.CaptureManager)
com.google.firebase.database.snapshot.DoubleNode: com.google.firebase.database.snapshot.DoubleNode updatePriority(com.google.firebase.database.snapshot.Node)
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: java.lang.Integer invoke(int,kotlin.coroutines.CoroutineContext$Element)
kotlinx.coroutines.internal.MainDispatchersKt: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher(java.lang.Throwable,java.lang.String)
androidx.core.view.ViewCompat$3: java.lang.CharSequence frameworkGet(android.view.View)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: void adjustCodewordCount(com.google.zxing.pdf417.decoder.DetectionResult,com.google.zxing.pdf417.decoder.BarcodeValue[][])
com.google.firebase.database.core.view.QueryParams: boolean equals(java.lang.Object)
com.google.zxing.qrcode.detector.FinderPatternFinder: int[] getCrossCheckStateCount()
androidx.window.embedding.ActivityRule: androidx.window.embedding.ActivityRule plus$window_release(androidx.window.embedding.ActivityFilter)
com.google.zxing.common.BitMatrix: java.lang.Object clone()
io.flutter.plugins.imagepicker.ImagePickerDelegate: boolean setPendingMethodCallAndResult(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion()
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)
io.flutter.embedding.engine.systemchannels.RestorationChannel: byte[] access$002(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[])
kotlinx.coroutines.EventLoopImplBase$DelayedTask: void setIndex(int)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob)
com.google.zxing.aztec.decoder.Decoder: int readCode(boolean[],int,int)
androidx.appcompat.view.menu.MenuBuilder: void setGroupDividerEnabled(boolean)
io.flutter.plugin.platform.VirtualDisplayController$1: void onViewDetachedFromWindow(android.view.View)
com.google.android.gms.maps.model.TileOverlay: java.lang.String getId()
com.google.firebase.database.core.SparseSnapshotTree$2: void visitChild(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.core.SparseSnapshotTree)
com.google.android.gms.location.LocationAvailability: boolean isLocationAvailable()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: SettingsChannel$PlatformBrightness(java.lang.String,int,java.lang.String)
androidx.fragment.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void requestExistingInputState()
com.google.zxing.oned.UPCEReader: UPCEReader()
io.flutter.plugin.platform.VirtualDisplayController$1: void onViewAttachedToWindow(android.view.View)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityIntentPredicates(java.util.Set)
io.flutter.plugin.editing.TextInputPlugin: void setTextInputEditingState(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
com.google.zxing.maxicode.decoder.DecodedBitStreamParser: java.lang.String getMessage(byte[],int,int)
androidx.core.content.FileProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)
com.google.firebase.database.core.view.EventGenerator$1: EventGenerator$1(com.google.firebase.database.core.view.EventGenerator)
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.google.android.gms.common.api.internal.BackgroundDetector: boolean readCurrentStateIfPossible(boolean)
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.collection.SimpleArrayMap: SimpleArrayMap()
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: DefaultSpecialEffectsController$TransitionInfo(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean)
androidx.window.layout.DisplayCompatHelperApi17: void getRealSize(android.view.Display,android.graphics.Point)
com.journeyapps.barcodescanner.DecoderThread: void start()
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
com.google.firebase.database.android.SqlPersistenceStorageEngine: void endTransaction()
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
androidx.appcompat.widget.ContentFrameLayout: void onDetachedFromWindow()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.SubMenu getSubMenu()
androidx.core.widget.TextViewCompat$OreoCallback: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)
androidx.core.graphics.TypefaceCompatApi29Impl: TypefaceCompatApi29Impl()
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.util.Set getRequestedScopes()
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setTrackCameraPosition(boolean)
com.google.android.gms.common.api.internal.zzb: zzb(com.google.android.gms.common.api.internal.zza,com.google.android.gms.common.api.internal.LifecycleCallback,java.lang.String)
com.google.firebase.database.core.operation.Operation$OperationType: com.google.firebase.database.core.operation.Operation$OperationType valueOf(java.lang.String)
com.lyokone.location.FlutterLocationService$Companion: FlutterLocationService$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.app.NotificationCompat$Style: void addCompatExtras(android.os.Bundle)
androidx.fragment.app.FragmentStore: java.util.ArrayList saveAddedFragments()
com.google.firebase.database.core.Repo: void scheduleNow(java.lang.Runnable)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setIcon(int)
com.google.common.util.concurrent.AbstractFuture: java.lang.String userObjectToString(java.lang.Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
androidx.appcompat.view.menu.ExpandedMenuView: boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode removeAtImpl(int)
androidx.appcompat.view.menu.MenuBuilder: void setExclusiveItemChecked(android.view.MenuItem)
com.google.firebase.database.android.SqlPersistenceStorageEngine: void pruneTreeRecursive(com.google.firebase.database.core.Path,com.google.firebase.database.core.Path,com.google.firebase.database.core.utilities.ImmutableTree,com.google.firebase.database.core.utilities.ImmutableTree,com.google.firebase.database.core.persistence.PruneForest,java.util.List)
com.google.firebase.database.tubesock.WebSocketReceiver: long parseLong(byte[],int)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
com.journeyapps.barcodescanner.CameraPreview$2: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
com.google.firebase.database.android.SqlPersistenceStorageEngine: java.lang.String buildAncestorWhereClause(com.google.firebase.database.core.Path,java.lang.String[])
androidx.window.embedding.ExtensionEmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.appcompat.view.menu.MenuItemImpl: boolean hasSubMenu()
androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)
com.google.zxing.pdf417.PDF417ResultMetadata: PDF417ResultMetadata()
androidx.core.view.ViewCompat$5: ViewCompat$5(int,java.lang.Class,int)
com.google.android.gms.maps.model.Marker: void setAnchor(float,float)
androidx.appcompat.view.menu.ListMenuItemView: void adjustListItemSelectionBounds(android.graphics.Rect)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean isAttached()
com.google.firebase.database.core.Repo: void addEventCallback(com.google.firebase.database.core.EventRegistration)
com.journeyapps.barcodescanner.CameraPreview: android.os.Parcelable onSaveInstanceState()
com.google.zxing.client.android.BeepManager: void playBeepSoundAndVibrate()
androidx.appcompat.widget.SearchView$4: SearchView$4(androidx.appcompat.widget.SearchView)
androidx.appcompat.view.menu.MenuPopupHelper: void dismiss()
com.google.common.base.Throwables: void throwIfUnchecked(java.lang.Throwable)
com.google.firebase.database.snapshot.IndexedNode: com.google.firebase.database.snapshot.IndexedNode updatePriority(com.google.firebase.database.snapshot.Node)
io.flutter.plugin.mouse.MouseCursorPlugin: android.view.PointerIcon resolveSystemCursor(java.lang.String)
com.google.firebase.database.snapshot.DoubleNode: java.lang.String getHashRepresentation(com.google.firebase.database.snapshot.Node$HashVersion)
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: com.google.android.gms.tasks.Task runTransaction(java.util.Map)
com.google.android.gms.signin.zaa: zaa()
io.flutter.plugin.platform.PlatformPlugin$2: void onSystemUiVisibilityChange(int)
androidx.core.graphics.TypefaceCompatBaseImpl$2: int getWeight(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)
androidx.appcompat.view.SupportMenuInflater$MenuState: SupportMenuInflater$MenuState(androidx.appcompat.view.SupportMenuInflater,android.view.Menu)
androidx.appcompat.app.AlertController: void setIcon(android.graphics.drawable.Drawable)
kotlin.ranges.IntProgression: int hashCode()
androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration generateConfigDelta(android.content.res.Configuration,android.content.res.Configuration)
androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)
androidx.window.embedding.SplitController: SplitController()
androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState()
com.google.android.gms.common.api.UnsupportedApiCallException: java.lang.String getMessage()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
com.google.zxing.qrcode.decoder.Mode: int getCharacterCountBits(com.google.zxing.qrcode.decoder.Version)
com.google.zxing.pdf417.PDF417ResultMetadata: void setTimestamp(long)
com.google.android.gms.internal.location.zzae: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.database.OnDisconnect: com.google.firebase.database.core.Path access$000(com.google.firebase.database.OnDisconnect)
com.google.firebase.database.core.persistence.DefaultPersistenceManager: java.lang.Object runInTransaction(java.util.concurrent.Callable)
com.google.zxing.oned.UPCEANReader: UPCEANReader()
androidx.collection.MapCollections$ValuesCollection: java.util.Iterator iterator()
com.google.firebase.database.android.SqlPersistenceStorageEngine$PersistentCacheOpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
com.google.android.gms.common.internal.BaseGmsClient: java.lang.String zzj()
androidx.appcompat.widget.LinearLayoutCompat: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams()
com.google.android.gms.maps.GoogleMap: void setLatLngBoundsForCameraTarget(com.google.android.gms.maps.model.LatLngBounds)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void remove(java.lang.Class)
androidx.fragment.app.SpecialEffectsController$Operation$State: void applyState(android.view.View)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getOpacity()
com.google.zxing.pdf417.decoder.ec.ModulusPoly: com.google.zxing.pdf417.decoder.ec.ModulusPoly negative()
io.flutter.embedding.android.FlutterView: boolean isAttachedToFlutterEngine()
com.google.android.gms.common.internal.ClientSettings$Builder: com.google.android.gms.common.internal.ClientSettings$Builder setRealClientPackageName(java.lang.String)
com.google.android.gms.internal.maps.zzah: zzah(android.os.IBinder)
com.journeyapps.barcodescanner.Decoder: Decoder(com.google.zxing.Reader)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
androidx.core.provider.FontRequestWorker$TypefaceResult: FontRequestWorker$TypefaceResult(android.graphics.Typeface)
com.google.android.gms.common.api.internal.zabi: void run()
kotlinx.coroutines.CompletedWithCancellation: int hashCode()
com.google.android.gms.common.internal.IGmsCallbacks$zza: boolean zza(int,android.os.Parcel,android.os.Parcel,int)
androidx.fragment.app.FragmentAnim$1: void onCancel()
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo,java.util.List)
com.google.android.gms.common.internal.SimpleClientAdapter: com.google.android.gms.common.api.Api$SimpleClient getClient()
kotlinx.coroutines.internal.Removed: java.lang.String toString()
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.core.app.CoreComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
kotlinx.coroutines.channels.ConflatedChannel: boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void markForRedelivery()
io.flutter.plugins.googlemaps.TileOverlayBuilder: void setTransparency(float)
com.google.android.gms.maps.model.ButtCap: ButtCap()
com.google.android.gms.maps.model.zzr: java.lang.Object createFromParcel(android.os.Parcel)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void jumpToCurrentState()
com.google.firebase.database.snapshot.NamedNode: com.google.firebase.database.snapshot.Node getNode()
com.google.zxing.maxicode.decoder.Decoder: void correctErrors(byte[],int,int,int,int)
kotlinx.coroutines.Active: Active()
com.google.android.gms.internal.maps.zzg: com.google.android.gms.dynamic.IObjectWrapper zza(float)
com.google.zxing.qrcode.detector.FinderPattern: boolean aboutEquals(float,float,float)
androidx.appcompat.view.SupportMenuInflater$MenuState: void addItem()
com.google.android.gms.internal.maps.zzab: void setWidth(float)
com.google.zxing.qrcode.decoder.FormatInformation: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getErrorCorrectionLevel()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context)
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation: void complete()
androidx.appcompat.view.menu.ListMenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
com.google.firebase.database.collection.ImmutableSortedSet: ImmutableSortedSet(java.util.List,java.util.Comparator)
com.google.zxing.qrcode.decoder.DataMask$4: DataMask$4(java.lang.String,int)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object)
androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void stop()
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: FragmentManager$LaunchedFragmentInfo(java.lang.String,int)
androidx.fragment.app.Fragment: void setAnimatingAway(android.view.View)
io.flutter.plugins.googlemaps.MarkersController: void addMarker(java.lang.Object)
com.google.android.gms.tasks.Tasks$zza: void onFailure(java.lang.Exception)
com.google.firebase.database.core.SyncTree: void keepSynced(com.google.firebase.database.core.view.QuerySpec,boolean)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: FlutterImageView$SurfaceKind(java.lang.String,int)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$5$1: java.lang.Void invoke(java.lang.Throwable)
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
com.google.firebase.database.core.CompoundWrite: boolean isEmpty()
com.google.android.gms.maps.internal.zzbr: com.google.android.gms.maps.model.VisibleRegion getVisibleRegion()
com.journeyapps.barcodescanner.CaptureActivity: void onResume()
androidx.core.graphics.TypefaceCompatApi26Impl: TypefaceCompatApi26Impl()
kotlin.collections.EmptySet: boolean containsAll(java.util.Collection)
com.google.firebase.database.core.SyncTree$14: java.lang.Object call()
com.baseflow.geolocator.GeolocatorLocationService: boolean onUnbind(android.content.Intent)
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: AccessibilityBridge$LocaleStringAttribute()
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.appcompat.widget.ActionBarOverlayLayout: void removeActionBarHideOffset()
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.PolylineOptions color(int)
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: MethodCallHandlerImpl(io.flutter.plugins.urllauncher.UrlLauncher)
androidx.core.widget.PopupWindowCompat: void setOverlapAnchor(android.widget.PopupWindow,boolean)
androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)
com.google.android.gms.location.zzn: zzn(com.google.android.gms.location.FusedLocationProviderClient,com.google.android.gms.common.api.internal.ListenerHolder,com.google.android.gms.internal.location.zzbd,com.google.android.gms.common.api.internal.ListenerHolder)
androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.core.view.ActionProvider: boolean overridesItemVisibility()
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
io.flutter.plugins.firebase.database.FlutterDataSnapshotPayload: FlutterDataSnapshotPayload(com.google.firebase.database.DataSnapshot)
com.google.firebase.database.tubesock.WebSocket$2: void run()
com.google.firebase.components.ComponentRuntime: java.util.List iterableToList(java.lang.Iterable)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)
androidx.activity.result.ActivityResult$1: androidx.activity.result.ActivityResult[] newArray(int)
com.google.zxing.pdf417.decoder.BarcodeMetadata: int getErrorCorrectionLevel()
com.lyokone.location.FlutterLocationService$LocalBinder: FlutterLocationService$LocalBinder(com.lyokone.location.FlutterLocationService)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setActivationDelay(int)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)
com.google.zxing.common.PerspectiveTransform: com.google.zxing.common.PerspectiveTransform quadrilateralToSquare(float,float,float,float,float,float,float,float)
com.google.android.gms.maps.internal.zzas: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBNode getMax()
com.google.firebase.database.DatabaseError: java.lang.String getMessage()
com.google.android.gms.maps.model.CameraPosition: CameraPosition(com.google.android.gms.maps.model.LatLng,float,float,float)
com.google.firebase.database.connection.util.StringListReader: int read(java.nio.CharBuffer)
kotlin.collections.EmptySet: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(java.lang.CharSequence)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: void cancelJobOnRejection(kotlin.coroutines.CoroutineContext,java.util.concurrent.RejectedExecutionException)
androidx.lifecycle.ReportFragment: ReportFragment()
kotlinx.coroutines.EventLoopImplBase: void closeQueue()
com.google.zxing.qrcode.detector.FinderPatternInfo: com.google.zxing.qrcode.detector.FinderPattern getTopLeft()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
io.flutter.plugin.platform.PlatformViewsController: void initializePlatformViewIfNeeded(int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host access$000(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate)
androidx.appcompat.view.menu.StandardMenuPopup$2: void onViewAttachedToWindow(android.view.View)
com.google.firebase.database.snapshot.EmptyNode: boolean equals(java.lang.Object)
com.google.zxing.client.android.AmbientLightManager: void onSensorChanged(android.hardware.SensorEvent)
androidx.appcompat.app.AppCompatActivity: void supportInvalidateOptionsMenu()
androidx.core.graphics.Insets: java.lang.String toString()
io.flutter.plugins.googlemaps.PolygonController: boolean consumeTapEvents()
com.google.zxing.datamatrix.decoder.Version: int getDataRegionSizeColumns()
com.google.android.gms.maps.internal.zzg: void setOnMarkerDragListener(com.google.android.gms.maps.internal.zzat)
com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult: BlockParsedResult(com.google.zxing.oned.rss.expanded.decoders.DecodedInformation,boolean)
kotlin.Result$Failure: int hashCode()
com.journeyapps.barcodescanner.DecoderThread: boolean access$300(com.journeyapps.barcodescanner.DecoderThread)
com.journeyapps.barcodescanner.camera.CameraManager: void setParameters()
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: boolean isEmpty()
com.google.common.util.concurrent.AbstractFuture: java.lang.String pendingToString()
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
io.flutter.plugins.googlemaps.MarkerBuilder: void setConsumeTapEvents(boolean)
com.google.firebase.database.core.utilities.encoding.CustomClassMapper$BeanMapper: java.lang.String propertyName(java.lang.reflect.Method)
com.google.zxing.oned.Code93Reader: char patternToChar(int)
com.google.firebase.database.core.SyncTree: java.util.List applyUserMerge(com.google.firebase.database.core.Path,com.google.firebase.database.core.CompoundWrite,com.google.firebase.database.core.CompoundWrite,long,boolean)
com.google.firebase.database.connection.PersistentConnectionImpl: void purgeOutstandingWrites()
com.google.firebase.database.core.SyncTree: com.google.firebase.database.core.SyncTree$ListenProvider access$1500(com.google.firebase.database.core.SyncTree)
com.google.firebase.database.core.Repo: com.google.firebase.database.core.utilities.OffsetClock access$2300(com.google.firebase.database.core.Repo)
androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)
kotlinx.coroutines.channels.AbstractChannel: AbstractChannel(kotlin.jvm.functions.Function1)
com.google.android.gms.maps.model.Polyline: boolean equals(java.lang.Object)
com.google.android.gms.internal.maps.zza: android.os.IBinder asBinder()
androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)
androidx.appcompat.widget.AppCompatPopupWindow: void setSupportOverlapAnchor(boolean)
androidx.core.widget.NestedScrollView: boolean arrowScroll(int)
androidx.window.embedding.SplitController$Companion: androidx.window.embedding.SplitController getInstance()
kotlinx.coroutines.JobNode: boolean isActive()
io.flutter.plugins.googlemaps.Convert: java.lang.String interpretPolylineOptions(java.lang.Object,io.flutter.plugins.googlemaps.PolylineOptionsSink)
com.google.firebase.database.core.persistence.PruneForest$1: PruneForest$1()
com.lyokone.location.LocationPlugin: void initialize(com.lyokone.location.FlutterLocationService)
com.google.firebase.database.collection.ArraySortedMap: java.lang.Object[] removeFromArray(java.lang.Object[],int)
androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()
com.google.firebase.database.core.view.ViewProcessor: com.google.firebase.database.core.view.ViewCache listenComplete(com.google.firebase.database.core.view.ViewCache,com.google.firebase.database.core.Path,com.google.firebase.database.core.WriteTreeRef,com.google.firebase.database.snapshot.Node,com.google.firebase.database.core.view.filter.ChildChangeAccumulator)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void dispose(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
com.journeyapps.barcodescanner.BarcodeView$DecodeMode: com.journeyapps.barcodescanner.BarcodeView$DecodeMode[] values()
androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int,int,int[])
io.flutter.embedding.engine.FlutterShellArgs: java.lang.String[] toArray()
androidx.appcompat.view.menu.StandardMenuPopup: void setHorizontalOffset(int)
com.google.firebase.database.core.Repo$7: Repo$7(com.google.firebase.database.core.Repo,com.google.firebase.database.DatabaseReference$CompletionListener,com.google.firebase.database.DatabaseError,com.google.firebase.database.DatabaseReference)
kotlinx.coroutines.channels.ArrayChannel: boolean enqueueReceiveInternal(kotlinx.coroutines.channels.Receive)
com.google.firebase.platforminfo.LibraryVersion: LibraryVersion()
com.google.zxing.common.BitMatrix: int[] getBottomRightOnBit()
com.google.zxing.common.detector.WhiteRectangleDetector: WhiteRectangleDetector(com.google.zxing.common.BitMatrix)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void setAdapter(android.widget.ListAdapter)
com.google.android.gms.location.zzaj: boolean equals(java.lang.Object)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateParentMetricsPredicate(androidx.window.embedding.SplitRule)
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: void onMeasure(int,int)
com.google.android.gms.maps.GoogleMap: float getMinZoomLevel()
io.flutter.embedding.engine.systemchannels.PlatformChannel: PlatformChannel(io.flutter.embedding.engine.dart.DartExecutor)
com.journeyapps.barcodescanner.camera.CameraInstance: void setReadyHandler(android.os.Handler)
com.google.firebase.database.snapshot.EmptyNode: boolean isLeafNode()
com.google.firebase.database.snapshot.Node$HashVersion: Node$HashVersion(java.lang.String,int)
com.google.zxing.oned.OneDReader: OneDReader()
com.google.android.gms.common.internal.BaseGmsClient: java.lang.String getStartServicePackage()
com.google.android.gms.location.zzj: zzj()
com.google.android.gms.internal.common.zzb: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler access$102(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(int)
io.flutter.plugin.platform.AccessibilityEventsDelegate: AccessibilityEventsDelegate()
com.google.firebase.FirebaseOptions: java.lang.String getGaTrackingId()
com.google.firebase.database.snapshot.ValueIndex: com.google.firebase.database.snapshot.NamedNode makePost(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node)
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.lyokone.location.FlutterLocation: void setActivity(android.app.Activity)
androidx.appcompat.app.AppCompatDelegate: int getLocalNightMode()
androidx.core.view.NestedScrollingParentHelper: void onStopNestedScroll(android.view.View,int)
androidx.fragment.app.FragmentTransitionCompat21$1: FragmentTransitionCompat21$1(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: boolean onStateChanged(int[])
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.internal.location.zzap: void zza(com.google.android.gms.internal.location.zzbf)
androidx.appcompat.view.StandaloneActionMode: void setTitle(int)
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface: void onSplitInfoChanged(java.util.List)
com.google.android.gms.maps.internal.zzak: zzak()
com.google.firebase.database.core.CompoundWrite: com.google.firebase.database.snapshot.Node rootWrite()
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean hasPanelItems()
kotlinx.coroutines.internal.FastServiceLoader: FastServiceLoader()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canApplyTheme()
com.google.android.gms.location.zzv: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
net.touchcapture.qr.flutterqr.QRView: void flipCamera(io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.AppCompatImageButton: void drawableStateChanged()
com.google.android.gms.internal.maps.zzv: void setTitle(java.lang.String)
com.google.android.gms.dynamite.DynamiteModule$zzb: int getLocalVersion(android.content.Context,java.lang.String)
com.google.android.gms.common.zzi: zzi(byte[])
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity)
kotlin.Result: java.lang.Throwable exceptionOrNull-impl(java.lang.Object)
kotlinx.coroutines.ChildHandleNode: boolean childCancelled(java.lang.Throwable)
androidx.lifecycle.LifecycleRegistry: void enforceMainThreadIfNeeded(java.lang.String)
androidx.core.view.AccessibilityDelegateCompat: AccessibilityDelegateCompat()
com.google.android.gms.internal.location.zzk: java.lang.String getStartServiceAction()
androidx.fragment.app.Fragment: void performDestroyView()
com.google.android.gms.maps.model.Circle: java.lang.String getId()
com.journeyapps.barcodescanner.CaptureManager: com.google.zxing.client.android.BeepManager access$100(com.journeyapps.barcodescanner.CaptureManager)
androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager)
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper()
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: int[] getBitCountForCodeword(int)
kotlin.collections.EmptyList: int indexOf(java.lang.Object)
com.journeyapps.barcodescanner.camera.CameraInstance: void setCameraSettings(com.journeyapps.barcodescanner.camera.CameraSettings)
com.google.firebase.database.core.view.QuerySpec: com.google.firebase.database.core.view.QuerySpec defaultQueryAtPath(com.google.firebase.database.core.Path)
kotlin.collections.EmptySet: boolean add(java.lang.Object)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.util.List getPathProviderExternalCacheDirectories()
io.flutter.plugins.googlemaps.GoogleMapController: void onMarkerDragEnd(com.google.android.gms.maps.model.Marker)
androidx.appcompat.app.WindowDecorActionBar: WindowDecorActionBar(android.app.Activity,boolean)
com.google.android.gms.dynamic.IObjectWrapper$Stub: IObjectWrapper$Stub()
com.google.firebase.database.connection.PersistentConnectionImpl: void sendAppCheckTokenHelper(boolean)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingListen: java.lang.Long getTag()
io.flutter.embedding.engine.loader.FlutterLoader: java.util.concurrent.ExecutorService access$200(io.flutter.embedding.engine.loader.FlutterLoader)
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: com.google.android.gms.tasks.Task setPriority(java.util.Map)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
com.google.android.gms.internal.location.zzae: java.lang.Object[] newArray(int)
androidx.fragment.app.FragmentManager: void dispatchStop()
io.flutter.plugins.googlemaps.TileOverlayController: void setFadeIn(boolean)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTitle(int)
kotlin.coroutines.ContinuationKt: void startCoroutine(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation)
com.google.firebase.database.tubesock.MessageBuilderFactory$TextBuilder: com.google.firebase.database.tubesock.WebSocketMessage toMessage()
androidx.appcompat.widget.AppCompatDrawableManager$1: AppCompatDrawableManager$1()
androidx.appcompat.app.AppCompatActivity: boolean supportShouldUpRecreateTask(android.content.Intent)
com.google.firebase.database.snapshot.Node$1: boolean isEmpty()
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
io.flutter.plugin.editing.TextInputPlugin: void lockPlatformViewInputConnection()
androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor)
com.google.zxing.common.BitArray: int hashCode()
androidx.appcompat.widget.ToolbarWidgetWrapper$2: void onAnimationCancel(android.view.View)
androidx.collection.LongSparseArray: java.lang.String toString()
androidx.appcompat.widget.ActionMenuView: boolean hideOverflowMenu()
io.flutter.plugin.common.StandardMessageCodec: StandardMessageCodec()
com.google.android.gms.maps.internal.zzby: void zza(android.os.Bundle,java.lang.String,android.os.Parcelable)
com.google.android.gms.internal.maps.zzb: zzb(java.lang.String)
com.google.android.gms.internal.location.zzar: zzar()
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.appcompat.widget.DropDownListView: void setPressedItem(android.view.View,int,float,float)
androidx.appcompat.view.menu.MenuBuilder: void setGroupCheckable(int,boolean,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumHeight()
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getContentDescription()
io.flutter.plugins.googlemaps.TileOverlayController: void clearTileCache()
io.flutter.embedding.android.FlutterView: void detachFromFlutterEngine()
androidx.appcompat.view.menu.StandardMenuPopup: void addMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void onCleared()
com.google.zxing.aztec.decoder.Decoder: int totalBitsInLayer(int,boolean)
com.google.firebase.database.core.SyncTree: java.util.List addEventRegistration(com.google.firebase.database.core.EventRegistration)
androidx.activity.result.ActivityResultRegistry: void bindRcKey(int,java.lang.String)
com.google.android.gms.common.api.ResolvableApiException: ResolvableApiException(com.google.android.gms.common.api.Status)
com.google.android.gms.internal.maps.zzv: int zzj()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean supportsAutoSizeText()
com.google.android.gms.common.api.zzb: java.lang.Object[] newArray(int)
com.google.android.gms.common.internal.GoogleApiAvailabilityCache: GoogleApiAvailabilityCache(com.google.android.gms.common.GoogleApiAvailabilityLight)
kotlinx.coroutines.channels.AbstractChannel$Itr: void setResult(java.lang.Object)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
androidx.appcompat.widget.ActionBarOverlayLayout: void onDetachedFromWindow()
androidx.collection.SimpleArrayMap: java.lang.String toString()
androidx.multidex.MultiDexExtractor$ExtractedDex: MultiDexExtractor$ExtractedDex(java.io.File,java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray)
kotlinx.coroutines.CoroutineExceptionHandlerKt: java.lang.Throwable handlerException(java.lang.Throwable,java.lang.Throwable)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setShowAsActionFlags(int)
com.google.android.gms.common.api.internal.GoogleApiManager: android.content.Context zab(com.google.android.gms.common.api.internal.GoogleApiManager)
androidx.appcompat.view.menu.MenuBuilder: void setGroupVisible(int,boolean)
com.journeyapps.barcodescanner.ViewfinderView: void onDraw(android.graphics.Canvas)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeLong(android.os.Parcel,int,long)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: void start()
io.flutter.plugins.googlemaps.PolygonController: void setFillColor(int)
androidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)
com.google.firebase.database.core.DatabaseConfig: void setAuthTokenProvider(com.google.firebase.database.core.TokenProvider)
kotlinx.coroutines.JobSupport: boolean addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode)
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBValueNode fixUp()
androidx.lifecycle.MutableLiveData: MutableLiveData()
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
android.support.v4.app.INotificationSideChannel$Stub$Proxy: android.os.IBinder asBinder()
com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: void putThread(com.google.common.util.concurrent.AbstractFuture$Waiter,java.lang.Thread)
com.google.android.gms.tasks.Tasks$zzc: void onFailure(java.lang.Exception)
androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable superGetDrawable(int)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent toMotionEvent(float,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch,boolean)
com.google.firebase.database.core.persistence.TrackedQueryManager$3: TrackedQueryManager$3()
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.loader.FlutterLoader: void ensureInitializationComplete(android.content.Context,java.lang.String[])
androidx.fragment.app.FragmentViewLifecycleOwner: boolean isInitialized()
net.touchcapture.qr.flutterqr.QRView: void toggleFlash(io.flutter.plugin.common.MethodChannel$Result)
androidx.window.layout.WindowMetricsCalculatorCompat: android.view.DisplayCutout getCutoutForDisplay(android.view.Display)
io.flutter.embedding.engine.FlutterEngineCache: FlutterEngineCache()
com.journeyapps.barcodescanner.camera.CameraManager: java.util.List getPreviewSizes(android.hardware.Camera$Parameters)
com.google.android.gms.location.LocationSettingsResult: LocationSettingsResult(com.google.android.gms.common.api.Status)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
com.google.firebase.database.core.ChildEventRegistration: java.lang.String toString()
kotlin.collections.EmptyList: int lastIndexOf(java.lang.Void)
androidx.core.view.OneShotPreDrawListener: void removeListener()
io.flutter.plugins.googlemaps.PolygonsController: PolygonsController(io.flutter.plugin.common.MethodChannel,float)
com.google.firebase.database.collection.RBTreeSortedMap$Builder: com.google.firebase.database.collection.LLRBNode buildBalancedTree(int,int)
com.google.firebase.database.OnDisconnect$2: void run()
com.google.firebase.FirebaseApp$UserUnlockReceiver: FirebaseApp$UserUnlockReceiver(android.content.Context)
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationEnd(android.view.View)
androidx.appcompat.widget.TooltipPopup: boolean isShowing()
kotlinx.coroutines.JobSupport: boolean handleJobException(java.lang.Throwable)
com.google.android.gms.internal.location.zzb: android.os.IBinder asBinder()
io.flutter.embedding.engine.loader.FlutterLoader: void startInitialization(android.content.Context)
com.google.firebase.database.tubesock.MessageBuilderFactory$TextBuilder$2: java.nio.charset.CharsetEncoder initialValue()
androidx.core.widget.NestedScrollView$AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.google.firebase.database.core.WriteTree: void addOverwrite(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node,java.lang.Long,boolean)
androidx.core.widget.NestedScrollView: int computeHorizontalScrollRange()
com.google.firebase.database.core.Repo: void interrupt()
kotlinx.coroutines.InvokeOnCancelling: InvokeOnCancelling(kotlin.jvm.functions.Function1)
com.google.android.gms.common.internal.zzf: int getState()
kotlinx.coroutines.scheduling.WorkQueue: long tryStealFrom(kotlinx.coroutines.scheduling.WorkQueue)
androidx.appcompat.widget.AppCompatSpinner: void onDetachedFromWindow()
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void show(int,int)
kotlinx.coroutines.CoroutineName$Key: CoroutineName$Key(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.ResourcesWrapper: float getFraction(int,int,int)
androidx.fragment.app.Fragment: void onOptionsMenuClosed(android.view.Menu)
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader()
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onNewIntent(android.content.Intent)
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
com.google.firebase.database.collection.ArraySortedMap: boolean isEmpty()
kotlin.collections.ArraysKt___ArraysJvmKt: java.util.List asList(java.lang.Object[])
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
kotlinx.coroutines.LazyStandaloneCoroutine: LazyStandaloneCoroutine(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2)
com.journeyapps.barcodescanner.DecoderThread: com.google.zxing.LuminanceSource createSource(com.journeyapps.barcodescanner.SourceData)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)
com.google.zxing.common.GlobalHistogramBinarizer: com.google.zxing.common.BitMatrix getBlackMatrix()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Comparable minOrNull(java.lang.Iterable)
io.flutter.embedding.engine.systemchannels.TextInputChannel: java.util.HashMap createEditingStateJSON(java.lang.String,int,int,int,int)
com.google.firebase.platforminfo.DefaultUserAgentPublisher: java.lang.String toUserAgent(java.util.Set)
com.google.android.gms.common.api.internal.zam: com.google.android.gms.common.ConnectionResult getConnectionResult()
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuPopup getPopup()
androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)
com.google.firebase.database.core.SyncTree$13: java.lang.Object call()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getMinimumHeight()
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
com.journeyapps.barcodescanner.BarcodeView: com.journeyapps.barcodescanner.BarcodeView$DecodeMode access$100(com.journeyapps.barcodescanner.BarcodeView)
androidx.cursoradapter.widget.CursorAdapter: CursorAdapter(android.content.Context,android.database.Cursor,boolean)
com.google.firebase.database.core.SyncTree$9: java.util.List call()
com.google.firebase.database.MutableData: MutableData(com.google.firebase.database.snapshot.Node)
androidx.fragment.app.FragmentStateManager: FragmentStateManager(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState)
com.lyokone.location.NotificationOptions: boolean getOnTapBringToFront()
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent obtainAccessibilityEvent(int,int)
com.google.android.gms.maps.model.Polyline: void setPoints(java.util.List)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: void writeToParcel(android.os.Parcel,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
com.journeyapps.barcodescanner.DecoratedBarcodeView: void setTorchListener(com.journeyapps.barcodescanner.DecoratedBarcodeView$TorchListener)
com.google.android.gms.internal.location.zzo: zzo(int,com.google.android.gms.internal.location.zzm,android.os.IBinder,android.os.IBinder)
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: android.graphics.drawable.Drawable newDrawable()
io.flutter.plugin.editing.FlutterTextUtils: int getOffsetBefore(java.lang.CharSequence,int)
androidx.appcompat.graphics.drawable.DrawableContainer: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int getAutoSizeTextType()
androidx.core.util.Preconditions: int checkArgumentNonnegative(int)
androidx.appcompat.widget.SearchView$6: SearchView$6(androidx.appcompat.widget.SearchView)
androidx.core.view.ViewCompat: java.lang.String[] getOnReceiveContentMimeTypes(android.view.View)
io.flutter.embedding.android.FlutterTextureView: boolean access$002(io.flutter.embedding.android.FlutterTextureView,boolean)
com.google.android.gms.common.internal.Objects: com.google.android.gms.common.internal.Objects$ToStringHelper toStringHelper(java.lang.Object)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setLiteModeEnabled(boolean)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getQuantityString(int,int)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion()
io.flutter.plugin.editing.TextInputPlugin$1: void setEditableSizeAndTransform(double,double,double[])
androidx.core.graphics.TypefaceCompatBaseImpl: long getUniqueKey(android.graphics.Typeface)
com.google.android.gms.maps.model.Circle: void setRadius(double)
androidx.fragment.app.FragmentManagerViewModel: boolean shouldDestroy(androidx.fragment.app.Fragment)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object tryResume(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void dispatchDraw(android.graphics.Canvas)
androidx.appcompat.widget.AppCompatDrawableManager: void onConfigurationChanged(android.content.Context)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.core.widget.NestedScrollView: void onNestedScrollInternal(int,int,int[])
com.google.android.gms.tasks.zzg: void cancel()
com.google.firebase.database.connection.util.RetryHelper: void signalSuccess()
com.google.android.gms.common.internal.BaseGmsClient: boolean zzc(com.google.android.gms.common.internal.BaseGmsClient)
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)
androidx.appcompat.widget.SearchView: void updateFocusedState()
androidx.core.app.NotificationCompatJellybean: android.os.Bundle getExtras(android.app.Notification)
com.google.firebase.database.core.Context: com.google.firebase.database.connection.ConnectionTokenProvider wrapTokenProvider(com.google.firebase.database.core.TokenProvider,java.util.concurrent.ScheduledExecutorService)
androidx.collection.ArrayMap$1: java.lang.Object colGetEntry(int,int)
androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)
com.journeyapps.barcodescanner.RawImageData: com.journeyapps.barcodescanner.RawImageData rotateCameraPreview(int)
androidx.appcompat.view.menu.CascadingMenuPopup$3: void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.collection.ArrayMap: androidx.collection.MapCollections getCollection()
androidx.activity.result.ActivityResultRegistry: void onRestoreInstanceState(android.os.Bundle)
androidx.core.provider.RequestExecutor: java.lang.Object submit(java.util.concurrent.ExecutorService,java.util.concurrent.Callable,int)
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver: void onChanged()
androidx.fragment.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)
androidx.appcompat.app.AppCompatDelegateImpl: void endOnGoingFadeAnimation()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.view.StandaloneActionMode: android.view.Menu getMenu()
androidx.core.widget.TextViewOnReceiveContentListener$Api16Impl: java.lang.CharSequence coerce(android.content.Context,android.content.ClipData$Item,int)
androidx.appcompat.widget.ForwardingListener: void onLongPress()
androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList inflateColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.google.android.gms.common.api.internal.zah: void zad(com.google.android.gms.common.api.internal.GoogleApiManager$zaa)
com.google.android.gms.internal.maps.zzae: boolean zza(com.google.android.gms.internal.maps.zzac)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Appendable joinTo(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
androidx.core.app.NotificationCompat$Builder: void setFlag(int,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: VectorDrawableCompat$VectorDrawableDelegateState(android.graphics.drawable.Drawable$ConstantState)
kotlin.collections.CollectionsKt___CollectionsKt: java.util.Set toSet(java.lang.Iterable)
androidx.window.embedding.EmbeddingCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
kotlin.collections.EmptyMap: java.util.Collection values()
androidx.collection.LongSparseArray: LongSparseArray()
com.google.android.gms.maps.internal.zzbe: zzbe()
com.google.firebase.database.core.WriteTree: void resetTree()
kotlinx.coroutines.internal.OpDescriptor: OpDescriptor()
io.flutter.embedding.engine.loader.FlutterLoader$1: io.flutter.embedding.engine.loader.FlutterLoader$InitResult call()
com.google.zxing.common.DecoderResult: int getStructuredAppendParity()
com.google.firebase.database.collection.LLRBEmptyNode: LLRBEmptyNode()
com.journeyapps.barcodescanner.camera.CameraManager: boolean isCameraRotated()
com.google.firebase.database.connection.PersistentConnectionImpl: void sendAuthHelper(boolean)
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
io.flutter.view.VsyncWaiter$DisplayListener: VsyncWaiter$DisplayListener(io.flutter.view.VsyncWaiter,android.hardware.display.DisplayManager)
com.google.firebase.database.snapshot.PriorityIndex: PriorityIndex()
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment findFragmentById(int)
com.google.android.gms.internal.maps.zzad: com.google.android.gms.internal.maps.zzac zzj(android.os.IBinder)
com.google.android.gms.tasks.TaskCompletionSource: void setException(java.lang.Exception)
com.google.zxing.common.PerspectiveTransform: PerspectiveTransform(float,float,float,float,float,float,float,float,float)
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuPresenter$Callback getCallback()
androidx.core.app.NotificationCompat$BigTextStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)
io.flutter.plugins.googlemaps.GoogleMapController: void setTiltGesturesEnabled(boolean)
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()
com.google.android.gms.internal.maps.zzj: void setZIndex(float)
androidx.core.content.res.TypedArrayUtils: int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
com.google.android.gms.maps.model.LatLngBounds: int hashCode()
com.google.zxing.common.HybridBinarizer: int[][] calculateBlackPoints(byte[],int,int,int,int)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet)
com.google.firebase.database.connection.WebsocketConnection: java.lang.Runnable nop()
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float)
androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()
androidx.lifecycle.SavedStateHandleController: void tryToAddRecreator(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)
com.google.firebase.database.OnDisconnect: com.google.android.gms.tasks.Task updateChildrenInternal(java.util.Map,com.google.firebase.database.DatabaseReference$CompletionListener)
com.google.android.gms.common.internal.GetServiceRequest: GetServiceRequest(int)
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl: boolean isPowerSaveMode(android.os.PowerManager)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void draw(android.graphics.Canvas)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.versionedparcelable.VersionedParcel: void writeInt(int,int)
com.google.android.gms.dynamite.zzc: zzc()
com.google.android.gms.common.wrappers.PackageManagerWrapper: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)
com.google.android.gms.location.FusedLocationProviderClient$zza: FusedLocationProviderClient$zza(com.google.android.gms.tasks.TaskCompletionSource)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$4$1: java.lang.Void invoke(java.lang.Throwable)
androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.appcompat.view.menu.MenuDialogHelper: void onClick(android.content.DialogInterface,int)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTitle(java.lang.CharSequence)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScreenReaderFocusable(boolean)
androidx.lifecycle.SingleGeneratedAdapterObserver: SingleGeneratedAdapterObserver(androidx.lifecycle.GeneratedAdapter)
androidx.appcompat.view.ActionMode: ActionMode()
com.google.android.gms.maps.UiSettings: void setCompassEnabled(boolean)
io.flutter.embedding.android.FlutterActivity: io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs()
com.google.firebase.components.CycleDetector: java.util.Set toGraph(java.util.List)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode removeOrNext()
io.flutter.plugins.imagepicker.ImagePickerDelegate: void handleChooseImageResult(int,android.content.Intent)
com.google.android.gms.common.internal.BaseGmsClient: android.content.Context getContext()
com.google.firebase.database.core.utilities.ImmutableTree: com.google.firebase.database.collection.ImmutableSortedMap getChildren()
com.google.android.gms.internal.maps.zzy: int zzj()
com.google.firebase.database.android.AndroidAuthTokenProvider: boolean isUnauthenticatedUsage(java.lang.Exception)
com.journeyapps.barcodescanner.CaptureManager: void finish()
com.google.android.gms.location.zzai: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate zzc()
androidx.lifecycle.LiveData: java.lang.Object getValue()
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
androidx.fragment.app.FragmentManagerState$1: androidx.fragment.app.FragmentManagerState[] newArray(int)
io.flutter.plugins.firebase.database.TransactionExecutor$1: void notImplemented()
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
kotlinx.coroutines.JobCancellationException: java.lang.Throwable fillInStackTrace()
io.flutter.embedding.android.FlutterSplashView$SavedState$1: io.flutter.embedding.android.FlutterSplashView$SavedState createFromParcel(android.os.Parcel)
androidx.core.view.ViewCompat$5: java.lang.Boolean frameworkGet(android.view.View)
com.google.android.gms.common.api.internal.zaz: void zaa(boolean,com.google.android.gms.common.api.Status)
com.google.firebase.database.collection.LLRBValueNode: java.lang.Object getValue()
com.google.android.gms.common.GooglePlayServicesUtilLight: boolean isPlayServicesPossiblyUpdating(android.content.Context,int)
com.journeyapps.barcodescanner.CameraPreview: void startPreviewIfReady()
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: int beginObjectHeader(android.os.Parcel)
androidx.fragment.app.LogWriter: void write(char[],int,int)
androidx.appcompat.widget.SearchView: void updateSubmitButton(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: VectorDrawableCompat$VPath()
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.google.firebase.database.core.view.QuerySpec: com.google.firebase.database.core.view.QuerySpec fromPathAndQueryObject(com.google.firebase.database.core.Path,java.util.Map)
androidx.appcompat.widget.AppCompatTextHelper: int getAutoSizeStepGranularity()
androidx.window.layout.DisplayCompatHelperApi17: DisplayCompatHelperApi17()
com.google.android.gms.auth.api.signin.GoogleSignInAccount: GoogleSignInAccount(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.lang.String,long,java.lang.String,java.util.List,java.lang.String,java.lang.String)
androidx.appcompat.view.menu.CascadingMenuPopup: void show()
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: android.view.WindowManager getWindowManager()
androidx.fragment.app.Fragment: void initLifecycle()
androidx.activity.result.ActivityResultLauncher: void launch(java.lang.Object)
com.journeyapps.barcodescanner.BarcodeView: BarcodeView(android.content.Context)
kotlinx.coroutines.CommonPool: java.util.concurrent.ExecutorService createPlainPool()
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$2: ImagePickerPlugin$MethodResultWrapper$2(io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper,java.lang.String,java.lang.String,java.lang.Object)
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions liteMode(boolean)
androidx.fragment.app.FragmentManager: void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationStart(android.animation.Animator)
io.flutter.embedding.android.FlutterActivity: android.content.Context getContext()
com.google.firebase.database.core.utilities.Utilities: java.lang.String sha1HexDigest(java.lang.String)
androidx.core.provider.FontRequest: java.lang.String getProviderAuthority()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: void preApi29Check()
androidx.core.provider.FontProvider$1: int compare(java.lang.Object,java.lang.Object)
com.google.firebase.database.core.ServerValues: com.google.firebase.database.snapshot.Node resolveDeferredValueSnapshot(com.google.firebase.database.snapshot.Node,com.google.firebase.database.snapshot.Node,java.util.Map)
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)
kotlinx.coroutines.CancellableContinuationImpl: boolean tryResume()
com.google.zxing.Result: Result(java.lang.String,byte[],com.google.zxing.ResultPoint[],com.google.zxing.BarcodeFormat)
com.journeyapps.barcodescanner.SourceData: void setPreviewMirrored(boolean)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)
androidx.appcompat.view.menu.MenuItemImpl$1: void onActionProviderVisibilityChanged(boolean)
androidx.collection.MapCollections$KeySet: int hashCode()
androidx.appcompat.widget.Toolbar: void removeChildrenForExpandedActionView()
com.google.firebase.database.collection.RBTreeSortedMap: com.google.firebase.database.collection.LLRBNode getNode(java.lang.Object)
com.google.firebase.database.core.view.View: com.google.firebase.database.core.view.QuerySpec getQuery()
com.google.zxing.common.reedsolomon.GenericGFPoly: int evaluateAt(int)
com.google.firebase.database.snapshot.LeafNode$LeafType: LeafNode$LeafType(java.lang.String,int)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.MouseCursorChannel getMouseCursorChannel()
kotlin.jvm.JvmClassMappingKt: kotlin.reflect.KClass getKotlinClass(java.lang.Class)
kotlinx.coroutines.BlockingEventLoop: BlockingEventLoop(java.lang.Thread)
io.flutter.plugin.platform.PlatformPlugin$1: void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType)
com.google.android.gms.maps.model.BitmapDescriptorFactory: com.google.android.gms.maps.model.BitmapDescriptor fromAsset(java.lang.String)
com.google.android.gms.common.util.ClientLibraryUtils: boolean zzc(android.content.Context,java.lang.String)
androidx.core.view.MenuItemCompat: android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider)
androidx.fragment.app.FragmentManager: android.view.LayoutInflater$Factory2 getLayoutInflaterFactory()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder: java.lang.String parseInformation()
com.google.firebase.database.connection.Connection: void sendRequest(java.util.Map,boolean)
androidx.fragment.app.FragmentManager$2: void onComplete(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
androidx.core.widget.NestedScrollView: void onStopNestedScroll(android.view.View,int)
com.journeyapps.barcodescanner.BarcodeView: void decodeSingle(com.journeyapps.barcodescanner.BarcodeCallback)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object)
androidx.core.content.res.ResourcesCompat$FontCallback$2: ResourcesCompat$FontCallback$2(androidx.core.content.res.ResourcesCompat$FontCallback,int)
com.google.firebase.database.core.view.Change: com.google.firebase.database.snapshot.ChildKey getChildKey()
com.google.firebase.components.ComponentDiscovery: com.google.firebase.components.ComponentRegistrar instantiate(java.lang.String)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(java.lang.CharSequence)
com.google.firebase.database.DatabaseError: com.google.firebase.database.DatabaseError fromStatus(java.lang.String,java.lang.String)
androidx.lifecycle.ViewModelProvider: ViewModelProvider(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)
com.google.android.gms.maps.model.TileOverlayOptions: com.google.android.gms.maps.model.TileOverlayOptions zIndex(float)
io.flutter.plugins.flutterexifrotation.FlutterExifRotationPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firebase.database.DatabaseReference: com.google.firebase.database.DatabaseReference child(java.lang.String)
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.core.provider.CallbackWithHandler: void onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult)
com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder: int checkWeight(int)
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
kotlin.jvm.internal.ClassReference$Companion: java.lang.String getClassSimpleName(java.lang.Class)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.window.layout.SidecarWindowBackend$Companion: boolean isSidecarVersionSupported(androidx.window.core.Version)
androidx.window.core.Bounds: android.graphics.Rect toRect()
io.flutter.plugin.editing.TextEditingDelta: void setDeltas(java.lang.CharSequence,java.lang.CharSequence,int,int)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntRange until(int,int)
androidx.fragment.app.FragmentActivity: void onPause()
androidx.appcompat.widget.SuggestionsAdapter: void updateSpinnerState(android.database.Cursor)
androidx.appcompat.widget.SearchView$SavedState: java.lang.String toString()
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object resumedState(kotlinx.coroutines.NotCompleted,java.lang.Object,int,kotlin.jvm.functions.Function1,java.lang.Object)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromePreferredOrientations(int)
com.google.android.gms.maps.zzaa: java.lang.Object[] newArray(int)
com.journeyapps.barcodescanner.camera.AutoFocusManager: void focus()
com.google.firebase.database.snapshot.NodeUtilities: com.google.firebase.database.snapshot.Node NodeFromJSON(java.lang.Object,com.google.firebase.database.snapshot.Node)
com.google.firebase.database.core.view.EventGenerator$1: int compare(com.google.firebase.database.core.view.Change,com.google.firebase.database.core.view.Change)
io.flutter.embedding.android.FlutterActivity: void release()
com.google.firebase.database.core.utilities.NodeSizeEstimator: long estimateLeafNodeSize(com.google.firebase.database.snapshot.LeafNode)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1(androidx.window.layout.SidecarCompat,android.app.Activity)
com.google.firebase.database.core.view.QueryParams: boolean hasStart()
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$3200(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setChangingConfigurations(int)
com.google.firebase.database.snapshot.DeferredValueNode: java.lang.Object getValue()
androidx.appcompat.view.SupportMenuInflater$MenuState: void readGroup(android.util.AttributeSet)
androidx.versionedparcelable.VersionedParcel: void writeBoolean(boolean,int)
androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int)
androidx.core.provider.RequestExecutor$ReplyRunnable: RequestExecutor$ReplyRunnable(android.os.Handler,java.util.concurrent.Callable,androidx.core.util.Consumer)
androidx.window.embedding.ExtensionEmbeddingBackend: void access$setGlobalInstance$cp(androidx.window.embedding.ExtensionEmbeddingBackend)
androidx.core.provider.RequestExecutor$DefaultThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.MarkerOptions title(java.lang.String)
androidx.fragment.app.SpecialEffectsController$Operation: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getLifecycleImpact()
com.google.common.base.Throwables: java.lang.reflect.Method getGetMethod()
com.google.android.gms.maps.model.RoundCap: java.lang.String toString()
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.view.TextureRegistry$SurfaceTextureEntry registerSurfaceTexture(android.graphics.SurfaceTexture)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setTintList(android.content.res.ColorStateList)
androidx.appcompat.view.StandaloneActionMode: void setCustomView(android.view.View)
androidx.appcompat.app.TwilightManager: boolean isStateValid()
com.google.android.gms.signin.SignInOptions: boolean isIdTokenRequested()
com.google.zxing.oned.Code128Reader: int[] findStartPattern(com.google.zxing.common.BitArray)
com.google.firebase.database.collection.ArraySortedMap: java.util.Iterator iterator(int,boolean)
kotlinx.coroutines.AbstractCoroutine: kotlin.coroutines.CoroutineContext getCoroutineContext()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.Size access$002(com.journeyapps.barcodescanner.CameraPreview,com.journeyapps.barcodescanner.Size)
com.baseflow.geolocator.location.GeolocationManager: void getLastKnownPosition(android.content.Context,boolean,com.baseflow.geolocator.location.PositionChangedCallback,com.baseflow.geolocator.errors.ErrorCallback)
androidx.exifinterface.media.ExifInterface: android.util.Pair guessDataFormat(java.lang.String)
com.google.zxing.pdf417.decoder.DetectionResult: DetectionResult(com.google.zxing.pdf417.decoder.BarcodeMetadata,com.google.zxing.pdf417.decoder.BoundingBox)
io.flutter.embedding.android.FlutterSplashView: FlutterSplashView(android.content.Context,android.util.AttributeSet,int)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: java.lang.Object getProvider()
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: GradientColorInflaterCompat$ColorStops(int,int)
io.flutter.view.VsyncWaiter$1: VsyncWaiter$1(io.flutter.view.VsyncWaiter)
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: com.google.android.gms.tasks.Task initializeApp(java.util.Map)
com.google.android.gms.maps.model.PolylineOptions: boolean isVisible()
androidx.window.core.Bounds: int getTop()
com.google.android.gms.common.api.internal.BasePendingResult: void zaa(com.google.android.gms.common.api.Result)
io.flutter.embedding.android.DrawableSplashScreen: void transitionToFlutter(java.lang.Runnable)
com.google.android.gms.common.api.internal.BasePendingResult: BasePendingResult(com.google.android.gms.common.api.GoogleApiClient)
com.google.firebase.database.core.persistence.CachePolicy$1: boolean shouldCheckCacheSize(long)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.widget.AutoScrollHelper: void requestStop()
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: void onClick(android.view.View)
com.journeyapps.barcodescanner.CameraPreview: android.graphics.Rect getFramingRect()
com.google.android.gms.maps.GoogleMapOptions: GoogleMapOptions()
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: com.google.firebase.components.Component component()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIcon(int)
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock: void onMessage(com.google.firebase.database.tubesock.WebSocketMessage)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainFreezeMethod(java.lang.Class)
com.lyokone.location.FlutterLocation: void startRequestingLocation()
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: int getCodewordBucketNumber(int)
androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable newDrawable()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getTargetFragment()
androidx.fragment.app.FragmentTransition: void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean)
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation: void onStart()
com.google.firebase.FirebaseOptions$Builder: com.google.firebase.FirebaseOptions$Builder setGcmSenderId(java.lang.String)
com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: AbstractFuture$SafeAtomicHelper(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater)
kotlin.collections.EmptyMap: java.lang.Void get(java.lang.Object)
com.google.firebase.database.core.Path: com.google.firebase.database.core.Path getEmptyPath()
com.google.firebase.database.core.Repo: com.google.firebase.database.core.Context access$1000(com.google.firebase.database.core.Repo)
androidx.activity.ComponentActivity: void access$001(androidx.activity.ComponentActivity)
kotlin.UNINITIALIZED_VALUE: UNINITIALIZED_VALUE()
kotlinx.coroutines.CompletedContinuation: void invokeHandlers(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Throwable)
com.google.android.gms.maps.GoogleMap: void setOnCameraMoveListener(com.google.android.gms.maps.GoogleMap$OnCameraMoveListener)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
com.google.android.gms.common.api.internal.zza: android.os.Bundle zzb(com.google.android.gms.common.api.internal.zza)
com.google.zxing.qrcode.detector.FinderPatternFinder: com.google.zxing.qrcode.detector.FinderPattern[] selectBestPatterns()
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: void setMetering(android.hardware.Camera$Parameters)
kotlinx.coroutines.JobSupport: void promoteEmptyToNodeList(kotlinx.coroutines.Empty)
com.google.android.gms.common.internal.AccountAccessor: android.accounts.Account getAccountBinderSafe(com.google.android.gms.common.internal.IAccountAccessor)
io.flutter.view.AccessibilityBridge: boolean isAccessibilityEnabled()
com.google.android.gms.common.wrappers.Wrappers: com.google.android.gms.common.wrappers.PackageManagerWrapper zzi(android.content.Context)
androidx.appcompat.widget.LinearLayoutCompat: void forceUniformWidth(int,int)
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent: KeyEventChannel$FlutterKeyEvent(android.view.KeyEvent,java.lang.Character)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2102(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
com.journeyapps.barcodescanner.DecoratedBarcodeView: com.journeyapps.barcodescanner.camera.CameraSettings getCameraSettings()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void updateEditingStateWithDeltas(int,java.util.ArrayList)
com.google.firebase.database.snapshot.ChildKey: com.google.firebase.database.snapshot.ChildKey getMinName()
com.google.common.util.concurrent.ThreadFactoryBuilder$1: java.lang.Thread newThread(java.lang.Runnable)
androidx.window.R$styleable: R$styleable()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float)
com.google.android.gms.maps.internal.zzf: void zza(com.google.android.gms.dynamic.IObjectWrapper,int)
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuPopup createPopup()
com.baseflow.geolocator.permission.PermissionManager: boolean hasBackgroundAccess(java.lang.String[],int[])
io.flutter.plugin.editing.ListenableEditingState: void removeEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher)
androidx.fragment.app.FragmentManager: androidx.fragment.app.Fragment getViewFragment(android.view.View)
com.google.firebase.database.connection.PersistentConnectionImpl: java.util.Collection removeListens(java.util.List)
kotlinx.coroutines.internal.SystemPropsKt: java.lang.String systemProp(java.lang.String)
com.google.android.gms.internal.maps.zzj: void setCenter(com.google.android.gms.maps.model.LatLng)
com.google.zxing.client.android.InactivityTimer: void unregisterReceiver()
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setFilterBitmap(boolean)
kotlinx.coroutines.JobKt: void ensureActive(kotlinx.coroutines.Job)
com.google.android.gms.internal.maps.zzae: zzae(android.os.IBinder)
com.google.firebase.database.tubesock.WebSocket: java.net.Socket createSocket()
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: SingleViewPresentation$PresentationState()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Object single(java.util.List)
com.google.zxing.qrcode.decoder.Version$ECB: int getCount()
com.google.firebase.database.core.Repo$4$1: Repo$4$1(com.google.firebase.database.core.Repo$4,com.google.firebase.database.core.view.QuerySpec,com.google.firebase.database.core.SyncTree$CompletionListener)
androidx.window.core.Version: java.math.BigInteger getBigInteger()
io.flutter.embedding.android.FlutterActivity: void onFlutterUiDisplayed()
com.google.firebase.database.Query: com.google.firebase.database.Query endAt(double,java.lang.String)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setNumericShortcut(char)
io.flutter.plugins.googlemaps.Convert: java.lang.Object circleIdToJson(java.lang.String)
com.google.android.gms.location.LocationServices: com.google.android.gms.location.SettingsClient getSettingsClient(android.content.Context)
androidx.exifinterface.media.ExifInterface: void setThumbnailData(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
androidx.appcompat.app.AlertController: void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable)
com.google.zxing.client.android.DecodeFormatManager: java.util.Set parseDecodeFormats(android.content.Intent)
androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task addLast(kotlinx.coroutines.scheduling.Task)
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions scrollGesturesEnabled(boolean)
com.google.android.gms.common.internal.ClientSettings: android.accounts.Account getAccount()
com.google.firebase.database.core.operation.OperationSource$Source: com.google.firebase.database.core.operation.OperationSource$Source valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
com.google.firebase.database.core.SyncPoint: boolean hasCompleteView()
com.google.zxing.oned.rss.expanded.decoders.DecodedChar: char getValue()
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: android.view.View getWrappedView()
io.flutter.plugins.googlemaps.MarkerBuilder: void setAlpha(float)
com.google.firebase.database.core.view.ViewCache: com.google.firebase.database.core.view.CacheNode getEventCache()
com.google.firebase.database.core.persistence.TrackedQueryManager: void ensureCompleteTrackedQuery(com.google.firebase.database.core.Path)
com.google.firebase.database.core.view.Change: com.google.firebase.database.core.view.Change childRemovedChange(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node)
com.google.firebase.database.core.persistence.TrackedQueryManager: void access$100(com.google.firebase.database.core.persistence.TrackedQueryManager,com.google.firebase.database.core.persistence.TrackedQuery)
androidx.appcompat.widget.ActionBarContainer: void onFinishInflate()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setShortcut(char,char,int,int)
kotlinx.coroutines.DefaultExecutor: void run()
androidx.appcompat.widget.AppCompatTextView: void onTextChanged(java.lang.CharSequence,int,int,int)
com.google.firebase.database.connection.Connection: void onDisconnect(boolean)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean onLayoutDirectionChanged(int)
com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnCompleteListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCompleteListener)
androidx.appcompat.widget.ActionBarOverlayLayout: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.fragment.app.FragmentManager: void endAnimatingAwayFragments()
androidx.appcompat.view.menu.StandardMenuPopup: boolean onKey(android.view.View,int,android.view.KeyEvent)
com.google.firebase.database.connection.WebsocketConnection: void appendFrame(java.lang.String)
androidx.window.embedding.ActivityFilter: ActivityFilter(android.content.ComponentName,java.lang.String)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedShort(int)
com.google.zxing.oned.rss.FinderPattern: int getValue()
io.flutter.plugins.googlemaps.GoogleMapController: void setZoomControlsEnabled(boolean)
androidx.appcompat.view.menu.MenuDialogHelper: void show(android.os.IBinder)
androidx.appcompat.widget.ListPopupWindow: int getHorizontalOffset()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
androidx.core.view.inputmethod.InputConnectionCompat: android.view.inputmethod.InputConnection createWrapper(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener)
androidx.fragment.app.FragmentManager: void popBackStack(int,int)
androidx.appcompat.app.AppCompatDelegateImpl: int sanitizeWindowFeatureId(int)
androidx.appcompat.app.AlertController$AlertParams: void apply(androidx.appcompat.app.AlertController)
androidx.versionedparcelable.VersionedParcel: java.lang.reflect.Method getWriteMethod(java.lang.Class)
kotlinx.coroutines.CompletedWithCancellation: boolean equals(java.lang.Object)
com.google.android.gms.tasks.zzl: zzl(com.google.android.gms.tasks.zzk,com.google.android.gms.tasks.Task)
androidx.appcompat.view.menu.MenuPopupHelper: void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void synchronizeToNativeViewHierarchy(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.fragment.app.FragmentManager$11: FragmentManager$11(androidx.fragment.app.FragmentManager)
io.flutter.plugin.platform.PlatformViewsController: void attachTextInputPlugin(io.flutter.plugin.editing.TextInputPlugin)
com.google.firebase.database.core.RepoManager: void resume(com.google.firebase.database.core.Repo)
com.google.firebase.database.connection.Connection: Connection(com.google.firebase.database.connection.ConnectionContext,com.google.firebase.database.connection.HostInfo,java.lang.String,com.google.firebase.database.connection.Connection$Delegate,java.lang.String,java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAlpha(int)
androidx.appcompat.view.menu.MenuBuilder: void setQwertyMode(boolean)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readInt()
kotlin.collections.EmptySet: java.util.Iterator iterator()
androidx.appcompat.widget.ContentFrameLayout: void setDecorPadding(int,int,int,int)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatDrawableManager: void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[])
com.google.android.gms.maps.model.MapStyleOptions: void writeToParcel(android.os.Parcel,int)
com.journeyapps.barcodescanner.CameraPreview: void startCameraPreview(com.journeyapps.barcodescanner.camera.CameraSurface)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable mutate()
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)
com.google.firebase.database.FirebaseDatabase: void setLogLevel(com.google.firebase.database.Logger$Level)
kotlin.collections.EmptyMap: java.lang.Object remove(java.lang.Object)
io.flutter.plugin.common.StandardMethodCodec: StandardMethodCodec(io.flutter.plugin.common.StandardMessageCodec)
androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)
androidx.core.widget.NestedScrollView: boolean dispatchNestedFling(float,float,boolean)
com.google.android.gms.common.api.GoogleApiClient: GoogleApiClient()
androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)
kotlinx.coroutines.internal.StackTraceRecoveryKt: int frameIndex(java.lang.StackTraceElement[],java.lang.String)
com.google.android.gms.common.api.internal.zak: void onCreate(android.os.Bundle)
com.google.zxing.datamatrix.decoder.Version$ECBlocks: com.google.zxing.datamatrix.decoder.Version$ECB[] getECBlocks()
com.google.android.gms.signin.internal.zai: zai(com.google.android.gms.common.internal.ResolveAccountRequest)
com.google.firebase.database.tubesock.WebSocket: void onCloseOpReceived()
com.journeyapps.barcodescanner.camera.DisplayConfiguration: void setPreviewScalingStrategy(com.journeyapps.barcodescanner.camera.PreviewScalingStrategy)
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.FragmentState$1: FragmentState$1()
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.ConnectionResult zzd(com.google.android.gms.common.internal.BaseGmsClient)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onNewIntent(android.content.Intent)
io.flutter.embedding.engine.systemchannels.RestorationChannel: void setRestorationData(byte[])
com.google.zxing.aztec.AztecReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map)
com.journeyapps.barcodescanner.CaptureManager$2: void previewSized()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: AnimatedStateListDrawableCompat$AnimationDrawableTransition(android.graphics.drawable.AnimationDrawable,boolean,boolean)
com.google.common.util.concurrent.Uninterruptibles: java.lang.Object getUninterruptibly(java.util.concurrent.Future)
androidx.appcompat.app.AppCompatDelegateImpl: void reopenMenu(boolean)
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.PolylineOptions width(float)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read()
androidx.core.graphics.TypefaceCompatApi28Impl: TypefaceCompatApi28Impl()
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName)
com.baseflow.geolocator.location.BackgroundNotification: void updateNotification(com.baseflow.geolocator.location.ForegroundNotificationOptions,boolean)
com.google.firebase.database.collection.ArraySortedMap: com.google.firebase.database.collection.ArraySortedMap fromMap(java.util.Map,java.util.Comparator)
com.google.android.gms.maps.zzc: void zzd(com.google.android.gms.internal.maps.zzt)
io.flutter.FlutterInjector$Builder: io.flutter.FlutterInjector build()
com.google.zxing.qrcode.decoder.Decoder: void correctErrors(byte[],int)
com.google.firebase.database.core.Path: Path(com.google.firebase.database.snapshot.ChildKey[])
com.google.android.gms.common.api.AvailabilityException: java.lang.String getMessage()
com.google.android.gms.maps.model.MarkerOptions: float getAnchorV()
com.google.firebase.database.core.Path: com.google.firebase.database.snapshot.ChildKey[] access$200(com.google.firebase.database.core.Path)
kotlinx.coroutines.JobSupport: void cancel(java.util.concurrent.CancellationException)
kotlinx.coroutines.JobSupport$Finishing: java.util.List sealLocked(java.lang.Throwable)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)
androidx.arch.core.executor.ArchTaskExecutor: void postToMainThread(java.lang.Runnable)
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: android.widget.ListView getListView()
androidx.fragment.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)
androidx.window.core.Version: int hashCode()
androidx.appcompat.widget.ResourcesWrapper: android.content.res.XmlResourceParser getXml(int)
io.flutter.plugin.platform.PlatformViewsController: void validateVirtualDisplayDimensions(int,int)
io.flutter.plugin.platform.VirtualDisplayController: VirtualDisplayController(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,android.hardware.display.VirtualDisplay,io.flutter.plugin.platform.PlatformViewFactory,android.view.Surface,io.flutter.view.TextureRegistry$SurfaceTextureEntry,android.view.View$OnFocusChangeListener,int,java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable getCurrent()
androidx.appcompat.widget.SearchView$1: SearchView$1(androidx.appcompat.widget.SearchView)
io.flutter.plugins.googlemaps.MarkerController: void remove()
androidx.fragment.app.DialogFragment$5: DialogFragment$5(androidx.fragment.app.DialogFragment,androidx.fragment.app.FragmentContainer)
com.google.android.gms.maps.model.TileOverlay: TileOverlay(com.google.android.gms.internal.maps.zzac)
com.google.firebase.database.core.Path: com.google.firebase.database.snapshot.ChildKey getFront()
androidx.appcompat.widget.SuggestionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
kotlin.ResultKt: void throwOnFailure(java.lang.Object)
androidx.activity.OnBackPressedDispatcher: OnBackPressedDispatcher(java.lang.Runnable)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.graphics.PorterDuff$Mode getIconTintMode()
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.database.core.Repo$21: Repo$21(com.google.firebase.database.core.Repo,com.google.firebase.database.core.Repo$TransactionData,com.google.firebase.database.DatabaseError,com.google.firebase.database.DataSnapshot)
androidx.fragment.app.FragmentAnim$2$1: void run()
com.google.firebase.database.FirebaseDatabase: com.google.firebase.database.FirebaseDatabase getInstance(com.google.firebase.FirebaseApp,java.lang.String)
com.baseflow.geolocator.StreamHandlerImpl: void setForegroundLocationService(com.baseflow.geolocator.GeolocatorLocationService)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable()
com.google.zxing.pdf417.decoder.ec.ErrorCorrection: com.google.zxing.pdf417.decoder.ec.ModulusPoly[] runEuclideanAlgorithm(com.google.zxing.pdf417.decoder.ec.ModulusPoly,com.google.zxing.pdf417.decoder.ec.ModulusPoly,int)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedByte()
io.flutter.plugin.editing.TextInputPlugin: void notifyValueChanged(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.zxing.pdf417.decoder.BarcodeMetadata: BarcodeMetadata(int,int,int,int)
kotlin.text.StringsKt__StringsKt: int indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean)
androidx.window.layout.SidecarWindowBackend: void setWindowExtension(androidx.window.layout.ExtensionInterfaceCompat)
kotlin.text.StringsKt__StringsKt: boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
androidx.appcompat.widget.ActionMenuPresenter: boolean dismissPopupMenus()
androidx.core.provider.FontRequestWorker$4: void accept(java.lang.Object)
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper: ImagePickerPlugin$MethodResultWrapper(io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.app.AlertController$AlertParams$4: AlertController$AlertParams$4(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$SemanticsNode access$6600(io.flutter.view.AccessibilityBridge,int)
kotlinx.coroutines.channels.Closed: void completeResumeSend()
com.google.firebase.database.snapshot.ChildrenNode: int compareTo(java.lang.Object)
com.journeyapps.barcodescanner.camera.CameraManager: boolean isTorchOn()
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem add(int,int,int,int)
com.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions)
com.google.firebase.database.snapshot.KeyIndex: boolean equals(java.lang.Object)
com.google.android.gms.maps.model.MarkerOptions: java.lang.String getSnippet()
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver: void onChanged()
com.google.android.gms.common.api.internal.zag: void zaa(com.google.android.gms.common.api.Status)
androidx.appcompat.app.WindowDecorActionBar: void dispatchMenuVisibilityChanged(boolean)
androidx.appcompat.view.menu.ActionMenuItem: boolean expandActionView()
androidx.fragment.app.Fragment: boolean performOptionsItemSelected(android.view.MenuItem)
kotlinx.coroutines.JobSupport: java.lang.Throwable createCauseException(java.lang.Object)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
androidx.multidex.MultiDexExtractor: void clearDexDir()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void toPath(android.graphics.Path)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setInitialMarkers(java.lang.Object)
com.google.zxing.pdf417.detector.PDF417DetectorResult: PDF417DetectorResult(com.google.zxing.common.BitMatrix,java.util.List)
com.google.firebase.database.core.utilities.encoding.CustomClassMapper$BeanMapper: void addProperty(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: java.lang.CharSequence getHintText()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearColorFilter()
androidx.appcompat.widget.ActionBarContainer: void onLayout(boolean,int,int,int,int)
androidx.appcompat.app.AppCompatDelegateImpl: void setTheme(int)
com.journeyapps.barcodescanner.CameraPreview$2: void surfaceCreated(android.view.SurfaceHolder)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
io.flutter.embedding.android.FlutterActivity: void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
androidx.core.provider.FontsContractCompat$FontInfo: int getWeight()
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
com.google.android.gms.maps.MapView$zzb: void getMapAsync(com.google.android.gms.maps.OnMapReadyCallback)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
kotlinx.coroutines.internal.OpDescriptor: boolean isEarlierThan(kotlinx.coroutines.internal.OpDescriptor)
com.google.android.gms.common.internal.zam: java.lang.Object createFromParcel(android.os.Parcel)
androidx.fragment.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
androidx.appcompat.view.menu.MenuItemImpl: boolean isChecked()
com.google.zxing.pdf417.decoder.PDF417CodewordDecoder: int getDecodedCodewordValue(int[])
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(java.lang.CharSequence)
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel)
com.google.zxing.oned.rss.expanded.decoders.AI01392xDecoder: AI01392xDecoder(com.google.zxing.common.BitArray)
com.google.android.gms.maps.internal.zzbx: void setRotateGesturesEnabled(boolean)
com.google.firebase.database.core.UserWriteRecord: UserWriteRecord(long,com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node,boolean)
com.google.firebase.database.core.SyncTree: com.google.firebase.database.core.Tag tagForQuery(com.google.firebase.database.core.view.QuerySpec)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: void onGlobalFocusChanged(android.view.View,android.view.View)
androidx.appcompat.widget.SearchView: void onRestoreInstanceState(android.os.Parcelable)
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
com.google.firebase.database.core.SyncTree$8: SyncTree$8(com.google.firebase.database.core.SyncTree,com.google.firebase.database.core.Tag)
io.flutter.plugin.platform.PlatformViewRegistryImpl: boolean registerViewFactory(java.lang.String,io.flutter.plugin.platform.PlatformViewFactory)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void zab(com.google.android.gms.common.api.internal.GoogleApiManager$zaa,com.google.android.gms.common.api.internal.GoogleApiManager$zac)
com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: boolean casListeners(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener,com.google.common.util.concurrent.AbstractFuture$Listener)
com.google.android.gms.maps.model.CircleOptions: com.google.android.gms.maps.model.CircleOptions zIndex(float)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.DefaultSpecialEffectsController: void retainMatchingViews(androidx.collection.ArrayMap,java.util.Collection)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: BasicMessageChannel$IncomingMessageHandler$1(io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: java.lang.Object getPollResult()
com.google.android.gms.common.internal.zab: java.lang.Object[] newArray(int)
androidx.collection.MapCollections$ValuesCollection: int size()
kotlinx.coroutines.scheduling.WorkQueue: boolean pollTo(kotlinx.coroutines.scheduling.GlobalQueue)
androidx.fragment.app.FragmentManagerViewModel: void onCleared()
com.google.android.gms.common.api.internal.zao: zao()
com.google.android.gms.maps.model.Marker: Marker(com.google.android.gms.internal.maps.zzt)
androidx.fragment.app.Fragment: void performOptionsMenuClosed(android.view.Menu)
com.google.zxing.pdf417.decoder.Codeword: int getValue()
kotlin.sequences.ConstrainedOnceSequence: java.util.Iterator iterator()
com.google.firebase.FirebaseCommonRegistrar: java.util.List getComponents()
androidx.lifecycle.ReportFragment: void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
androidx.appcompat.widget.ForwardingListener: void clearCallbacks()
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
io.flutter.embedding.android.FlutterTextureView: void access$400(io.flutter.embedding.android.FlutterTextureView)
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt: kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation)
io.flutter.plugins.googlemaps.MarkerController: MarkerController(com.google.android.gms.maps.model.Marker,boolean)
androidx.exifinterface.media.ExifInterface: void saveJpegAttributes(java.io.InputStream,java.io.OutputStream)
com.google.firebase.database.core.persistence.TrackedQueryManager: boolean hasActiveDefaultQuery(com.google.firebase.database.core.Path)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.google.firebase.database.core.UserWriteRecord: java.lang.String toString()
io.flutter.plugins.imagepicker.ImagePickerDelegate: void handleMultiImageResult(java.util.ArrayList,boolean)
androidx.fragment.app.FragmentContainerView: void removeViewsInLayout(int,int)
com.google.firebase.database.core.SyncTree$ListenContainer: boolean shouldIncludeCompoundHash()
androidx.appcompat.view.menu.MenuPopup: androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int getFetchStrategy()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
androidx.core.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromContentProvider()
com.google.android.gms.common.internal.zai: zai()
com.google.firebase.database.snapshot.LeafNode: LeafNode(com.google.firebase.database.snapshot.Node)
androidx.tracing.Trace: void beginSection(java.lang.String)
kotlinx.coroutines.CoroutineId: long getId()
kotlinx.coroutines.CancellableContinuationImpl: void multipleHandlersError(kotlin.jvm.functions.Function1,java.lang.Object)
com.google.android.gms.maps.zzac: void zza(com.google.android.gms.maps.internal.IGoogleMapDelegate)
com.google.firebase.database.core.view.filter.LimitedFilter: LimitedFilter(com.google.firebase.database.core.view.QueryParams)
com.journeyapps.barcodescanner.CameraPreview: void setTorch(boolean)
com.google.firebase.database.tubesock.WebSocket: java.lang.Thread getInnerThread()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long)
androidx.appcompat.app.AppCompatActivity: boolean onSupportNavigateUp()
androidx.core.widget.TextViewCompat: void setFirstBaselineToTopHeight(android.widget.TextView,int)
com.google.android.gms.internal.maps.zzv: void setInfoWindowAnchor(float,float)
com.google.android.gms.common.ErrorDialogFragment: void show(android.app.FragmentManager,java.lang.String)
io.flutter.embedding.engine.FlutterEngine: FlutterEngine(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,io.flutter.plugin.platform.PlatformViewsController,java.lang.String[],boolean,boolean)
androidx.appcompat.widget.SearchView: void onSearchClicked()
com.google.firebase.database.android.SqlPersistenceStorageEngine: byte[] joinBytes(java.util.List)
com.google.firebase.database.snapshot.BooleanNode: java.lang.Object getValue()
com.google.android.gms.common.internal.GmsClient: java.util.Set zaa(java.util.Set)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
kotlin.ranges.IntRange: int hashCode()
com.google.zxing.datamatrix.decoder.Version$ECB: Version$ECB(int,int,com.google.zxing.datamatrix.decoder.Version$1)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
androidx.fragment.app.Fragment$2: Fragment$2(androidx.fragment.app.Fragment)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.gms.common.api.internal.zak: void onStart()
androidx.appcompat.app.AppCompatDelegateImpl: void onMenuOpened(int)
androidx.core.view.ViewParentCompat: void onStopNestedScroll(android.view.ViewParent,android.view.View,int)
androidx.core.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[])
kotlin.collections.EmptyList: boolean remove(java.lang.Object)
io.flutter.view.AccessibilityBridge$SemanticsNode: float access$5200(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest: PlatformViewsChannel$PlatformViewResizeRequest(int,double,double)
com.google.android.gms.common.api.GoogleApiClient: android.os.Looper getLooper()
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: void finishHashing()
androidx.exifinterface.media.ExifInterface: void printAttributes()
androidx.appcompat.widget.AppCompatReceiveContentHelper$1: AppCompatReceiveContentHelper$1(android.view.View)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void onWindowFocusChanged(boolean)
androidx.core.widget.NestedScrollView: void onStopNestedScroll(android.view.View)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void onFocusChanged(boolean,int,android.graphics.Rect)
androidx.lifecycle.Lifecycling$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void grantUriPermissions(android.content.Intent,android.net.Uri)
io.flutter.plugin.platform.PlatformViewsController: int access$500(io.flutter.plugin.platform.PlatformViewsController,double)
androidx.fragment.app.LogWriter: LogWriter(java.lang.String)
com.google.android.gms.common.internal.BaseGmsClient$zzg: BaseGmsClient$zzg(com.google.android.gms.common.internal.BaseGmsClient,int,android.os.Bundle)
androidx.appcompat.graphics.drawable.DrawableContainer: void setHotspotBounds(int,int,int,int)
com.google.firebase.database.core.view.DataEvent: java.lang.String toString()
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
com.journeyapps.barcodescanner.CaptureManager: com.journeyapps.barcodescanner.DecoratedBarcodeView access$000(com.journeyapps.barcodescanner.CaptureManager)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
kotlin.ranges.IntProgression: boolean isEmpty()
com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey: boolean equals(java.lang.Object)
com.google.android.gms.maps.model.CircleOptions: float getZIndex()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: boolean canApplyTheme()
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()
androidx.appcompat.view.ActionMode: java.lang.Object getTag()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.google.android.gms.tasks.zzu: zzu()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.google.firebase.database.core.utilities.Tree: void forEachDescendant(com.google.firebase.database.core.utilities.Tree$TreeVisitor,boolean,boolean)
com.google.firebase.database.snapshot.PriorityIndex: com.google.firebase.database.snapshot.NamedNode maxPost()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPairPredicates(java.util.Set)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
androidx.appcompat.widget.TooltipCompatHandler: void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: com.google.zxing.common.DecoderResult createDecoderResultFromAmbiguousValues(int,int[],int[],int[],int[][])
com.google.zxing.pdf417.decoder.DetectionResult: int getBarcodeColumnCount()
com.google.android.gms.common.internal.BaseGmsClient$zzd: void zza(int,android.os.IBinder,com.google.android.gms.common.internal.zzb)
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: java.util.List buildMiddleArea(int)
kotlin.collections.EmptyList: EmptyList()
com.google.firebase.database.core.ValueEventRegistration: com.google.firebase.database.core.view.QuerySpec getQuerySpec()
com.google.zxing.MultiFormatReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map)
com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: GlobalLibraryVersionRegistrar()
io.flutter.embedding.engine.systemchannels.TextInputChannel: java.util.HashMap createEditingDeltaJSON(java.util.ArrayList)
kotlinx.coroutines.scheduling.CoroutineScheduler: kotlinx.coroutines.scheduling.Task createTask(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext)
com.google.zxing.MultiFormatReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap)
androidx.collection.ArraySet: boolean contains(java.lang.Object)
com.google.firebase.database.core.SyncTree: java.util.List applyTaggedQueryOverwrite(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node,com.google.firebase.database.core.Tag)
io.flutter.plugins.pathprovider.PathProviderPlugin$UiThreadExecutor: PathProviderPlugin$UiThreadExecutor(io.flutter.plugins.pathprovider.PathProviderPlugin$1)
androidx.activity.result.ActivityResult: java.lang.String resultCodeToString(int)
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: void setBarcodeSceneMode(android.hardware.Camera$Parameters)
com.baseflow.geolocator.LocationServiceHandlerImpl: void onCancel(java.lang.Object)
com.google.zxing.common.BitArray: boolean get(int)
com.google.firebase.database.core.view.ViewProcessor: com.google.firebase.database.core.view.ViewCache applyServerMerge(com.google.firebase.database.core.view.ViewCache,com.google.firebase.database.core.Path,com.google.firebase.database.core.CompoundWrite,com.google.firebase.database.core.WriteTreeRef,com.google.firebase.database.snapshot.Node,boolean,com.google.firebase.database.core.view.filter.ChildChangeAccumulator)
com.google.firebase.FirebaseApp$UserUnlockReceiver: void access$200(android.content.Context)
androidx.fragment.app.FragmentTransition: java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String)
io.flutter.embedding.engine.systemchannels.SettingsChannel: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder startMessage()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore next()
androidx.arch.core.internal.FastSafeIterableMap: FastSafeIterableMap()
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingDisconnect: java.util.List getPath()
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter(java.lang.String,char,java.lang.String)
com.google.android.gms.location.zzaj: void writeToParcel(android.os.Parcel,int)
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
com.google.android.gms.common.zzi: byte[] zzd()
androidx.core.app.NotificationCompat$BigTextStyle: NotificationCompat$BigTextStyle()
com.google.zxing.pdf417.decoder.ec.ModulusPoly: int getCoefficient(int)
io.flutter.view.AccessibilityViewEmbedder$ViewAndId: AccessibilityViewEmbedder$ViewAndId(android.view.View,int,io.flutter.view.AccessibilityViewEmbedder$1)
io.flutter.plugin.platform.PlatformPlugin$1: void setSystemUiChangeListener()
com.google.android.gms.common.api.internal.zzc: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.core.graphics.TypefaceCompatApi28Impl: java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class)
io.flutter.embedding.engine.FlutterEngine: void attachToJni()
com.google.android.gms.internal.location.zzk: int getMinApkVersion()
com.google.zxing.pdf417.decoder.ec.ModulusGF: int add(int,int)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: AccessibilityBridge$AccessibilityFeature(java.lang.String,int,int)
com.google.android.gms.maps.model.zza: java.lang.Object[] newArray(int)
com.google.zxing.common.BitMatrix: BitMatrix(int,int,int,int[])
kotlinx.coroutines.NonDisposableHandle: void dispose()
com.google.zxing.oned.rss.expanded.decoders.AI013103decoder: AI013103decoder(com.google.zxing.common.BitArray)
com.google.android.gms.common.internal.ClientSettings$Builder: com.google.android.gms.common.internal.ClientSettings build()
androidx.appcompat.view.menu.MenuBuilder: void setShortcutsVisibleInner(boolean)
kotlinx.coroutines.InvokeOnCancelling: void invoke(java.lang.Throwable)
kotlinx.coroutines.CommonPool: java.lang.String toString()
com.google.firebase.database.FirebaseDatabase: com.google.firebase.database.core.Repo access$000(com.google.firebase.database.FirebaseDatabase)
kotlinx.coroutines.internal.LockFreeLinkedListNode: boolean remove()
com.journeyapps.barcodescanner.CameraPreview$5: void previewSized()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$002(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.camera.CameraInstance getCameraInstance()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
io.flutter.plugin.common.StandardMessageCodec: void writeBytes(java.io.ByteArrayOutputStream,byte[])
io.flutter.embedding.android.FlutterSplashView: boolean wasPreviousSplashTransitionInterrupted()
io.flutter.embedding.engine.dart.DartExecutor: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
com.journeyapps.barcodescanner.SourceData: com.google.zxing.PlanarYUVLuminanceSource createSource()
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void zag(com.google.android.gms.common.ConnectionResult)
com.google.android.gms.maps.model.Marker: void setPosition(com.google.android.gms.maps.model.LatLng)
androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)
com.google.firebase.database.util.GAuthToken: java.util.Map getAuth()
androidx.appcompat.widget.ListPopupWindow: ListPopupWindow(android.content.Context,android.util.AttributeSet,int)
kotlin.ranges.IntProgression: int getFirst()
kotlinx.coroutines.EventLoop: long getNextTime()
io.flutter.view.AccessibilityBridge$4: void onTouchExplorationStateChanged(boolean)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence)
androidx.fragment.app.FragmentTransition: void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setAlphabeticShortcut(char,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateLocalMatrix()
androidx.appcompat.widget.ScrollingTabContainerView: boolean isCollapsed()
androidx.appcompat.view.ContextThemeWrapper: void attachBaseContext(android.content.Context)
io.flutter.plugins.googlemaps.GoogleMapController: com.google.android.gms.maps.model.CameraPosition getCameraPosition()
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: AppCompatViewInflater$DeclaredOnClickListener(android.view.View,java.lang.String)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(int)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean canReuseCache()
androidx.appcompat.view.menu.CascadingMenuPopup$1: CascadingMenuPopup$1(androidx.appcompat.view.menu.CascadingMenuPopup)
androidx.appcompat.view.menu.MenuItemImpl: boolean isVisible()
io.flutter.plugin.editing.InputConnectionAdaptor: android.text.Editable getEditable()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
com.google.firebase.database.core.utilities.Tree: java.lang.Object getValue()
com.google.firebase.database.snapshot.ChildrenNode: java.util.Iterator iterator()
kotlin.collections.CollectionsKt__CollectionsKt: int getLastIndex(java.util.List)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: byte readByte(android.os.Parcel,int)
com.google.firebase.database.collection.RBTreeSortedMap: com.google.firebase.database.collection.RBTreeSortedMap fromMap(java.util.Map,java.util.Comparator)
kotlinx.coroutines.InactiveNodeList: kotlinx.coroutines.NodeList getList()
com.google.firebase.database.snapshot.StringNode: com.google.firebase.database.snapshot.Node updatePriority(com.google.firebase.database.snapshot.Node)
kotlin.jvm.internal.Intrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String)
kotlinx.coroutines.EventLoopImplPlatform: EventLoopImplPlatform()
com.google.zxing.pdf417.PDF417Reader: PDF417Reader()
com.google.android.gms.common.internal.BaseGmsClient: java.lang.Object zza(com.google.android.gms.common.internal.BaseGmsClient)
androidx.appcompat.widget.AppCompatTextHelper: void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray)
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngine get(java.lang.String)
androidx.window.layout.SidecarCompat$DistinctElementCallback: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void send(int)
com.journeyapps.barcodescanner.ViewfinderView$1: void previewStarted()
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
com.google.android.gms.internal.location.zzl: android.os.IInterface getService()
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock: void onOpen()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setActionView(android.view.View)
io.flutter.plugins.googlemaps.GoogleMapController: void onInfoWindowClick(com.google.android.gms.maps.model.Marker)
androidx.appcompat.widget.TintTypedArray: int getInt(int,int)
com.google.android.gms.common.SupportErrorDialogFragment: SupportErrorDialogFragment()
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback)
androidx.collection.MapCollections$ValuesCollection: boolean retainAll(java.util.Collection)
com.journeyapps.barcodescanner.camera.PreviewScalingStrategy: PreviewScalingStrategy()
com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper$ValueHolder addHolder()
io.flutter.plugins.googlemaps.PolylinesController: void setGoogleMap(com.google.android.gms.maps.GoogleMap)
com.google.firebase.database.core.view.EventRaiser$1: void run()
androidx.fragment.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
com.google.android.gms.maps.GoogleMap: com.google.android.gms.maps.Projection getProjection()
androidx.fragment.app.DefaultSpecialEffectsController: void startAnimations(java.util.List,java.util.List,boolean,java.util.Map)
io.flutter.embedding.android.FlutterView: void onAttachedToWindow()
com.google.firebase.database.snapshot.ChildrenNode: com.google.firebase.database.snapshot.Node updatePriority(com.google.firebase.database.snapshot.Node)
com.google.firebase.database.MutableData: void setValue(java.lang.Object)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setInitialPolylines(java.lang.Object)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: boolean isPartialRow(java.lang.Iterable,java.lang.Iterable)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView access$202(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.PlatformView)
io.flutter.plugins.googlemaps.CircleBuilder: void setStrokeWidth(float)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingDisconnect: java.lang.Object getData()
androidx.appcompat.widget.ActionMenuPresenter: boolean hideOverflowMenu()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setDefaultNavigationContentDescription(int)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int,java.lang.String)
androidx.lifecycle.ViewModelStore: void clear()
io.flutter.plugins.googlemaps.MarkerBuilder: void setPosition(com.google.android.gms.maps.model.LatLng)
androidx.activity.result.ActivityResultRegistry$CallbackAndContract: ActivityResultRegistry$CallbackAndContract(androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract)
io.flutter.plugin.platform.PlatformViewsController$1: void onTouch(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isScrollable()
com.google.android.gms.maps.internal.zzbr: com.google.android.gms.dynamic.IObjectWrapper toScreenLocation(com.google.android.gms.maps.model.LatLng)
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean getPadding(android.graphics.Rect)
androidx.lifecycle.MethodCallsLogger: MethodCallsLogger()
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: void setBundle(android.os.Bundle)
com.google.firebase.database.core.Path: java.util.Iterator iterator()
com.google.firebase.platforminfo.AutoValue_LibraryVersion: boolean equals(java.lang.Object)
com.google.android.gms.common.zza: java.lang.Object[] newArray(int)
com.google.zxing.ChecksumException: ChecksumException()
com.google.zxing.pdf417.detector.Detector: com.google.zxing.ResultPoint[] findVertices(com.google.zxing.common.BitMatrix,int,int)
com.google.common.util.concurrent.AbstractFuture$Failure: AbstractFuture$Failure(java.lang.Throwable)
com.google.android.gms.maps.model.zzi: java.lang.Object[] newArray(int)
com.google.android.gms.common.internal.zzh: zzh(java.lang.String,java.lang.String,boolean,int)
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription decodeAppSwitcherDescription(org.json.JSONObject)
androidx.appcompat.app.ActionBar: ActionBar()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2700(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlinx.coroutines.JobSupport$Finishing: boolean isSealed()
androidx.appcompat.view.WindowCallbackWrapper: void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)
androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
kotlin.ranges.IntProgression: java.lang.String toString()
io.flutter.view.AccessibilityBridge$SemanticsNode: void updateRecursively(float[],java.util.Set,boolean)
androidx.core.provider.FontRequestWorker$1: androidx.core.provider.FontRequestWorker$TypefaceResult call()
com.journeyapps.barcodescanner.camera.CameraThread: void enqueue(java.lang.Runnable)
kotlinx.coroutines.EventLoop: void dispatchUnconfined(kotlinx.coroutines.DispatchedTask)
com.google.firebase.database.connection.util.StringListReader: boolean ready()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void zza(android.os.Parcel,int,int,int)
io.flutter.plugins.googlemaps.Convert: java.util.Map toMap(java.lang.Object)
androidx.core.view.ViewCompat$AccessibilityViewProperty: ViewCompat$AccessibilityViewProperty(int,java.lang.Class,int,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIntent(android.content.Intent)
io.flutter.embedding.android.FlutterTextureView: FlutterTextureView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback: ActionMenuView$MenuBuilderCallback(androidx.appcompat.widget.ActionMenuView)
androidx.appcompat.graphics.drawable.StateListDrawable: boolean onStateChange(int[])
androidx.core.view.ViewCompat$4: ViewCompat$4(int,java.lang.Class,int,int)
io.flutter.plugins.googlemaps.PolylineController: void setGeodesic(boolean)
androidx.core.app.NavUtils: android.content.Intent getParentActivityIntent(android.app.Activity)
com.google.firebase.database.connection.PersistentConnectionImpl: boolean access$1302(com.google.firebase.database.connection.PersistentConnectionImpl,boolean)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setEnabled(boolean)
kotlinx.coroutines.JobCancellationException: java.lang.String toString()
androidx.lifecycle.SavedStateHandleController: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.view.AccessibilityBridge: void sendAccessibilityEvent(int,int)
com.google.android.gms.tasks.zzl: void run()
androidx.core.widget.AutoScrollHelper$ClampedScroller: boolean isFinished()
androidx.fragment.app.FragmentManager: void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener)
androidx.fragment.app.FragmentManager: void dispatchPrimaryNavigationFragmentChanged()
com.google.firebase.database.collection.ImmutableSortedMap$Builder: com.google.firebase.database.collection.ImmutableSortedMap buildFrom(java.util.List,java.util.Map,com.google.firebase.database.collection.ImmutableSortedMap$Builder$KeyTranslator,java.util.Comparator)
androidx.appcompat.widget.SearchView: void postUpdateFocusedState()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
com.google.android.gms.tasks.zzd: void run()
androidx.fragment.app.FragmentTransitionCompat21$5: FragmentTransitionCompat21$5(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onPause()
com.google.zxing.oned.Code93Reader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void update()
com.google.firebase.database.core.Repo: void resume()
com.google.firebase.database.snapshot.ChildrenNode: boolean isEmpty()
com.google.firebase.database.core.WriteTree: boolean removeWrite(long)
androidx.core.view.DisplayCutoutCompat: DisplayCutoutCompat(java.lang.Object)
com.google.android.gms.tasks.TaskCompletionSource: boolean trySetResult(java.lang.Object)
com.google.firebase.database.core.SnapshotHolder: com.google.firebase.database.snapshot.Node getNode(com.google.firebase.database.core.Path)
androidx.collection.ArraySet$1: java.lang.Object colGetEntry(int,int)
com.google.android.gms.signin.internal.zah: java.lang.Object[] newArray(int)
androidx.appcompat.widget.ResourcesWrapper: android.content.res.XmlResourceParser getLayout(int)
androidx.exifinterface.media.ExifInterface: boolean isThumbnail(java.util.HashMap)
com.google.firebase.database.collection.LLRBRedValueNode: int size()
androidx.appcompat.view.menu.BaseMenuPresenter: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyDownPanel(int,android.view.KeyEvent)
io.flutter.plugins.googlemaps.CirclesController: void addCircles(java.util.List)
kotlinx.coroutines.CompletedContinuation: boolean getCancelled()
io.flutter.embedding.engine.systemchannels.RestorationChannel: RestorationChannel(io.flutter.plugin.common.MethodChannel,boolean)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int)
com.google.zxing.pdf417.detector.Detector: int[] findGuardPattern(com.google.zxing.common.BitMatrix,int,int,int,boolean,int[],int[])
com.journeyapps.barcodescanner.CameraPreview$1: CameraPreview$1(com.journeyapps.barcodescanner.CameraPreview)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
androidx.appcompat.widget.ActionBarOverlayLayout: void onStopNestedScroll(android.view.View)
kotlinx.coroutines.CoroutineName: java.lang.String getName()
com.google.firebase.components.OptionalProvider: void whenAvailable(com.google.firebase.inject.Deferred$DeferredHandler)
io.flutter.plugins.googlemaps.CircleController: void remove()
com.google.firebase.database.core.Context: java.io.File getSSLCacheDirectory()
androidx.appcompat.widget.ActionMenuView: boolean showOverflowMenu()
androidx.fragment.app.Fragment: void performPictureInPictureModeChanged(boolean)
com.lyokone.location.FlutterLocationService: io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener getLocationRequestPermissionsResultListener()
com.baseflow.geolocator.location.FusedLocationClient: com.google.android.gms.location.FusedLocationProviderClient access$200(com.baseflow.geolocator.location.FusedLocationClient)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
com.google.android.gms.internal.maps.zzj: void setClickable(boolean)
com.google.firebase.database.core.SyncTree$3: SyncTree$3(com.google.firebase.database.core.SyncTree,boolean,long,boolean,com.google.firebase.database.core.utilities.Clock)
com.google.android.gms.tasks.zzu: void zzd()
androidx.core.content.res.FontResourcesParserCompat: java.util.List toByteArrayList(java.lang.String[])
androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
com.google.android.gms.common.internal.IGmsServiceBroker$Stub$zza: IGmsServiceBroker$Stub$zza(android.os.IBinder)
androidx.core.view.inputmethod.InputContentInfoCompat: java.lang.Object unwrap()
com.google.firebase.database.core.SyncTree: java.util.List applyOperationToSyncPoints(com.google.firebase.database.core.operation.Operation)
androidx.appcompat.view.menu.ActionMenuItem: boolean collapseActionView()
com.google.zxing.maxicode.MaxiCodeReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap)
kotlinx.coroutines.NodeList: java.lang.String toString()
androidx.appcompat.graphics.drawable.DrawableContainer: void onBoundsChange(android.graphics.Rect)
kotlinx.coroutines.CompletedContinuation: CompletedContinuation(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.DefaultSpecialEffectsController$8: DefaultSpecialEffectsController$8(androidx.fragment.app.DefaultSpecialEffectsController,java.util.ArrayList)
com.baseflow.geolocator.GeolocatorPlugin: GeolocatorPlugin()
androidx.appcompat.widget.Toolbar$SavedState: Toolbar$SavedState(android.os.Parcelable)
io.flutter.plugin.editing.ListenableEditingState$1: ListenableEditingState$1(io.flutter.plugin.editing.ListenableEditingState,android.view.View,boolean,android.text.Editable)
kotlinx.coroutines.internal.OnUndeliveredElementKt: kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException)
androidx.window.core.Bounds: int getWidth()
kotlin.collections.EmptyMap: java.util.Set getEntries()
com.google.firebase.database.core.utilities.ImmutableTree: ImmutableTree(java.lang.Object,com.google.firebase.database.collection.ImmutableSortedMap)
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
com.baseflow.geolocator.location.ServiceStatus: ServiceStatus(java.lang.String,int)
io.flutter.plugin.common.StringCodec: java.lang.String decodeMessage(java.nio.ByteBuffer)
com.google.zxing.oned.OneDReader: com.google.zxing.Result doDecode(com.google.zxing.BinaryBitmap,java.util.Map)
androidx.appcompat.view.menu.CascadingMenuPopup: void setHorizontalOffset(int)
androidx.core.app.NotificationCompat$BigTextStyle: androidx.core.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence)
com.google.firebase.platforminfo.KotlinDetector: java.lang.String detectVersion()
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
com.google.zxing.MultiFormatReader: void setHints(java.util.Map)
io.flutter.plugins.firebase.database.FlutterDataSnapshotPayload: java.util.Map toMap()
io.flutter.Log: void v(java.lang.String,java.lang.String)
com.google.zxing.ResultMetadataType: ResultMetadataType(java.lang.String,int)
com.baseflow.geolocator.location.GeolocationManager: void startPositionUpdates(com.baseflow.geolocator.location.LocationClient,android.app.Activity,com.baseflow.geolocator.location.PositionChangedCallback,com.baseflow.geolocator.errors.ErrorCallback)
com.google.zxing.BinaryBitmap: int getWidth()
com.journeyapps.barcodescanner.camera.CameraInstance$1: CameraInstance$1(com.journeyapps.barcodescanner.camera.CameraInstance)
androidx.appcompat.widget.Toolbar: void ensureMenuView()
com.google.zxing.oned.UPCEANExtension5Support: java.util.Map parseExtensionString(java.lang.String)
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock: WebsocketConnection$WSClientTubesock(com.google.firebase.database.connection.WebsocketConnection,com.google.firebase.database.tubesock.WebSocket,com.google.firebase.database.connection.WebsocketConnection$1)
androidx.versionedparcelable.VersionedParcel: java.lang.reflect.Method getReadMethod(java.lang.String)
androidx.collection.SparseArrayCompat: SparseArrayCompat()
com.google.zxing.datamatrix.detector.Detector: com.google.zxing.ResultPoint correctTopRight(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int)
com.google.zxing.FormatException: com.google.zxing.FormatException getFormatInstance(java.lang.Throwable)
com.google.firebase.database.core.CompoundWrite: java.util.Map getValue(boolean)
androidx.appcompat.view.menu.ActionMenuItem: char getAlphabeticShortcut()
com.google.firebase.database.tubesock.WebSocketReceiver: void handlePing(byte[])
io.flutter.plugin.platform.PlatformViewsController: void detachAccessibilityBridge()
kotlinx.coroutines.flow.internal.SafeCollector_commonKt: void checkContext(kotlinx.coroutines.flow.internal.SafeCollector,kotlin.coroutines.CoroutineContext)
com.google.android.gms.location.zzj: void writeToParcel(android.os.Parcel,int)
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: FlutterLoader$InitResult(java.lang.String,java.lang.String,java.lang.String,io.flutter.embedding.engine.loader.FlutterLoader$1)
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$2: void run()
com.google.android.gms.maps.internal.zza: byte zza(java.lang.Boolean)
io.flutter.plugins.googlemaps.GoogleMapController: void onCameraIdle()
androidx.versionedparcelable.VersionedParcel: byte[] readByteArray(byte[],int)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
kotlinx.coroutines.JobImpl: boolean getOnCancelComplete$kotlinx_coroutines_core()
com.google.android.gms.common.api.internal.zace: zace(android.content.Context,android.os.Handler,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.common.api.Api$AbstractClientBuilder)
com.google.firebase.database.android.SqlPersistenceStorageEngine$2: SqlPersistenceStorageEngine$2(com.google.firebase.database.android.SqlPersistenceStorageEngine,com.google.firebase.database.core.utilities.ImmutableTree,java.util.List,com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: android.graphics.drawable.Drawable getBackground()
com.google.firebase.database.core.Path: int compareTo(com.google.firebase.database.core.Path)
androidx.appcompat.widget.TintTypedArray: void recycle()
kotlinx.coroutines.channels.BufferOverflow: BufferOverflow(java.lang.String,int)
androidx.core.view.KeyEventDispatcher: boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent)
io.flutter.plugin.common.BasicMessageChannel: io.flutter.plugin.common.MessageCodec access$200(io.flutter.plugin.common.BasicMessageChannel)
com.google.firebase.database.core.utilities.ImmutableTree$2: java.lang.Object onNodeValue(com.google.firebase.database.core.Path,java.lang.Object,java.lang.Object)
kotlinx.coroutines.android.HandlerContext: void cancelOnRejection(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
com.google.firebase.database.snapshot.PriorityIndex: boolean isDefinedOn(com.google.firebase.database.snapshot.Node)
androidx.core.text.PrecomputedTextCompat: int getSpanFlags(java.lang.Object)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItem: boolean isChecked()
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.google.android.gms.common.internal.GmsClientSupervisor: void zza(java.lang.String,java.lang.String,int,android.content.ServiceConnection,java.lang.String)
androidx.core.widget.ImageViewCompat: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTint(int)
io.flutter.plugins.flutterexifrotation.FlutterExifRotationPlugin: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnSuccessListener(android.app.Activity,com.google.android.gms.tasks.OnSuccessListener)
androidx.core.view.inputmethod.InputContentInfoCompat: void requestPermission()
io.flutter.plugin.editing.TextInputPlugin$1: TextInputPlugin$1(io.flutter.plugin.editing.TextInputPlugin)
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.activity.ImmLeaksCleaner: void initializeReflectiveFields()
androidx.activity.ComponentActivity: void setContentView(int)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean)
com.google.firebase.database.collection.LLRBBlackValueNode: com.google.firebase.database.collection.LLRBNode$Color getColor()
com.google.firebase.database.connection.PersistentConnectionImpl: com.google.android.gms.tasks.Task fetchAuthToken(boolean)
androidx.multidex.MultiDexExtractor: MultiDexExtractor(java.io.File,java.io.File)
com.google.firebase.database.snapshot.ValueIndex: com.google.firebase.database.snapshot.NamedNode maxPost()
com.google.firebase.database.core.CompoundWrite: boolean equals(java.lang.Object)
com.google.android.gms.internal.maps.zzab: java.lang.String getId()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.internal.ThreadSafeHeap: int getSize()
io.flutter.plugins.imagepicker.ImagePickerDelegate: ImagePickerDelegate(android.app.Activity,java.io.File,io.flutter.plugins.imagepicker.ImageResizer,io.flutter.plugins.imagepicker.ImagePickerCache)
com.google.android.gms.location.LocationAvailability: java.lang.String toString()
com.google.android.gms.maps.model.zzb: zzb()
com.google.common.util.concurrent.AbstractFuture: void removeWaiter(com.google.common.util.concurrent.AbstractFuture$Waiter)
com.google.zxing.common.BitArray: BitArray(int[],int)
com.google.firebase.database.core.utilities.encoding.CustomClassMapper$BeanMapper: java.lang.String propertyName(java.lang.reflect.Field)
com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task continueWith(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)
com.google.android.gms.maps.internal.zzg: void setOnCircleClickListener(com.google.android.gms.maps.internal.zzv)
com.google.android.gms.common.api.internal.ListenerHolder: void notifyListenerInternal(com.google.android.gms.common.api.internal.ListenerHolder$Notifier)
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup: void onLayout(boolean,int,int,int,int)
androidx.appcompat.graphics.drawable.DrawableWrapper: int[] getState()
com.google.android.gms.tasks.zzi: com.google.android.gms.tasks.OnCompleteListener zzb(com.google.android.gms.tasks.zzi)
androidx.appcompat.view.WindowCallbackWrapper: boolean onPreparePanel(int,android.view.View,android.view.Menu)
com.google.firebase.database.core.view.QuerySpec: QuerySpec(com.google.firebase.database.core.Path,com.google.firebase.database.core.view.QueryParams)
com.google.firebase.database.core.persistence.NoopPersistenceManager: void saveUserMerge(com.google.firebase.database.core.Path,com.google.firebase.database.core.CompoundWrite,long)
io.flutter.plugins.firebase.database.EventsProxy: EventsProxy(io.flutter.plugin.common.EventChannel$EventSink,java.lang.String)
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean addToGlobalQueue(kotlinx.coroutines.scheduling.Task)
io.flutter.plugins.googlemaps.MarkersController: void isInfoWindowShown(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
kotlinx.coroutines.scheduling.GlobalQueue: GlobalQueue()
androidx.appcompat.widget.TooltipCompatHandler$2: TooltipCompatHandler$2(androidx.appcompat.widget.TooltipCompatHandler)
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1: void invoke(java.lang.Throwable)
kotlin.collections.EmptyList: java.lang.Void get(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setVisible(boolean,boolean)
androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)
androidx.appcompat.view.SupportMenuInflater: java.lang.Object getRealOwner()
androidx.appcompat.app.AppCompatDialog: void setTitle(java.lang.CharSequence)
com.google.zxing.oned.UPCEReader: java.lang.String convertUPCEtoUPCA(java.lang.String)
androidx.fragment.app.DefaultSpecialEffectsController$9: void run()
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
kotlinx.coroutines.internal.ThreadState: void restore(kotlin.coroutines.CoroutineContext)
com.baseflow.geolocator.permission.PermissionManager: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.journeyapps.barcodescanner.camera.CameraInstance$3: void run()
com.google.firebase.database.core.SyncTree$7: SyncTree$7(com.google.firebase.database.core.SyncTree,com.google.firebase.database.core.Path)
androidx.appcompat.view.menu.MenuBuilder: boolean isShortcutKey(int,android.view.KeyEvent)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToActivity(io.flutter.embedding.android.ExclusiveAppComponent,androidx.lifecycle.Lifecycle)
com.google.android.gms.maps.UiSettings: boolean isMyLocationButtonEnabled()
androidx.exifinterface.media.ExifInterface: ExifInterface(java.lang.String)
kotlinx.coroutines.Job$DefaultImpls: java.lang.Object fold(kotlinx.coroutines.Job,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.window.layout.WindowLayoutInfo: java.util.List getDisplayFeatures()
io.flutter.embedding.engine.systemchannels.PlatformChannel$1: PlatformChannel$1(io.flutter.embedding.engine.systemchannels.PlatformChannel)
com.google.android.gms.common.api.internal.BackgroundDetector: void onLowMemory()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: void teardown()
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
androidx.fragment.app.BackStackRecord: void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int)
com.google.zxing.common.reedsolomon.GenericGFPoly: int getDegree()
androidx.appcompat.widget.DropDownListView: DropDownListView(android.content.Context,boolean)
com.google.common.util.concurrent.internal.InternalFutures: java.lang.Throwable tryInternalFastPathGetFailure(com.google.common.util.concurrent.internal.InternalFutureFailureAccess)
com.google.android.gms.maps.GoogleMap: com.google.android.gms.maps.UiSettings getUiSettings()
androidx.fragment.app.FragmentManager$PopBackStackState: FragmentManager$PopBackStackState(androidx.fragment.app.FragmentManager,java.lang.String,int,int)
androidx.appcompat.view.ContextThemeWrapper: void setTheme(int)
androidx.fragment.app.FragmentContainerView: FragmentContainerView(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingListen: com.google.firebase.database.connection.ListenHashProvider getHashFunction()
androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)
com.google.firebase.components.Component: Component(java.util.Set,java.util.Set,int,int,com.google.firebase.components.ComponentFactory,java.util.Set)
com.google.firebase.components.Component$Builder: Component$Builder(java.lang.Class,java.lang.Class[],com.google.firebase.components.Component$1)
com.lyokone.location.MethodCallHandlerImpl: void stopListening()
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader(io.flutter.embedding.engine.FlutterJNI)
androidx.core.text.PrecomputedTextCompat: char charAt(int)
com.google.android.gms.internal.maps.zzab: void remove()
com.google.android.gms.maps.model.MarkerOptions: boolean isFlat()
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: float readFloat(android.os.Parcel,int)
androidx.appcompat.view.StandaloneActionMode: void invalidate()
androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder readByteOrder(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long markFrozen()
io.flutter.plugins.googlemaps.PolygonBuilder: void setVisible(boolean)
androidx.appcompat.view.menu.ListMenuItemView: void onFinishInflate()
androidx.exifinterface.media.ExifInterface$1: int readAt(long,byte[],int,int)
androidx.core.app.NotificationManagerCompat$SideChannelManager: boolean handleMessage(android.os.Message)
io.flutter.view.AccessibilityBridge$1: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
io.flutter.view.AccessibilityBridge: void access$400(io.flutter.view.AccessibilityBridge,android.view.accessibility.AccessibilityEvent)
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: ArgbEvaluator()
com.google.firebase.database.core.Repo: void purgeOutstandingWrites()
io.flutter.plugins.googlemaps.MarkerController: void setDraggable(boolean)
com.google.firebase.database.core.utilities.Tree: boolean forEachAncestor(com.google.firebase.database.core.utilities.Tree$TreeFilter,boolean)
com.google.firebase.database.tubesock.WebSocketWriter: void runWriter()
androidx.window.embedding.SplitPairRule: boolean equals(java.lang.Object)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
androidx.fragment.app.Fragment: android.view.View getFocusedView()
com.google.android.gms.internal.location.zzbl: void doExecute(com.google.android.gms.common.api.Api$AnyClient)
androidx.core.os.ExecutorCompat$HandlerExecutor: void execute(java.lang.Runnable)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState()
com.google.firebase.database.core.SyncTree$KeepSyncedEventRegistration: boolean respondsTo(com.google.firebase.database.core.view.Event$EventType)
com.google.android.gms.maps.internal.zzf: com.google.android.gms.internal.maps.zze zzf()
kotlinx.coroutines.JobSupport: boolean tryWaitForChild(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
com.google.android.gms.common.zzg: byte[] getBytes()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: WindowDecorActionBar$ActionModeImpl(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback)
com.google.android.gms.maps.model.Polygon: Polygon(com.google.android.gms.internal.maps.zzw)
androidx.appcompat.widget.AppCompatTextHelper: int getAutoSizeMinTextSize()
com.google.firebase.database.snapshot.PriorityIndex: int compare(com.google.firebase.database.snapshot.NamedNode,com.google.firebase.database.snapshot.NamedNode)
com.google.android.gms.internal.location.zzbf: com.google.android.gms.internal.location.zzbf zza(com.google.android.gms.location.zzu,com.google.android.gms.internal.location.zzaj)
io.flutter.plugins.googlemaps.PolylineController: void setStartCap(com.google.android.gms.maps.model.Cap)
androidx.appcompat.widget.TintTypedArray: android.content.res.TypedArray getWrappedTypeArray()
kotlinx.coroutines.CoroutineId: java.lang.String updateThreadContext(kotlin.coroutines.CoroutineContext)
kotlin.text.StringsKt__IndentKt: java.lang.String replaceIndent(java.lang.String,java.lang.String)
androidx.core.graphics.PathParser$PathDataNode: PathParser$PathDataNode(androidx.core.graphics.PathParser$PathDataNode)
com.google.zxing.pdf417.decoder.DetectionResult: void adjustRowNumbersFromBothRI()
com.google.firebase.database.core.Repo: void access$2000(com.google.firebase.database.core.Repo,com.google.firebase.database.core.utilities.Tree)
kotlinx.coroutines.DefaultExecutor: DefaultExecutor()
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription: PlatformChannel$AppSwitcherDescription(int,java.lang.String)
io.flutter.plugins.firebase.database.FlutterFirebaseDatabaseException: io.flutter.plugins.firebase.database.FlutterFirebaseDatabaseException fromDatabaseException(com.google.firebase.database.DatabaseException)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: java.lang.Object getItem(int)
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmojiModifierBase(int)
com.google.firebase.database.core.SyncPoint: boolean isEmpty()
com.lyokone.location.MethodCallHandlerImpl: MethodCallHandlerImpl()
androidx.appcompat.graphics.drawable.DrawableContainer: boolean onLevelChange(int)
io.flutter.embedding.engine.dart.DartExecutor: java.lang.String access$002(io.flutter.embedding.engine.dart.DartExecutor,java.lang.String)
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver: ListPopupWindow$PopupDataSetObserver(androidx.appcompat.widget.ListPopupWindow)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context)
com.google.android.gms.common.util.DefaultClock: com.google.android.gms.common.util.Clock getInstance()
com.google.android.gms.internal.maps.zzc: zzc()
androidx.fragment.app.FragmentContainer: FragmentContainer()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isEnabled()
kotlinx.coroutines.InvokeOnCancel: void invoke(java.lang.Throwable)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: int getCount()
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
com.google.zxing.qrcode.decoder.DataMask$7: DataMask$7(java.lang.String,int)
androidx.core.view.ViewCompat: void setViewImportanceForAccessibilityIfNeeded(android.view.View)
io.flutter.plugins.googlemaps.MarkerController: void setVisible(boolean)
androidx.appcompat.widget.TooltipCompatHandler: void onViewAttachedToWindow(android.view.View)
com.journeyapps.barcodescanner.CameraPreview: void initializeAttributes(android.util.AttributeSet)
kotlinx.coroutines.CancellableContinuationImpl: void resumeImpl$default(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Object,int,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.versionedparcelable.VersionedParcel: java.lang.Class findParcelClass(java.lang.Class)
androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontFamilyResult create(int,androidx.core.provider.FontsContractCompat$FontInfo[])
com.google.firebase.database.core.Repo: com.google.firebase.database.core.Path rerunTransactions(com.google.firebase.database.core.Path)
io.flutter.view.AccessibilityBridge: int access$7100()
kotlin.text.DelimitedRangesSequence$iterator$1: DelimitedRangesSequence$iterator$1(kotlin.text.DelimitedRangesSequence)
com.baseflow.geolocator.GeolocatorLocationService: void obtainWakeLocks(com.baseflow.geolocator.location.ForegroundNotificationOptions)
com.google.android.gms.common.internal.BaseGmsClient: void zza(int,android.os.Bundle,int)
com.google.firebase.database.core.persistence.DefaultPersistenceManager: void doPruneCheckAfterServerUpdate()
com.google.firebase.database.tubesock.WebSocket$State: com.google.firebase.database.tubesock.WebSocket$State valueOf(java.lang.String)
com.google.android.gms.common.api.internal.BackgroundDetector: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setColor(int)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTooltipText(java.lang.CharSequence)
kotlin.collections.EmptyList: boolean add(java.lang.Object)
com.google.zxing.oned.Code93Reader: void checkOneChecksum(java.lang.CharSequence,int,int)
androidx.core.app.NotificationCompat$Builder: android.os.Bundle getExtras()
com.google.firebase.database.core.utilities.OffsetClock: OffsetClock(com.google.firebase.database.core.utilities.Clock,long)
androidx.core.app.Person: androidx.core.graphics.drawable.IconCompat getIcon()
androidx.appcompat.widget.ThemeUtils: android.util.TypedValue getTypedValue()
com.google.android.gms.dynamite.zzf: zzf()
androidx.core.graphics.TypefaceCompatApi21Impl: boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean)
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
com.google.firebase.components.InvalidRegistrarException: InvalidRegistrarException(java.lang.String)
androidx.lifecycle.CompositeGeneratedAdaptersObserver: CompositeGeneratedAdaptersObserver(androidx.lifecycle.GeneratedAdapter[])
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
io.flutter.embedding.engine.dart.DartExecutor$1: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.google.zxing.common.BitArray: int getNextSet(int)
com.google.firebase.database.snapshot.ValueIndex: int hashCode()
com.google.firebase.database.util.JsonMapper: java.lang.Object parseJsonValue(java.lang.String)
com.google.firebase.database.core.SyncTree: void removeTags(java.util.List)
kotlin.collections.EmptyIterator: void add(java.lang.Object)
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock: void onClose()
com.google.zxing.qrcode.decoder.DataMask$5: boolean isMasked(int,int)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: void stop()
androidx.appcompat.widget.LinearLayoutCompat: void drawDividersVertical(android.graphics.Canvas)
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$$inlined$sortedByDescending$1: ExceptionsConstuctorKt$tryCopyException$$inlined$sortedByDescending$1()
com.google.zxing.qrcode.decoder.DataMask: DataMask(java.lang.String,int)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: void onDestroyActionMode(androidx.appcompat.view.ActionMode)
androidx.appcompat.widget.LinearLayoutCompat: void drawVerticalDivider(android.graphics.Canvas,int)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[])
kotlinx.coroutines.channels.ArrayChannel: void ensureCapacity(int)
androidx.appcompat.view.menu.MenuItemImpl: char getAlphabeticShortcut()
androidx.collection.LongSparseArray: void put(long,java.lang.Object)
com.google.firebase.database.snapshot.ChildrenNode: com.google.firebase.database.snapshot.ChildKey getFirstChildKey()
androidx.appcompat.widget.SearchView: void clearFocus()
com.google.android.gms.signin.internal.zak: zak(int,com.google.android.gms.common.ConnectionResult,com.google.android.gms.common.internal.ResolveAccountResponse)
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()
androidx.appcompat.widget.ActionMenuView: boolean isOverflowMenuShowPending()
androidx.fragment.app.FragmentHostCallback: void onSupportInvalidateOptionsMenu()
androidx.appcompat.widget.ActionBarOverlayLayout$1: ActionBarOverlayLayout$1(androidx.appcompat.widget.ActionBarOverlayLayout)
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
kotlin.ranges.IntProgression: IntProgression(int,int,int)
kotlin.coroutines.EmptyCoroutineContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
io.flutter.plugins.firebase.database.FlutterFirebaseDatabaseException: java.util.Map getAdditionalData()
com.google.android.gms.location.zzz: zzz(android.os.IBinder)
com.google.android.gms.internal.maps.zzae: java.lang.String getId()
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: void ensureRange()
androidx.appcompat.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2: RBTreeSortedMap$Builder$Base1_2(int)
com.google.firebase.database.connection.util.RetryHelper: RetryHelper(java.util.concurrent.ScheduledExecutorService,com.google.firebase.database.logging.LogWrapper,long,long,double,double,com.google.firebase.database.connection.util.RetryHelper$1)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder: KeyboardManager$PerEventCallbackBuilder(io.flutter.embedding.android.KeyboardManager,android.view.KeyEvent)
com.google.zxing.common.BitSource: int getByteOffset()
com.journeyapps.barcodescanner.CameraPreview$1: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
io.flutter.plugins.googlemaps.MarkerController: java.lang.String getGoogleMapsMarkerId()
com.google.zxing.datamatrix.decoder.Version$ECB: int getCount()
com.google.firebase.database.core.Repo: void setValue(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node,com.google.firebase.database.DatabaseReference$CompletionListener)
com.google.android.gms.maps.MapView: void onStop()
com.google.firebase.database.core.Context$1: void onError(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicHeight()
androidx.cursoradapter.widget.CursorAdapter: int getCount()
com.google.android.gms.tasks.zzu: void zzb()
com.google.firebase.database.core.Context: void ensureRunLoop()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentActivity: void onMultiWindowModeChanged(boolean)
com.google.zxing.common.BitArray: void set(int)
com.google.android.gms.common.api.GoogleApi$Settings$Builder: com.google.android.gms.common.api.GoogleApi$Settings$Builder setMapper(com.google.android.gms.common.api.internal.StatusExceptionMapper)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: com.google.android.gms.tasks.Task setWithPriorityOnDisconnect(java.util.Map)
com.google.firebase.database.core.Path: com.google.firebase.database.core.Path getRelative(com.google.firebase.database.core.Path,com.google.firebase.database.core.Path)
androidx.core.widget.NestedScrollView$SavedState$1: NestedScrollView$SavedState$1()
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: void setVideoStabilization(android.hardware.Camera$Parameters)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: com.google.zxing.common.DecoderResult createDecoderResult(com.google.zxing.pdf417.decoder.DetectionResult)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController getInstance()
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock: WebsocketConnection$WSClientTubesock(com.google.firebase.database.connection.WebsocketConnection,com.google.firebase.database.tubesock.WebSocket)
com.google.zxing.pdf417.PDF417Reader: int getMinCodewordWidth(com.google.zxing.ResultPoint[])
androidx.appcompat.widget.AppCompatTextHelper: void populateSurroundingTextIfNeeded(android.widget.TextView,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)
kotlin.internal.PlatformImplementations: PlatformImplementations()
com.google.firebase.database.connection.WebsocketConnection: java.lang.String extractFrameCount(java.lang.String)
com.google.android.gms.maps.model.Polygon: void setGeodesic(boolean)
androidx.appcompat.view.menu.CascadingMenuPopup$3: CascadingMenuPopup$3(androidx.appcompat.view.menu.CascadingMenuPopup)
com.google.android.gms.internal.location.zzae: zzae()
androidx.cursoradapter.widget.CursorAdapter: long getItemId(int)
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
com.google.zxing.datamatrix.decoder.BitMatrixParser: byte[] readCodewords()
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection,java.lang.Object[])
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
kotlinx.coroutines.CoroutineScopeKt: kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext)
io.flutter.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)
com.google.android.gms.location.zzai: zzai()
androidx.fragment.app.FragmentStore: void dispatchStateChange(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
io.flutter.embedding.android.FlutterTextureView$1: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)
androidx.core.content.ContextCompat: int checkSelfPermission(android.content.Context,java.lang.String)
com.google.firebase.database.core.DatabaseConfig: DatabaseConfig()
com.baseflow.geolocator.location.FusedLocationClient: int generateActivityRequestCode()
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
io.flutter.plugin.platform.PlatformViewsController: android.view.View getPlatformViewById(java.lang.Integer)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int)
kotlinx.coroutines.internal.DispatchedContinuation: DispatchedContinuation(kotlinx.coroutines.CoroutineDispatcher,kotlin.coroutines.Continuation)
androidx.appcompat.content.res.AppCompatResources: android.util.TypedValue getTypedValue()
com.google.android.gms.common.GoogleApiAvailabilityLight: android.app.PendingIntent getErrorResolutionPendingIntent(android.content.Context,int,int,java.lang.String)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: com.google.zxing.oned.rss.FinderPattern parseFoundFinderPattern(com.google.zxing.common.BitArray,int,boolean)
androidx.window.layout.SidecarWindowBackend: void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend)
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onActivityResumed(android.app.Activity)
com.google.zxing.common.BitMatrix: boolean equals(java.lang.Object)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: com.google.zxing.oned.rss.expanded.ExpandedPair retrieveNextPair(com.google.zxing.common.BitArray,java.util.List,int)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: void onListen(java.lang.Object,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
com.google.firebase.database.core.Repo$TransactionData: int compareTo(com.google.firebase.database.core.Repo$TransactionData)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore(java.lang.String,char,java.lang.String)
androidx.appcompat.widget.ScrollingTabContainerView: void onNothingSelected(android.widget.AdapterView)
com.baseflow.geolocator.GeolocatorLocationService$LocalBinder: com.baseflow.geolocator.GeolocatorLocationService getLocationService()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicWidth()
androidx.fragment.app.DialogFragment: android.app.Dialog access$000(androidx.fragment.app.DialogFragment)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
io.flutter.plugin.editing.ListenableEditingState: void notifyListenersIfNeeded(boolean,boolean,boolean)
com.google.firebase.database.core.RepoInfo: boolean equals(java.lang.Object)
com.google.android.gms.common.api.internal.zac: com.google.android.gms.common.api.Status zab(android.os.RemoteException)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.EventLoopImplPlatform: void unpark()
com.google.android.gms.common.api.internal.BasePendingResult$zaa: void finalize()
androidx.core.graphics.PathParser: void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
androidx.appcompat.view.menu.ActionMenuItemView: boolean shouldAllowTextWithIcon()
com.google.zxing.oned.EAN8Reader: com.google.zxing.BarcodeFormat getBarcodeFormat()
androidx.multidex.MultiDex$V14: java.lang.Object[] makeDexElements(java.util.List)
io.flutter.plugins.googlemaps.TileProviderController$Worker: void notImplemented()
com.google.firebase.FirebaseApp: java.lang.String getPersistenceKey()
com.google.android.gms.common.internal.zzf: void onServiceDisconnected(android.content.ComponentName)
com.google.android.gms.internal.location.zzm: boolean equals(java.lang.Object)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.lang.Object)
io.flutter.plugins.googlemaps.TileOverlayController: void remove()
com.google.zxing.aztec.detector.Detector$Point: Detector$Point(int,int)
androidx.appcompat.widget.SearchView$10: void onTextChanged(java.lang.CharSequence,int,int,int)
androidx.fragment.app.FragmentStore: void removeFragment(androidx.fragment.app.Fragment)
androidx.appcompat.view.menu.MenuBuilder: boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter)
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionResume(android.transition.Transition)
com.google.firebase.database.core.view.filter.RangedFilter: com.google.firebase.database.snapshot.NamedNode getEndPost(com.google.firebase.database.core.view.QueryParams)
androidx.fragment.app.FragmentManager: java.util.List getFragments()
io.flutter.plugin.platform.PlatformPlugin$2: PlatformPlugin$2(io.flutter.plugin.platform.PlatformPlugin)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.window.embedding.SplitController$Companion: SplitController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.customview.view.AbsSavedState: AbsSavedState(android.os.Parcelable)
androidx.core.view.ActionProvider: android.view.View onCreateActionView(android.view.MenuItem)
com.google.firebase.database.core.Context$1: Context$1(java.util.concurrent.ScheduledExecutorService,com.google.firebase.database.connection.ConnectionTokenProvider$GetTokenCallback)
com.google.android.gms.internal.common.zza: android.os.IBinder asBinder()
com.google.firebase.database.Query: com.google.firebase.database.Query endAt(boolean,java.lang.String)
com.google.android.gms.maps.internal.zzbz: com.google.android.gms.maps.internal.zze zza(android.content.Context)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: Toolbar$ExpandedActionViewMenuPresenter(androidx.appcompat.widget.Toolbar)
androidx.core.widget.TextViewCompat: void setLineHeight(android.widget.TextView,int)
androidx.fragment.app.DialogFragment: android.content.DialogInterface$OnDismissListener access$100(androidx.fragment.app.DialogFragment)
com.google.firebase.FirebaseOptions: FirebaseOptions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.google.firebase.FirebaseOptions$1)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.google.firebase.database.core.Repo$18: void onRequestResult(java.lang.String,java.lang.String)
com.google.android.gms.maps.model.Polyline: int hashCode()
androidx.lifecycle.SavedStateHandleController$OnRecreation: void onRecreated(androidx.savedstate.SavedStateRegistryOwner)
com.google.firebase.FirebaseApp: java.util.concurrent.atomic.AtomicBoolean access$500(com.google.firebase.FirebaseApp)
androidx.core.content.res.FontResourcesParserCompat: java.util.List readCerts(android.content.res.Resources,int)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeTypedList(android.os.Parcel,int,java.util.List,boolean)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable getCurrent()
androidx.core.view.inputmethod.InputContentInfoCompat: android.net.Uri getLinkUri()
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: CascadingMenuPopup$CascadingMenuInfo(androidx.appcompat.widget.MenuPopupWindow,androidx.appcompat.view.menu.MenuBuilder,int)
androidx.fragment.app.FragmentManager: void setExitAnimationOrder(androidx.fragment.app.Fragment,boolean)
com.google.android.gms.maps.internal.zzg: com.google.android.gms.maps.model.CameraPosition getCameraPosition()
kotlin.jvm.internal.Intrinsics: void checkNotNullExpressionValue(java.lang.Object,java.lang.String)
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component1(android.util.Pair)
androidx.activity.contextaware.ContextAwareHelper: void dispatchOnContextAvailable(android.content.Context)
androidx.appcompat.view.menu.StandardMenuPopup$1: void onGlobalLayout()
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: com.google.android.gms.tasks.Task deleteApp(java.util.Map)
io.flutter.embedding.android.FlutterActivity: java.lang.String getInitialRoute()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State)
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry: AppCompatResources$ColorStateListCacheEntry(android.content.res.ColorStateList,android.content.res.Configuration)
com.google.firebase.database.core.persistence.NoopPersistenceManager: void updateServerCache(com.google.firebase.database.core.view.QuerySpec,com.google.firebase.database.snapshot.Node)
androidx.appcompat.widget.RtlSpacingHelper: void setRelative(int,int)
androidx.appcompat.widget.ListPopupWindow: void setOverlapAnchor(boolean)
com.google.android.gms.internal.base.zab: android.os.IBinder asBinder()
com.google.zxing.qrcode.detector.FinderPatternFinder: boolean crossCheckDiagonal(int,int)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.zxing.aztec.AztecReader: AztecReader()
com.google.android.gms.common.api.internal.GoogleApiManager$zac: GoogleApiManager$zac(com.google.android.gms.common.api.internal.ApiKey,com.google.android.gms.common.Feature)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityManager access$900(io.flutter.view.AccessibilityBridge)
com.journeyapps.barcodescanner.camera.AutoFocusManager: void autoFocusAgainLater()
io.flutter.plugins.firebase.database.EventStreamHandler: void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean hideOverflowMenu()
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(android.view.ViewGroup$LayoutParams)
com.google.firebase.database.snapshot.LongNode: com.google.firebase.database.snapshot.LongNode updatePriority(com.google.firebase.database.snapshot.Node)
androidx.appcompat.widget.ResourceManagerInternal: ResourceManagerInternal()
com.google.zxing.oned.ITFReader: int[] decodeEnd(com.google.zxing.common.BitArray)
kotlinx.coroutines.JobSupport: void removeNode$kotlinx_coroutines_core(kotlinx.coroutines.JobNode)
io.flutter.plugin.mouse.MouseCursorPlugin$1: void activateSystemCursor(java.lang.String)
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: GradientColorInflaterCompat$ColorStops(java.util.List,java.util.List)
androidx.core.view.WindowInsetsCompat: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.baseflow.geolocator.utils.Utils: boolean openAppSettings(android.content.Context)
androidx.window.embedding.EmbeddingAdapter: java.util.Set translate(java.util.Set)
androidx.versionedparcelable.VersionedParcelParcel: byte[] readByteArray()
androidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()
com.google.android.gms.common.api.Status: java.lang.String getStatusMessage()
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty()
androidx.appcompat.view.menu.SubMenuWrapperICS: void clearHeader()
androidx.appcompat.graphics.drawable.DrawableContainer: void setHotspot(float,float)
androidx.appcompat.widget.ActionMenuView: boolean hasSupportDividerBeforeChildAt(int)
com.google.zxing.qrcode.QRCodeReader: void reset()
androidx.appcompat.view.menu.MenuWrapperICS: boolean isShortcutKey(int,android.view.KeyEvent)
androidx.fragment.app.FragmentStateManager: void activityCreated()
androidx.fragment.app.FragmentStateManager: void saveViewState()
com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator: int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern)
com.google.common.util.concurrent.AbstractFuture: java.util.concurrent.CancellationException cancellationExceptionWithCause(java.lang.String,java.lang.Throwable)
com.google.firebase.database.snapshot.EmptyNode: int hashCode()
io.flutter.plugins.googlemaps.MarkerController: void setAnchor(float,float)
io.flutter.plugin.platform.VirtualDisplayController: void onInputConnectionUnlocked()
com.google.android.gms.internal.location.zzc: void zza(android.os.Parcel,android.os.IInterface)
com.google.android.gms.internal.base.zab: void zab(int,android.os.Parcel)
com.google.firebase.database.core.persistence.TrackedQueryManager$6: TrackedQueryManager$6(com.google.firebase.database.core.persistence.TrackedQueryManager)
com.google.firebase.database.tubesock.MessageBuilderFactory$TextBuilder$2: MessageBuilderFactory$TextBuilder$2()
androidx.core.content.res.ResourcesCompat$ThemeCompat: void rebase(android.content.res.Resources$Theme)
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchGenericMotionEvent(android.view.MotionEvent)
com.google.android.gms.maps.internal.zzg: boolean isBuildingsEnabled()
androidx.core.app.NavUtils: android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName)
io.flutter.plugin.platform.AccessibilityEventsDelegate: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
com.google.firebase.database.connection.WebsocketConnection: void send(java.util.Map)
androidx.appcompat.widget.Toolbar: void onRestoreInstanceState(android.os.Parcelable)
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsControllerCompat$Impl: WindowInsetsControllerCompat$Impl()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int)
androidx.appcompat.widget.ActionBarOverlayLayout$3: ActionBarOverlayLayout$3(androidx.appcompat.widget.ActionBarOverlayLayout)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeString(android.os.Parcel,int,java.lang.String,boolean)
androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)
com.journeyapps.barcodescanner.Decoder: java.util.List getPossibleResultPoints()
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle access$500(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject)
com.journeyapps.barcodescanner.ViewfinderView: void setCameraPreview(com.journeyapps.barcodescanner.CameraPreview)
com.journeyapps.barcodescanner.SourceData: android.graphics.Bitmap getBitmap(android.graphics.Rect,int)
kotlin.jvm.internal.TypeIntrinsics: java.lang.Throwable sanitizeStackTrace(java.lang.Throwable)
com.google.android.gms.common.internal.GmsClient: java.util.Set getScopesForConnectionlessNonSignIn()
androidx.appcompat.widget.Toolbar: void collapseActionView()
com.google.android.gms.common.internal.zze: void zzb(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)
com.journeyapps.barcodescanner.camera.CameraManager: void configure()
com.google.android.gms.common.internal.ClientSettings: java.lang.String getRealClientPackageName()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
androidx.multidex.MultiDexApplication: MultiDexApplication()
com.google.firebase.database.connection.PersistentConnectionImpl$6: PersistentConnectionImpl$6(com.google.firebase.database.connection.PersistentConnectionImpl,java.lang.Long,com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingGet)
androidx.core.view.ViewPropertyAnimatorCompat: void start()
com.google.firebase.database.core.Repo$22: Repo$22(com.google.firebase.database.core.Repo,java.util.List)
com.google.android.gms.internal.location.zzp: zzp()
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderPlatformThread: PathProviderPlugin$PathProviderPlatformThread(io.flutter.plugins.pathprovider.PathProviderPlugin,io.flutter.plugins.pathprovider.PathProviderPlugin$1)
androidx.multidex.MultiDex$V14: void install(java.lang.ClassLoader,java.util.List)
androidx.core.view.MenuItemCompat: void setAlphabeticShortcut(android.view.MenuItem,char,int)
com.google.firebase.database.core.persistence.TrackedQuery: int hashCode()
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: java.util.List access$100(com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder)
androidx.core.view.DisplayCutoutCompat: int hashCode()
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: com.google.android.gms.tasks.Task setAutomaticDataCollectionEnabled(java.util.Map)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int)
io.flutter.plugins.flutterexifrotation.FlutterExifRotationPlugin: void onDetachedFromActivity()
com.google.firebase.database.core.Repo$20: void run()
androidx.core.widget.ListViewCompat: void scrollListBy(android.widget.ListView,int)
com.google.android.gms.common.internal.Objects$ToStringHelper: com.google.android.gms.common.internal.Objects$ToStringHelper add(java.lang.String,java.lang.Object)
io.flutter.plugins.googlemaps.MarkersController: void removeMarkers(java.util.List)
com.google.firebase.database.snapshot.IndexedNode: IndexedNode(com.google.firebase.database.snapshot.Node,com.google.firebase.database.snapshot.Index)
io.flutter.embedding.android.AndroidTouchProcessor: boolean onTouchEvent(android.view.MotionEvent,android.graphics.Matrix)
kotlin.ranges.IntProgressionIterator: boolean hasNext()
io.flutter.embedding.android.FlutterView: void convertToImageView()
com.google.android.gms.tasks.zzu: void setResult(java.lang.Object)
com.google.zxing.client.android.AmbientLightManager: void stop()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: boolean onStateChanged(int[])
com.google.android.gms.internal.maps.zzj: void remove()
com.google.firebase.database.core.Repo$10: void onRequestResult(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatSpinner$1: boolean onForwardingStarted()
androidx.fragment.app.FragmentTransitionCompat21: boolean canHandle(java.lang.Object)
kotlinx.coroutines.channels.ChannelResult$Companion: ChannelResult$Companion()
androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)
kotlinx.coroutines.DispatchedCoroutine: void afterResume(java.lang.Object)
com.google.android.gms.common.internal.ClientSettings$Builder: ClientSettings$Builder()
io.flutter.FlutterInjector$Builder: void fillDefaults()
androidx.appcompat.widget.ResourcesWrapper: android.content.res.ColorStateList getColorStateList(int)
androidx.fragment.app.FragmentManager: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)
com.google.android.gms.internal.location.zzat: void release()
com.journeyapps.barcodescanner.BarcodeView: com.journeyapps.barcodescanner.DecoderFactory createDefaultDecoderFactory()
androidx.appcompat.view.StandaloneActionMode: java.lang.CharSequence getTitle()
androidx.collection.SparseArrayCompat: androidx.collection.SparseArrayCompat clone()
androidx.collection.SimpleArrayMap: boolean containsValue(java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl: boolean updateForNightMode(int,boolean)
kotlin.jvm.internal.ReflectionFactory: java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda)
io.flutter.embedding.android.FlutterView: void removeOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.google.firebase.components.CycleDetector$ComponentNode: java.util.Set getDependencies()
com.google.android.gms.tasks.zzi: void cancel()
androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)
io.flutter.embedding.android.FlutterActivity: android.view.View createFlutterView()
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRampDownDuration(int)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: void requestPermission()
com.google.android.gms.common.ConnectionResult: java.lang.String zza(int)
com.google.android.gms.maps.model.PatternItem: PatternItem(int,java.lang.Float)
androidx.window.embedding.EmbeddingRule: EmbeddingRule()
androidx.appcompat.app.AppCompatDelegateImpl: void invalidateOptionsMenu()
com.baseflow.geolocator.GeolocatorPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.android.gms.internal.location.zzad: void writeToParcel(android.os.Parcel,int)
com.baseflow.geolocator.MethodCallHandlerImpl: void stopListening()
com.google.firebase.database.logging.AndroidLogger: void info(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness fromValue(java.lang.String)
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.FlutterJNI access$100(io.flutter.embedding.engine.loader.FlutterLoader)
androidx.appcompat.widget.AppCompatTextHelper: void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo)
androidx.core.provider.FontsContractCompat: android.graphics.Typeface requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setMyLocationEnabled(boolean)
androidx.collection.MapCollections$ValuesCollection: boolean containsAll(java.util.Collection)
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
androidx.appcompat.widget.Toolbar: void addCustomViewsWithGravity(java.util.List,int)
kotlinx.coroutines.scheduling.LimitingDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: long systemProp(java.lang.String,long,long,long)
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseIsoIec646Block()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
kotlin.text.StringsKt__StringsKt: int indexOf(java.lang.CharSequence,java.lang.String,int,boolean)
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem getItem(int)
androidx.core.graphics.drawable.DrawableCompat: int getAlpha(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.MenuItemImpl: char getNumericShortcut()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.ExtensionEmbeddingBackend getInstance()
androidx.core.graphics.PathParser$PathDataNode: void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float)
io.flutter.plugins.googlemaps.PolylineBuilder: void setWidth(float)
com.google.android.gms.common.internal.zzf: boolean zza(android.content.ServiceConnection)
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()
com.journeyapps.barcodescanner.InvertedDecoder: com.google.zxing.BinaryBitmap toBitmap(com.google.zxing.LuminanceSource)
com.google.firebase.database.snapshot.LeafNode: boolean isEmpty()
com.google.firebase.database.tubesock.WebSocketMessage: WebSocketMessage(byte[])
com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.CameraUpdate zoomBy(float)
androidx.appcompat.widget.AppCompatBackgroundHelper: void applySupportBackgroundTint()
androidx.appcompat.view.menu.MenuWrapperICS: boolean performIdentifierAction(int,int)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void zai(com.google.android.gms.common.ConnectionResult)
androidx.appcompat.app.TwilightCalculator: androidx.appcompat.app.TwilightCalculator getInstance()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3300(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.widget.AppCompatImageButton: boolean hasOverlappingRendering()
com.journeyapps.barcodescanner.camera.CameraThread: com.journeyapps.barcodescanner.camera.CameraThread getInstance()
com.google.android.gms.maps.internal.zzbt: zzbt()
io.flutter.plugins.imagepicker.ImagePickerDelegate: void launchPickVideoFromGalleryIntent()
androidx.appcompat.view.menu.MenuBuilder: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])
kotlinx.coroutines.android.HandlerContext: boolean equals(java.lang.Object)
com.google.zxing.ResultPoint: float crossProductZ(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)
com.google.firebase.database.android.SqlPersistenceStorageEngine: com.google.firebase.database.snapshot.Node loadNested(com.google.firebase.database.core.Path)
androidx.appcompat.app.AppCompatDialog: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.appcompat.view.menu.MenuBuilder: void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)
com.journeyapps.barcodescanner.DefaultDecoderFactory: com.journeyapps.barcodescanner.Decoder createDecoder(java.util.Map)
androidx.appcompat.view.menu.MenuBuilder: void removeGroup(int)
kotlinx.coroutines.AbstractCoroutine: void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable)
com.google.zxing.pdf417.decoder.BarcodeMetadata: int getRowCountUpperPart()
io.flutter.plugins.imagepicker.ImagePickerDelegate$2$1: ImagePickerDelegate$2$1(io.flutter.plugins.imagepicker.ImagePickerDelegate$2,io.flutter.plugins.imagepicker.ImagePickerDelegate$OnPathReadyListener)
androidx.fragment.app.DialogFragment: void onStart()
androidx.multidex.MultiDex$V14$JBMR2ElementConstructor: java.lang.Object newInstance(java.io.File,dalvik.system.DexFile)
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
com.google.zxing.datamatrix.decoder.DataBlock: int getNumDataCodewords()
androidx.appcompat.view.menu.MenuItemImpl: android.content.Intent getIntent()
kotlin.sequences.TransformingSequence$iterator$1: java.lang.Object next()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getOpacity()
androidx.fragment.app.DefaultSpecialEffectsController: void applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation)
androidx.appcompat.widget.ActionBarBackgroundDrawable: void setColorFilter(android.graphics.ColorFilter)
androidx.fragment.app.FragmentTransition$6: void run()
com.google.firebase.database.snapshot.EmptyNode: java.lang.String toString()
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.PolylineOptions startCap(com.google.android.gms.maps.model.Cap)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
com.google.firebase.FirebaseApp: java.lang.String normalize(java.lang.String)
androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
androidx.core.widget.NestedScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
androidx.collection.MapCollections$EntrySet: boolean removeAll(java.util.Collection)
com.google.firebase.database.snapshot.LeafNode: int compareTo(java.lang.Object)
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel: TextInputChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.appcompat.widget.SearchView: android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo)
androidx.versionedparcelable.VersionedParcelParcel: void writeBoolean(boolean)
io.flutter.plugins.googlemaps.GoogleMapController: void setInitialTileOverlays(java.util.List)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void parseDomainConfig(android.content.res.XmlResourceParser,org.json.JSONArray,boolean)
androidx.fragment.app.FragmentController: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
com.google.android.gms.common.internal.zan: java.lang.Object createFromParcel(android.os.Parcel)
androidx.fragment.app.FragmentManager: void dispatchAttach()
androidx.appcompat.app.AlertController: boolean canTextInput(android.view.View)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: com.google.zxing.pdf417.decoder.Codeword detectCodeword(com.google.zxing.common.BitMatrix,int,int,boolean,int,int,int,int)
androidx.appcompat.widget.AbsActionBarView: int measureChildView(android.view.View,int,int,int)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: void removePartialRows(java.util.List,java.util.List)
androidx.activity.result.contract.ActivityResultContract$SynchronousResult: java.lang.Object getValue()
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.CoroutineContext getContext()
com.google.firebase.database.core.persistence.TrackedQueryManager: com.google.firebase.database.core.persistence.TrackedQuery findTrackedQuery(com.google.firebase.database.core.view.QuerySpec)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions mapToolbarEnabled(boolean)
com.google.android.gms.maps.model.Polyline: void setStartCap(com.google.android.gms.maps.model.Cap)
com.journeyapps.barcodescanner.CameraPreview: boolean isActive()
com.google.firebase.database.FirebaseDatabaseComponent: com.google.firebase.database.FirebaseDatabase get(com.google.firebase.database.core.RepoInfo)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.maps.MapView: void onSaveInstanceState(android.os.Bundle)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumHeight()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$000(io.flutter.embedding.engine.systemchannels.AccessibilityChannel)
androidx.appcompat.widget.ThemeUtils: void checkAppCompatTheme(android.view.View,android.content.Context)
com.google.zxing.qrcode.detector.Detector: float sizeOfBlackWhiteBlackRun(int,int,int,int)
com.google.android.gms.maps.model.zzr: zzr()
androidx.activity.OnBackPressedCallback: void remove()
com.google.android.gms.dynamic.ObjectWrapper: ObjectWrapper(java.lang.Object)
androidx.core.view.MenuItemCompat: void setTooltipText(android.view.MenuItem,java.lang.CharSequence)
com.google.android.gms.common.api.internal.zace: void zac(com.google.android.gms.signin.internal.zak)
io.flutter.plugins.googlemaps.PolylineController: void setColor(int)
androidx.appcompat.view.menu.MenuBuilder: boolean hasVisibleItems()
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBNode remove(java.lang.Object,java.util.Comparator)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()
androidx.fragment.app.SpecialEffectsController$Operation: androidx.fragment.app.SpecialEffectsController$Operation$State getFinalState()
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl()
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setTextScaleFactor(float)
androidx.collection.MapCollections$EntrySet: boolean isEmpty()
com.google.zxing.oned.UPCEANExtension5Support: int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder)
kotlin.collections.IntIterator: java.lang.Integer next()
kotlinx.coroutines.CoroutineId$Key: CoroutineId$Key()
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.Toolbar: void setContentInsetsRelative(int,int)
com.google.android.gms.maps.GoogleMap: void setOnMapLongClickListener(com.google.android.gms.maps.GoogleMap$OnMapLongClickListener)
io.flutter.embedding.engine.dart.PlatformTaskQueue: PlatformTaskQueue()
com.google.firebase.database.logging.Logger$Level: com.google.firebase.database.logging.Logger$Level[] values()
kotlinx.coroutines.CoroutineExceptionHandler$Key: CoroutineExceptionHandler$Key()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.journeyapps.barcodescanner.DecoderThread$2: DecoderThread$2(com.journeyapps.barcodescanner.DecoderThread)
com.google.android.gms.common.Feature: long getVersion()
io.flutter.plugins.googlemaps.CircleController: void setRadius(double)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int getAutoSizeMaxTextSize()
androidx.appcompat.view.menu.MenuItemImpl: void setMenuInfo(android.view.ContextMenu$ContextMenuInfo)
androidx.core.widget.NestedScrollView: void endDrag()
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setHorizontalOriginalOffset(int)
kotlinx.coroutines.CoroutineId: CoroutineId(long)
androidx.window.embedding.SplitController$Companion: void initialize(android.content.Context,int)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void executeTask(kotlinx.coroutines.scheduling.Task)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode correctPrev(kotlinx.coroutines.internal.OpDescriptor)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getLayoutDirection()
com.google.android.gms.common.api.internal.zaag: zaag(java.lang.String)
com.google.android.gms.maps.MapView$zza: void onStop()
androidx.appcompat.view.menu.MenuPopupHelper: boolean isShowing()
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandleNode firstChild(kotlinx.coroutines.Incomplete)
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: int getApplyableNightMode()
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence lineSequence(java.lang.CharSequence)
androidx.appcompat.widget.ScrollingTabContainerView: void onDetachedFromWindow()
androidx.appcompat.widget.AppCompatToggleButton: AppCompatToggleButton(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.ActionBarContextView: void killMode()
com.google.firebase.database.snapshot.ChildrenNode: java.lang.String toString()
io.flutter.plugins.googlemaps.GoogleMapsPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.appcompat.app.WindowDecorActionBar$1: void onAnimationEnd(android.view.View)
com.google.firebase.database.core.SyncTree$7: java.lang.Object call()
com.google.firebase.database.connection.WebsocketConnection: void access$500(com.google.firebase.database.connection.WebsocketConnection,java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
kotlinx.coroutines.BeforeResumeCancelHandler: BeforeResumeCancelHandler()
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.tasks.Task zaa(com.google.android.gms.common.api.GoogleApi,com.google.android.gms.common.api.internal.RegisterListenerMethod,com.google.android.gms.common.api.internal.UnregisterListenerMethod)
androidx.fragment.app.FragmentStateManager$1: void onViewAttachedToWindow(android.view.View)
androidx.interpolator.view.animation.FastOutLinearInInterpolator: float getInterpolation(float)
kotlin.jvm.internal.FunctionReference: boolean isOperator()
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: java.util.List access$200(com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder)
androidx.lifecycle.SavedStateHandleController$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
kotlinx.coroutines.JobSupport: void onCompletionInternal(java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentState$1: java.lang.Object[] newArray(int)
net.touchcapture.qr.flutterqr.QRView: void startScan(java.util.List,io.flutter.plugin.common.MethodChannel$Result)
androidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)
kotlinx.coroutines.scheduling.CoroutineScheduler: void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean)
androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])
com.google.firebase.database.DatabaseReference$2: void run()
androidx.fragment.app.FragmentManager: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
com.google.zxing.client.android.InactivityTimer: void start()
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
com.lyokone.location.FlutterLocation: void changeSettings(java.lang.Integer,java.lang.Long,java.lang.Long,java.lang.Float)
kotlin.sequences.SequencesKt___SequencesKt: java.util.Collection toCollection(kotlin.sequences.Sequence,java.util.Collection)
com.google.android.gms.maps.model.Dash: Dash(float)
androidx.fragment.app.Fragment: boolean getPopDirection()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean canReuseBitmap(int,int)
androidx.core.graphics.PathParser: int nextStart(java.lang.String,int)
com.google.zxing.qrcode.decoder.Version: com.google.zxing.qrcode.decoder.Version getProvisionalVersionForDimension(int)
com.google.android.gms.common.internal.BaseGmsClient: boolean zza(com.google.android.gms.common.internal.BaseGmsClient,int,int,android.os.IInterface)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
com.google.firebase.database.core.SyncTree: java.util.List collectDistinctViewsForSubTree(com.google.firebase.database.core.utilities.ImmutableTree)
androidx.collection.MapCollections$EntrySet: MapCollections$EntrySet(androidx.collection.MapCollections)
androidx.fragment.app.DialogFragment: DialogFragment()
com.google.firebase.database.util.JsonMapper: java.lang.String serializeJsonValue(java.lang.Object)
com.google.firebase.database.core.SyncTree$KeepSyncedEventRegistration: void fireCancelEvent(com.google.firebase.database.DatabaseError)
androidx.fragment.app.FragmentManager: boolean dispatchContextItemSelected(android.view.MenuItem)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.NavigationChannel getNavigationChannel()
androidx.appcompat.app.AppCompatDelegateImpl: void onStop()
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$State getState()
androidx.collection.MapCollections$EntrySet: java.lang.Object[] toArray(java.lang.Object[])
com.google.firebase.database.connection.util.RetryHelper$Builder: com.google.firebase.database.connection.util.RetryHelper$Builder withMaxDelay(long)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void setTargetVelocity(float,float)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String,boolean)
kotlinx.coroutines.JobSupport: boolean childCancelled(java.lang.Throwable)
androidx.appcompat.view.menu.SubMenuBuilder: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setHotspot(float,float)
androidx.fragment.app.Fragment: int getPopEnterAnim()
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1: void onReceive(android.content.Context,android.content.Intent)
com.google.android.gms.common.api.internal.zaad: void zaa(com.google.android.gms.common.ConnectionResult,int)
com.lyokone.location.LocationPlugin$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
com.google.firebase.database.connection.util.StringListReader: void close()
com.google.firebase.database.Query: com.google.firebase.database.Query startAfter(boolean,java.lang.String)
androidx.activity.ComponentActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.google.android.gms.common.internal.ConnectionErrorMessages: java.lang.String getErrorMessage(android.content.Context,int)
com.google.android.gms.common.util.Base64Utils: java.lang.String encodeUrlSafeNoPadding(byte[])
kotlin.jvm.internal.ClassReference: int hashCode()
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: androidx.core.provider.FontRequest getRequest()
com.google.firebase.database.snapshot.RangeMerge: RangeMerge(com.google.firebase.database.connection.RangeMerge)
androidx.appcompat.widget.ResourcesWrapper: int getDimensionPixelOffset(int)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: int getCodewordBucketNumber(int[])
androidx.lifecycle.LifecycleRegistry: void setCurrentState(androidx.lifecycle.Lifecycle$State)
com.google.firebase.database.core.utilities.Utilities: java.lang.Integer tryParseInt(java.lang.String)
androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)
com.google.android.gms.common.internal.GmsClient: android.accounts.Account getAccount()
io.flutter.plugins.imagepicker.ImagePickerDelegate: void launchTakeVideoWithCameraIntent()
com.google.firebase.database.snapshot.Node$1: int compareTo(java.lang.Object)
com.google.firebase.database.core.view.View: void addEventRegistration(com.google.firebase.database.core.EventRegistration)
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: void resumeReceiveClosed(kotlinx.coroutines.channels.Closed)
com.journeyapps.barcodescanner.CaptureManager: android.os.Handler access$200(com.journeyapps.barcodescanner.CaptureManager)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: WindowInfoTrackerCallbackAdapter(androidx.window.layout.WindowInfoTracker)
com.baseflow.geolocator.location.ForegroundNotificationOptions: java.lang.String getNotificationText()
com.google.zxing.qrcode.detector.AlignmentPatternFinder: AlignmentPatternFinder(com.google.zxing.common.BitMatrix,int,int,int,int,float,com.google.zxing.ResultPointCallback)
io.flutter.embedding.engine.FlutterEngine: void destroy()
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence,boolean)
com.baseflow.geolocator.MethodCallHandlerImpl: void getLocationAccuracy(io.flutter.plugin.common.MethodChannel$Result,android.content.Context)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onRestoreInstanceState(android.os.Bundle)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int getIndexInArray()
androidx.activity.result.ActivityResult$1: java.lang.Object createFromParcel(android.os.Parcel)
kotlin.collections.EmptyMap: int size()
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Listener access$902(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener)
kotlinx.coroutines.channels.ChannelResult$Closed: boolean equals(java.lang.Object)
com.google.zxing.common.BitMatrix: java.lang.String toString()
com.google.zxing.PlanarYUVLuminanceSource: byte[] getMatrix()
com.google.android.gms.internal.location.zzbl: com.google.android.gms.common.api.Result createFailedResult(com.google.android.gms.common.api.Status)
com.google.zxing.common.BitMatrix: void set(int,int)
com.google.zxing.common.detector.WhiteRectangleDetector: com.google.zxing.ResultPoint[] centerEdges(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)
com.google.android.gms.signin.SignInOptions: java.lang.String getServerClientId()
com.google.firebase.database.core.Path: com.google.firebase.database.core.Path child(com.google.firebase.database.core.Path)
androidx.appcompat.widget.SuggestionsAdapter: java.lang.CharSequence formatUrl(java.lang.CharSequence)
com.google.android.gms.common.GoogleSignatureVerifier: com.google.android.gms.common.GoogleSignatureVerifier getInstance(android.content.Context)
com.google.android.gms.location.zzaj: zzaj(int,int,long,long)
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: com.google.android.gms.tasks.Task setValue(java.util.Map)
com.google.firebase.database.core.utilities.Pair: java.lang.Object getFirst()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean hasTranslucentRoot()
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation: SpecialEffectsController$FragmentStateManagerOperation(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager,androidx.core.os.CancellationSignal)
androidx.appcompat.widget.AppCompatImageHelper: android.content.res.ColorStateList getSupportImageTintList()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void markForRedelivery()
com.google.firebase.database.core.persistence.PruneForest$2: boolean evaluate(java.lang.Boolean)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.accounts.Account getAccount()
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.Cap getStartCap()
com.google.firebase.database.OnDisconnect$1: OnDisconnect$1(com.google.firebase.database.OnDisconnect,com.google.firebase.database.snapshot.Node,com.google.firebase.database.core.utilities.Pair)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onBackPressed()
androidx.fragment.app.FragmentActivity$1: FragmentActivity$1(androidx.fragment.app.FragmentActivity)
com.google.android.gms.tasks.zzj: zzj(com.google.android.gms.tasks.zzi,com.google.android.gms.tasks.Task)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getContentUri()
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int,int,int[])
com.google.firebase.database.snapshot.ChildrenNode: int hashCode()
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandleNode nextChild(kotlinx.coroutines.internal.LockFreeLinkedListNode)
io.flutter.plugins.googlemaps.GoogleMapController: void onCircleClick(com.google.android.gms.maps.model.Circle)
kotlin.jvm.internal.Intrinsics: void throwParameterIsNullNPE(java.lang.String)
androidx.core.widget.NestedScrollView: int computeHorizontalScrollOffset()
androidx.activity.ComponentActivity$2$2: void run()
androidx.core.graphics.drawable.WrappedDrawableApi21: void findAndCacheIsProjectedDrawableMethod()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$1900(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag)
androidx.core.view.ContentInfoCompat: java.lang.String toString()
io.flutter.view.AccessibilityBridge$StringAttributeType: AccessibilityBridge$StringAttributeType(java.lang.String,int)
androidx.appcompat.app.AlertController: void setupTitle(android.view.ViewGroup)
androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setActionView(android.view.View)
com.google.firebase.database.core.utilities.Validation: void validateWritableObject(java.lang.Object)
com.google.android.gms.location.zzo: zzo(com.google.android.gms.location.FusedLocationProviderClient,com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey)
androidx.appcompat.app.AppCompatActivity: void closeOptionsMenu()
com.google.zxing.qrcode.decoder.DataMask$4: boolean isMasked(int,int)
androidx.window.layout.WindowInfoTracker$Companion: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
com.google.zxing.common.BitMatrix: java.lang.String toString(java.lang.String,java.lang.String)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean isOverflowMenuShowPending()
kotlinx.coroutines.internal.ThreadContextKt: java.lang.Object threadContextElements(kotlin.coroutines.CoroutineContext)
com.google.android.gms.dynamic.zad: void onClick(android.view.View)
com.google.android.gms.common.api.GoogleApi: GoogleApi(android.app.Activity,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,com.google.android.gms.common.api.internal.StatusExceptionMapper)
kotlinx.coroutines.CancellableContinuationImpl: void completeResume(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void create(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
com.google.android.gms.maps.model.MarkerOptions: MarkerOptions()
kotlin.text.DelimitedRangesSequence: kotlin.jvm.functions.Function2 access$getGetNextMatch$p(kotlin.text.DelimitedRangesSequence)
com.google.firebase.database.core.ValueEventRegistration: void fireCancelEvent(com.google.firebase.database.DatabaseError)
androidx.appcompat.app.AlertController: void setCustomTitle(android.view.View)
androidx.appcompat.app.WindowDecorActionBar: int getNavigationMode()
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean onLevelChange(int)
androidx.collection.SparseArrayCompat: void gc()
com.google.android.gms.dynamite.DynamiteModule: int zza(android.content.Context,java.lang.String,boolean)
androidx.core.app.NotificationCompatJellybean: android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,androidx.core.app.NotificationCompat$Action)
kotlinx.coroutines.internal.SystemPropsKt: boolean systemProp(java.lang.String,boolean)
com.google.firebase.database.core.SyncTree: java.util.List applyTaggedQueryMerge(com.google.firebase.database.core.Path,java.util.Map,com.google.firebase.database.core.Tag)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingGet: com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionRequestCallback access$2400(com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingGet)
com.google.android.gms.common.ConnectionResult: int hashCode()
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p()
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: kotlin.coroutines.CoroutineContext$Key getKey()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1: PlatformViewsChannel$1$1(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1,io.flutter.plugin.common.MethodChannel$Result)
com.google.zxing.oned.Code128Reader: Code128Reader()
com.baseflow.geolocator.location.LocationAccuracyManager: com.baseflow.geolocator.location.LocationAccuracyStatus getLocationAccuracy(android.content.Context,com.baseflow.geolocator.errors.ErrorCallback)
com.google.android.gms.common.api.zza: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.plugins.urllauncher.WebViewActivity: android.content.Intent createIntent(android.content.Context,java.lang.String,boolean,boolean,android.os.Bundle)
com.baseflow.geolocator.location.BackgroundNotification: android.app.PendingIntent buildBringToFrontIntent()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean onLevelChange(int)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: AppCompatCompoundButtonHelper(android.widget.CompoundButton)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
com.google.android.gms.common.api.internal.zag: boolean zab(com.google.android.gms.common.api.internal.GoogleApiManager$zaa)
com.baseflow.geolocator.location.AndroidIconResource: java.lang.String getDefType()
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.util.List)
com.google.firebase.database.collection.RBTreeSortedMap: int size()
kotlinx.coroutines.CancellableContinuationImpl: void resume(java.lang.Object,kotlin.jvm.functions.Function1)
kotlin.text.StringsKt__StringsKt: int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: AppCompatDelegateImpl$AutoBatteryNightModeManager(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.JobNode makeNode(kotlin.jvm.functions.Function1,boolean)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
com.google.android.gms.common.api.internal.zao: java.lang.Object initialValue()
com.google.firebase.database.core.view.Change: com.google.firebase.database.snapshot.ChildKey getPrevName()
com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.Object)
kotlinx.coroutines.DispatchedTaskKt: void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean)
com.google.firebase.database.core.ThreadInitializer$1: void setName(java.lang.Thread,java.lang.String)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: MissingMainCoroutineDispatcher(java.lang.Throwable,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: void setupChannel(io.flutter.plugin.common.BinaryMessenger,android.content.Context)
androidx.fragment.app.FragmentTransition: java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean)
androidx.appcompat.view.menu.ActionMenuItem: int getNumericModifiers()
com.baseflow.geolocator.GeolocatorPlugin: void onDetachedFromActivityForConfigChanges()
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.view.AccessibilityBridge: boolean performAction(int,int,android.os.Bundle)
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter: TypefaceCompat$ResourcesCallbackAdapter(androidx.core.content.res.ResourcesCompat$FontCallback)
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
com.journeyapps.barcodescanner.CaptureManager: void closeAndFinish()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void write(byte[],int,int)
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: void onEnd()
com.google.android.gms.signin.internal.zak: com.google.android.gms.common.ConnectionResult getConnectionResult()
com.journeyapps.barcodescanner.ViewfinderView: void setLaserVisibility(boolean)
com.google.android.gms.common.api.internal.BackgroundDetector: BackgroundDetector()
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: void draw(android.graphics.Canvas)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void showSoftInputIfNecessary()
androidx.versionedparcelable.VersionedParcelParcel: int readInt()
androidx.fragment.app.FragmentManager: androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
com.google.android.gms.common.internal.ClientSettings: void setClientSessionId(java.lang.Integer)
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$600(io.flutter.view.AccessibilityBridge)
com.google.android.gms.internal.location.zzbc: zzbc(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder)
com.google.android.gms.common.GoogleApiAvailability: GoogleApiAvailability()
com.baseflow.geolocator.permission.PermissionManager: PermissionManager()
androidx.core.view.DisplayCutoutCompat: java.lang.String toString()
com.journeyapps.barcodescanner.CaptureActivity: void onCreate(android.os.Bundle)
com.google.android.gms.internal.location.zzaz: void zza(com.google.android.gms.internal.location.zzbd,com.google.android.gms.common.api.internal.ListenerHolder,com.google.android.gms.internal.location.zzaj)
com.google.firebase.database.collection.ArraySortedMap$1: ArraySortedMap$1(com.google.firebase.database.collection.ArraySortedMap,int,boolean)
androidx.window.layout.FoldingFeature$State: java.lang.String toString()
androidx.fragment.app.DefaultSpecialEffectsController$6: DefaultSpecialEffectsController$6(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation,boolean,androidx.collection.ArrayMap)
com.google.firebase.database.core.operation.OperationSource: boolean isFromServer()
com.google.android.gms.common.util.ProcessUtils: java.lang.String zzd(int)
com.google.android.gms.maps.internal.zzg: void resetMinMaxZoomPreference()
io.flutter.plugin.platform.PlatformView: void onFlutterViewAttached(android.view.View)
com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object)
io.flutter.embedding.android.AndroidTouchProcessor: void addPointerForIndex(android.view.MotionEvent,int,int,int,android.graphics.Matrix,java.nio.ByteBuffer)
androidx.appcompat.widget.ActionMenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
com.google.firebase.database.connection.Connection$DisconnectReason: Connection$DisconnectReason(java.lang.String,int)
com.google.firebase.components.ComponentRuntime: void maybeInitializeEagerComponents()
kotlin.collections.EmptyMap: java.util.Set keySet()
com.google.firebase.heartbeatinfo.HeartBeatInfoStorage: HeartBeatInfoStorage(android.content.Context)
com.google.android.gms.internal.common.zze: void dispatchMessage(android.os.Message)
androidx.core.app.NotificationManagerCompat: androidx.core.app.NotificationManagerCompat from(android.content.Context)
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener: boolean onForwardingStarted()
androidx.appcompat.widget.SearchView$8: SearchView$8(androidx.appcompat.widget.SearchView)
com.google.android.gms.common.internal.zzf: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
kotlin.collections.IntIterator: IntIterator()
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock: void shutdown()
com.journeyapps.barcodescanner.CameraPreview: int getDisplayRotation()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
kotlinx.coroutines.AbstractCoroutine: java.lang.String cancellationExceptionMessage()
kotlinx.coroutines.scheduling.TaskImpl: void run()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: AnimatedStateListDrawableCompat$AnimatableTransition(android.graphics.drawable.Animatable)
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2$1: void remove()
com.google.firebase.database.core.view.filter.ChildChangeAccumulator: java.util.List getChanges()
androidx.activity.result.IntentSenderRequest$Builder: androidx.activity.result.IntentSenderRequest$Builder setFlags(int,int)
com.google.firebase.database.core.SyncTree$KeepSyncedEventRegistration: SyncTree$KeepSyncedEventRegistration(com.google.firebase.database.core.view.QuerySpec)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
androidx.appcompat.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)
com.google.firebase.database.snapshot.CompoundHash: void processNode(com.google.firebase.database.snapshot.Node,com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder)
androidx.core.os.CancellationSignal: void waitForCancelFinishedLocked()
androidx.core.graphics.drawable.WrappedDrawableApi14: void setAutoMirrored(boolean)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean onPreparePanel(int,android.view.View,android.view.Menu)
androidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)
com.google.firebase.database.core.Repo$TransactionData: com.google.firebase.database.DatabaseError access$2900(com.google.firebase.database.core.Repo$TransactionData)
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: void run()
com.google.android.gms.maps.model.TileOverlayOptions: com.google.android.gms.maps.model.TileOverlayOptions visible(boolean)
com.google.zxing.aztec.detector.Detector: com.google.zxing.aztec.AztecDetectorResult detect(boolean)
com.google.firebase.database.core.view.filter.LimitedFilter: com.google.firebase.database.snapshot.IndexedNode updatePriority(com.google.firebase.database.snapshot.IndexedNode,com.google.firebase.database.snapshot.Node)
com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean isCancelled()
com.google.zxing.client.android.AmbientLightManager: void setTorch(boolean)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: boolean checkChecksum()
com.google.common.util.concurrent.AbstractFuture: boolean isDone()
androidx.window.embedding.SplitRule$Api30Impl: android.graphics.Rect getBounds(android.view.WindowMetrics)
androidx.cursoradapter.widget.CursorFilter: android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence)
androidx.core.view.KeyEventDispatcher: boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent)
io.flutter.plugins.imagepicker.ImageResizer: void copyExif(java.lang.String,java.lang.String)
kotlin.jvm.KotlinReflectionNotSupportedError: KotlinReflectionNotSupportedError()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
androidx.appcompat.view.menu.MenuWrapperICS: void setGroupVisible(int,boolean)
com.google.android.gms.common.zzb: java.lang.Object[] newArray(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.util.SparseArray getSpansFromViewTags(android.view.View)
androidx.lifecycle.LiveData: void onActive()
com.google.firebase.database.Query: com.google.firebase.database.Query startAt(java.lang.String,java.lang.String)
androidx.window.core.Version: int compareTo(java.lang.Object)
kotlin.random.AbstractPlatformRandom: int nextBits(int)
com.google.android.gms.maps.model.CustomCap: CustomCap(com.google.android.gms.maps.model.BitmapDescriptor)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: boolean isConnected()
io.flutter.plugin.platform.VirtualDisplayController: void onInputConnectionLocked()
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: androidx.fragment.app.FragmentTransitionImpl getHandlingImpl()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int updateFrames(android.graphics.drawable.AnimationDrawable,boolean)
com.google.firebase.database.core.SyncTree$13: SyncTree$13(com.google.firebase.database.core.SyncTree,com.google.firebase.database.core.EventRegistration)
io.flutter.embedding.android.FlutterSurfaceView$2: void onFlutterUiDisplayed()
com.google.firebase.database.collection.RBTreeSortedMap: boolean containsKey(java.lang.Object)
com.google.android.gms.common.internal.Preconditions: void checkArgument(boolean)
io.flutter.plugin.common.StandardMessageCodec: void writeInt(java.io.ByteArrayOutputStream,int)
com.google.firebase.database.connection.util.RetryHelper$Builder: RetryHelper$Builder(java.util.concurrent.ScheduledExecutorService,com.google.firebase.database.logging.Logger,java.lang.String)
androidx.core.graphics.TypefaceCompatUtil: boolean copyToFile(java.io.File,java.io.InputStream)
com.google.zxing.datamatrix.decoder.Version: com.google.zxing.datamatrix.decoder.Version[] buildVersions()
com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator: FinderPatternFinder$FurthestFromAverageComparator(float)
androidx.appcompat.widget.SearchView: void onSubmitQuery()
com.google.firebase.database.android.AndroidPlatform$2: AndroidPlatform$2(com.google.firebase.database.android.AndroidPlatform,com.google.firebase.database.connection.PersistentConnection)
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
io.flutter.plugin.editing.TextEditingDelta: TextEditingDelta(java.lang.CharSequence,int,int,java.lang.CharSequence,int,int,int,int)
androidx.fragment.app.FragmentManager$10: FragmentManager$10(androidx.fragment.app.FragmentManager)
androidx.multidex.MultiDex: void mkdirChecked(java.io.File)
kotlinx.coroutines.DispatchedCoroutine: boolean tryResume()
com.google.zxing.oned.rss.FinderPattern: int[] getStartEnd()
androidx.appcompat.app.WindowDecorActionBar$1: WindowDecorActionBar$1(androidx.appcompat.app.WindowDecorActionBar)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
io.flutter.plugins.googlemaps.TileOverlayController: java.util.Map getTileOverlayInfo()
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationCancel(android.view.View)
com.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component fromContext(java.lang.String,com.google.firebase.platforminfo.LibraryVersionComponent$VersionExtractor)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()
androidx.core.text.PrecomputedTextCompat$Params: PrecomputedTextCompat$Params(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)
androidx.fragment.app.FragmentHostCallback: FragmentHostCallback(android.app.Activity,android.content.Context,android.os.Handler,int)
com.google.android.gms.tasks.Tasks$zzc: void onCanceled()
com.google.android.gms.common.internal.BaseGmsClient: void zza(com.google.android.gms.common.internal.BaseGmsClient,int,android.os.IInterface)
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
com.google.firebase.database.core.SyncPoint: com.google.firebase.database.core.view.View getCompleteView()
androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)
com.google.firebase.database.core.view.ViewCache: com.google.firebase.database.core.view.CacheNode getServerCache()
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor: ListPopupWindow$PopupTouchInterceptor(androidx.appcompat.widget.ListPopupWindow)
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getContentDescription()
kotlinx.coroutines.CoroutineName: java.lang.String toString()
com.journeyapps.barcodescanner.DecoderThread$1: boolean handleMessage(android.os.Message)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setContentDescription(java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float)
androidx.appcompat.widget.TintContextWrapper: boolean shouldWrap(android.content.Context)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean tryAcquireCpuPermit()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
androidx.appcompat.view.menu.ListMenuPresenter: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: void setEnabled(boolean)
com.google.android.gms.maps.model.zzv: zzv()
io.flutter.plugin.editing.TextInputPlugin: void access$600(io.flutter.plugin.editing.TextInputPlugin,int,boolean)
androidx.interpolator.view.animation.LookupTableInterpolator: float getInterpolation(float)
com.google.firebase.database.Query: com.google.firebase.database.Query startAfter(double)
androidx.appcompat.widget.ToolbarWidgetWrapper$2: void onAnimationStart(android.view.View)
androidx.customview.view.AbsSavedState: void writeToParcel(android.os.Parcel,int)
kotlin.KotlinVersion$Companion: KotlinVersion$Companion()
androidx.fragment.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
androidx.window.embedding.ActivityRule: int hashCode()
com.google.firebase.database.snapshot.ChildrenNode: int compareTo(com.google.firebase.database.snapshot.Node)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String getServerAuthCode()
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean hasAddedItem()
io.flutter.embedding.android.FlutterSplashView: FlutterSplashView(android.content.Context)
androidx.appcompat.widget.ScrollingTabContainerView$1: void run()
androidx.collection.ArraySet: int indexOf(java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean setVisible(boolean,boolean)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTitle(java.lang.CharSequence)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
com.google.android.gms.common.internal.zae: void redirect()
com.google.android.gms.internal.location.zza: void transactAndReadExceptionReturnVoid(int,android.os.Parcel)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setDither(boolean)
com.google.firebase.database.core.view.filter.RangedFilter: RangedFilter(com.google.firebase.database.core.view.QueryParams)
com.google.firebase.database.connection.PersistentConnectionImpl: long nextRequestNumber()
androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
kotlinx.coroutines.Unconfined: Unconfined()
com.google.firebase.database.core.Repo: void onRangeMergeUpdate(java.util.List,java.util.List,java.lang.Long)
androidx.appcompat.widget.ActionBarContainer: void drawableStateChanged()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
com.google.android.gms.location.LocationSettingsStates: boolean isBlePresent()
androidx.appcompat.app.AppCompatActivity: void onConfigurationChanged(android.content.res.Configuration)
com.baseflow.geolocator.location.ServiceStatus: com.baseflow.geolocator.location.ServiceStatus[] values()
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
io.flutter.embedding.android.FlutterView: boolean dispatchKeyEvent(android.view.KeyEvent)
kotlin.collections.EmptyIterator: boolean hasPrevious()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$4402(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
com.google.android.gms.common.api.internal.zace: void onConnectionSuspended(int)
androidx.fragment.app.SpecialEffectsController: SpecialEffectsController(android.view.ViewGroup)
com.google.firebase.database.core.SyncTree$11: java.lang.Object call()
io.flutter.plugins.googlemaps.PolygonBuilder: boolean consumeTapEvents()
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void onConnected(android.os.Bundle)
androidx.appcompat.view.menu.ListMenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
com.google.firebase.database.core.CompoundWrite$2: java.lang.Void onNodeValue(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node,java.lang.Void)
com.google.firebase.database.snapshot.ChildKey: int compareTo(java.lang.Object)
androidx.tracing.Trace: boolean isEnabledFallback()
androidx.core.app.NotificationCompat$BigTextStyle: void addCompatExtras(android.os.Bundle)
kotlinx.coroutines.ChildHandleNode: void invoke(java.lang.Throwable)
androidx.lifecycle.ClassesInfoCache: ClassesInfoCache()
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.appcompat.widget.ActionMenuPresenter: ActionMenuPresenter(android.content.Context)
com.google.zxing.oned.rss.AbstractRSSReader: boolean isFinderPattern(int[])
com.baseflow.geolocator.location.FusedLocationClient: int toPriority(com.baseflow.geolocator.location.LocationAccuracy)
com.google.firebase.database.collection.RBTreeSortedMap$Builder$BooleanChunk: RBTreeSortedMap$Builder$BooleanChunk()
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.google.android.gms.internal.common.zza: android.os.Parcel zza()
androidx.core.view.DisplayCutoutCompat: int getSafeInsetBottom()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
io.flutter.plugin.editing.TextInputPlugin: android.view.autofill.AutofillManager access$500(io.flutter.plugin.editing.TextInputPlugin)
com.journeyapps.barcodescanner.BarcodeView: com.journeyapps.barcodescanner.Decoder createDecoder()
androidx.fragment.app.SpecialEffectsController$Operation: void markStartedSpecialEffect(androidx.core.os.CancellationSignal)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean isTitleOptional()
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean onLayoutDirectionChanged(int)
com.google.android.gms.common.internal.GoogleApiAvailabilityCache: int getClientAvailability(android.content.Context,com.google.android.gms.common.api.Api$Client)
androidx.fragment.app.FragmentStateManager: void attach()
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: void setResult(java.lang.Object)
androidx.appcompat.widget.Toolbar: int getChildHorizontalGravity(int)
net.touchcapture.qr.flutterqr.QRViewFactory: QRViewFactory(io.flutter.plugin.common.BinaryMessenger)
com.journeyapps.barcodescanner.DecoderThread: void access$100(com.journeyapps.barcodescanner.DecoderThread)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void run()
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
androidx.appcompat.view.SupportActionModeWrapper: void setSubtitle(java.lang.CharSequence)
com.google.android.gms.common.api.internal.zabi: zabi(com.google.android.gms.common.api.internal.GoogleApiManager$zaa)
com.google.android.gms.maps.model.CircleOptions: com.google.android.gms.maps.model.CircleOptions radius(double)
com.google.android.gms.maps.model.zzc: zzc()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isCheckable()
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback)
io.flutter.embedding.android.FlutterActivity: android.app.Activity getActivity()
androidx.core.view.NestedScrollingChildHelper: int[] getTempNestedScrollConsumed()
androidx.fragment.app.FragmentManager: void cleanupExec()
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: ExifInterface$ByteOrderedDataInputStream(java.io.InputStream,java.nio.ByteOrder)
com.google.firebase.database.core.persistence.PruneForest: boolean shouldPruneUnkeptDescendants(com.google.firebase.database.core.Path)
androidx.appcompat.widget.SearchView: android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
com.google.android.gms.dynamic.DeferredLifecycleHelper: void showGooglePlayUnavailableMessage(android.widget.FrameLayout)
com.google.firebase.components.Dependency: com.google.firebase.components.Dependency setOf(java.lang.Class)
androidx.appcompat.view.WindowCallbackWrapper: void onAttachedToWindow()
com.google.firebase.internal.DataCollectionConfigStorage: boolean readAutoDataCollectionEnabled()
com.google.firebase.database.core.SyncTree$ListenContainer: java.lang.String getSimpleHash()
com.journeyapps.barcodescanner.CameraPreview: void setUseTextureView(boolean)
androidx.appcompat.widget.ActionMenuView: boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl)
com.lyokone.location.LocationPlugin$1: LocationPlugin$1(com.lyokone.location.LocationPlugin)
io.flutter.embedding.android.FlutterActivity: boolean isDebuggable()
androidx.core.view.ViewCompat: boolean isScreenReaderFocusable(android.view.View)
kotlinx.coroutines.JobSupport: int startInternal(java.lang.Object)
io.flutter.view.AccessibilityBridge: void setOnAccessibilityChangeListener(io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener)
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void unspecifiedAction(int)
com.google.android.gms.signin.internal.zab: com.google.android.gms.common.api.Status getStatus()
androidx.fragment.app.FragmentStateManager: int computeExpectedState()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void finalize()
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean showOverflowMenu()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void setAccessibilityMessageHandler(io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler)
com.google.android.gms.common.api.Status: Status(int,java.lang.String)
com.google.firebase.database.core.ValueProvider$DeferredValueProvider: com.google.firebase.database.snapshot.Node node()
com.google.firebase.database.collection.LLRBValueNode: void setLeft(com.google.firebase.database.collection.LLRBNode)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingListen: com.google.firebase.database.connection.PersistentConnectionImpl$QuerySpec access$700(com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingListen)
com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl: BaseImplementation$ApiMethodImpl(com.google.android.gms.common.api.Api,com.google.android.gms.common.api.GoogleApiClient)
androidx.appcompat.widget.RtlSpacingHelper: int getRight()
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBNode getLeft()
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.MarkerOptions anchor(float,float)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object removeFirstOrNull()
com.google.android.gms.maps.model.TileOverlayOptions: com.google.android.gms.internal.maps.zzaf zza(com.google.android.gms.maps.model.TileOverlayOptions)
androidx.window.layout.HardwareFoldingFeature: HardwareFoldingFeature(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State)
kotlinx.coroutines.Empty: Empty(boolean)
io.flutter.plugins.googlemaps.GoogleMapController: void animateCamera(com.google.android.gms.maps.CameraUpdate)
androidx.appcompat.widget.DropDownListView: void positionSelectorLikeFocusCompat(int,android.view.View)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: TextInputChannel$Configuration$Autofill(java.lang.String,java.lang.String[],java.lang.String,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
androidx.fragment.app.Fragment: java.lang.Object getHost()
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setMyLocationButtonEnabled(boolean)
androidx.core.view.ViewCompat: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
com.google.android.gms.location.LocationRequest: boolean equals(java.lang.Object)
androidx.exifinterface.media.ExifInterface: boolean startsWith(byte[],byte[])
com.google.android.gms.maps.GoogleMap: float getMaxZoomLevel()
androidx.versionedparcelable.VersionedParcel: void writeString(java.lang.String,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2112(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
com.google.zxing.client.android.InactivityTimer: void registerReceiver()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3802(io.flutter.view.AccessibilityBridge$SemanticsNode,java.util.List)
androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)
com.google.zxing.oned.rss.expanded.decoders.AI01393xDecoder: java.lang.String parseInformation()
io.flutter.embedding.engine.FlutterEngine: boolean isAttachedToJni()
io.flutter.embedding.android.FlutterSplashView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.components.Component: com.google.firebase.components.Component$Builder builder(java.lang.Class)
com.google.android.gms.common.api.GoogleApi$Settings: GoogleApi$Settings(com.google.android.gms.common.api.internal.StatusExceptionMapper,android.accounts.Account,android.os.Looper,com.google.android.gms.common.api.zab)
com.google.android.gms.maps.model.Polygon: void setStrokeWidth(float)
androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)
io.flutter.view.AccessibilityBridge$SemanticsNode: void access$4900(io.flutter.view.AccessibilityBridge$SemanticsNode,float[],java.util.Set,boolean)
kotlinx.coroutines.channels.ArrayChannel: ArrayChannel(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
androidx.fragment.app.Fragment: void setAnimations(int,int,int,int)
io.flutter.plugins.googlemaps.CircleBuilder: com.google.android.gms.maps.model.CircleOptions build()
io.flutter.view.AccessibilityBridge$SemanticsNode: android.graphics.Rect getGlobalRect()
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBValueNode colorFlip()
com.google.android.gms.dynamite.zze: zze()
com.google.firebase.database.core.operation.Operation: com.google.firebase.database.core.Path getPath()
kotlin.internal.ProgressionUtilKt: int getProgressionLastElement(int,int,int)
androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence[] getTextArray(int)
com.google.android.gms.internal.maps.zzae: float getZIndex()
com.google.firebase.database.connection.WebsocketConnection$1: void run()
com.google.firebase.database.snapshot.LeafNode: com.google.firebase.database.snapshot.ChildKey getPredecessorChildKey(com.google.firebase.database.snapshot.ChildKey)
com.google.android.gms.common.GoogleApiAvailability: java.lang.String zag()
com.google.firebase.database.core.Repo$5$1: void onRequestResult(java.lang.String,java.lang.String)
kotlinx.coroutines.channels.ClosedSendChannelException: ClosedSendChannelException(java.lang.String)
io.flutter.plugins.googlemaps.MarkersController: void addMarker(java.lang.String,com.google.android.gms.maps.model.MarkerOptions,boolean)
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
androidx.core.app.ActivityRecreator$2: ActivityRecreator$2(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks)
com.google.android.gms.common.internal.ResolveAccountResponse: boolean isFromCrossClientAuth()
com.google.firebase.database.core.persistence.PruneForest: boolean prunesAnything()
androidx.lifecycle.LiveData$ObserverWrapper: void detachObserver()
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String)
androidx.fragment.app.FragmentManager: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread: void run()
com.google.firebase.database.core.view.ViewProcessor: ViewProcessor(com.google.firebase.database.core.view.filter.NodeFilter)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()
io.flutter.plugins.flutter_plugin_android_lifecycle.FlutterAndroidLifecyclePlugin: FlutterAndroidLifecyclePlugin()
com.google.android.gms.dynamic.zaa: void onDelegateCreated(com.google.android.gms.dynamic.LifecycleDelegate)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean deleteSurroundingTextInCodePoints(int,int)
io.flutter.plugin.common.StringCodec: StringCodec()
com.google.android.gms.common.api.internal.RegisterListenerMethod: boolean shouldAutoResolveMissingFeatures()
io.flutter.plugins.googlemaps.PolylineBuilder: void setColor(int)
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.internal.IGmsServiceBroker zza(com.google.android.gms.common.internal.BaseGmsClient,com.google.android.gms.common.internal.IGmsServiceBroker)
com.google.firebase.database.core.persistence.TrackedQueryManager$3: boolean evaluate(com.google.firebase.database.core.persistence.TrackedQuery)
com.lyokone.location.FlutterLocation: boolean onRequestPermissionsResultHandler(int,java.lang.String[],int[])
androidx.multidex.MultiDex$V14: MultiDex$V14()
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.embedding.android.FlutterActivity: void onPause()
io.flutter.view.VsyncWaiter: VsyncWaiter(io.flutter.embedding.engine.FlutterJNI)
androidx.appcompat.app.AppCompatDelegateImpl: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionStart(android.transition.Transition)
androidx.appcompat.app.AlertController: void setMessage(java.lang.CharSequence)
com.google.zxing.maxicode.decoder.DecodedBitStreamParser: int getPostCode2Length(byte[])
androidx.appcompat.view.StandaloneActionMode: StandaloneActionMode(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean)
io.flutter.plugin.editing.InputConnectionAdaptor: void didChangeEditingState(boolean,boolean,boolean)
com.google.firebase.database.snapshot.LongNode: LongNode(java.lang.Long,com.google.firebase.database.snapshot.Node)
com.google.firebase.database.snapshot.LongNode: int compareLeafValues(com.google.firebase.database.snapshot.LongNode)
io.flutter.embedding.engine.systemchannels.NavigationChannel: NavigationChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.fragment.app.SpecialEffectsController: void enqueueHide(androidx.fragment.app.FragmentStateManager)
androidx.appcompat.widget.ActionBarOverlayLayout: void addActionBarHideOffset()
androidx.fragment.app.FragmentManagerState: void writeToParcel(android.os.Parcel,int)
androidx.core.text.PrecomputedTextCompat$Params: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void drawableStateChanged()
com.google.firebase.components.Lazy: java.lang.Object get()
com.google.zxing.aztec.AztecReader: void reset()
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: void onActionViewCollapsed()
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
io.flutter.plugins.flutterexifrotation.FlutterExifRotationPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String getEmail()
kotlin.text.StringsKt__IndentKt$getIndentFunction$1: java.lang.Object invoke(java.lang.Object)
io.flutter.plugin.platform.VirtualDisplayController: android.view.View getView()
com.google.android.gms.maps.model.PolygonOptions: boolean isVisible()
com.google.android.gms.maps.internal.zzbx: boolean isMapToolbarEnabled()
com.google.firebase.database.snapshot.StringNode: int hashCode()
androidx.core.content.res.ResourcesCompat: boolean isColorInt(android.content.res.Resources,int)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet)
androidx.appcompat.app.WindowDecorActionBar: void setHasEmbeddedTabs(boolean)
com.google.firebase.database.connection.WebsocketConnection$2: WebsocketConnection$2(com.google.firebase.database.connection.WebsocketConnection)
com.google.firebase.database.Query: com.google.firebase.database.Query endBefore(com.google.firebase.database.snapshot.Node,java.lang.String)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat()
androidx.appcompat.widget.ActionBarContextView: void initTitle()
androidx.window.embedding.ExtensionEmbeddingBackend: void getSplitChangeCallbacks$annotations()
androidx.appcompat.view.ActionBarPolicy: int getMaxActionButtons()
androidx.appcompat.view.menu.SubMenuBuilder: boolean isQwertyMode()
kotlin.random.Random: int nextInt()
com.google.zxing.oned.rss.expanded.ExpandedPair: com.google.zxing.oned.rss.FinderPattern getFinderPattern()
com.google.firebase.components.Preconditions: void checkState(boolean,java.lang.String)
androidx.appcompat.widget.AppCompatImageHelper: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.JobSupport$Finishing: boolean isActive()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
androidx.window.embedding.SplitPairRule: boolean getFinishPrimaryWithSecondary()
com.google.firebase.database.logging.DefaultLogger: boolean shouldLog(com.google.firebase.database.logging.Logger$Level,java.lang.String)
androidx.window.core.Version: java.lang.String getDescription()
kotlin.Pair: java.lang.Object component2()
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
androidx.core.app.NotificationManagerCompat$SideChannelManager: NotificationManagerCompat$SideChannelManager(android.content.Context)
com.google.common.util.concurrent.AbstractFuture$TrustedFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)
com.google.firebase.database.FirebaseDatabase: void setPersistenceEnabled(boolean)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setActionView(int)
androidx.appcompat.graphics.drawable.DrawableWrapper: int getMinimumHeight()
com.google.firebase.database.android.AndroidPlatform$1: AndroidPlatform$1(com.google.firebase.database.android.AndroidPlatform,com.google.firebase.database.logging.LogWrapper)
com.google.firebase.database.core.Repo: com.google.firebase.database.logging.LogWrapper access$100(com.google.firebase.database.core.Repo)
com.google.zxing.qrcode.decoder.Version: int getDimensionForVersion()
com.google.zxing.oned.CodaBarReader: CodaBarReader()
com.google.zxing.oned.Code39Reader: Code39Reader(boolean,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.google.android.gms.internal.location.zzak: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
com.google.firebase.database.connection.ConnectionUtils: void hardAssert(boolean,java.lang.String,java.lang.Object[])
androidx.appcompat.graphics.drawable.DrawableContainer: int getOpacity()
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: void onCloseWebView(io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.common.api.Status: Status(int,int,java.lang.String,android.app.PendingIntent)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: boolean hasNext()
io.flutter.embedding.android.SplashScreen: boolean doesSplashViewRememberItsTransition()
io.flutter.embedding.android.FlutterActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray)
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: boolean buildingRange()
com.google.firebase.database.core.SyncTree: java.util.List applyOperationDescendantsHelper(com.google.firebase.database.core.operation.Operation,com.google.firebase.database.core.utilities.ImmutableTree,com.google.firebase.database.snapshot.Node,com.google.firebase.database.core.WriteTreeRef)
com.google.firebase.database.core.RepoManager$1: RepoManager$1(com.google.firebase.database.core.Repo)
androidx.appcompat.widget.AppCompatSpinner: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.SearchView: android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)
com.google.firebase.database.snapshot.ChildKey: ChildKey(java.lang.String)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setChecked(boolean)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: android.app.Activity getActivity()
io.flutter.plugin.editing.TextInputPlugin: void updateAutofillConfigurationIfNeeded(io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
com.google.android.gms.internal.location.zzbd: zzbd(com.google.android.gms.location.LocationRequest,java.util.List,java.lang.String,boolean,boolean,boolean,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.journeyapps.barcodescanner.DecoderThread$2: void onPreview(com.journeyapps.barcodescanner.SourceData)
com.google.firebase.database.snapshot.DoubleNode: com.google.firebase.database.snapshot.LeafNode$LeafType getLeafType()
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeFloatObject(android.os.Parcel,int,java.lang.Float,boolean)
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: MenuItemWrapperICS$OnActionExpandListenerWrapper(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener)
io.flutter.view.AccessibilityBridge$SemanticsNode: void collectRoutes(java.util.List)
androidx.core.widget.AutoScrollHelper: void startAnimating()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void onActive()
com.google.firebase.database.tubesock.WebSocket$1: WebSocket$1()
com.google.zxing.oned.UPCAReader: com.google.zxing.BarcodeFormat getBarcodeFormat()
com.google.firebase.database.core.view.View: com.google.firebase.database.snapshot.Node getCompleteServerCache(com.google.firebase.database.core.Path)
com.google.android.gms.common.api.Scope: java.lang.String toString()
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int)
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: void decodeAnsiX12Segment(com.google.zxing.common.BitSource,java.lang.StringBuilder)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: boolean onActivityResult(int,int,android.content.Intent)
com.google.firebase.database.core.view.QuerySpec: com.google.firebase.database.core.Path getPath()
kotlinx.coroutines.internal.DispatchedContinuation: kotlinx.coroutines.CancellableContinuationImpl claimReusableCancellableContinuation()
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionStart(android.transition.Transition)
com.google.android.gms.tasks.zzn: zzn(com.google.android.gms.tasks.zzm,com.google.android.gms.tasks.Task)
androidx.appcompat.view.menu.MenuWrapperICS: void clear()
androidx.window.embedding.MatcherUtils: boolean areComponentsMatching$window_release(android.content.ComponentName,android.content.ComponentName)
androidx.loader.app.LoaderManagerImpl: LoaderManagerImpl(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)
com.journeyapps.barcodescanner.camera.CameraManager$CameraPreviewCallback: CameraManager$CameraPreviewCallback(com.journeyapps.barcodescanner.camera.CameraManager)
io.flutter.plugin.platform.PlatformViewsController: int toPhysicalPixels(double)
kotlin.text.StringsKt__StringsKt: int lastIndexOf(java.lang.CharSequence,char,int,boolean)
com.google.firebase.database.Query: com.google.firebase.database.Query startAfter(double,java.lang.String)
com.google.android.gms.common.stats.ConnectionTracker: void unbindService(android.content.Context,android.content.ServiceConnection)
androidx.appcompat.view.menu.BaseMenuWrapper: android.view.SubMenu getSubMenuWrapper(android.view.SubMenu)
androidx.appcompat.widget.ActionBarContextView: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
com.google.firebase.components.CycleDetector$ComponentNode: CycleDetector$ComponentNode(com.google.firebase.components.Component)
androidx.collection.SimpleArrayMap: void clear()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean shouldDelayChildPressedState()
com.google.zxing.pdf417.decoder.DetectionResult: int adjustRowNumbers()
androidx.fragment.app.FragmentActivity: void onStateNotSaved()
androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: void run()
com.google.firebase.database.core.Repo: void startTransaction(com.google.firebase.database.core.Path,com.google.firebase.database.Transaction$Handler,boolean)
com.google.android.gms.maps.internal.zzb: com.google.android.gms.dynamic.IObjectWrapper newLatLng(com.google.android.gms.maps.model.LatLng)
com.google.firebase.database.core.ValidationPath: int utf8Bytes(java.lang.CharSequence)
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task zaa(int,com.google.android.gms.common.api.internal.TaskApiCall)
io.flutter.plugin.platform.PlatformView: void onInputConnectionLocked()
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions latLngBoundsForCameraTarget(com.google.android.gms.maps.model.LatLngBounds)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.appcompat.view.menu.MenuBuilder: int findGroupIndex(int)
com.baseflow.geolocator.GeolocatorPlugin: void initialize(com.baseflow.geolocator.GeolocatorLocationService)
kotlin.coroutines.jvm.internal.DebugProbesKt: void probeCoroutineSuspended(kotlin.coroutines.Continuation)
com.google.firebase.database.core.utilities.Validation: void validateRootPathString(java.lang.String)
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener: ScrollingTabContainerView$TabClickListener(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getPrimaryActivityName()
com.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task continueWith(com.google.android.gms.tasks.Continuation)
androidx.fragment.app.FragmentActivity$HostCallbacks: void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.core.text.PrecomputedTextCompat: int length()
androidx.activity.result.ActivityResultRegistry: void unregister(java.lang.String)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$2900(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
com.google.android.gms.common.api.internal.ApiKey: java.lang.String getApiName()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromService()
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityStopped(android.app.Activity)
com.google.android.gms.common.api.internal.BackgroundDetector: com.google.android.gms.common.api.internal.BackgroundDetector getInstance()
io.flutter.plugins.googlemaps.GoogleMapController: void setRotateGesturesEnabled(boolean)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class)
com.google.android.gms.signin.internal.zah: zah()
androidx.appcompat.app.AppCompatDelegateImpl: void onPostCreate(android.os.Bundle)
androidx.appcompat.view.menu.ListMenuPresenter: ListMenuPresenter(int,int)
com.google.android.gms.internal.location.zzm: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: androidx.appcompat.app.ActionBar$Tab getTab()
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String)
com.google.firebase.database.connection.ConnectionContext: java.lang.String getApplicationId()
com.google.firebase.database.connection.PersistentConnectionImpl: void access$1100(com.google.firebase.database.connection.PersistentConnectionImpl,boolean)
com.google.android.gms.maps.model.TileOverlayOptions: com.google.android.gms.maps.model.TileOverlayOptions transparency(float)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentTransaction beginTransaction()
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getKey()
com.google.android.gms.tasks.Tasks$zza: void onCanceled()
io.flutter.plugin.editing.ListenableEditingState: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void setByteOrder(java.nio.ByteOrder)
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: android.os.Parcelable onSaveInstanceState()
com.google.android.gms.maps.model.CameraPosition: int hashCode()
io.flutter.plugin.platform.PlatformViewsController: void attachAccessibilityBridge(io.flutter.view.AccessibilityBridge)
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: com.google.firebase.database.FirebaseDatabase getDatabase(java.util.Map)
androidx.core.app.ActivityRecreator: boolean needsRelaunchCall()
com.google.zxing.pdf417.PDF417ResultMetadata: void setChecksum(int)
com.google.android.gms.common.internal.ConnectionErrorMessages: java.lang.String getErrorDialogButtonMessage(android.content.Context,int)
androidx.core.graphics.drawable.WrappedDrawableApi21: boolean setState(int[])
com.google.android.gms.location.LocationResult: android.location.Location getLastLocation()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void applyTheme(android.content.res.Resources$Theme)
kotlinx.coroutines.InvokeOnCancelling: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addStateSet(int[],android.graphics.drawable.Drawable,int)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
com.google.android.gms.common.GoogleApiAvailability: boolean zaa(android.content.Context,com.google.android.gms.common.ConnectionResult,int)
com.google.android.gms.internal.maps.zza: android.os.Parcel zza(int,android.os.Parcel)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.firebase.database.core.persistence.TrackedQuery: TrackedQuery(long,com.google.firebase.database.core.view.QuerySpec,long,boolean,boolean)
io.flutter.embedding.android.FlutterView$3: void accept(androidx.window.layout.WindowLayoutInfo)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void draw(android.graphics.Canvas)
com.google.firebase.database.core.view.DataEvent: com.google.firebase.database.core.view.Event$EventType getEventType()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void performCompletion()
io.flutter.embedding.android.AndroidTouchProcessor: boolean onTouchEvent(android.view.MotionEvent)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void onGlobalLayout()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onNewIntent(android.content.Intent)
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter: void onTypefaceRetrieved(android.graphics.Typeface)
net.touchcapture.qr.flutterqr.FlutterQrPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.android.gms.maps.model.PolygonOptions: PolygonOptions(java.util.List,java.util.List,float,int,int,float,boolean,boolean,boolean,int,java.util.List)
kotlin.reflect.KVisibility: KVisibility(java.lang.String,int)
kotlin.text.CharsKt__CharJVMKt: int checkRadix(int)
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter(java.lang.String,java.lang.String,java.lang.String)
io.flutter.view.AccessibilityBridge: void access$1300(io.flutter.view.AccessibilityBridge)
androidx.appcompat.widget.AppCompatTextView: void onMeasure(int,int)
androidx.collection.MapCollections$EntrySet: java.util.Iterator iterator()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setCustomView(android.view.View)
androidx.arch.core.executor.DefaultTaskExecutor$1: java.lang.Thread newThread(java.lang.Runnable)
androidx.core.widget.NestedScrollView$SavedState: NestedScrollView$SavedState(android.os.Parcel)
androidx.fragment.app.FragmentTransition$6: FragmentTransition$6(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect)
com.google.android.gms.maps.model.PolygonOptions: java.util.List getPoints()
com.google.firebase.database.core.Repo: com.google.firebase.database.core.SyncTree access$900(com.google.firebase.database.core.Repo)
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: void onAnimationEnd(android.view.View)
com.journeyapps.barcodescanner.CameraPreview: java.lang.String access$200()
com.google.firebase.database.core.Repo$24: void visitTree(com.google.firebase.database.core.utilities.Tree)
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onPause(androidx.lifecycle.LifecycleOwner)
androidx.multidex.MultiDexExtractor: java.util.List load(android.content.Context,java.lang.String,boolean)
androidx.appcompat.widget.TooltipCompatHandler: boolean onHover(android.view.View,android.view.MotionEvent)
io.flutter.plugins.imagepicker.ImagePickerDelegate$4: ImagePickerDelegate$4(io.flutter.plugins.imagepicker.ImagePickerDelegate)
com.google.android.gms.common.api.internal.TaskUtil: com.google.android.gms.tasks.Task toVoidTaskThatFailsOnFalse(com.google.android.gms.tasks.Task)
com.google.firebase.database.DataSnapshot: java.lang.Object getValue()
com.google.firebase.database.core.Repo: void sendReadyTransactions(com.google.firebase.database.core.utilities.Tree)
com.google.android.gms.maps.model.Marker: boolean equals(java.lang.Object)
com.google.android.gms.maps.model.Marker: void setZIndex(float)
androidx.lifecycle.ReportFragment: void onStop()
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo: DartMessenger$HandlerInfo(io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.gms.maps.internal.zzg: zzg(android.os.IBinder)
com.google.zxing.BinaryBitmap: com.google.zxing.BinaryBitmap rotateCounterClockwise()
io.flutter.embedding.engine.loader.FlutterLoader: boolean automaticallyRegisterPlugins()
com.google.firebase.database.tubesock.WebSocketWriter: void access$000(com.google.firebase.database.tubesock.WebSocketWriter)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void onViewAttachedToWindow(android.view.View)
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator: int compare(com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions,com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions)
com.google.android.gms.internal.maps.zzj: void setStrokeWidth(float)
com.journeyapps.barcodescanner.CaptureManager: CaptureManager(android.app.Activity,com.journeyapps.barcodescanner.DecoratedBarcodeView)
kotlinx.coroutines.NonDisposableHandle: boolean childCancelled(java.lang.Throwable)
com.google.android.gms.common.api.internal.zaj: java.util.Set zan()
com.google.firebase.database.core.Repo: long getNextWriteId()
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
androidx.appcompat.widget.TooltipCompatHandler: void hide()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: boolean isClipPath()
com.google.firebase.database.core.view.CancelEvent: void fire()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean hasWindowFocus()
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions rotateGesturesEnabled(boolean)
com.google.firebase.database.OnDisconnect: com.google.android.gms.tasks.Task onDisconnectSetInternal(java.lang.Object,com.google.firebase.database.snapshot.Node,com.google.firebase.database.DatabaseReference$CompletionListener)
com.google.android.gms.auth.api.signin.internal.Storage: java.lang.String zaf(java.lang.String)
io.flutter.view.AccessibilityBridge: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$6700(io.flutter.view.AccessibilityBridge,int)
androidx.appcompat.view.menu.MenuItemImpl$1: MenuItemImpl$1(androidx.appcompat.view.menu.MenuItemImpl)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setInitialTileOverlays(java.util.List)
androidx.fragment.app.FragmentManager$1: void handleOnBackPressed()
com.google.firebase.database.core.view.QueryParams: QueryParams()
com.google.android.gms.maps.model.Marker: void setIcon(com.google.android.gms.maps.model.BitmapDescriptor)
com.google.android.gms.common.api.internal.BackgroundDetector: boolean isInBackground()
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream)
com.google.android.gms.maps.GoogleMap: void setBuildingsEnabled(boolean)
io.flutter.plugins.googlemaps.GoogleMapController: void setMinMaxZoomPreference(java.lang.Float,java.lang.Float)
com.google.firebase.database.core.utilities.encoding.CustomClassMapper: java.util.Map convertToPlainJavaTypes(java.util.Map)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getOpacity()
com.google.firebase.database.snapshot.ChildrenNode: java.lang.Object getValue()
com.google.zxing.qrcode.detector.FinderPatternFinder: boolean foundPatternDiagonal(int[])
kotlinx.coroutines.internal.MainDispatcherLoader: MainDispatcherLoader()
androidx.appcompat.view.menu.ActionMenuItem: android.view.SubMenu getSubMenu()
com.google.android.gms.maps.zzz: void onMapLongClick(com.google.android.gms.maps.model.LatLng)
com.lyokone.location.LocationPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)
io.flutter.plugins.googlemaps.TileOverlaysController: void clearTileCache(java.lang.String)
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onStop(androidx.lifecycle.LifecycleOwner)
com.google.android.gms.signin.internal.zaj: java.lang.Object[] newArray(int)
com.google.android.gms.dynamic.zab: void zaa(com.google.android.gms.dynamic.LifecycleDelegate)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairRule parseSplitPairRule(android.content.Context,android.content.res.XmlResourceParser)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
kotlin.collections.EmptyIterator: int previousIndex()
androidx.fragment.app.DialogFragment: void onDetach()
kotlinx.coroutines.AbstractCoroutine: AbstractCoroutine(kotlin.coroutines.CoroutineContext,boolean,boolean)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getChangingConfigurations()
androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isLongClickable()
kotlinx.coroutines.BlockingEventLoop: java.lang.Thread getThread()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)
com.google.firebase.database.connection.Connection: void sendData(java.util.Map,boolean)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.String access$6400(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: ScrollingTabContainerView$TabView(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean)
androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)
kotlinx.coroutines.CompletedExceptionally: boolean makeHandled()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean isStateful()
androidx.appcompat.app.AlertController: AlertController(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window)
io.flutter.plugin.common.StandardMessageCodec: void writeLong(java.io.ByteArrayOutputStream,long)
com.journeyapps.barcodescanner.camera.AutoFocusManager$1: AutoFocusManager$1(com.journeyapps.barcodescanner.camera.AutoFocusManager)
com.google.firebase.database.core.persistence.CachePolicy$1: CachePolicy$1()
androidx.appcompat.app.TwilightManager: androidx.appcompat.app.TwilightManager getInstance(android.content.Context)
com.google.android.gms.maps.MapView: void onResume()
androidx.core.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
com.google.firebase.FirebaseCommonRegistrar: java.lang.String safeValue(java.lang.String)
kotlin.Result$Failure: java.lang.String toString()
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: SafeIterableMap$DescendingIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
com.google.android.gms.tasks.zzc: com.google.android.gms.tasks.Continuation zzb(com.google.android.gms.tasks.zzc)
com.google.firebase.database.core.utilities.ImmutableTree: java.lang.Object get(com.google.firebase.database.core.Path)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingGet: boolean access$2100(com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingGet)
androidx.appcompat.view.menu.StandardMenuPopup: void updateMenuView(boolean)
androidx.arch.core.executor.ArchTaskExecutor$1: ArchTaskExecutor$1()
com.google.firebase.database.core.utilities.Validation: boolean isWritablePath(com.google.firebase.database.core.Path)
com.google.android.gms.common.internal.BaseGmsClient$zzg: void zza(com.google.android.gms.common.ConnectionResult)
androidx.core.graphics.drawable.WrappedDrawableApi21: void getOutline(android.graphics.Outline)
com.google.zxing.pdf417.PDF417Reader: void reset()
com.google.android.gms.common.api.GoogleApiClient: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)
com.google.firebase.database.Logger$Level: com.google.firebase.database.Logger$Level[] values()
androidx.activity.result.ActivityResult: int getResultCode()
kotlinx.coroutines.EventLoopImplBase: void resetAll()
kotlin.collections.CollectionsKt___CollectionsKt: java.util.List toMutableList(java.lang.Iterable)
com.google.zxing.pdf417.detector.Detector: com.google.zxing.ResultPoint[] findRowsWithPattern(com.google.zxing.common.BitMatrix,int,int,int,int,int[])
com.google.android.gms.internal.maps.zzy: zzy(android.os.IBinder)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void skipUnknownField(android.os.Parcel,int)
com.google.firebase.database.snapshot.Index: int compare(com.google.firebase.database.snapshot.NamedNode,com.google.firebase.database.snapshot.NamedNode,boolean)
androidx.appcompat.widget.AppCompatImageHelper: AppCompatImageHelper(android.widget.ImageView)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void init()
io.flutter.plugin.common.StringCodec: java.nio.ByteBuffer encodeMessage(java.lang.String)
com.google.android.gms.common.api.internal.LifecycleCallback: LifecycleCallback(com.google.android.gms.common.api.internal.LifecycleFragment)
com.google.zxing.oned.UPCEANExtension2Support: int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long access$000(io.flutter.embedding.android.MotionEventTracker$MotionEventId)
androidx.appcompat.app.WindowDecorActionBar: void onContentScrollStopped()
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
kotlin.collections.EmptySet: int size()
io.flutter.plugins.googlemaps.CircleController: void setCenter(com.google.android.gms.maps.model.LatLng)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getString(int,java.lang.Object[])
androidx.appcompat.view.menu.CascadingMenuPopup: boolean flagActionItems()
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getEnterTransitionCallback()
androidx.appcompat.view.menu.ActionMenuItemView: void onRestoreInstanceState(android.os.Parcelable)
com.google.firebase.database.FirebaseDatabase: void ensureRepo()
com.google.firebase.database.connection.util.RetryHelper$Builder: com.google.firebase.database.connection.util.RetryHelper$Builder withJitterFactor(double)
com.journeyapps.barcodescanner.CameraPreview$2: CameraPreview$2(com.journeyapps.barcodescanner.CameraPreview)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
com.google.zxing.pdf417.PDF417ResultMetadata: void setSegmentIndex(int)
androidx.appcompat.view.menu.MenuItemImpl: int getItemId()
com.google.android.gms.common.api.internal.RegisterListenerMethod: com.google.android.gms.common.Feature[] getRequiredFeatures()
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: KeyboardManager$PerEventCallbackBuilder$Callback(io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder)
com.journeyapps.barcodescanner.CameraPreview: void access$600(com.journeyapps.barcodescanner.CameraPreview)
com.google.zxing.datamatrix.decoder.Version$ECBlocks: Version$ECBlocks(int,com.google.zxing.datamatrix.decoder.Version$ECB)
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup: ActionMenuPresenter$OverflowPopup(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean)
io.flutter.embedding.engine.systemchannels.SystemChannel: SystemChannel(io.flutter.embedding.engine.dart.DartExecutor)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: com.google.zxing.pdf417.decoder.BarcodeValue[][] createBarcodeMatrix(com.google.zxing.pdf417.decoder.DetectionResult)
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: android.content.Intent createIntent(java.lang.String[])
androidx.appcompat.view.menu.MenuAdapter: void notifyDataSetChanged()
com.google.android.gms.maps.internal.zzbz: android.content.Context zzc(android.content.Context)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.MenuItem getItem()
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
androidx.core.widget.NestedScrollView: boolean startNestedScroll(int)
kotlinx.coroutines.CompletionStateKt: java.lang.Object toState(java.lang.Object,kotlinx.coroutines.CancellableContinuation)
androidx.appcompat.app.AppCompatDelegateImpl: int getLocalNightMode()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.plugin.platform.PlatformViewsController: void onAttachedToJNI()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setDisplayOptions(int)
kotlin.collections.CollectionsKt__CollectionsKt: java.util.List listOf(java.lang.Object[])
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isStateful()
androidx.core.graphics.TypefaceCompatUtil: java.io.File getTempFile(android.content.Context)
androidx.fragment.app.FragmentManager: java.lang.String toString()
com.google.zxing.oned.rss.expanded.ExpandedPair: ExpandedPair(com.google.zxing.oned.rss.DataCharacter,com.google.zxing.oned.rss.DataCharacter,com.google.zxing.oned.rss.FinderPattern,boolean)
com.google.android.gms.common.api.internal.GoogleApiManager: void zaa(com.google.android.gms.common.api.GoogleApi,int,com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)
com.google.common.base.MoreObjects$ToStringHelper$ValueHolder: MoreObjects$ToStringHelper$ValueHolder(com.google.common.base.MoreObjects$1)
com.google.firebase.database.Query: com.google.firebase.database.Query endBefore(boolean,java.lang.String)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler access$100(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
androidx.appcompat.view.ContextThemeWrapper: void applyOverrideConfiguration(android.content.res.Configuration)
com.google.android.gms.maps.zzz: zzz(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnMapLongClickListener)
com.google.android.gms.common.internal.BaseGmsClient: java.lang.String getEndpointPackageName()
androidx.fragment.app.FragmentManager: void noteStateNotSaved()
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)
com.google.android.gms.auth.api.signin.internal.Storage: com.google.android.gms.auth.api.signin.GoogleSignInAccount zad(java.lang.String)
com.google.firebase.components.Component: com.google.firebase.components.ComponentFactory getFactory()
com.google.firebase.database.snapshot.ChildrenNode$2: void visitEntry(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node)
androidx.fragment.app.Fragment: void restoreViewState()
com.google.zxing.pdf417.decoder.DetectionResult: void setDetectionResultColumn(int,com.google.zxing.pdf417.decoder.DetectionResultColumn)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task findAnyTask(boolean)
com.google.firebase.database.core.Repo: void onConnectionStatus(boolean)
com.google.firebase.database.core.SyncTree: void access$1600(com.google.firebase.database.core.SyncTree,java.util.List)
com.google.android.gms.maps.GoogleMap: void setOnCircleClickListener(com.google.android.gms.maps.GoogleMap$OnCircleClickListener)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Matrix)
androidx.appcompat.widget.SearchView$SavedState$1: androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
com.google.zxing.oned.Code39Reader: Code39Reader(boolean)
com.google.zxing.pdf417.decoder.BarcodeMetadata: int getColumnCount()
com.google.firebase.database.core.operation.ListenComplete: ListenComplete(com.google.firebase.database.core.operation.OperationSource,com.google.firebase.database.core.Path)
com.google.firebase.database.Query: com.google.firebase.database.DatabaseReference getRef()
com.google.zxing.oned.UPCEANExtensionSupport: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int)
com.google.android.gms.location.LocationResult: LocationResult(java.util.List)
com.google.firebase.database.core.Repo: void pruneCompletedTransactions(com.google.firebase.database.core.utilities.Tree)
com.google.android.gms.common.api.internal.BackgroundDetector: void onTrimMemory(int)
com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: boolean casListeners(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Listener,com.google.common.util.concurrent.AbstractFuture$Listener)
com.google.zxing.pdf417.decoder.DetectionResultColumn: com.google.zxing.pdf417.decoder.Codeword getCodeword(int)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
androidx.core.widget.NestedScrollView: void stopNestedScroll()
com.google.android.gms.maps.model.TileOverlayOptions: com.google.android.gms.maps.model.TileOverlayOptions fadeIn(boolean)
androidx.appcompat.view.menu.SubMenuBuilder: void setGroupDividerEnabled(boolean)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean hideOverflowMenu()
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl doRead(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)
com.google.android.gms.common.api.internal.zah: void zaa(java.lang.RuntimeException)
androidx.window.layout.ExtensionInterfaceCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
kotlin.Result$Companion: Result$Companion()
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: android.net.Uri getContentUri()
io.flutter.plugins.imagepicker.FileUtils: java.lang.String getImageExtension(android.content.Context,android.net.Uri)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt: boolean systemProp(java.lang.String,boolean)
io.flutter.plugin.platform.PlatformViewsController: void initializeRootImageViewIfNeeded()
io.flutter.plugin.platform.PlatformViewsController: void detachFromView()
io.flutter.plugin.platform.PlatformPlugin: boolean clipboardHasStrings()
com.google.firebase.database.core.WriteTreeRef: com.google.firebase.database.core.WriteTreeRef child(com.google.firebase.database.snapshot.ChildKey)
com.lyokone.location.FlutterLocation: java.lang.Double access$000(com.lyokone.location.FlutterLocation)
com.google.firebase.database.Query: Query(com.google.firebase.database.core.Repo,com.google.firebase.database.core.Path)
androidx.activity.OnBackPressedDispatcher: void onBackPressed()
io.flutter.plugins.googlemaps.GoogleMapController: void onMarkerDragStart(com.google.android.gms.maps.model.Marker)
com.google.firebase.database.DatabaseReference$2: DatabaseReference$2(com.google.firebase.database.DatabaseReference,com.google.firebase.database.snapshot.Node,com.google.firebase.database.core.utilities.Pair)
androidx.arch.core.executor.ArchTaskExecutor: boolean isMainThread()
androidx.window.layout.WindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.gms.common.util.CrashUtils: boolean addDynamiteErrorToDropBox(android.content.Context,java.lang.Throwable)
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty stateDescriptionProperty()
kotlinx.coroutines.JobImpl: JobImpl(kotlinx.coroutines.Job)
com.google.android.gms.common.internal.SimpleClientAdapter: java.lang.String getServiceDescriptor()
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setIcon(int)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(java.lang.Object)
com.google.firebase.database.core.SnapshotHolder: void update(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node)
com.google.firebase.database.collection.LLRBEmptyNode: boolean isEmpty()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
kotlin.text.StringsKt__IndentKt: java.lang.String trimIndent(java.lang.String)
com.google.android.gms.common.internal.zzb: zzb()
com.google.firebase.database.android.AndroidPlatform: android.content.Context access$000(com.google.firebase.database.android.AndroidPlatform)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: int getHorizontalOriginalOffset()
com.google.android.gms.tasks.zzn: void run()
androidx.fragment.app.FragmentManagerViewModel: int hashCode()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator: FlutterMutatorsStack$FlutterMutator(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect)
com.google.android.gms.internal.location.zzk: android.os.Bundle getGetServiceRequestExtraArgs()
kotlinx.coroutines.MainCoroutineDispatcher: java.lang.String toString()
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getRecordSourceNodeId(android.view.accessibility.AccessibilityRecord)
com.google.android.gms.common.internal.zzd: java.lang.Object[] newArray(int)
com.google.android.gms.location.zzp: void zza(com.google.android.gms.internal.location.zzad)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.content.Intent getIntent()
androidx.appcompat.app.AppCompatDelegateImpl$5: AppCompatDelegateImpl$5(androidx.appcompat.app.AppCompatDelegateImpl)
kotlinx.coroutines.CoroutineDispatcher$Key: CoroutineDispatcher$Key()
com.google.android.gms.maps.model.CircleOptions: com.google.android.gms.maps.model.LatLng getCenter()
com.google.zxing.qrcode.detector.FinderPatternFinder: int findRowSkip()
com.google.zxing.pdf417.decoder.BoundingBox: com.google.zxing.pdf417.decoder.BoundingBox merge(com.google.zxing.pdf417.decoder.BoundingBox,com.google.zxing.pdf417.decoder.BoundingBox)
com.google.android.gms.maps.model.CameraPosition$Builder: com.google.android.gms.maps.model.CameraPosition$Builder zoom(float)
androidx.window.embedding.ExtensionEmbeddingBackend: void setEmbeddingExtension(androidx.window.embedding.EmbeddingInterfaceCompat)
com.google.zxing.pdf417.decoder.DetectionResult: com.google.zxing.pdf417.decoder.DetectionResultColumn getDetectionResultColumn(int)
androidx.appcompat.app.TwilightManager: void updateState(android.location.Location)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
kotlinx.coroutines.internal.SystemPropsKt: int getAVAILABLE_PROCESSORS()
com.google.android.gms.maps.internal.zzbz: zzbz()
io.flutter.embedding.android.MotionEventTracker$MotionEventId: io.flutter.embedding.android.MotionEventTracker$MotionEventId from(long)
io.flutter.plugins.pathprovider.PathProviderPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.android.gms.tasks.zzm: void onComplete(com.google.android.gms.tasks.Task)
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: AppCompatDelegateImpl$AutoNightModeManager(androidx.appcompat.app.AppCompatDelegateImpl)
com.journeyapps.barcodescanner.camera.CameraManager: void close()
androidx.fragment.app.FragmentTransitionImpl: void getBoundsOnScreen(android.view.View,android.graphics.Rect)
com.google.firebase.database.android.AndroidAppCheckTokenProvider: void getToken(boolean,com.google.firebase.database.core.TokenProvider$GetTokenCompletionListener)
com.google.firebase.database.core.Context: com.google.firebase.database.logging.Logger getLogger()
com.google.android.gms.internal.maps.zzv: void showInfoWindow()
androidx.customview.view.AbsSavedState: AbsSavedState()
com.google.zxing.LuminanceSource: LuminanceSource(int,int)
androidx.cursoradapter.widget.CursorAdapter: void init(android.content.Context,android.database.Cursor,int)
com.google.firebase.FirebaseApp: void delete()
com.google.zxing.common.reedsolomon.GenericGF: int addOrSubtract(int,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: int getChangingConfigurations()
kotlinx.coroutines.UndispatchedMarker: UndispatchedMarker()
androidx.appcompat.widget.ListPopupWindow: void setSelection(int)
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: boolean getTransformation(long,android.view.animation.Transformation,float)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: AnimatorInflaterCompat$PathDataEvaluator()
com.baseflow.geolocator.location.GeolocationManager: GeolocationManager()
com.google.firebase.internal.DataCollectionConfigStorage: boolean readManifestDataCollectionEnabled()
com.google.android.gms.common.api.internal.GoogleApiManager: void zab(com.google.android.gms.common.api.internal.zaad)
com.google.zxing.common.BitMatrix: com.google.zxing.common.BitArray getRow(int,com.google.zxing.common.BitArray)
com.google.android.gms.maps.model.Circle: void setClickable(boolean)
com.google.zxing.oned.rss.expanded.ExpandedPair: com.google.zxing.oned.rss.DataCharacter getLeftChar()
com.google.firebase.database.core.view.filter.RangedFilter: com.google.firebase.database.snapshot.NamedNode getStartPost(com.google.firebase.database.core.view.QueryParams)
androidx.fragment.app.FragmentTransitionCompat21: void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getTitleCondensed()
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String getFamilyName()
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setInitialCameraPosition(com.google.android.gms.maps.model.CameraPosition)
androidx.appcompat.widget.ResourcesWrapper: java.lang.CharSequence getQuantityText(int,int)
androidx.core.content.FileProvider$SimplePathStrategy: android.net.Uri getUriForFile(java.io.File)
androidx.window.layout.EmptyDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
kotlinx.coroutines.channels.AbstractChannel: java.lang.Object pollInternal()
androidx.appcompat.view.menu.MenuItemImpl: boolean shouldShowIcon()
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int,long,java.lang.String)
com.journeyapps.barcodescanner.camera.AutoFocusManager: void stop()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper createWindowInfoRepo()
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu: ActionMenuPresenter$ActionButtonSubmenu(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View)
androidx.activity.result.ActivityResultRegistry: void doDispatch(java.lang.String,int,android.content.Intent,androidx.activity.result.ActivityResultRegistry$CallbackAndContract)
com.google.android.gms.common.SupportErrorDialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlinx.coroutines.CompletedWithCancellation: java.lang.String toString()
com.google.android.gms.internal.location.zzat: void onLocationResult(com.google.android.gms.location.LocationResult)
com.google.android.gms.location.zzaf: zzaf()
androidx.appcompat.app.AlertController: void setTitle(java.lang.CharSequence)
androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)
com.baseflow.geolocator.StreamHandlerImpl: StreamHandlerImpl(com.baseflow.geolocator.permission.PermissionManager)
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType[] values()
com.baseflow.geolocator.GeolocatorLocationService: void setActivity(android.app.Activity)
com.google.android.gms.maps.model.Marker: void setRotation(float)
androidx.appcompat.widget.AppCompatPopupWindow: void update(android.view.View,int,int,int,int)
kotlin.jvm.internal.Intrinsics: java.lang.String createParameterIsNullExceptionMessage(java.lang.String)
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock$3: void run()
androidx.fragment.app.FragmentController: void dispatchConfigurationChanged(android.content.res.Configuration)
com.google.android.gms.maps.MapView: void onDestroy()
com.journeyapps.barcodescanner.DecoratedBarcodeView: void setCameraSettings(com.journeyapps.barcodescanner.camera.CameraSettings)
androidx.activity.ComponentActivity$2: ComponentActivity$2(androidx.activity.ComponentActivity)
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
com.journeyapps.barcodescanner.camera.DisplayConfiguration: DisplayConfiguration(int,com.journeyapps.barcodescanner.Size)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setAlpha(int)
androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBNode$Color oppositeColor(com.google.firebase.database.collection.LLRBNode)
io.flutter.embedding.engine.FlutterEngine$1: void onPreEngineRestart()
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
androidx.collection.ArraySet: boolean add(java.lang.Object)
androidx.appcompat.app.WindowDecorActionBar: void setWindowTitle(java.lang.CharSequence)
com.google.firebase.database.OnDisconnect$1: void run()
com.google.firebase.database.core.persistence.NoopPersistenceManager: void applyUserWriteToServerCache(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node)
androidx.appcompat.view.menu.MenuWrapperICS: void removeItem(int)
androidx.core.text.PrecomputedTextCompat: java.lang.CharSequence subSequence(int,int)
androidx.savedstate.Recreator$SavedStateProvider: void add(java.lang.String)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: java.lang.String maybeGetInitialRouteFromIntent(android.content.Intent)
android.support.v4.app.INotificationSideChannel$Stub: android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder)
androidx.fragment.app.FragmentStore: void burpActive()
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
kotlinx.coroutines.EventLoopImplBase: int scheduleImpl(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask)
kotlinx.coroutines.JobSupport$Finishing: java.lang.Throwable getRootCause()
androidx.appcompat.widget.DropDownListView: boolean isInTouchMode()
com.google.android.gms.common.internal.ConnectionErrorMessages: java.lang.String getDefaultNotificationChannelName(android.content.Context)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToContentProvider()
androidx.arch.core.executor.ArchTaskExecutor$2: ArchTaskExecutor$2()
androidx.core.widget.PopupWindowCompat: void setWindowLayoutType(android.widget.PopupWindow,int)
androidx.core.content.FileProvider: java.lang.String getType(android.net.Uri)
com.google.firebase.database.connection.Connection: void onHandshake(java.util.Map)
com.google.android.gms.common.api.internal.zabn: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)
com.journeyapps.barcodescanner.Size: java.lang.String toString()
com.google.firebase.database.core.UserWriteRecord: int hashCode()
androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void onUserLeaveHint()
com.baseflow.geolocator.location.LocationManagerClient: void onProviderDisabled(java.lang.String)
androidx.appcompat.app.AppCompatActivity: void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
com.google.firebase.heartbeatinfo.DefaultHeartBeatInfo: DefaultHeartBeatInfo(android.content.Context,java.util.Set)
com.google.firebase.database.connection.PersistentConnectionImpl: void sendUnauth()
com.google.android.gms.common.internal.ClientSettings: com.google.android.gms.signin.SignInOptions getSignInOptions()
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup: void onDismiss()
com.google.common.util.concurrent.AbstractFuture: void executeListener(java.lang.Runnable,java.util.concurrent.Executor)
io.flutter.plugins.googlemaps.GoogleMapController: void onPause(androidx.lifecycle.LifecycleOwner)
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.Result zaa(com.google.android.gms.common.api.internal.BasePendingResult)
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.google.firebase.database.core.Context: java.lang.String getUserAgent()
androidx.collection.LongSparseArray: LongSparseArray(int)
androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.core.graphics.TypefaceCompatApi24Impl: boolean isUsable()
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: com.google.android.gms.common.ConnectionResult zabk()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)
androidx.appcompat.graphics.drawable.StateListDrawable: StateListDrawable(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources)
androidx.appcompat.app.AlertController$CheckedItemAdapter: AlertController$CheckedItemAdapter(android.content.Context,int,int,java.lang.CharSequence[])
com.google.android.gms.common.api.internal.LifecycleCallback: void onResume()
androidx.core.provider.FontsContractCompat$FontInfo: androidx.core.provider.FontsContractCompat$FontInfo create(android.net.Uri,int,int,boolean,int)
com.google.firebase.database.core.Repo$TransactionData: com.google.firebase.database.core.Repo$TransactionStatus access$1802(com.google.firebase.database.core.Repo$TransactionData,com.google.firebase.database.core.Repo$TransactionStatus)
com.google.firebase.database.collection.RBTreeSortedMap: com.google.firebase.database.collection.RBTreeSortedMap buildFrom(java.util.List,java.util.Map,com.google.firebase.database.collection.ImmutableSortedMap$Builder$KeyTranslator,java.util.Comparator)
com.google.firebase.FirebaseOptions: java.lang.String getProjectId()
com.google.firebase.database.core.utilities.Utilities$1: void onComplete(com.google.firebase.database.DatabaseError,com.google.firebase.database.DatabaseReference)
androidx.fragment.app.FragmentTransition$1: FragmentTransition$1(androidx.fragment.app.FragmentTransition$Callback,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
kotlinx.coroutines.internal.ThreadContextKt: java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.localization.LocalizationPlugin getLocalizationPlugin()
com.google.android.gms.common.wrappers.PackageManagerWrapper: PackageManagerWrapper(android.content.Context)
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
io.flutter.plugin.editing.ListenableEditingState: void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState)
com.google.zxing.pdf417.decoder.BoundingBox: com.google.zxing.ResultPoint getTopRight()
androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[],int,int)
androidx.window.embedding.EmbeddingBackend: void setSplitRules(java.util.Set)
com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.common.GoogleApiAvailability getInstance()
com.google.android.gms.maps.model.Circle: boolean equals(java.lang.Object)
com.google.firebase.database.snapshot.LeafNode: boolean hasChild(com.google.firebase.database.snapshot.ChildKey)
androidx.core.graphics.TypefaceCompatApi26Impl: boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[])
com.google.firebase.components.ComponentRuntime: com.google.firebase.components.ComponentRuntime$Builder builder(java.util.concurrent.Executor)
com.google.firebase.database.OnDisconnect: com.google.android.gms.tasks.Task setValue(java.lang.Object,double)
com.google.firebase.database.core.ChildEventRegistration: void fireEvent(com.google.firebase.database.core.view.DataEvent)
androidx.appcompat.widget.ListPopupWindow: void setAnimationStyle(int)
androidx.window.core.Bounds: int getRight()
com.google.android.gms.common.api.internal.LifecycleActivity: boolean zzh()
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: ActionMenuPresenter$OverflowMenuButton$1(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable)
com.google.android.gms.maps.UiSettings: boolean isTiltGesturesEnabled()
com.google.firebase.FirebaseApp: void addBackgroundStateChangeListener(com.google.firebase.FirebaseApp$BackgroundStateChangeListener)
com.google.android.gms.common.api.internal.zacd: zacd(com.google.android.gms.common.api.internal.zace)
io.flutter.embedding.android.FlutterActivity: void onResume()
com.google.android.gms.common.internal.BaseGmsClient$zzb: BaseGmsClient$zzb(com.google.android.gms.common.internal.BaseGmsClient,android.os.Looper)
com.google.android.gms.location.zzac: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.FirebaseApp: com.google.firebase.FirebaseOptions getOptions()
androidx.fragment.app.Fragment: int getEnterAnim()
androidx.window.core.Version: androidx.window.core.Version access$getCURRENT$cp()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onConfigurationChanged(android.content.res.Configuration)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: MouseCursorChannel$1(io.flutter.embedding.engine.systemchannels.MouseCursorChannel)
androidx.savedstate.Recreator: Recreator(androidx.savedstate.SavedStateRegistryOwner)
com.google.firebase.database.core.view.CacheNode: com.google.firebase.database.snapshot.Node getNode()
androidx.fragment.app.FragmentManager: void dispatchOptionsMenuClosed(android.view.Menu)
com.google.android.gms.common.api.GoogleApiActivity: android.app.PendingIntent zaa(android.content.Context,android.app.PendingIntent,int)
com.google.zxing.oned.rss.expanded.decoders.AI01decoder: void encodeCompressedGtinWithoutAI(java.lang.StringBuilder,int,int)
io.flutter.plugin.editing.FlutterTextUtils: boolean isEmoji(int)
com.google.firebase.database.snapshot.ChildKey: com.google.firebase.database.snapshot.ChildKey getMaxName()
com.google.firebase.database.core.utilities.ImmutableTree: com.google.firebase.database.core.utilities.ImmutableTree setTree(com.google.firebase.database.core.Path,com.google.firebase.database.core.utilities.ImmutableTree)
androidx.appcompat.view.WindowCallbackWrapper: void onActionModeFinished(android.view.ActionMode)
com.google.android.gms.dynamite.DynamiteModule$LoadingException: DynamiteModule$LoadingException(java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.SearchView$10: void beforeTextChanged(java.lang.CharSequence,int,int,int)
com.journeyapps.barcodescanner.camera.FitXYStrategy: FitXYStrategy()
com.google.firebase.database.core.Repo$12: void onRequestResult(java.lang.String,java.lang.String)
com.google.android.gms.tasks.zzu: void zzc()
androidx.core.graphics.PathParser: void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
com.google.firebase.database.core.SyncTree$4: java.util.List call()
androidx.collection.ArraySet: java.lang.Object removeAt(int)
androidx.core.app.NotificationCompatBuilder: android.app.Notification build()
androidx.fragment.app.Fragment: void onAttach(android.content.Context)
com.google.android.gms.dynamite.zza: int zza(android.content.Context,java.lang.String,boolean)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIcon(int)
com.google.firebase.FirebaseApp: java.util.List getApps(android.content.Context)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: AppCompatMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet,int)
androidx.fragment.app.FragmentTransition: java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.util.ArrayList createTypedList(android.os.Parcel,int,android.os.Parcelable$Creator)
kotlin.jvm.internal.CallableReference: boolean isAbstract()
kotlin.jvm.internal.ClassReference: java.lang.Class getJClass()
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9)
kotlin.KotlinVersion: KotlinVersion(int,int,int)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.plugin.editing.ListenableEditingState: int getComposingStart()
com.google.firebase.database.core.WriteTreeRef: com.google.firebase.database.snapshot.Node calcCompleteEventChildren(com.google.firebase.database.snapshot.Node)
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)
io.flutter.view.AccessibilityBridge: boolean performSetText(io.flutter.view.AccessibilityBridge$SemanticsNode,int,android.os.Bundle)
androidx.collection.ArraySet: boolean remove(java.lang.Object)
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsInactive()
kotlin.jvm.internal.ClassReference: java.lang.String getSimpleName()
androidx.core.widget.NestedScrollView: void runAnimatedScroll(boolean)
androidx.appcompat.widget.ViewStubCompat: void draw(android.graphics.Canvas)
com.google.firebase.database.snapshot.StringNode: com.google.firebase.database.snapshot.LeafNode$LeafType getLeafType()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: java.lang.Object getLifecycle()
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
androidx.fragment.app.FragmentTransition: java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: boolean zah(com.google.android.gms.common.ConnectionResult)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.google.firebase.database.core.Path: com.google.firebase.database.core.Path popFront()
io.flutter.plugins.googlemaps.GoogleMapController: void onCreate(androidx.lifecycle.LifecycleOwner)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean isOverflowMenuShowing()
com.google.android.gms.internal.location.zzc: void zza(android.os.Parcel,boolean)
com.lyokone.location.LocationPlugin: LocationPlugin()
io.flutter.plugin.editing.ListenableEditingState: void notifyListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher,boolean,boolean,boolean)
androidx.fragment.app.SpecialEffectsController$Operation: void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: com.google.firebase.database.Query getQuery(java.util.Map)
com.google.common.util.concurrent.AbstractFuture: void afterDone()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2100(io.flutter.view.AccessibilityBridge$SemanticsNode)
kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)
io.flutter.plugins.googlemaps.GoogleMapFactory: io.flutter.plugin.platform.PlatformView create(android.content.Context,int,java.lang.Object)
com.baseflow.geolocator.location.FusedLocationClient$1: void onLocationResult(com.google.android.gms.location.LocationResult)
com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,int,int)
com.google.firebase.database.core.persistence.DefaultPersistenceManager: java.util.List loadUserWrites()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
com.google.android.gms.internal.location.zzq: zzq()
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
androidx.core.view.ViewCompat: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
com.google.android.gms.maps.model.zzb: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void ensureServiceUnbound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
io.flutter.plugins.googlemaps.PolygonsController: java.lang.String getPolygonId(java.lang.Object)
androidx.activity.ComponentActivity$2$1: void run()
androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void checkPaneVisibility(android.view.View,boolean)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void onSplitInfoChanged(java.util.List)
androidx.appcompat.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)
androidx.appcompat.graphics.drawable.DrawableContainer$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable$ConstantState)
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: void processLeaf(com.google.firebase.database.snapshot.LeafNode)
androidx.fragment.app.FragmentTransition: java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean)
androidx.appcompat.widget.SearchView: boolean isIconified()
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean canShowOverflowMenu()
com.google.firebase.database.core.ValidationPath: java.lang.String pop()
com.google.android.gms.maps.model.Marker: void setTitle(java.lang.String)
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask valueOf(java.lang.String)
com.google.firebase.database.connection.PersistentConnectionImpl: void doIdleCheck()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setAlpha(int)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getSecondaryActivityStack()
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(androidx.appcompat.app.ActionBar$LayoutParams)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setShortcut(char,char,int,int)
androidx.appcompat.widget.AppCompatPopupWindow: void init(android.content.Context,android.util.AttributeSet,int,int)
androidx.versionedparcelable.VersionedParcelParcel: android.os.Parcelable readParcelable()
com.google.android.gms.signin.SignInOptions: java.lang.String getHostedDomain()
androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
androidx.appcompat.app.WindowDecorActionBar: void enableContentAnimations(boolean)
com.google.firebase.database.core.Repo$16: void run()
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.View getActionView()
io.flutter.plugin.common.EventChannel: EventChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec)
com.journeyapps.barcodescanner.DecoratedBarcodeView$WrappedCallback: void barcodeResult(com.journeyapps.barcodescanner.BarcodeResult)
androidx.core.view.inputmethod.EditorInfoCompat: void trimLongSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int)
com.google.firebase.database.core.view.CacheNode: boolean isCompleteForPath(com.google.firebase.database.core.Path)
io.flutter.embedding.android.FlutterSplashView$SavedState$1: FlutterSplashView$SavedState$1()
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.google.android.gms.maps.internal.zzg: void setOnMapLongClickListener(com.google.android.gms.maps.internal.zzan)
com.google.android.gms.common.api.internal.zzb: void run()
com.google.android.gms.maps.internal.zzbz: java.lang.Object zza(java.lang.Class)
com.google.android.gms.tasks.zzu$zza: com.google.android.gms.tasks.zzu$zza zza(android.app.Activity)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
com.lyokone.location.BackgroundNotification: android.app.PendingIntent buildBringToFrontIntent()
kotlin.ranges.IntProgressionIterator: int nextInt()
kotlinx.coroutines.EventLoop: void decrementUseCount(boolean)
androidx.cursoradapter.widget.CursorFilter: java.lang.CharSequence convertResultToString(java.lang.Object)
com.google.firebase.database.FirebaseDatabase: com.google.firebase.database.FirebaseDatabase getInstance(com.google.firebase.FirebaseApp)
com.google.firebase.database.core.CompoundWrite: com.google.firebase.database.core.CompoundWrite fromPathMerge(java.util.Map)
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: AccessibilityViewEmbedder$ReflectionAccessors(io.flutter.view.AccessibilityViewEmbedder$1)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String getNetworkPolicy(android.content.pm.ApplicationInfo,android.content.Context)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)
com.baseflow.geolocator.location.LocationAccuracy: LocationAccuracy(java.lang.String,int)
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: AppCompatDelegateImpl$ActionModeCallbackWrapperV9(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback)
androidx.activity.ComponentActivity$5: ComponentActivity$5(androidx.activity.ComponentActivity)
com.google.firebase.database.core.persistence.LRUCachePolicy: float getPercentOfQueriesToPruneAtOnce()
kotlin.ranges.IntProgression: java.util.Iterator iterator()
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet,int)
io.flutter.plugin.editing.TextInputPlugin: android.view.View access$000(io.flutter.plugin.editing.TextInputPlugin)
com.google.android.gms.maps.internal.zzb: com.google.android.gms.dynamic.IObjectWrapper zoomBy(float)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: android.os.Parcelable createParcelable(android.os.Parcel,int,android.os.Parcelable$Creator)
io.flutter.embedding.engine.renderer.FlutterRenderer: android.os.Handler access$600(io.flutter.embedding.engine.renderer.FlutterRenderer)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
kotlinx.coroutines.AbstractCoroutine: void onCompletionInternal(java.lang.Object)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.gms.maps.model.CircleOptions: java.util.List getStrokePattern()
io.flutter.view.AccessibilityBridge$1: void announce(java.lang.String)
io.flutter.plugins.googlemaps.TileOverlaysController: void setGoogleMap(com.google.android.gms.maps.GoogleMap)
com.google.firebase.database.collection.RBTreeSortedMap: void inOrderTraversal(com.google.firebase.database.collection.LLRBNode$NodeVisitor)
com.google.firebase.database.connection.PersistentConnectionImpl: java.lang.String access$1202(com.google.firebase.database.connection.PersistentConnectionImpl,java.lang.String)
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate: ResourceManagerInternal$AvdcInflateDelegate()
androidx.appcompat.view.menu.StandardMenuPopup: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
androidx.fragment.app.BackStackState: BackStackState(android.os.Parcel)
com.lyokone.location.FlutterLocationService$LocalBinder: com.lyokone.location.FlutterLocationService getService()
com.google.firebase.components.RestrictedComponentContainer: RestrictedComponentContainer(com.google.firebase.components.Component,com.google.firebase.components.ComponentContainer)
androidx.multidex.MultiDexApplication: void attachBaseContext(android.content.Context)
kotlinx.coroutines.NodeList: boolean isActive()
com.journeyapps.barcodescanner.camera.CameraSettings: int getRequestedCameraId()
io.flutter.embedding.engine.loader.ApplicationInfoLoader: java.lang.String getString(android.os.Bundle,java.lang.String)
androidx.appcompat.widget.DropDownListView: void positionSelectorCompat(int,android.view.View)
com.google.firebase.database.core.persistence.NoopPersistenceManager: void saveUserOverwrite(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node,long)
com.google.android.gms.maps.model.zzk: zzk()
kotlinx.coroutines.android.HandlerContext: java.lang.String toString()
com.google.firebase.database.DatabaseError: com.google.firebase.database.DatabaseError fromStatus(java.lang.String,java.lang.String,java.lang.String)
com.google.firebase.database.connection.PersistentConnectionImpl: java.util.concurrent.ScheduledFuture access$2802(com.google.firebase.database.connection.PersistentConnectionImpl,java.util.concurrent.ScheduledFuture)
com.google.firebase.database.android.SqlPersistenceStorageEngine: void updateTrackedQueryKeys(long,java.util.Set,java.util.Set)
com.lyokone.location.StreamHandlerImpl: void stopListening()
androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter,boolean)
androidx.fragment.app.Fragment: boolean isMenuVisible()
com.google.android.gms.location.zzl: zzl(com.google.android.gms.location.FusedLocationProviderClient)
com.google.android.gms.common.internal.GmsClientSupervisor$zza: java.lang.String getPackage()
com.google.android.gms.maps.internal.zzw: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
com.google.zxing.ResultPoint: boolean equals(java.lang.Object)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void registerPlugin(java.lang.String,io.flutter.plugins.firebase.core.FlutterFirebasePlugin)
com.google.firebase.FirebaseOptions$Builder: com.google.firebase.FirebaseOptions$Builder setProjectId(java.lang.String)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int)
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.Region getTransparentRegion()
com.google.firebase.database.core.Repo$TransactionData: com.google.firebase.database.core.Path access$2200(com.google.firebase.database.core.Repo$TransactionData)
com.google.android.gms.maps.model.LatLngBounds: void writeToParcel(android.os.Parcel,int)
kotlin.collections.MapsKt__MapsKt: java.util.Map emptyMap()
androidx.appcompat.view.menu.MenuItemImpl: boolean isActionViewExpanded()
androidx.multidex.MultiDexExtractor: java.util.List loadExistingExtractions(android.content.Context,java.lang.String)
kotlinx.coroutines.ChildContinuation: ChildContinuation(kotlinx.coroutines.CancellableContinuationImpl)
com.google.zxing.qrcode.detector.Detector: com.google.zxing.qrcode.detector.AlignmentPattern findAlignmentInRegion(float,int,int,float)
kotlinx.coroutines.internal.Removed: Removed(kotlinx.coroutines.internal.LockFreeLinkedListNode)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentState: java.lang.String toString()
androidx.exifinterface.media.ExifInterface: void addDefaultValuesForCompatibility()
com.google.android.gms.internal.location.zzk: void zza(com.google.android.gms.internal.location.zzk)
com.google.android.gms.common.api.internal.zak: void onSaveInstanceState(android.os.Bundle)
com.google.android.gms.signin.SignInOptions: java.lang.Long getAuthApiSignInModuleVersion()
com.google.firebase.database.core.view.filter.RangedFilter: boolean matches(com.google.firebase.database.snapshot.NamedNode)
com.google.firebase.components.Dependency: com.google.firebase.components.Dependency deferred(java.lang.Class)
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet,int)
androidx.fragment.app.FragmentActivity: void markFragmentsCreated()
androidx.appcompat.view.ActionBarPolicy: boolean showsOverflowMenuButton()
com.google.android.gms.dynamic.DeferredLifecycleHelper: void onCreate(android.os.Bundle)
com.google.zxing.qrcode.decoder.DataBlock: com.google.zxing.qrcode.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.internal.ClientSettings$Builder createClientSettingsBuilder()
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.plugins.googlemaps.Convert: android.graphics.Point toPoint(java.lang.Object,float)
androidx.appcompat.widget.AppCompatSeekBarHelper: AppCompatSeekBarHelper(android.widget.SeekBar)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.PluginRegistry getPlugins()
com.google.android.gms.internal.location.zzc: void zza(android.os.Parcel,android.os.Parcelable)
com.google.firebase.database.collection.RBTreeSortedMap: java.lang.Object getMaxKey()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: AccessibilityNodeInfoCompat(android.view.accessibility.AccessibilityNodeInfo)
com.google.zxing.ResultPoint: ResultPoint(float,float)
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: void completeResumeSend()
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.model.CameraPosition getCamera()
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class)
com.google.android.gms.common.api.internal.GoogleApiManager: void zaa(com.google.android.gms.common.api.GoogleApi,int,com.google.android.gms.common.api.internal.TaskApiCall,com.google.android.gms.tasks.TaskCompletionSource,com.google.android.gms.common.api.internal.StatusExceptionMapper)
androidx.appcompat.view.SupportActionModeWrapper: android.view.MenuInflater getMenuInflater()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.lang.reflect.Method getTextViewMethod(java.lang.String)
io.flutter.plugin.platform.VirtualDisplayController$1$1: void run()
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_1_0$cp()
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream: StandardMessageCodec$ExposedByteArrayOutputStream()
com.google.firebase.database.connection.PersistentConnectionImpl: int access$1008(com.google.firebase.database.connection.PersistentConnectionImpl)
com.google.firebase.database.core.ValueEventRegistration: boolean isSameListener(com.google.firebase.database.core.EventRegistration)
androidx.core.app.NotificationManagerCompat$NotifyTask: java.lang.String toString()
com.baseflow.geolocator.GeolocatorPlugin$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: com.google.android.gms.tasks.Task purgeOutstandingWrites(java.util.Map)
androidx.fragment.app.FragmentTransition$3: void run()
androidx.lifecycle.LiveData$ObserverWrapper: LiveData$ObserverWrapper(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)
com.google.firebase.database.core.persistence.TrackedQueryManager$6: int compare(com.google.firebase.database.core.persistence.TrackedQuery,com.google.firebase.database.core.persistence.TrackedQuery)
androidx.lifecycle.LifecycleRegistry: void popParentState()
com.google.android.gms.common.api.internal.zaae: com.google.android.gms.tasks.TaskCompletionSource zaaj()
io.flutter.embedding.android.FlutterActivity: boolean popSystemNavigator()
com.google.firebase.database.DataSnapshot: long getChildrenCount()
androidx.appcompat.widget.ResourcesWrapper: float getDimension(int)
androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)
androidx.collection.ArrayMap$1: java.util.Map colGetMap()
kotlinx.coroutines.JobSupport$Finishing: void setCompleting(boolean)
androidx.core.app.NotificationCompat$Builder: NotificationCompat$Builder(android.content.Context,java.lang.String)
com.baseflow.geolocator.location.FusedLocationClient: void getLastKnownPosition(com.baseflow.geolocator.location.PositionChangedCallback,com.baseflow.geolocator.errors.ErrorCallback)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean isStateful()
kotlin.text.StringsKt__StringsJVMKt: boolean endsWith(java.lang.String,java.lang.String,boolean)
androidx.collection.SimpleArrayMap: boolean remove(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.ActionMenuPresenter: boolean flagActionItems()
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)
com.google.android.gms.common.internal.GmsClientSupervisor$zza: android.content.Intent zzb(android.content.Context)
com.google.android.gms.dynamic.DeferredLifecycleHelper: void onResume()
io.flutter.plugins.imagepicker.ImagePickerDelegate$2: ImagePickerDelegate$2(android.app.Activity)
com.google.android.gms.common.internal.BaseGmsClient: void connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)
androidx.activity.result.ActivityResultRegistry: void onSaveInstanceState(android.os.Bundle)
com.google.zxing.common.BitArray: int[] getBitArray()
androidx.fragment.app.Fragment: android.content.Context getContext()
io.flutter.view.AccessibilityBridge$1: void onTooltip(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void layoutVertical(int,int,int,int)
io.flutter.plugins.firebase.database.ValueEventsProxy: void onDataChange(com.google.firebase.database.DataSnapshot)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: boolean isEmpty()
androidx.activity.result.IntentSenderRequest$1: java.lang.Object[] newArray(int)
androidx.appcompat.widget.ActionMenuPresenter: android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)
androidx.appcompat.widget.ListPopupWindow: void setHorizontalOffset(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void jumpToCurrentState()
androidx.appcompat.app.AppCompatViewInflater: void checkOnClickListener(android.view.View,android.util.AttributeSet)
io.flutter.plugins.firebase.database.EventStreamHandler: EventStreamHandler(com.google.firebase.database.Query,io.flutter.plugins.firebase.database.OnDispose)
com.google.firebase.database.core.Path: java.util.List asList()
kotlin.text.StringsKt__StringsKt: boolean regionMatchesImpl(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean)
com.google.android.gms.common.api.internal.ApiKey: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
com.journeyapps.barcodescanner.RawImageData: RawImageData(byte[],int,int)
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat build()
com.journeyapps.barcodescanner.camera.DisplayConfiguration: android.graphics.Rect scalePreview(com.journeyapps.barcodescanner.Size)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionPause(android.transition.Transition)
com.google.android.gms.maps.internal.zzb: com.google.android.gms.dynamic.IObjectWrapper scrollBy(float,float)
com.google.zxing.qrcode.decoder.DataBlock: int getNumDataCodewords()
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: InputContentInfoCompat$InputContentInfoCompatApi25Impl(java.lang.Object)
com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: AbstractFuture$SynchronizedHelper()
com.google.firebase.database.core.SyncTree: com.google.firebase.database.core.utilities.ImmutableTree access$700(com.google.firebase.database.core.SyncTree)
com.google.android.gms.tasks.zzu: java.lang.Object getResult()
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry)
com.journeyapps.barcodescanner.DecoratedBarcodeView: void initialize(android.util.AttributeSet)
kotlin.collections.CollectionsKt__CollectionsKt: void throwIndexOverflow()
com.google.zxing.pdf417.decoder.BoundingBox: com.google.zxing.ResultPoint getBottomRight()
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderPlatformThread$1: PathProviderPlugin$PathProviderPlatformThread$1(io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderPlatformThread,io.flutter.plugin.common.MethodChannel$Result)
com.google.zxing.ResultPoint: void orderBestPatterns(com.google.zxing.ResultPoint[])
com.google.zxing.common.DetectorResult: DetectorResult(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint[])
androidx.core.widget.CompoundButtonCompat: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
com.google.firebase.database.DatabaseError: DatabaseError(int,java.lang.String,java.lang.String)
androidx.multidex.MultiDexExtractor: void putStoredApkInfo(android.content.Context,java.lang.String,long,long,java.util.List)
androidx.core.graphics.drawable.DrawableCompat: boolean canApplyTheme(android.graphics.drawable.Drawable)
kotlinx.coroutines.CancellableContinuationImpl: kotlinx.coroutines.DisposableHandle installParentHandle()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int hashCode()
androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.LayoutInflater onGetLayoutInflater()
com.google.zxing.common.reedsolomon.GenericGF: GenericGF(int,int,int)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: ExperimentalCoroutineDispatcher(int,int,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp()
com.google.android.gms.common.internal.zad: zad(android.content.Intent,android.app.Activity,int)
com.google.firebase.database.core.persistence.DefaultPersistenceManager: DefaultPersistenceManager(com.google.firebase.database.core.Context,com.google.firebase.database.core.persistence.PersistenceStorageEngine,com.google.firebase.database.core.persistence.CachePolicy)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setCompassEnabled(boolean)
kotlinx.coroutines.channels.ChannelResult$Companion: ChannelResult$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.fragment.app.FragmentManager$5: FragmentManager$5(androidx.fragment.app.FragmentManager)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
kotlin.collections.MapsKt__MapsJVMKt: java.util.Map toSingletonMap(java.util.Map)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: java.util.Map zabi()
androidx.appcompat.app.WindowDecorActionBar$3: void onAnimationUpdate(android.view.View)
androidx.appcompat.view.menu.MenuPopupHelper: void setAnchorView(android.view.View)
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent$PointerProperties parsePointerProperties(java.lang.Object)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean requestCursorUpdates(int)
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions compassEnabled(boolean)
androidx.core.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
com.google.android.gms.common.api.internal.GoogleApiManager: boolean zac(com.google.android.gms.common.ConnectionResult,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
io.flutter.plugins.googlemaps.PolygonsController: void addPolygons(java.util.List)
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable: void run()
com.google.firebase.database.snapshot.NamedNode: com.google.firebase.database.snapshot.NamedNode getMinNode()
com.google.firebase.database.core.operation.OperationSource: com.google.firebase.database.core.operation.OperationSource forServerTaggedQuery(com.google.firebase.database.core.view.QueryParams)
androidx.core.widget.NestedScrollView: void onNestedPreScroll(android.view.View,int,int,int[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isPassword()
kotlinx.coroutines.internal.ThreadSafeHeap: ThreadSafeHeap()
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat[] values()
androidx.window.layout.HardwareFoldingFeature: java.lang.String toString()
com.google.android.gms.common.internal.zze: java.util.HashMap zza(com.google.android.gms.common.internal.zze)
com.google.firebase.database.connection.HostInfo: java.lang.String getHost()
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
androidx.fragment.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)
kotlinx.coroutines.JobSupport: boolean start()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)
androidx.fragment.app.Fragment: void performDetach()
com.google.firebase.database.tubesock.MessageBuilderFactory$TextBuilder$1: java.lang.Object initialValue()
com.google.android.gms.maps.CameraUpdateFactory: void zza(com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate)
androidx.collection.LongSparseArray: java.lang.Object get(long,java.lang.Object)
com.google.zxing.qrcode.decoder.BitMatrixParser: void mirror()
com.journeyapps.barcodescanner.CaptureActivity: void onDestroy()
androidx.collection.SimpleArrayMap: void ensureCapacity(int)
androidx.appcompat.widget.AppCompatTextClassifierHelper: android.view.textclassifier.TextClassifier getTextClassifier()
com.google.android.gms.maps.model.PolygonOptions: PolygonOptions()
com.google.android.gms.common.internal.IAccountAccessor$Stub$zza: android.accounts.Account getAccount()
com.google.android.gms.common.api.internal.zaz: java.util.Map zab(com.google.android.gms.common.api.internal.zaz)
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator: Detector$ResultPointsAndTransitionsComparator()
androidx.appcompat.widget.SearchView: boolean isSubmitAreaEnabled()
com.google.android.gms.internal.location.zzl: zzl(com.google.android.gms.internal.location.zzk)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setTitle(java.lang.CharSequence)
com.journeyapps.barcodescanner.CaptureManager$2: void previewStopped()
com.google.firebase.database.collection.LLRBEmptyNode: com.google.firebase.database.collection.LLRBEmptyNode getInstance()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)
androidx.appcompat.view.StandaloneActionMode: boolean isTitleOptional()
com.google.android.gms.tasks.Tasks: void zza(com.google.android.gms.tasks.Task,com.google.android.gms.tasks.Tasks$zzb)
kotlinx.coroutines.channels.ChannelResult$Closed: java.lang.String toString()
com.google.zxing.maxicode.decoder.BitMatrixParser: byte[] readCodewords()
com.google.android.gms.internal.location.zzp: java.lang.Object[] newArray(int)
androidx.fragment.app.FragmentManager$8: FragmentManager$8(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
net.touchcapture.qr.flutterqr.QRView$1: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper: void success(java.lang.Object)
com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: AbstractFuture$UnsafeAtomicHelper()
net.touchcapture.qr.flutterqr.QRView: boolean hasFlash()
com.google.firebase.components.LazySet: java.lang.Object get()
io.flutter.embedding.android.FlutterView: void attachToFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
io.flutter.plugin.common.MethodCall: java.lang.Object arguments()
androidx.appcompat.view.ActionMode: void setTitleOptionalHint(boolean)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: EventChannel$IncomingStreamRequestHandler(io.flutter.plugin.common.EventChannel,io.flutter.plugin.common.EventChannel$StreamHandler)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: UrlLauncher$LaunchStatus(java.lang.String,int)
com.google.firebase.database.core.utilities.Tree: boolean hasChildren()
androidx.appcompat.view.menu.CascadingMenuPopup: boolean closeMenuOnSubMenuOpened()
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic)
io.flutter.embedding.engine.FlutterEngine: io.flutter.plugin.platform.PlatformViewsController getPlatformViewsController()
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription)
com.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void ensureBackgroundStateListenerRegistered(android.content.Context)
androidx.window.layout.SidecarAdapter$Companion: int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState)
io.flutter.plugins.googlemaps.MarkersController: boolean onMarkerTap(java.lang.String)
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context)
androidx.core.view.ContentInfoCompat$Builder: androidx.core.view.ContentInfoCompat$Builder setLinkUri(android.net.Uri)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
androidx.exifinterface.media.ExifInterface: void handleThumbnailFromStrips(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap)
com.google.android.gms.internal.location.zzbe: zzbe()
com.google.firebase.database.connection.PersistentConnectionImpl: void compareAndPut(java.util.List,java.lang.Object,java.lang.String,com.google.firebase.database.connection.RequestResultCallback)
com.google.firebase.database.DatabaseRegistrar: DatabaseRegistrar()
androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)
io.flutter.plugin.platform.PlatformViewsController$1: void setDirection(int,int)
io.flutter.plugins.googlemaps.PolygonBuilder: void setHoles(java.util.List)
kotlin.jvm.internal.TypeIntrinsics: int getFunctionArity(java.lang.Object)
com.google.firebase.database.snapshot.ChildKey$IntegerChildKey: ChildKey$IntegerChildKey(java.lang.String,int)
com.google.common.base.MoreObjects$ToStringHelper: MoreObjects$ToStringHelper(java.lang.String)
io.flutter.embedding.android.DrawableSplashScreen$1: void onAnimationEnd(android.animation.Animator)
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate getBridge()
io.flutter.plugins.googlemaps.GoogleMapController: void setIndoorEnabled(boolean)
io.flutter.plugins.imagepicker.ImagePickerCache: void setType(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setChildFrame(android.view.View,int,int,int,int)
com.google.zxing.datamatrix.decoder.BitMatrixParser: int readCorner3(int,int)
com.google.android.gms.internal.location.zzau: void onNotifyListenerFailed()
com.google.common.util.concurrent.AbstractFuture: void complete(com.google.common.util.concurrent.AbstractFuture)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getResourcePackageName(int)
androidx.appcompat.app.AppCompatActivity: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)
com.google.firebase.database.core.persistence.DefaultPersistenceManager: void updateTrackedQueryKeys(com.google.firebase.database.core.view.QuerySpec,java.util.Set,java.util.Set)
com.google.zxing.Result: java.lang.String getText()
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
com.journeyapps.barcodescanner.RotationListener$1: RotationListener$1(com.journeyapps.barcodescanner.RotationListener,android.content.Context,int)
com.baseflow.geolocator.location.FusedLocationClient: com.google.android.gms.location.LocationRequest buildLocationRequest(com.baseflow.geolocator.location.LocationOptions)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: ExtensionWindowLayoutInfoBackend$MulticastConsumer(android.app.Activity)
androidx.appcompat.widget.AppCompatTextHelper: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScrollable(boolean)
androidx.fragment.app.FragmentTransitionImpl: java.lang.String findKeyForValue(java.util.Map,java.lang.String)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: AppCompatSpinner$DialogPopup(androidx.appcompat.widget.AppCompatSpinner)
io.flutter.view.AccessibilityBridge$Flag: AccessibilityBridge$Flag(java.lang.String,int,int)
com.google.android.gms.common.internal.ClientIdentity: void writeToParcel(android.os.Parcel,int)
com.google.firebase.database.tubesock.WebSocketException: WebSocketException(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
kotlin.coroutines.CombinedContext: boolean equals(java.lang.Object)
androidx.savedstate.SavedStateRegistry: void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider)
com.google.android.gms.common.api.ApiException: ApiException(com.google.android.gms.common.api.Status)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric decodeNumeric(int)
androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)
com.google.android.gms.common.wrappers.Wrappers: Wrappers()
io.flutter.view.AccessibilityBridge: boolean doesLayoutInDisplayCutoutModeRequireLeftInset()
androidx.collection.MapCollections$MapIterator: java.util.Map$Entry next()
io.flutter.plugins.googlemaps.CirclesController: void changeCircles(java.util.List)
androidx.fragment.app.Fragment$4: boolean onHasView()
com.google.firebase.database.core.SyncTree: java.util.List applyOperationHelper(com.google.firebase.database.core.operation.Operation,com.google.firebase.database.core.utilities.ImmutableTree,com.google.firebase.database.snapshot.Node,com.google.firebase.database.core.WriteTreeRef)
com.google.zxing.qrcode.decoder.DecodedBitStreamParser: void decodeNumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int)
androidx.collection.SimpleArrayMap: int indexOfNull()
androidx.appcompat.app.ResourcesFlusher: void flush(android.content.res.Resources)
io.flutter.embedding.android.AndroidTouchProcessor: int getPointerDeviceTypeForToolType(int)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.google.common.util.concurrent.AbstractFuture: void addListener(java.lang.Runnable,java.util.concurrent.Executor)
androidx.fragment.app.BackStackRecord: BackStackRecord(androidx.fragment.app.FragmentManager)
com.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task continueWith(java.util.concurrent.Executor,com.google.android.gms.tasks.Continuation)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void start()
com.google.firebase.database.connection.ConnectionUtils: java.util.List stringToPath(java.lang.String)
androidx.appcompat.app.AppCompatDialog: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)
com.google.firebase.components.Dependency: java.lang.String toString()
com.google.zxing.oned.Code39Reader: int[] findAsteriskPattern(com.google.zxing.common.BitArray,int[])
com.google.android.gms.common.api.internal.BasePendingResult: void zar()
com.google.firebase.database.tubesock.WebSocketReceiver: void stopit()
com.google.firebase.database.core.SyncTree$8: java.util.List call()
io.flutter.embedding.engine.systemchannels.NavigationChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.gms.common.api.Api: com.google.android.gms.common.api.Api$AnyClientKey getClientKey()
kotlin.random.RandomKt: int takeUpperBits(int,int)
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: SearchView$PreQAutoCompleteTextViewReflector()
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: java.lang.Void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
io.flutter.embedding.android.FlutterView: java.util.Set access$200(io.flutter.embedding.android.FlutterView)
com.google.zxing.pdf417.detector.PDF417DetectorResult: com.google.zxing.common.BitMatrix getBits()
com.google.zxing.datamatrix.decoder.BitMatrixParser: com.google.zxing.datamatrix.decoder.Version getVersion()
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.SplitInfo translate(androidx.window.extensions.embedding.SplitInfo)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$4702(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean)
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean)
io.flutter.plugin.localization.LocalizationPlugin: void sendLocalesToFlutter(android.content.res.Configuration)
androidx.activity.result.ActivityResultRegistry: androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: boolean isClipPath()
com.google.android.gms.dynamic.DeferredLifecycleHelper: com.google.android.gms.dynamic.LifecycleDelegate zaa(com.google.android.gms.dynamic.DeferredLifecycleHelper,com.google.android.gms.dynamic.LifecycleDelegate)
io.flutter.plugin.platform.PlatformViewsController: void removeOverlaySurfaces()
kotlinx.coroutines.internal.DispatchedContinuation: boolean isReusable()
com.lyokone.location.MethodCallHandlerImpl: void setLocation(com.lyokone.location.FlutterLocation)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
com.google.android.gms.common.api.internal.zace: com.google.android.gms.common.api.internal.zacf zaa(com.google.android.gms.common.api.internal.zace)
androidx.fragment.app.FragmentAnim: int transitToAnimResourceId(int,boolean)
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.Feature[] getApiFeatures()
com.google.zxing.oned.Code93Reader: java.lang.String decodeExtended(java.lang.CharSequence)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: CoroutineScheduler$WorkerState(java.lang.String,int)
androidx.core.os.ExecutorCompat: java.util.concurrent.Executor create(android.os.Handler)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void zza(android.os.Parcel,int,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)
androidx.fragment.app.FragmentLayoutInflaterFactory: FragmentLayoutInflaterFactory(androidx.fragment.app.FragmentManager)
androidx.appcompat.widget.SearchView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
com.google.firebase.database.connection.WebsocketConnection: boolean isBuffering()
com.google.zxing.qrcode.decoder.QRCodeDecoderMetaData: void applyMirroredCorrection(com.google.zxing.ResultPoint[])
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: java.lang.Object invoke(java.lang.Object)
com.baseflow.geolocator.location.FusedLocationClient: com.google.android.gms.location.LocationSettingsRequest buildLocationSettingsRequest(com.google.android.gms.location.LocationRequest)
kotlinx.coroutines.internal.FastServiceLoader: java.util.List parseFile(java.io.BufferedReader)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat alpha(float)
com.google.firebase.database.core.view.ViewProcessor$1: com.google.firebase.database.snapshot.NamedNode getChildAfterChild(com.google.firebase.database.snapshot.Index,com.google.firebase.database.snapshot.NamedNode,boolean)
androidx.fragment.app.DefaultSpecialEffectsController$6: void run()
com.google.firebase.database.core.persistence.TrackedQueryManager$1: boolean evaluate(java.lang.Object)
kotlinx.coroutines.internal.DispatchedContinuation: void resumeWith(java.lang.Object)
io.flutter.view.AccessibilityBridge: boolean shouldSetCollectionInfo(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.database.core.Repo$3: Repo$3(com.google.firebase.database.core.Repo)
com.google.firebase.database.snapshot.ChildrenNode$2: void visitEntry(java.lang.Object,java.lang.Object)
com.google.firebase.database.core.SyncTree$6: SyncTree$6(com.google.firebase.database.core.SyncTree,java.util.Map,com.google.firebase.database.core.Path)
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence getTitle()
com.google.android.gms.maps.internal.zzg: void setOnCameraMoveStartedListener(com.google.android.gms.maps.internal.zzt)
androidx.lifecycle.ClassesInfoCache: java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)
com.google.android.gms.internal.common.zzb: zzb(java.lang.String)
com.google.android.gms.common.api.internal.BasePendingResult: void addStatusListener(com.google.android.gms.common.api.PendingResult$StatusListener)
androidx.appcompat.widget.SearchView: boolean launchSuggestion(int,int,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.google.zxing.pdf417.decoder.ec.ModulusPoly: com.google.zxing.pdf417.decoder.ec.ModulusPoly multiply(com.google.zxing.pdf417.decoder.ec.ModulusPoly)
io.flutter.plugins.googlemaps.MarkerBuilder: void setZIndex(float)
com.google.firebase.database.core.WriteTreeRef: WriteTreeRef(com.google.firebase.database.core.Path,com.google.firebase.database.core.WriteTree)
androidx.versionedparcelable.VersionedParcel: boolean readBoolean(boolean,int)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)
androidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: java.lang.String decodeAllCodes(java.lang.StringBuilder,int)
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: android.content.Intent createIntent(android.content.Context,java.lang.Object)
com.google.firebase.database.core.Repo$25: void run()
io.flutter.plugins.googlemaps.MarkersController: void addMarkers(java.util.List)
com.google.firebase.database.core.Context: void ensureAppTokenProvider()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
androidx.core.widget.TextViewCompat$OreoCallback: java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager)
com.google.android.gms.maps.model.LatLng: LatLng(double,double)
androidx.appcompat.widget.ActionMenuPresenter: boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.RestorationChannel access$200(io.flutter.embedding.engine.FlutterEngine)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void clearExtrasSpans()
com.lyokone.location.StreamHandlerImpl: void onCancel(java.lang.Object)
com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastJellyBeanMR2()
com.google.firebase.database.core.ChildEventRegistration: boolean respondsTo(com.google.firebase.database.core.view.Event$EventType)
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock: void send(java.lang.String)
androidx.appcompat.view.menu.MenuItemImpl: int getOrdering()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)
androidx.appcompat.view.ActionBarPolicy: ActionBarPolicy(android.content.Context)
com.google.firebase.database.collection.LLRBEmptyNode: com.google.firebase.database.collection.LLRBNode copy(java.lang.Object,java.lang.Object,com.google.firebase.database.collection.LLRBNode$Color,com.google.firebase.database.collection.LLRBNode,com.google.firebase.database.collection.LLRBNode)
androidx.collection.MapCollections$MapIterator: boolean hasNext()
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: androidx.appcompat.view.menu.MenuItemImpl getItem(int)
androidx.appcompat.widget.ResourcesWrapper: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)
androidx.appcompat.app.AppCompatDelegateImpl$1: boolean shouldWrapException(java.lang.Throwable)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean isAttachedToService()
com.lyokone.location.FlutterLocationService: boolean shouldShowRequestBackgroundPermissionRationale()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void clearColorFilter()
com.google.android.gms.common.GoogleApiAvailability: boolean zaa(android.app.Activity,com.google.android.gms.common.api.internal.LifecycleFragment,int,int,android.content.DialogInterface$OnCancelListener)
com.google.zxing.aztec.detector.Detector: boolean isWhiteOrBlackRectangle(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point)
androidx.appcompat.widget.AbsActionBarView: int positionChild(android.view.View,int,int,int,boolean)
androidx.appcompat.widget.AppCompatTextHelper: void setAutoSizeTextTypeWithDefaults(int)
androidx.core.widget.TextViewCompat$OreoCallback: android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
androidx.appcompat.app.AlertController$5: void run()
com.google.zxing.oned.rss.expanded.ExpandedPair: boolean mustBeLast()
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: boolean isReady()
com.google.android.gms.internal.location.zzal: zzal(android.os.IBinder)
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextPaint getTextPaint()
androidx.collection.ContainerHelpers: int idealByteArraySize(int)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable)
com.google.android.gms.common.api.internal.zaz: java.util.Map zaa(com.google.android.gms.common.api.internal.zaz)
androidx.activity.result.ActivityResultRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
io.flutter.plugin.editing.ListenableEditingState: void clearBatchDeltas()
androidx.appcompat.app.AlertController: void setView(android.view.View,int,int,int,int)
kotlinx.coroutines.android.HandlerContext: int hashCode()
androidx.appcompat.app.AppCompatDelegateImpl: boolean dispatchKeyEvent(android.view.KeyEvent)
com.google.android.gms.maps.internal.zzg: com.google.android.gms.internal.maps.zzh addCircle(com.google.android.gms.maps.model.CircleOptions)
com.google.android.gms.common.internal.Objects: boolean equal(java.lang.Object,java.lang.Object)
com.google.firebase.database.core.view.CancelEvent: com.google.firebase.database.core.Path getPath()
com.google.firebase.database.core.view.Event$EventType: com.google.firebase.database.core.view.Event$EventType[] values()
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: void decodeTextSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder)
com.google.firebase.database.core.persistence.TrackedQueryManager: long countOfPrunableQueries()
com.google.firebase.database.core.Tag: int hashCode()
kotlin.ranges.IntProgression$Companion: IntProgression$Companion()
com.google.zxing.oned.rss.Pair: int getCount()
com.google.android.gms.location.LocationRequest: com.google.android.gms.location.LocationRequest create()
com.google.firebase.database.snapshot.IndexedNode: com.google.firebase.database.snapshot.IndexedNode from(com.google.firebase.database.snapshot.Node)
com.google.zxing.qrcode.detector.Detector: float sizeOfBlackWhiteBlackRunBothWays(int,int,int,int)
com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)
com.google.zxing.pdf417.decoder.ec.ModulusGF: int subtract(int,int)
androidx.appcompat.widget.ResourceManagerInternal: void checkVectorDrawableSetup(android.content.Context)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int addStateSet(int[],android.graphics.drawable.Drawable)
com.google.firebase.database.Query$3: Query$3(com.google.firebase.database.Query,com.google.firebase.database.core.EventRegistration)
androidx.appcompat.view.menu.MenuBuilder: android.graphics.drawable.Drawable getHeaderIcon()
com.google.android.gms.common.api.internal.ApiKey: com.google.android.gms.common.api.internal.ApiKey getSharedApiKey(com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions)
androidx.core.widget.NestedScrollView: boolean scrollToChildRect(android.graphics.Rect,boolean)
com.journeyapps.barcodescanner.CameraPreview: void previewStarted()
androidx.core.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)
com.google.firebase.database.collection.ImmutableSortedSet$WrappedEntryIterator: java.lang.Object next()
com.google.firebase.database.snapshot.ChildrenNode: java.lang.String getHashRepresentation(com.google.firebase.database.snapshot.Node$HashVersion)
com.google.firebase.database.core.view.QueryParams: com.google.firebase.database.snapshot.Node getIndexStartValue()
kotlinx.coroutines.JobSupport: void cancelInternal(java.lang.Throwable)
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: AbstractSafeParcelable()
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object wrapTransitionInSet(java.lang.Object)
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzi zzj(android.content.Context)
com.google.firebase.database.snapshot.IndexedNode: com.google.firebase.database.snapshot.ChildKey getPredecessorChildName(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node,com.google.firebase.database.snapshot.Index)
com.lyokone.location.MethodCallHandlerImpl: void enableBackgroundMode(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.cursoradapter.widget.CursorAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)
com.google.android.gms.maps.GoogleMap: com.google.android.gms.maps.model.TileOverlay addTileOverlay(com.google.android.gms.maps.model.TileOverlayOptions)
com.google.firebase.database.core.SyncTree: com.google.firebase.database.core.utilities.ImmutableTree access$702(com.google.firebase.database.core.SyncTree,com.google.firebase.database.core.utilities.ImmutableTree)
androidx.collection.SimpleArrayMap: boolean isEmpty()
io.flutter.embedding.engine.plugins.lifecycle.FlutterLifecycleAdapter: androidx.lifecycle.Lifecycle getActivityLifecycle(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.window.core.Bounds: int getBottom()
androidx.window.embedding.SplitInfo: float getSplitRatio()
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: MouseCursorChannel(io.flutter.embedding.engine.dart.DartExecutor)
com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder: com.google.zxing.oned.rss.expanded.decoders.AbstractExpandedDecoder createDecoder(com.google.zxing.common.BitArray)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
com.google.firebase.database.core.SyncPoint: java.util.List applyOperationToView(com.google.firebase.database.core.view.View,com.google.firebase.database.core.operation.Operation,com.google.firebase.database.core.WriteTreeRef,com.google.firebase.database.snapshot.Node)
kotlin.Pair: boolean equals(java.lang.Object)
kotlin.collections.EmptySet: boolean contains(java.lang.Object)
androidx.fragment.app.FragmentManager: boolean isLoggingEnabled(int)
androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawableForDensity(int,int)
com.lyokone.location.NotificationOptions: NotificationOptions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode access$400(io.flutter.embedding.engine.systemchannels.PlatformChannel,java.lang.String)
androidx.appcompat.view.SupportMenuInflater: SupportMenuInflater(android.content.Context)
com.google.zxing.common.reedsolomon.GenericGF: int inverse(int)
com.google.firebase.database.core.utilities.Validation: boolean isValidKey(java.lang.String)
com.google.firebase.database.core.view.CacheNode: boolean isCompleteForChild(com.google.firebase.database.snapshot.ChildKey)
com.google.android.gms.internal.location.zzav: void onNotifyListenerFailed()
kotlin.coroutines.intrinsics.CoroutineSingletons: CoroutineSingletons(java.lang.String,int)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)
com.google.firebase.database.connection.PersistentConnectionImpl: void sendAuthAndRestoreState()
com.google.zxing.client.android.BeepManager: android.media.MediaPlayer playBeepSound()
androidx.fragment.app.FragmentManagerImpl: FragmentManagerImpl()
com.google.android.gms.maps.model.Polyline: void setClickable(boolean)
com.google.android.gms.maps.model.PolygonOptions: com.google.android.gms.maps.model.PolygonOptions strokeWidth(float)
com.google.android.gms.maps.model.CircleOptions: float getStrokeWidth()
io.flutter.plugin.editing.TextInputPlugin: void notifyViewExited()
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: int getNumberOfECCodeWords(int)
androidx.core.view.ContentInfoCompat$Builder: androidx.core.view.ContentInfoCompat build()
com.google.firebase.database.core.operation.OperationSource: java.lang.String toString()
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$5$1: ExceptionsConstuctorKt$tryCopyException$5$1()
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.lifecycle.Lifecycle$State: Lifecycle$State(java.lang.String,int)
kotlinx.coroutines.scheduling.NonBlockingContext: void afterTask()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object trySend-JP2dKIU(java.lang.Object)
io.flutter.embedding.android.FlutterSplashView: android.view.View access$300(io.flutter.embedding.android.FlutterSplashView)
androidx.appcompat.view.WindowCallbackWrapper: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int)
com.lyokone.location.LocationPlugin: void detachActivity()
com.google.firebase.database.core.persistence.PruneForest$3: java.lang.Object onNodeValue(com.google.firebase.database.core.Path,java.lang.Boolean,java.lang.Object)
kotlinx.coroutines.CoroutineDispatcher: void releaseInterceptedContinuation(kotlin.coroutines.Continuation)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeTypedArray(android.os.Parcel,int,android.os.Parcelable[],int,boolean)
com.google.android.gms.maps.model.TileOverlayOptions: boolean getFadeIn()
com.google.android.gms.maps.model.CircleOptions: CircleOptions(com.google.android.gms.maps.model.LatLng,double,float,int,int,float,boolean,boolean,java.util.List)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
com.google.zxing.datamatrix.decoder.BitMatrixParser: com.google.zxing.common.BitMatrix extractDataRegion(com.google.zxing.common.BitMatrix)
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.google.android.gms.maps.internal.zzau: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode firstImpl()
androidx.core.widget.NestedScrollView: void initVelocityTrackerIfNotExists()
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: boolean needsDividerAfter()
androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findActiveFragment(java.lang.String)
com.google.android.gms.dynamite.zzj: int zzak()
androidx.appcompat.view.menu.StandardMenuPopup: StandardMenuPopup(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean)
kotlin.internal.jdk8.JDK8PlatformImplementations: kotlin.random.Random defaultPlatformRandom()
kotlinx.coroutines.CoroutineId: int hashCode()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback: ActionMenuPresenter$ActionMenuPopupCallback(androidx.appcompat.widget.ActionMenuPresenter)
com.google.firebase.database.core.utilities.Tree: void forEachChild(com.google.firebase.database.core.utilities.Tree$TreeVisitor)
androidx.core.graphics.PathParser: boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
io.flutter.plugins.googlemaps.PolygonBuilder: com.google.android.gms.maps.model.PolygonOptions build()
com.google.firebase.database.snapshot.DeferredValueNode: int compareLeafValues(com.google.firebase.database.snapshot.DeferredValueNode)
com.google.android.gms.internal.location.zzas: android.location.Location getLastLocation()
androidx.fragment.app.BackStackState$1: androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel)
androidx.appcompat.widget.Toolbar: boolean shouldCollapse()
androidx.fragment.app.FragmentActivity$HostCallbacks: java.lang.Object onGetHost()
com.google.firebase.database.core.persistence.TrackedQueryManager$1: TrackedQueryManager$1()
com.google.firebase.database.core.persistence.NoopPersistenceManager: void setTrackedQueryKeys(com.google.firebase.database.core.view.QuerySpec,java.util.Set)
kotlin.SynchronizedLazyImpl: SynchronizedLazyImpl(kotlin.jvm.functions.Function0,java.lang.Object)
androidx.core.provider.RequestExecutor$DefaultThreadFactory: RequestExecutor$DefaultThreadFactory(java.lang.String,int)
androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicHeight()
androidx.fragment.app.Fragment: androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData()
kotlinx.coroutines.channels.AbstractChannel$RemoveReceiveOnCancel: void invoke(java.lang.Throwable)
com.google.android.gms.common.api.internal.zzd: zzd(com.google.android.gms.common.api.internal.zzc,com.google.android.gms.common.api.internal.LifecycleCallback,java.lang.String)
com.google.firebase.database.android.AndroidAuthTokenProvider: void addTokenChangeListener(java.util.concurrent.ExecutorService,com.google.firebase.database.core.TokenProvider$TokenChangeListener)
androidx.appcompat.app.AppCompatDelegateImpl: boolean shouldInheritContext(android.view.ViewParent)
com.google.zxing.pdf417.decoder.Codeword: java.lang.String toString()
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet,int)
com.google.android.gms.internal.maps.zzu: com.google.android.gms.internal.maps.zzt zzg(android.os.IBinder)
androidx.collection.ArraySet: void clear()
androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry eldest()
androidx.window.embedding.SplitInfo: java.lang.String toString()
com.google.android.gms.tasks.zzm: com.google.android.gms.tasks.OnSuccessListener zzb(com.google.android.gms.tasks.zzm)
io.flutter.embedding.engine.loader.FlutterLoader$1: FlutterLoader$1(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
com.google.android.gms.common.Feature: int hashCode()
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
com.google.firebase.database.DatabaseException: DatabaseException(java.lang.String,java.lang.Throwable)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: TextInputChannel$Configuration(boolean,boolean,boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization,io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,java.lang.Integer,java.lang.String,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[])
androidx.collection.LongSparseArray: void gc()
com.google.firebase.database.collection.ArraySortedMap: java.lang.Object getPredecessorKey(java.lang.Object)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean)
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.String getQueueDebugStateString()
com.google.common.util.concurrent.AbstractFuture: java.lang.Object getDoneValue(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])
com.baseflow.geolocator.GeolocatorLocationService: void onCreate()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
com.baseflow.geolocator.MethodCallHandlerImpl: MethodCallHandlerImpl(com.baseflow.geolocator.permission.PermissionManager,com.baseflow.geolocator.location.GeolocationManager,com.baseflow.geolocator.location.LocationAccuracyManager)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState(android.graphics.drawable.Drawable$ConstantState)
androidx.appcompat.view.SupportActionModeWrapper: java.lang.CharSequence getTitle()
com.google.firebase.database.connection.PersistentConnectionImpl: void sendGet(java.lang.Long)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void setPromptText(java.lang.CharSequence)
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_0_1$cp()
kotlinx.coroutines.internal.ExceptionsConstuctorKt: java.lang.Throwable tryCopyException(java.lang.Throwable)
io.flutter.embedding.android.FlutterSurfaceView: void changeSurfaceSize(int,int)
androidx.fragment.app.FragmentController: void dispatchMultiWindowModeChanged(boolean)
androidx.fragment.app.FragmentManager$10: void onActivityResult(androidx.activity.result.ActivityResult)
androidx.appcompat.app.AppCompatDelegateImpl$3: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
io.flutter.embedding.engine.FlutterShellArgs: FlutterShellArgs(java.util.List)
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: boolean isCalledFromAlertDialog()
com.google.android.gms.common.internal.BaseGmsClient$zzc: void unregister()
com.journeyapps.barcodescanner.camera.DisplayConfiguration: int getRotation()
com.baseflow.geolocator.MethodCallHandlerImpl: void setActivity(android.app.Activity)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
androidx.appcompat.widget.TooltipCompatHandler: void scheduleShow()
com.google.android.gms.dynamite.zzh: java.lang.Class loadClass(java.lang.String,boolean)
com.google.android.gms.internal.maps.zzj: void setRadius(double)
kotlinx.coroutines.channels.Send: void undeliveredElement()
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription access$200(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject)
androidx.collection.MapCollections: java.lang.Object[] toArrayHelper(int)
io.flutter.plugins.googlemaps.MarkersController: void hideMarkerInfoWindow(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugins.googlemaps.PolylineController: java.lang.String getGoogleMapsPolylineId()
net.touchcapture.qr.flutterqr.QRView: void changeScanArea(double,double,double,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.graphics.Insets: boolean equals(java.lang.Object)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: void reverseCounters(int[])
androidx.appcompat.widget.LinearLayoutCompat: void onMeasure(int,int)
com.journeyapps.barcodescanner.camera.CameraInstance$4: CameraInstance$4(com.journeyapps.barcodescanner.camera.CameraInstance)
androidx.appcompat.app.TwilightManager: TwilightManager(android.content.Context,android.location.LocationManager)
androidx.appcompat.app.LayoutIncludeDetector: boolean shouldInheritContext(org.xmlpull.v1.XmlPullParser,org.xmlpull.v1.XmlPullParser)
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.core.widget.NestedScrollView: boolean hasNestedScrollingParent(int)
com.google.firebase.database.collection.ArraySortedMap: java.util.Comparator getComparator()
com.google.firebase.database.snapshot.KeyIndex: com.google.firebase.database.snapshot.KeyIndex getInstance()
com.google.zxing.oned.rss.RSSUtils: int combins(int,int)
androidx.core.view.AccessibilityDelegateCompat: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
kotlinx.coroutines.CancellableContinuationKt: kotlinx.coroutines.CancellableContinuationImpl getOrCreateCancellableContinuation(kotlin.coroutines.Continuation)
androidx.appcompat.app.AppCompatActivity$2: void onContextAvailable(android.content.Context)
com.google.android.gms.common.internal.ResolveAccountRequest: ResolveAccountRequest(int,android.accounts.Account,int,com.google.android.gms.auth.api.signin.GoogleSignInAccount)
androidx.appcompat.view.menu.MenuDialogHelper: void dismiss()
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistryImpl access$100(io.flutter.plugin.platform.PlatformViewsController)
com.google.firebase.database.snapshot.CompoundHash$SimpleSizeSplitStrategy: boolean shouldSplit(com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder)
io.flutter.plugin.editing.TextInputPlugin$1: void hide()
androidx.appcompat.app.AppCompatDialog: AppCompatDialog(android.content.Context,int)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)
androidx.core.widget.NestedScrollView: void onSizeChanged(int,int,int,int)
com.google.firebase.database.core.ValueProvider$DeferredValueProvider: ValueProvider$DeferredValueProvider(com.google.firebase.database.core.SyncTree,com.google.firebase.database.core.Path)
androidx.appcompat.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.core.graphics.Insets: androidx.core.graphics.Insets of(android.graphics.Rect)
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformChannel)
kotlinx.coroutines.internal.LockFreeLinkedListNode: LockFreeLinkedListNode()
androidx.appcompat.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,int)
androidx.lifecycle.ViewModelStore: androidx.lifecycle.ViewModel get(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation fromValue(java.lang.String)
com.google.firebase.database.collection.ArraySortedMap: com.google.firebase.database.collection.ImmutableSortedMap remove(java.lang.Object)
androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void next(int)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
androidx.core.content.FileProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)
androidx.core.widget.NestedScrollView: void onAttachedToWindow()
androidx.appcompat.view.menu.CascadingMenuPopup$2: void onViewDetachedFromWindow(android.view.View)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setTitleInt(java.lang.CharSequence)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()
io.flutter.plugin.mouse.MouseCursorPlugin$1: MouseCursorPlugin$1(io.flutter.plugin.mouse.MouseCursorPlugin)
com.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime$Builder addComponent(com.google.firebase.components.Component)
kotlin.text.DelimitedRangesSequence: java.lang.CharSequence access$getInput$p(kotlin.text.DelimitedRangesSequence)
androidx.core.view.WindowInsetsControllerCompat$Impl30: void setAppearanceLightNavigationBars(boolean)
com.google.firebase.database.core.SyncTree: com.google.firebase.database.core.persistence.PersistenceManager access$200(com.google.firebase.database.core.SyncTree)
com.lyokone.location.LocationPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
net.touchcapture.qr.flutterqr.QRView$1: void onActivityResumed(android.app.Activity)
com.google.android.gms.location.zzj: zzj(boolean,long,float,long,int)
kotlinx.coroutines.CoroutinesInternalError: CoroutinesInternalError(java.lang.String,java.lang.Throwable)
com.google.firebase.database.core.SyncTree$KeepSyncedEventRegistration: void fireEvent(com.google.firebase.database.core.view.DataEvent)
com.google.android.gms.common.internal.zzh: java.lang.String getPackageName()
com.google.firebase.database.snapshot.IndexedNode: boolean hasIndex(com.google.firebase.database.snapshot.Index)
androidx.appcompat.widget.AppCompatTextView: void onLayout(boolean,int,int,int,int)
androidx.core.app.ActivityCompat$1: void run()
androidx.appcompat.view.menu.MenuItemImpl: boolean isEnabled()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.fragment.app.BackStackRecord: androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment)
com.google.android.gms.common.api.internal.zza: zza()
com.google.android.gms.maps.model.CameraPosition$Builder: com.google.android.gms.maps.model.CameraPosition$Builder bearing(float)
com.google.zxing.aztec.decoder.Decoder$Table: com.google.zxing.aztec.decoder.Decoder$Table valueOf(java.lang.String)
androidx.lifecycle.Lifecycle$Event: Lifecycle$Event(java.lang.String,int)
androidx.window.layout.FoldingFeature$OcclusionType: FoldingFeature$OcclusionType(java.lang.String)
io.flutter.plugins.imagepicker.ImagePickerPlugin: io.flutter.plugins.imagepicker.ImagePickerDelegate constructDelegate(android.app.Activity)
androidx.appcompat.widget.AppCompatReceiveContentHelper: boolean maybeHandleDragEventViaPerformReceiveContent(android.view.View,android.view.DragEvent)
io.flutter.plugins.imagepicker.ImagePickerPlugin: void tearDown()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
io.flutter.plugins.firebase.database.FlutterFirebaseDatabaseException: java.lang.String getCode()
com.google.zxing.common.DetectorResult: com.google.zxing.common.BitMatrix getBits()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: double readDouble()
com.google.firebase.database.android.SqlPersistenceStorageEngine: com.google.firebase.database.snapshot.Node serverCache(com.google.firebase.database.core.Path)
androidx.core.content.ContextCompat: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
com.journeyapps.barcodescanner.CameraPreview: void containerSized(com.journeyapps.barcodescanner.Size)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
androidx.core.graphics.drawable.IconCompat: void onPostParceling()
kotlin.collections.EmptyMap: java.lang.String toString()
androidx.appcompat.widget.ListPopupWindow: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable: ListPopupWindow$ResizePopupRunnable(androidx.appcompat.widget.ListPopupWindow)
androidx.appcompat.app.AppCompatActivity: void onStart()
com.google.android.gms.maps.model.Polyline: void setVisible(boolean)
androidx.core.provider.FontRequestWorker$3: java.lang.Object call()
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getTooltipText()
kotlinx.coroutines.JobKt: void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException)
io.flutter.embedding.engine.renderer.FlutterRenderer$1: void onFlutterUiNoLongerDisplayed()
androidx.fragment.app.DefaultSpecialEffectsController$1: void run()
com.baseflow.geolocator.location.LocationManagerClient: boolean onActivityResult(int,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hasFlag(io.flutter.view.AccessibilityBridge$Flag)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setActionView(android.view.View)
io.flutter.plugin.common.MethodChannel: MethodChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String)
io.flutter.plugin.platform.PlatformPlugin: void access$500(io.flutter.plugin.platform.PlatformPlugin)
io.flutter.plugins.firebase.database.TransactionHandler: void onComplete(com.google.firebase.database.DatabaseError,boolean,com.google.firebase.database.DataSnapshot)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: int getInstanceId()
kotlinx.coroutines.NonDisposableHandle: java.lang.String toString()
com.google.firebase.database.snapshot.LeafNode: int compareLongDoubleNodes(com.google.firebase.database.snapshot.LongNode,com.google.firebase.database.snapshot.DoubleNode)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener)
com.google.firebase.database.snapshot.LongNode: java.lang.String getHashRepresentation(com.google.firebase.database.snapshot.Node$HashVersion)
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet,int)
kotlin.text.StringsKt__StringsJVMKt: boolean startsWith(java.lang.String,java.lang.String,boolean)
androidx.fragment.app.FragmentManager$7: FragmentManager$7(androidx.fragment.app.FragmentManager,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment)
com.google.firebase.database.tubesock.MessageBuilderFactory$BinaryBuilder: com.google.firebase.database.tubesock.WebSocketMessage toMessage()
kotlinx.coroutines.channels.Closed: kotlinx.coroutines.channels.Closed getPollResult()
androidx.core.view.WindowInsetsCompat: android.view.WindowInsets toWindowInsets()
androidx.fragment.app.FragmentManager$4: FragmentManager$4(androidx.fragment.app.FragmentManager)
com.google.android.gms.internal.location.zzad: com.google.android.gms.common.api.Status getStatus()
com.google.android.gms.internal.location.zzn: zzn()
io.flutter.plugins.urllauncher.WebViewActivity: WebViewActivity()
com.google.android.gms.maps.internal.zzbx: void setZoomGesturesEnabled(boolean)
com.google.android.gms.common.internal.BaseGmsClient: boolean isConnected()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State from(android.view.View)
com.google.zxing.qrcode.detector.FinderPatternFinder: float centerFromEnd(int[],int)
com.google.zxing.DecodeHintType: com.google.zxing.DecodeHintType valueOf(java.lang.String)
com.google.android.gms.signin.internal.zad: void zaa(com.google.android.gms.common.api.Status,com.google.android.gms.auth.api.signin.GoogleSignInAccount)
io.flutter.plugins.googlemaps.Convert: java.util.List toList(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)
kotlinx.coroutines.internal.AtomicOp: kotlinx.coroutines.internal.AtomicOp getAtomicOp()
androidx.core.view.MarginLayoutParamsCompat: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
io.flutter.view.AccessibilityBridge: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
io.flutter.plugins.googlemaps.Convert: java.lang.Object markerIdToJson(java.lang.String)
com.google.android.gms.common.api.internal.GoogleApiManager: android.os.Handler zaa(com.google.android.gms.common.api.internal.GoogleApiManager)
androidx.activity.OnBackPressedCallback: void setEnabled(boolean)
androidx.appcompat.app.WindowDecorActionBar: void hideForSystem()
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper: boolean onMenuItemClick(android.view.MenuItem)
androidx.fragment.app.DefaultSpecialEffectsController$4$1: void run()
androidx.appcompat.widget.SuggestionsAdapter: android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)
androidx.appcompat.widget.DropDownListView: boolean hasFocus()
io.flutter.plugin.platform.PlatformPlugin: PlatformPlugin(android.app.Activity,io.flutter.embedding.engine.systemchannels.PlatformChannel,io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate)
com.google.zxing.pdf417.decoder.ec.ErrorCorrection: int decode(int[],int,int[])
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode hitTest(float[])
kotlin.collections.ArraysKt___ArraysJvmKt: void sortWith(java.lang.Object[],java.util.Comparator)
androidx.fragment.app.FragmentAnim: int getNextAnim(androidx.fragment.app.Fragment,boolean,boolean)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)
com.google.android.gms.internal.maps.zzc: android.os.Parcelable zza(android.os.Parcel,android.os.Parcelable$Creator)
com.google.firebase.database.snapshot.ChildrenNode: java.lang.String getHash()
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest)
io.flutter.plugins.pathprovider.PathProviderPlugin$UiThreadExecutor: PathProviderPlugin$UiThreadExecutor()
androidx.core.view.WindowInsetsCompat: WindowInsetsCompat(androidx.core.view.WindowInsetsCompat)
com.google.android.gms.common.internal.ConnectionErrorMessages: java.lang.String zaa(android.content.Context,java.lang.String)
io.flutter.plugin.common.StringCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
com.google.android.gms.common.internal.BaseGmsClient$zza: void zza(java.lang.Object)
com.google.android.gms.maps.internal.zzbx: void setScrollGesturesEnabled(boolean)
com.google.firebase.database.snapshot.EmptyNode: java.lang.String getHash()
com.google.android.gms.internal.maps.zzy: java.lang.String getId()
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$1: java.lang.Throwable invoke(java.lang.Throwable)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()
androidx.appcompat.app.AppCompatDelegateImpl: void cleanupAutoManagers()
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
kotlinx.coroutines.EventLoop: boolean processUnconfinedEvent()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
io.flutter.embedding.android.MotionEventTracker$MotionEventId: long getId()
androidx.core.provider.CallbackWithHandler$2: CallbackWithHandler$2(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,int)
com.google.zxing.LuminanceSource: com.google.zxing.LuminanceSource rotateCounterClockwise()
androidx.window.layout.SidecarAdapter: SidecarAdapter()
com.google.zxing.oned.UPCEANExtension2Support: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,int[])
com.google.firebase.database.core.WriteTree$2: WriteTree$2()
androidx.core.content.res.ResourcesCompat: void addColorStateListToCache(androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey,int,android.content.res.ColorStateList)
com.google.firebase.database.core.ZombieEventManager: void zombifyForRemove(com.google.firebase.database.core.EventRegistration)
com.google.firebase.database.collection.ImmutableSortedMapIterator: java.lang.Object next()
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
com.google.firebase.database.snapshot.ChildrenNode$ChildVisitor: ChildrenNode$ChildVisitor()
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.google.android.gms.maps.internal.zzbx: void setCompassEnabled(boolean)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable: ActionMenuPresenter$OpenOverflowRunnable(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup)
com.google.android.gms.common.internal.BaseGmsClient: boolean zzk()
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
androidx.collection.MapCollections$MapIterator: java.lang.Object getValue()
com.google.firebase.database.core.utilities.Pair: int hashCode()
com.google.firebase.database.core.SyncTree$11: java.lang.Void call()
com.google.firebase.database.core.persistence.DefaultPersistenceManager: void setQueryActive(com.google.firebase.database.core.view.QuerySpec)
com.google.firebase.database.snapshot.ChildrenNode: java.lang.Object getValue(boolean)
androidx.multidex.MultiDex: java.lang.reflect.Method findMethod(java.lang.Object,java.lang.String,java.lang.Class[])
androidx.fragment.app.Fragment: boolean isPostponed()
androidx.appcompat.app.AppCompatDelegateImpl$6: void run()
com.google.android.gms.location.LocationAvailability: boolean equals(java.lang.Object)
androidx.arch.core.internal.SafeIterableMap$Entry: SafeIterableMap$Entry(java.lang.Object,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
com.google.android.gms.maps.GoogleMap: void setOnMarkerDragListener(com.google.android.gms.maps.GoogleMap$OnMarkerDragListener)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.PlatformViewRegistry getRegistry()
com.google.firebase.database.OnDisconnect: OnDisconnect(com.google.firebase.database.core.Repo,com.google.firebase.database.core.Path)
com.google.firebase.database.MutableData: com.google.firebase.database.snapshot.Node getNode()
com.google.firebase.database.tubesock.WebSocket$1: void setName(java.lang.Thread,java.lang.String)
io.flutter.embedding.android.FlutterView: void onSizeChanged(int,int,int,int)
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()
net.touchcapture.qr.flutterqr.QRView: void checkAndRequestPermission(io.flutter.plugin.common.MethodChannel$Result)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)
androidx.core.graphics.drawable.DrawableCompat: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
com.google.firebase.database.connection.util.RetryHelper$1: void run()
com.google.firebase.database.core.view.EventRaiser: void raiseEvents(java.util.List)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
com.google.firebase.database.core.persistence.TrackedQueryManager$4: TrackedQueryManager$4()
androidx.appcompat.view.menu.CascadingMenuPopup: void setShowTitle(boolean)
com.google.android.gms.maps.internal.zzg: void setOnMapClickListener(com.google.android.gms.maps.internal.zzaj)
io.flutter.plugins.urllauncher.WebViewActivity$2: WebViewActivity$2(io.flutter.plugins.urllauncher.WebViewActivity)
com.journeyapps.barcodescanner.BarcodeView: void stopDecoderThread()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int getTotalDuration()
com.google.android.gms.common.api.internal.zae: zae(int,com.google.android.gms.tasks.TaskCompletionSource)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.widget.SuggestionsAdapter: java.lang.String getStringOrNull(android.database.Cursor,int)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void beforeTask(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: boolean onStateChanged(int[])
com.google.firebase.database.snapshot.ChildrenNode: com.google.firebase.database.snapshot.Node updateImmediateChild(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node)
androidx.fragment.app.FragmentManager: void dispatchOnAttachFragment(androidx.fragment.app.Fragment)
androidx.fragment.app.Fragment: java.lang.Object getEnterTransition()
androidx.core.widget.NestedScrollView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
com.google.firebase.database.core.Repo: void onServerInfoUpdate(java.util.Map)
com.google.firebase.database.core.Repo: com.google.firebase.database.DatabaseError fromErrorCode(java.lang.String,java.lang.String)
com.google.firebase.database.core.view.filter.LimitedFilter: com.google.firebase.database.snapshot.Index getIndex()
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
com.google.firebase.database.core.SyncPoint: java.util.List getQueryViews()
com.journeyapps.barcodescanner.RotationListener$1: void onOrientationChanged(int)
androidx.core.graphics.TypefaceCompatBaseImpl: androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int)
androidx.core.view.WindowInsetsCompat: int hashCode()
com.google.firebase.database.DataSnapshot$1: java.util.Iterator iterator()
com.google.firebase.database.core.Repo: com.google.firebase.database.core.utilities.Tree getAncestorTransactionNode(com.google.firebase.database.core.Path)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingGet: com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionRequestCallback getOnComplete()
androidx.fragment.app.FragmentActivity$2: void onContextAvailable(android.content.Context)
kotlin.jvm.internal.ClassReference: boolean equals(java.lang.Object)
com.google.android.gms.tasks.TaskExecutors$zza: void execute(java.lang.Runnable)
com.google.zxing.qrcode.QRCodeReader: float moduleSize(int[],com.google.zxing.common.BitMatrix)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: ExifInterface$ByteOrderedDataInputStream(java.io.InputStream)
com.google.android.gms.common.Feature: java.lang.String getName()
androidx.appcompat.graphics.drawable.DrawableWrapper: int getOpacity()
androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory)
com.google.firebase.database.snapshot.LeafNode: int getChildCount()
com.google.android.gms.maps.zzo: zzo(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnCircleClickListener)
com.google.android.gms.maps.zzr: zzr(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$SnapshotReadyCallback)
androidx.interpolator.view.animation.FastOutSlowInInterpolator: FastOutSlowInInterpolator()
androidx.fragment.app.BackStackRecord: void executeOps()
com.google.zxing.oned.OneDReader: float patternMatchVariance(int[],int[],float)
com.google.android.gms.maps.model.Polygon: void setClickable(boolean)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingPut: java.lang.String getAction()
androidx.fragment.app.SpecialEffectsController: void enqueueRemove(androidx.fragment.app.FragmentStateManager)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setHorizontalOffset(int)
androidx.appcompat.widget.ActionMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.lang.String readLine()
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
com.google.android.gms.maps.zzy: zzy(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnMapClickListener)
io.flutter.plugins.googlemaps.Convert: com.google.android.gms.maps.model.CameraPosition toCameraPosition(java.lang.Object)
androidx.core.view.ViewCompat: void setElevation(android.view.View,float)
com.google.android.gms.internal.maps.zzv: void setPosition(com.google.android.gms.maps.model.LatLng)
androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)
com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context,int)
com.google.android.gms.maps.internal.zzg: void setMinZoomPreference(float)
androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
io.flutter.embedding.android.FlutterView$4: void onFlutterUiDisplayed()
androidx.activity.result.ActivityResult: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void zabj()
androidx.collection.ArrayMap$1: java.lang.Object colSetValue(int,java.lang.Object)
androidx.window.layout.WindowMetricsCalculator$Companion: WindowMetricsCalculator$Companion()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: AccessibilityChannel$1(io.flutter.embedding.engine.systemchannels.AccessibilityChannel)
androidx.appcompat.view.ContextThemeWrapper: void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)
net.touchcapture.qr.flutterqr.QRView$1: void onActivityPaused(android.app.Activity)
com.google.zxing.pdf417.decoder.DetectionResultColumn: com.google.zxing.pdf417.decoder.Codeword getCodewordNearby(int)
com.google.android.gms.common.internal.GmsClient: int getMinApkVersion()
androidx.fragment.app.FragmentController: boolean dispatchContextItemSelected(android.view.MenuItem)
io.flutter.plugin.common.MethodChannel$IncomingResultHandler: void reply(java.nio.ByteBuffer)
com.journeyapps.barcodescanner.camera.CameraSurface: void setPreview(android.hardware.Camera)
com.google.android.gms.common.internal.BaseGmsClient: void checkConnected()
com.google.firebase.database.core.utilities.ImmutableTree: com.google.firebase.database.core.utilities.ImmutableTree subtree(com.google.firebase.database.core.Path)
io.flutter.embedding.engine.loader.FlutterLoader$InitResult: FlutterLoader$InitResult(java.lang.String,java.lang.String,java.lang.String)
com.google.firebase.database.core.WriteTree$1: boolean evaluate(com.google.firebase.database.core.UserWriteRecord)
com.google.firebase.database.core.view.View: java.util.List getInitialEvents(com.google.firebase.database.core.EventRegistration)
androidx.window.core.Version: java.lang.String toString()
com.google.zxing.datamatrix.decoder.Version: com.google.zxing.datamatrix.decoder.Version$ECBlocks getECBlocks()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.Toolbar: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlinx.coroutines.JobSupport: boolean isCompleted()
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
com.google.firebase.database.snapshot.IndexedNode: void ensureIndexed()
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean)
io.flutter.plugins.googlemaps.GoogleMapController: boolean hasLocationPermission()
androidx.fragment.app.FragmentManager: android.view.ViewGroup getFragmentContainer(androidx.fragment.app.Fragment)
com.google.firebase.FirebaseOptions: int hashCode()
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.MarkerOptions draggable(boolean)
kotlinx.coroutines.internal.ScopeCoroutine: void afterResume(java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setDither(boolean)
kotlin.collections.EmptySet: boolean remove(java.lang.Object)
androidx.appcompat.app.AlertController$4: AlertController$4(androidx.appcompat.app.AlertController,android.view.View,android.view.View)
com.google.android.gms.common.api.internal.zace: void zabq()
com.google.firebase.database.DatabaseReference: com.google.android.gms.tasks.Task setValue(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AbsActionBarView: int next(int,int,boolean)
com.google.android.gms.maps.model.LatLng: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
kotlinx.coroutines.CommonPool: void isGoodCommonPool$lambda-9()
androidx.appcompat.widget.Toolbar: int getChildVerticalGravity(int)
com.google.zxing.pdf417.decoder.BoundingBox: int getMinX()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
com.google.firebase.database.connection.WebsocketConnection: void onClosed()
androidx.core.view.ContentInfoCompat$Builder: androidx.core.view.ContentInfoCompat$Builder setFlags(int)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: int zza(android.os.Parcel,int)
kotlin.text.StringsKt__StringsKt: int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean)
com.google.android.gms.common.stats.ConnectionTracker: ConnectionTracker()
com.google.firebase.database.snapshot.DoubleNode: DoubleNode(java.lang.Double,com.google.firebase.database.snapshot.Node)
androidx.appcompat.widget.ForwardingListener: boolean onTouchForwarded(android.view.MotionEvent)
io.flutter.plugins.firebase.database.TransactionExecutor$1: TransactionExecutor$1(io.flutter.plugins.firebase.database.TransactionExecutor)
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
kotlinx.coroutines.internal.FastServiceLoaderKt: boolean getANDROID_DETECTED()
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult parseNumericBlock()
com.google.android.gms.common.api.GoogleApi$Settings$Builder: com.google.android.gms.common.api.GoogleApi$Settings build()
com.google.android.gms.maps.GoogleMap: void setMinZoomPreference(float)
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
androidx.fragment.app.FragmentManager: java.util.Set collectAllSpecialEffectsController()
androidx.core.graphics.PathParser$PathDataNode: void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path)
com.google.firebase.database.collection.ImmutableSortedSet: ImmutableSortedSet(com.google.firebase.database.collection.ImmutableSortedMap)
com.journeyapps.barcodescanner.DecoderThread: DecoderThread(com.journeyapps.barcodescanner.camera.CameraInstance,com.journeyapps.barcodescanner.Decoder,android.os.Handler)
com.google.firebase.database.DatabaseReference$1: DatabaseReference$1(com.google.firebase.database.DatabaseReference,com.google.firebase.database.snapshot.Node,com.google.firebase.database.core.utilities.Pair)
com.google.android.gms.tasks.zzu: boolean isComplete()
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationStart(android.view.View)
androidx.appcompat.widget.AppCompatTextHelper: void autoSizeText()
androidx.appcompat.view.menu.BaseMenuPresenter: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.collection.ArraySet$1: void colRemoveAt(int)
kotlin.text.CharsKt__CharJVMKt: int digitOf(char,int)
com.google.android.gms.maps.model.PatternItem: java.lang.String toString()
androidx.appcompat.widget.ResourceManagerInternal: void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)
com.google.zxing.pdf417.decoder.ec.ErrorCorrection: int[] findErrorMagnitudes(com.google.zxing.pdf417.decoder.ec.ModulusPoly,com.google.zxing.pdf417.decoder.ec.ModulusPoly,int[])
com.google.android.gms.maps.internal.zzbg: zzbg()
androidx.fragment.app.FragmentTransitionImpl$1: void run()
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: BasicMessageChannel$IncomingMessageHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler)
com.google.zxing.oned.OneDReader: void reset()
io.flutter.embedding.android.FlutterView: boolean checkInputConnectionProxy(android.view.View)
com.google.android.gms.common.internal.ConnectionErrorMessages: java.lang.String getErrorTitle(android.content.Context,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: AnimatedStateListDrawableCompat$Transition(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1)
com.google.zxing.datamatrix.DataMatrixReader: DataMatrixReader()
androidx.appcompat.app.AppCompatDelegateImpl: void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder)
io.flutter.embedding.android.KeyboardManager: KeyboardManager(android.view.View,io.flutter.plugin.editing.TextInputPlugin,io.flutter.embedding.android.KeyboardManager$Responder[])
kotlin.collections.EmptySet: EmptySet()
androidx.appcompat.view.ContextThemeWrapper: void initializeTheme()
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void success(java.lang.Object)
androidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.SplashScreen access$100(io.flutter.embedding.android.FlutterSplashView)
com.journeyapps.barcodescanner.DecoderThread: void access$000(com.journeyapps.barcodescanner.DecoderThread,com.journeyapps.barcodescanner.SourceData)
androidx.fragment.app.SpecialEffectsController$Operation: boolean isCanceled()
androidx.appcompat.widget.SearchView: int getInputType()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])
com.google.zxing.oned.rss.RSS14Reader: void addOrTally(java.util.Collection,com.google.zxing.oned.rss.Pair)
androidx.fragment.app.Fragment$InstantiationException: Fragment$InstantiationException(java.lang.String,java.lang.Exception)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setIndoorEnabled(boolean)
androidx.activity.ComponentActivity: void onActivityResult(int,int,android.content.Intent)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setHotspot(float,float)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String getViewIdResourceName()
androidx.appcompat.widget.ListPopupWindow: boolean isShowing()
com.google.common.util.concurrent.AbstractFuture$TrustedFuture: AbstractFuture$TrustedFuture()
net.touchcapture.qr.flutterqr.Shared: android.app.Activity getActivity()
com.google.zxing.oned.EANManufacturerOrgSupport: void add(int[],java.lang.String)
androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.google.firebase.database.collection.LLRBRedValueNode: LLRBRedValueNode(java.lang.Object,java.lang.Object,com.google.firebase.database.collection.LLRBNode,com.google.firebase.database.collection.LLRBNode)
androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)
androidx.appcompat.widget.SearchView$10: SearchView$10(androidx.appcompat.widget.SearchView)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInScreen(android.graphics.Rect)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getDecoratedHint(java.lang.CharSequence)
kotlin.sequences.ConstrainedOnceSequence: ConstrainedOnceSequence(kotlin.sequences.Sequence)
com.google.zxing.datamatrix.decoder.Version: int getSymbolSizeRows()
io.flutter.plugin.common.StandardMessageCodec: java.lang.Object decodeMessage(java.nio.ByteBuffer)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
com.google.firebase.database.Query: void keepSynced(boolean)
io.flutter.plugins.googlemaps.GoogleMapsPlugin$2: androidx.lifecycle.Lifecycle getLifecycle()
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.core.widget.NestedScrollView: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
com.google.zxing.oned.UPCAReader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: void access$400(com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder,com.google.firebase.database.snapshot.ChildKey)
com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.CameraUpdate newLatLng(com.google.android.gms.maps.model.LatLng)
com.google.firebase.database.snapshot.IndexedNode: com.google.firebase.database.snapshot.NamedNode getLastChild()
com.google.android.gms.signin.internal.SignInClientImpl: SignInClientImpl(android.content.Context,android.os.Looper,boolean,com.google.android.gms.common.internal.ClientSettings,com.google.android.gms.signin.SignInOptions,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
androidx.appcompat.app.AppCompatActivity: void setTheme(int)
com.google.zxing.pdf417.decoder.DetectionResult: void adjustIndicatorColumnRowNumbers(com.google.zxing.pdf417.decoder.DetectionResultColumn)
androidx.appcompat.widget.SearchView$7: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: void ensureAtEnd(android.os.Parcel,int)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setBuildingsEnabled(boolean)
com.google.android.gms.signin.internal.zaa: java.lang.Object[] newArray(int)
com.google.zxing.pdf417.decoder.DetectionResultColumn: com.google.zxing.pdf417.decoder.Codeword[] getCodewords()
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
androidx.core.content.FileProvider: java.io.File buildPath(java.io.File,java.lang.String[])
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.MainCoroutineDispatcher getMain()
com.google.android.gms.common.zza: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.database.snapshot.IndexedNode: com.google.firebase.database.snapshot.IndexedNode from(com.google.firebase.database.snapshot.Node,com.google.firebase.database.snapshot.Index)
androidx.core.graphics.TypefaceCompatBaseImpl$1: boolean isItalic(java.lang.Object)
androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canConstantState()
androidx.collection.SimpleArrayMap: int binarySearchHashes(int[],int,int)
com.google.firebase.database.core.Repo: void aggregateTransactionQueues(java.util.List,com.google.firebase.database.core.utilities.Tree)
com.google.zxing.oned.rss.AbstractRSSReader: int[] getOddCounts()
androidx.core.app.ComponentActivity: ComponentActivity()
io.flutter.plugins.imagepicker.ExifDataCopier: void copyExif(java.lang.String,java.lang.String)
androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)
com.google.android.gms.common.GoogleApiAvailability: android.app.PendingIntent getErrorResolutionPendingIntent(android.content.Context,com.google.android.gms.common.ConnectionResult)
androidx.fragment.app.DefaultSpecialEffectsController$3: void onCancel()
com.google.firebase.database.core.operation.Operation$OperationType: Operation$OperationType(java.lang.String,int)
androidx.appcompat.widget.SearchView: void dismissSuggestions()
androidx.appcompat.widget.AppCompatSeekBar: void onDraw(android.graphics.Canvas)
androidx.appcompat.app.AppCompatDelegateImpl: AppCompatDelegateImpl(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)
com.google.firebase.database.connection.RangeMerge: RangeMerge(java.util.List,java.util.List,java.lang.Object)
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
com.google.zxing.pdf417.decoder.Codeword: Codeword(int,int,int,int)
io.flutter.plugin.platform.PlatformViewsController: void onBeginFrame()
com.google.common.util.concurrent.AbstractFuture: boolean set(java.lang.Object)
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: android.content.Intent createIntent(android.content.Context,android.content.Intent)
com.google.firebase.database.collection.LLRBEmptyNode: int size()
com.google.zxing.common.BitArray: void setBulk(int,int)
androidx.core.view.inputmethod.InputContentInfoCompat: InputContentInfoCompat(android.net.Uri,android.content.ClipDescription,android.net.Uri)
androidx.fragment.app.SpecialEffectsController: void forceCompleteAllOperations()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
androidx.core.graphics.TypefaceCompatBaseImpl$2: boolean isItalic(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)
com.google.firebase.database.connection.util.StringListReader: int read()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
io.flutter.embedding.android.FlutterActivity: java.lang.String getCachedEngineId()
androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)
com.google.android.gms.common.internal.BaseGmsClient$LegacyClientCallbackAdapter: void onReportServiceBinding(com.google.android.gms.common.ConnectionResult)
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler: BasicMessageChannel$IncomingMessageHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler,io.flutter.plugin.common.BasicMessageChannel$1)
androidx.appcompat.view.SupportActionModeWrapper: void setCustomView(android.view.View)
com.baseflow.geolocator.location.BackgroundNotification: BackgroundNotification(android.content.Context,java.lang.String,java.lang.Integer,com.baseflow.geolocator.location.ForegroundNotificationOptions)
androidx.window.core.Version: Version(int,int,int,java.lang.String)
com.google.android.gms.common.zzf: zzf(byte[])
com.google.zxing.oned.rss.expanded.ExpandedPair: boolean equalsOrNull(java.lang.Object,java.lang.Object)
com.google.firebase.database.tubesock.WebSocketReceiver: void appendBytes(boolean,byte,byte[])
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2500(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.embedding.engine.FlutterEngineCache: void put(java.lang.String,io.flutter.embedding.engine.FlutterEngine)
com.google.firebase.database.core.view.ViewProcessor$WriteTreeCompleteChildSource: com.google.firebase.database.snapshot.Node getCompleteChild(com.google.firebase.database.snapshot.ChildKey)
com.google.android.gms.common.api.internal.zzc: android.app.Activity getLifecycleActivity()
io.flutter.plugin.editing.TextInputPlugin$1: void sendAppPrivateCommand(java.lang.String,android.os.Bundle)
com.google.firebase.database.logging.LogWrapper: long now()
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.SidecarCompat)
androidx.cursoradapter.widget.CursorAdapter: android.database.Cursor getCursor()
com.google.android.gms.signin.internal.zaa: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.gms.common.api.internal.zzc: com.google.android.gms.common.api.internal.zzc zza(androidx.fragment.app.FragmentActivity)
androidx.appcompat.view.SupportMenuInflater$MenuState: void setItem(android.view.MenuItem)
com.google.android.gms.maps.internal.zza: java.lang.Boolean zza(byte)
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: AppCompatDelegateImpl$ListMenuDecorView(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context)
com.google.zxing.pdf417.decoder.DetectionResult: int adjustRowNumberIfValid(int,int,com.google.zxing.pdf417.decoder.Codeword)
kotlinx.coroutines.internal.AtomicOp: AtomicOp()
androidx.collection.LruCache: LruCache(int)
com.google.firebase.database.collection.ArraySortedMap$1: java.util.Map$Entry next()
com.google.android.gms.internal.base.zaa: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.google.zxing.oned.UPCAReader: com.google.zxing.Result maybeReturnResult(com.google.zxing.Result)
io.flutter.embedding.android.FlutterSurfaceView: boolean gatherTransparentRegion(android.graphics.Region)
androidx.collection.LongSparseArray: int size()
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int getFieldId(int)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean isOverflowMenuShowPending()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
androidx.appcompat.widget.ResourcesWrapper: void getValue(java.lang.String,android.util.TypedValue,boolean)
androidx.fragment.app.Fragment: void onActivityResult(int,int,android.content.Intent)
io.flutter.embedding.engine.systemchannels.LocalizationChannel: LocalizationChannel(io.flutter.embedding.engine.dart.DartExecutor)
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int)
com.google.firebase.database.core.Repo$13: Repo$13(com.google.firebase.database.core.Repo,com.google.firebase.database.core.Path,com.google.firebase.database.DatabaseReference$CompletionListener)
com.google.android.gms.common.api.internal.zabn: zabn(com.google.android.gms.common.api.GoogleApi)
com.google.common.util.concurrent.AbstractFuture$Cancellation: AbstractFuture$Cancellation(boolean,java.lang.Throwable)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
kotlinx.coroutines.YieldContext: YieldContext()
com.google.android.gms.maps.UiSettings: boolean isScrollGesturesEnabled()
com.google.firebase.database.core.Repo: void deferredInitialization()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
io.flutter.plugin.platform.PlatformViewsController: void access$1100(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController)
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
com.google.android.gms.maps.model.Circle: void remove()
com.google.firebase.database.core.view.View: com.google.firebase.database.snapshot.Node getServerCache()
com.google.firebase.FirebaseApp: void checkNotDeleted()
androidx.appcompat.view.menu.ActionMenuItem: android.content.Intent getIntent()
com.google.zxing.NotFoundException: NotFoundException()
androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
io.flutter.embedding.android.FlutterImageView: void closeImageReader()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: TextInputPlugin$InputTarget$Type(java.lang.String,int)
androidx.appcompat.app.AppCompatDelegateImpl: void doInvalidatePanelMenu(int)
androidx.appcompat.widget.ActionMenuPresenter: void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)
androidx.exifinterface.media.ExifInterface: boolean isWebpFormat(byte[])
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView$10: void afterTextChanged(android.text.Editable)
io.flutter.plugins.googlemaps.GoogleMapController: void onSaveInstanceState(android.os.Bundle)
androidx.fragment.app.Fragment: void onStart()
com.google.android.gms.common.internal.zzf: void zzb(android.content.ServiceConnection,java.lang.String)
androidx.multidex.MultiDex: java.lang.reflect.Field access$000(java.lang.Object,java.lang.String)
kotlinx.coroutines.JobSupport: java.lang.Throwable getExceptionOrNull(java.lang.Object)
io.flutter.view.AccessibilityBridge: void access$200(io.flutter.view.AccessibilityBridge,int,int)
androidx.core.graphics.TypefaceCompatApi21Impl: void init()
com.lyokone.location.NotificationOptions: java.lang.String getIconName()
androidx.appcompat.app.AppCompatDelegateImpl: android.view.MenuInflater getMenuInflater()
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()
com.google.zxing.oned.rss.expanded.decoders.AI01decoder: AI01decoder(com.google.zxing.common.BitArray)
androidx.core.view.WindowInsetsControllerCompat: void setAppearanceLightStatusBars(boolean)
com.google.firebase.database.core.WriteTree: com.google.firebase.database.snapshot.Node shadowingWrite(com.google.firebase.database.core.Path)
androidx.appcompat.widget.AbsActionBarView: boolean onTouchEvent(android.view.MotionEvent)
androidx.fragment.app.FragmentManager: boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int)
io.flutter.plugins.googlemaps.MarkerController: void setAlpha(float)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTitle(java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join)
androidx.appcompat.widget.LinearLayoutCompat: void measureVertical(int,int)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
com.google.firebase.database.core.WriteTreeRef: com.google.firebase.database.snapshot.Node calcCompleteEventCache(com.google.firebase.database.snapshot.Node)
io.flutter.plugins.googlemaps.MarkerController: void setFlat(boolean)
androidx.appcompat.content.res.AppCompatResources: boolean isColorInt(android.content.Context,int)
io.flutter.embedding.engine.renderer.FlutterRenderer: void unregisterTexture(long)
androidx.appcompat.graphics.drawable.DrawableContainer$Api21Impl: void getOutline(android.graphics.drawable.Drawable,android.graphics.Outline)
com.journeyapps.barcodescanner.CaptureManager$2: void cameraError(java.lang.Exception)
androidx.appcompat.widget.TintContextWrapper: void setTheme(int)
com.google.android.gms.maps.model.RuntimeRemoteException: RuntimeRemoteException(android.os.RemoteException)
com.journeyapps.barcodescanner.camera.CameraInstance: void startPreview()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser)
androidx.appcompat.view.menu.MenuBuilder: int findItemIndex(int)
com.google.firebase.FirebaseApp: boolean isDefaultApp()
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory: DartMessenger$DefaultTaskQueueFactory()
kotlin.TuplesKt: kotlin.Pair to(java.lang.Object,java.lang.Object)
androidx.core.view.MenuItemCompat: void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
com.google.android.gms.internal.base.zar: zar(android.os.Looper,android.os.Handler$Callback)
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: void setBestPreviewFPS(android.hardware.Camera$Parameters,int,int)
com.google.zxing.BarcodeFormat: BarcodeFormat(java.lang.String,int)
com.google.android.gms.common.internal.BaseGmsClient: boolean requiresGooglePlayServices()
androidx.customview.view.AbsSavedState$2: AbsSavedState$2()
kotlinx.coroutines.flow.internal.SafeCollector$collectContextSize$1: SafeCollector$collectContextSize$1()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2000(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.app.WindowDecorActionBar$2: WindowDecorActionBar$2(androidx.appcompat.app.WindowDecorActionBar)
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGFPoly getZero()
androidx.core.view.WindowInsetsControllerCompat$Impl26: WindowInsetsControllerCompat$Impl26(android.view.Window,android.view.View)
io.flutter.plugins.imagepicker.ImagePickerDelegate: java.lang.String getResizedImagePath(java.lang.String)
kotlin.text.StringsKt__StringsKt: int lastIndexOf(java.lang.CharSequence,java.lang.String,int,boolean)
com.google.zxing.pdf417.decoder.DecodedBitStreamParser: int textCompaction(int[],int,java.lang.StringBuilder)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureFinalizerRunnable: FlutterRenderer$SurfaceTextureFinalizerRunnable(long,io.flutter.embedding.engine.FlutterJNI)
androidx.exifinterface.media.ExifInterface: void getPngAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
androidx.core.view.OneShotPreDrawListener: androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
com.google.firebase.database.collection.ArraySortedMap: java.lang.Object[] replaceInArray(java.lang.Object[],int,java.lang.Object)
com.google.android.gms.maps.MapView$zza: void onResume()
com.google.android.gms.common.api.internal.zza: com.google.android.gms.common.api.internal.LifecycleCallback getCallbackOrNull(java.lang.String,java.lang.Class)
androidx.appcompat.widget.ToolbarWidgetWrapper: void initIndeterminateProgress()
kotlin.Result: boolean isSuccess-impl(java.lang.Object)
kotlinx.coroutines.JobSupport: boolean cancelParent(java.lang.Throwable)
com.google.firebase.database.core.Path: boolean contains(com.google.firebase.database.core.Path)
com.google.zxing.datamatrix.decoder.BitMatrixParser: int readCorner4(int,int)
com.google.firebase.database.tubesock.WebSocket: void handleReceiverError(com.google.firebase.database.tubesock.WebSocketException)
com.google.android.gms.common.ConnectionResult: boolean equals(java.lang.Object)
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.maps.model.CameraPosition$Builder: com.google.android.gms.maps.model.CameraPosition build()
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: SuggestionsAdapter$ChildViewCache(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Paint getPaint(android.graphics.ColorFilter)
com.google.android.gms.location.LocationSettingsResponse: LocationSettingsResponse()
io.flutter.plugins.imagepicker.ImagePickerDelegate: void finishWithError(java.lang.String,java.lang.String)
com.journeyapps.barcodescanner.camera.AutoFocusManager$2: AutoFocusManager$2(com.journeyapps.barcodescanner.camera.AutoFocusManager)
androidx.core.widget.NestedScrollView: void requestChildFocus(android.view.View,android.view.View)
com.google.firebase.database.core.utilities.Validation: boolean isValidPathString(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl: void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu)
androidx.appcompat.widget.AppCompatSpinner: void drawableStateChanged()
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)
androidx.appcompat.app.AlertDialog$Builder: AlertDialog$Builder(android.content.Context)
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference)
com.google.common.util.concurrent.Futures: java.lang.Object getDone(java.util.concurrent.Future)
com.google.android.gms.common.internal.IAccountAccessor$Stub$zza: IAccountAccessor$Stub$zza(android.os.IBinder)
io.flutter.embedding.engine.loader.FlutterLoader: java.lang.String getLookupKeyForAsset(java.lang.String,java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration: io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration fromJson(org.json.JSONObject)
androidx.collection.MapCollections$MapIterator: int hashCode()
com.google.android.gms.signin.internal.zai: void writeToParcel(android.os.Parcel,int)
androidx.fragment.app.DefaultSpecialEffectsController$7: void run()
androidx.fragment.app.FragmentManager: void ensureExecReady(boolean)
androidx.appcompat.widget.ActionMenuPresenter: void setMenuView(androidx.appcompat.widget.ActionMenuView)
io.flutter.plugin.platform.PlatformPlugin$1: void setPreferredOrientations(int)
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
com.journeyapps.barcodescanner.RotationListener: void listen(android.content.Context,com.journeyapps.barcodescanner.RotationCallback)
com.google.android.gms.common.api.internal.RegisterListenerMethod: com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey getListenerKey()
com.google.android.gms.maps.model.CameraPosition$Builder: CameraPosition$Builder()
com.google.firebase.components.DependencyException: DependencyException(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: java.lang.Object getTargetByName(java.lang.String)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addTransition(int,int,android.graphics.drawable.Drawable,boolean)
kotlin.collections.EmptyMap: boolean containsValue(java.lang.Void)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String access$600(io.flutter.plugins.pathprovider.PathProviderPlugin)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept$lambda-0(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo)
com.google.firebase.database.snapshot.StringNode: StringNode(java.lang.String,com.google.firebase.database.snapshot.Node)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void start()
androidx.appcompat.view.menu.MenuWrapperICS: boolean hasVisibleItems()
com.google.android.gms.maps.model.TileOverlay: float getTransparency()
com.google.android.gms.common.api.internal.GoogleApiManager: void zab(com.google.android.gms.common.api.GoogleApi)
androidx.appcompat.widget.MenuPopupWindow: void setExitTransition(java.lang.Object)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void launchPickImageFromGalleryIntent()
androidx.appcompat.view.SupportActionModeWrapper: android.view.Menu getMenu()
com.google.android.gms.location.LocationServices: com.google.android.gms.location.FusedLocationProviderClient getFusedLocationProviderClient(android.app.Activity)
io.flutter.plugin.mouse.MouseCursorPlugin: android.view.PointerIcon access$000(io.flutter.plugin.mouse.MouseCursorPlugin,java.lang.String)
androidx.appcompat.view.menu.ActionMenuItem: android.view.View getActionView()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void tryPark()
io.flutter.plugin.common.StandardMethodCodec: java.lang.Object decodeEnvelope(java.nio.ByteBuffer)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: AnimatedStateListDrawableCompat$Transition()
androidx.appcompat.widget.AppCompatSeekBarHelper: void applyTickMarkTint()
com.google.firebase.database.snapshot.LeafNode: java.lang.String toString()
androidx.appcompat.widget.ActionBarOverlayLayout: void onStopNestedScroll(android.view.View,int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$1: void run()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setVisible(boolean,boolean)
com.google.android.gms.maps.model.PolygonOptions: com.google.android.gms.maps.model.PolygonOptions addAll(java.lang.Iterable)
com.google.zxing.pdf417.decoder.PDF417CodewordDecoder: int[] sampleBitCounts(int[])
io.flutter.plugins.googlemaps.GoogleMapController: void onMapLongClick(com.google.android.gms.maps.model.LatLng)
io.flutter.plugins.googlemaps.GoogleMapController: void updateInitialPolygons()
androidx.window.embedding.ActivityFilter: boolean equals(java.lang.Object)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$AtomicHelper access$200()
androidx.appcompat.widget.ActionBarContextView$1: ActionBarContextView$1(androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)
com.google.firebase.database.core.view.QueryParams: com.google.firebase.database.core.view.QueryParams startAt(com.google.firebase.database.snapshot.Node,com.google.firebase.database.snapshot.ChildKey)
com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastLollipop()
androidx.core.os.CancellationSignal: void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.view.menu.ListMenuItemView: void insertRadioButton()
androidx.lifecycle.ReflectiveGenericLifecycleObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.core.app.ActivityCompat: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivityForConfigChanges()
com.google.android.gms.maps.internal.zzg: void setLatLngBoundsForCameraTarget(com.google.android.gms.maps.model.LatLngBounds)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener)
com.google.firebase.database.DataSnapshot: DataSnapshot(com.google.firebase.database.DatabaseReference,com.google.firebase.database.snapshot.IndexedNode)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.google.android.gms.common.api.internal.ApiKey: int hashCode()
androidx.core.widget.NestedScrollView: boolean hasNestedScrollingParent()
io.flutter.plugins.imagepicker.ImageResizer: java.io.FileOutputStream createOutputStream(java.io.File)
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()
com.google.firebase.database.snapshot.ChildKey: ChildKey(java.lang.String,com.google.firebase.database.snapshot.ChildKey$1)
com.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: java.util.List retrieve(java.lang.Object)
androidx.arch.core.internal.SafeIterableMap: java.lang.Object remove(java.lang.Object)
kotlinx.coroutines.internal.DispatchedContinuation: kotlinx.coroutines.CancellableContinuationImpl getReusableCancellableContinuation()
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderIcon(int)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformViewFactory,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,java.lang.Object,android.view.View$OnFocusChangeListener)
androidx.appcompat.view.menu.MenuBuilder: void clear()
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: kotlinx.coroutines.ThreadContextElement invoke(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext$Element)
com.google.android.gms.common.api.internal.zzc: void onActivityResult(int,int,android.content.Intent)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: com.google.zxing.Result constructResult(java.util.List)
com.google.firebase.database.core.SyncTree: java.util.List applyUserOverwrite(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node,com.google.firebase.database.snapshot.Node,long,boolean,boolean)
androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState()
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
io.flutter.FlutterInjector$Builder: FlutterInjector$Builder()
com.google.android.gms.common.GoogleApiAvailability$zaa: void handleMessage(android.os.Message)
com.google.android.gms.maps.MapView$zza: MapView$zza(android.view.ViewGroup,com.google.android.gms.maps.internal.IMapViewDelegate)
com.google.firebase.database.core.CompoundWrite: com.google.firebase.database.snapshot.Node applySubtreeWrite(com.google.firebase.database.core.Path,com.google.firebase.database.core.utilities.ImmutableTree,com.google.firebase.database.snapshot.Node)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void computeScrollDelta()
com.google.android.gms.common.util.DefaultClock: long currentTimeMillis()
androidx.appcompat.view.StandaloneActionMode: java.lang.CharSequence getSubtitle()
com.google.android.gms.maps.zzc: zzc(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnMarkerDragListener)
com.google.android.gms.tasks.Tasks$zza: Tasks$zza()
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void zzb(android.os.Parcel,int,int)
com.google.firebase.database.android.SqlPersistenceStorageEngine: java.util.Set loadTrackedQueryKeys(java.util.Set)
com.google.firebase.database.core.Repo: void onDataUpdate(java.util.List,java.lang.Object,boolean,java.lang.Long)
androidx.appcompat.widget.MenuPopupWindow: void setTouchModal(boolean)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.tracing.TraceApi18Impl: void endSection()
com.google.firebase.components.RestrictedComponentContainer: com.google.firebase.inject.Provider getProvider(java.lang.Class)
androidx.collection.MapCollections$ValuesCollection: boolean isEmpty()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getMinimumHeight()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2300(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.lyokone.location.BackgroundNotification: android.app.Notification build()
com.google.android.gms.common.internal.ClientSettings$Builder: com.google.android.gms.common.internal.ClientSettings$Builder setAccount(android.accounts.Account)
com.google.common.base.Strings: java.lang.String lenientToString(java.lang.Object)
androidx.core.widget.NestedScrollView: boolean onNestedPreFling(android.view.View,float,float)
com.google.android.gms.signin.internal.zaj: zaj()
com.google.android.gms.maps.model.TileOverlay: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.CancellableContinuationImpl: boolean cancel(java.lang.Throwable)
kotlinx.coroutines.JobKt: kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job)
com.google.zxing.common.BitMatrix: void setRow(int,com.google.zxing.common.BitArray)
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1: AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.channels.AbstractChannel)
androidx.appcompat.view.menu.MenuItemImpl: boolean isExclusiveCheckable()
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode)
androidx.appcompat.widget.LinearLayoutCompat: void measureHorizontal(int,int)
com.google.zxing.qrcode.detector.AlignmentPattern: boolean aboutEquals(float,float,float)
io.flutter.embedding.android.FlutterActivity: void configureWindowForTransparency()
com.google.android.gms.common.api.internal.zag: zag(com.google.android.gms.common.api.internal.zabv,com.google.android.gms.tasks.TaskCompletionSource)
com.google.firebase.database.collection.ImmutableSortedSet: java.lang.Object getMaxEntry()
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: ViewPropertyAnimatorCompatSet()
io.flutter.embedding.engine.systemchannels.LocalizationChannel: io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler access$000(io.flutter.embedding.engine.systemchannels.LocalizationChannel)
com.google.firebase.emulators.EmulatedServiceSettings: java.lang.String getHost()
androidx.appcompat.view.menu.MenuPopup: MenuPopup()
com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder: AI01320xDecoder(com.google.zxing.common.BitArray)
androidx.appcompat.view.menu.CascadingMenuPopup: boolean onKey(android.view.View,int,android.view.KeyEvent)
androidx.fragment.app.FragmentViewLifecycleOwner: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
com.google.android.gms.common.internal.BaseGmsClient$zzd: void zza(int,android.os.Bundle)
kotlinx.coroutines.DispatchedTask: void run()
androidx.appcompat.widget.AppCompatReceiveContentHelper$1: boolean onCommitContent(androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)
kotlin.coroutines.jvm.internal.ModuleNameRetriever: ModuleNameRetriever()
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setVerticalOffset(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: boolean perform(android.view.View,android.os.Bundle)
androidx.appcompat.view.menu.MenuItemImpl: boolean hasCollapsibleActionView()
androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
androidx.appcompat.widget.AppCompatTextHelper: void setCompoundDrawableTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.renderer.FlutterRenderer: void setViewportMetrics(io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics)
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean access$200(io.flutter.embedding.engine.systemchannels.RestorationChannel)
io.flutter.plugins.firebase.database.QueryBuilder: void orderBy(java.util.Map)
androidx.core.widget.NestedScrollView: void stopNestedScroll(int)
com.journeyapps.barcodescanner.camera.AutoFocusManager: android.os.Handler access$200(com.journeyapps.barcodescanner.camera.AutoFocusManager)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
androidx.fragment.app.FragmentManager: void removeFragment(androidx.fragment.app.Fragment)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1: MethodCallHandlerImpl$1$1(io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1,boolean)
com.google.android.gms.common.api.internal.ListenerHolders: com.google.android.gms.common.api.internal.ListenerHolder createListenerHolder(java.lang.Object,android.os.Looper,java.lang.String)
com.google.zxing.pdf417.decoder.ec.ModulusPoly: com.google.zxing.pdf417.decoder.ec.ModulusPoly multiply(int)
androidx.appcompat.view.menu.CascadingMenuPopup$2: CascadingMenuPopup$2(androidx.appcompat.view.menu.CascadingMenuPopup)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long access$300(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry)
androidx.collection.SimpleArrayMap: java.lang.Object replace(java.lang.Object,java.lang.Object)
com.google.firebase.database.android.AndroidPlatform: java.io.File getSSLCacheDirectory()
com.google.firebase.components.Component: com.google.firebase.components.Component intoSet(java.lang.Object,java.lang.Class)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void setSelected(boolean)
androidx.core.view.MenuItemCompat: void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
com.google.firebase.database.core.Repo: void onDisconnect()
com.google.firebase.database.core.Repo$TransactionData: com.google.firebase.database.snapshot.Node access$1500(com.google.firebase.database.core.Repo$TransactionData)
kotlinx.coroutines.internal.AtomicOp: long getOpSequence()
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.Size getPreviewSize()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onResume(androidx.lifecycle.LifecycleOwner)
androidx.core.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule zze(android.content.Context,java.lang.String)
androidx.appcompat.view.menu.StandardMenuPopup: android.widget.ListView getListView()
com.google.firebase.database.snapshot.LeafNode: java.util.Iterator reverseIterator()
io.flutter.view.AccessibilityBridge$SemanticsNode: android.text.SpannableString createSpannableString(java.lang.String,java.util.List)
androidx.appcompat.app.AppCompatDelegateImpl$7: void onAnimationStart(android.view.View)
kotlinx.coroutines.internal.SystemPropsKt: long systemProp(java.lang.String,long,long,long)
kotlin.jvm.internal.CollectionToArray: java.lang.Object[] toArray(java.util.Collection)
com.google.android.gms.common.api.internal.UnregisterListenerMethod: UnregisterListenerMethod(com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat getWindowExtension()
com.google.firebase.database.core.CompoundWrite: int hashCode()
io.flutter.plugin.editing.TextInputPlugin: void onProvideAutofillVirtualStructure(android.view.ViewStructure,int)
androidx.appcompat.widget.ScrollingTabContainerView: void onAttachedToWindow()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)
androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context attachBaseContext2(android.content.Context)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.MenuDialogHelper: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
com.google.firebase.FirebaseApp: void setDataCollectionDefaultEnabled(java.lang.Boolean)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean access$1800(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.database.core.SyncTree: com.google.firebase.database.core.Tag access$900(com.google.firebase.database.core.SyncTree)
androidx.fragment.app.FragmentManager: void moveFragmentToExpectedState(androidx.fragment.app.Fragment)
androidx.appcompat.widget.TooltipCompatHandler: TooltipCompatHandler(android.view.View,java.lang.CharSequence)
io.flutter.plugin.platform.PlatformViewsController: boolean usesVirtualDisplay(java.lang.Integer)
io.flutter.plugin.editing.TextInputPlugin: void sendTextInputAppPrivateCommand(java.lang.String,android.os.Bundle)
com.google.android.gms.maps.model.zzc: java.lang.Object createFromParcel(android.os.Parcel)
kotlin.ranges.RangesKt___RangesKt: kotlin.ranges.IntProgression downTo(int,int)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean)
com.google.zxing.oned.rss.RSS14Reader: int[] findFinderPattern(com.google.zxing.common.BitArray,boolean)
com.google.android.gms.location.zzw: zzw(android.os.IBinder)
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable)
com.google.zxing.oned.rss.expanded.ExpandedRow: ExpandedRow(java.util.List,int,boolean)
androidx.appcompat.view.menu.StandardMenuPopup: void setGravity(int)
com.google.android.gms.dynamite.DynamiteModule$VersionPolicy$zzb: DynamiteModule$VersionPolicy$zzb()
com.google.zxing.ResultMetadataType: com.google.zxing.ResultMetadataType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: AppCompatMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
androidx.activity.result.IntentSenderRequest: IntentSenderRequest(android.os.Parcel)
kotlin.text.StringsKt__IndentKt: int indentWidth$StringsKt__IndentKt(java.lang.String)
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: VirtualDisplayController$OneTimeOnDrawListener(android.view.View,java.lang.Runnable)
io.flutter.embedding.android.FlutterImageView: boolean acquireLatestImage()
kotlinx.coroutines.EventLoopImplBase: boolean enqueueImpl(java.lang.Runnable)
io.flutter.embedding.engine.renderer.FlutterRenderer: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: ExecutorCoroutineDispatcherImpl(java.util.concurrent.Executor)
io.flutter.plugin.platform.PlatformPlugin$1: boolean clipboardHasStrings()
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: void ensureImeVisible(android.widget.AutoCompleteTextView)
androidx.fragment.app.SpecialEffectsController$2: SpecialEffectsController$2(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.appcompat.widget.SearchView: void launchQuerySearch(int,java.lang.String,java.lang.String)
androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
kotlinx.coroutines.Job$DefaultImpls: kotlinx.coroutines.DisposableHandle invokeOnCompletion$default(kotlinx.coroutines.Job,boolean,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
io.flutter.plugins.googlemaps.GoogleMapController: void onCameraMove()
com.lyokone.location.BackgroundNotification: int getDrawableId(java.lang.String)
com.google.firebase.database.snapshot.EmptyNode: java.lang.String getHashRepresentation(com.google.firebase.database.snapshot.Node$HashVersion)
androidx.fragment.app.FragmentActivity$2: FragmentActivity$2(androidx.fragment.app.FragmentActivity)
androidx.core.widget.TextViewCompat$OreoCallback: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)
com.google.common.util.concurrent.ThreadFactoryBuilder: java.lang.String access$000(java.lang.String,java.lang.Object[])
androidx.core.app.NotificationManagerCompat$SideChannelManager: void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task)
kotlinx.coroutines.internal.ThreadSafeHeap: void swap(int,int)
com.journeyapps.barcodescanner.CameraPreview: java.util.List access$700(com.journeyapps.barcodescanner.CameraPreview)
com.google.android.gms.common.internal.zaj: zaj(com.google.android.gms.common.api.Response)
com.google.android.gms.common.internal.BaseGmsClient$zzb: void zza(android.os.Message)
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable$default(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1,int,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
com.google.firebase.database.core.utilities.ParsedUrl: int hashCode()
com.google.android.gms.internal.maps.zzae: int zzj()
com.google.firebase.database.connection.PersistentConnectionImpl$3: PersistentConnectionImpl$3(com.google.firebase.database.connection.PersistentConnectionImpl,com.google.firebase.database.connection.RequestResultCallback)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.CharSequence getLabel()
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getResourceId()
com.google.firebase.database.collection.ArraySortedMap$1: void remove()
androidx.core.graphics.drawable.WrappedDrawableApi14: void draw(android.graphics.Canvas)
androidx.core.widget.NestedScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int)
com.journeyapps.barcodescanner.CaptureManager: android.content.Intent resultIntent(com.journeyapps.barcodescanner.BarcodeResult,java.lang.String)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: ActivityRecreator$LifecycleCheckCallbacks(android.app.Activity)
kotlin.collections.EmptyList: boolean retainAll(java.util.Collection)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean shouldHideActionBarOnFling(float)
com.google.android.gms.location.zzo: void unregisterListener(com.google.android.gms.common.api.Api$AnyClient,com.google.android.gms.tasks.TaskCompletionSource)
com.google.firebase.database.core.persistence.DefaultPersistenceManager: void removeAllUserWrites()
androidx.fragment.app.FragmentStateManager: void addViewToContainer()
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
androidx.core.widget.NestedScrollView: boolean executeKeyEvent(android.view.KeyEvent)
androidx.activity.ComponentActivity$4: ComponentActivity$4(androidx.activity.ComponentActivity)
androidx.lifecycle.ViewModelProvider$OnRequeryFactory: void onRequery(androidx.lifecycle.ViewModel)
com.google.firebase.database.android.AndroidAppCheckTokenProvider: AndroidAppCheckTokenProvider(com.google.firebase.inject.Deferred)
androidx.appcompat.widget.ActionBarOverlayLayout$1: void onAnimationCancel(android.animation.Animator)
androidx.core.widget.NestedScrollView: void onScrollChanged(int,int,int,int)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
androidx.core.app.CoreComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)
androidx.appcompat.widget.ActionMenuView: void onMeasure(int,int)
androidx.core.view.WindowInsetsControllerCompat: void setAppearanceLightNavigationBars(boolean)
androidx.appcompat.view.ContextThemeWrapper: int getThemeResId()
kotlin.jvm.internal.ReflectionFactory: kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class)
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: void doBeforeTextChanged(android.widget.AutoCompleteTextView)
com.google.android.gms.maps.model.PolylineOptions: float getZIndex()
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
androidx.fragment.app.Fragment$1: Fragment$1(androidx.fragment.app.Fragment)
com.google.firebase.database.connection.util.RetryHelper: void cancel()
com.google.firebase.database.core.operation.Operation: Operation(com.google.firebase.database.core.operation.Operation$OperationType,com.google.firebase.database.core.operation.OperationSource,com.google.firebase.database.core.Path)
io.flutter.embedding.android.FlutterSplashView$3: void run()
io.flutter.embedding.android.DrawableSplashScreen$1: DrawableSplashScreen$1(io.flutter.embedding.android.DrawableSplashScreen,java.lang.Runnable)
io.flutter.plugins.googlemaps.TileProviderController: io.flutter.plugin.common.MethodChannel access$200(io.flutter.plugins.googlemaps.TileProviderController)
androidx.fragment.app.FragmentTransaction: void addOp(androidx.fragment.app.FragmentTransaction$Op)
kotlinx.coroutines.scheduling.TaskImpl: TaskImpl(java.lang.Runnable,long,kotlinx.coroutines.scheduling.TaskContext)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfKeyframe(int[])
com.google.firebase.database.snapshot.LeafNode: boolean isLeafNode()
androidx.appcompat.widget.ForwardingListener: boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void chooseMultiImageFromGallery(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.maps.model.MarkerOptions: float getInfoWindowAnchorU()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List)
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)
kotlinx.coroutines.scheduling.CoroutineScheduler: int createNewWorker()
androidx.core.provider.FontRequestWorker: int getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult)
androidx.window.layout.HardwareFoldingFeature$Type: HardwareFoldingFeature$Type(java.lang.String)
com.google.zxing.oned.EANManufacturerOrgSupport: EANManufacturerOrgSupport()
com.google.firebase.database.core.persistence.TrackedQuery: com.google.firebase.database.core.persistence.TrackedQuery setActiveState(boolean)
androidx.appcompat.view.WindowCallbackWrapper: boolean onMenuOpened(int,android.view.Menu)
androidx.fragment.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: double readDouble(android.os.Parcel,int)
kotlinx.coroutines.JobKt: kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int compareTo(java.lang.Object)
com.google.android.gms.location.zzv: zzv()
com.google.firebase.database.connection.WebsocketConnection: java.util.concurrent.ScheduledFuture access$000(com.google.firebase.database.connection.WebsocketConnection)
androidx.appcompat.app.AlertDialog: boolean onKeyUp(int,android.view.KeyEvent)
com.google.firebase.database.core.Repo: void keepSynced(com.google.firebase.database.core.view.QuerySpec,boolean)
androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.common.internal.BaseGmsClient$LegacyClientCallbackAdapter: BaseGmsClient$LegacyClientCallbackAdapter(com.google.android.gms.common.internal.BaseGmsClient)
com.google.android.gms.internal.location.zza: android.os.Parcel transactAndReadException(int,android.os.Parcel)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderView(android.view.View)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicWidth()
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.zxing.oned.EAN13Reader: void determineFirstDigit(java.lang.StringBuilder,int)
io.flutter.plugin.platform.PlatformViewsController: android.view.MotionEvent$PointerCoords parsePointerCoords(java.lang.Object,float)
androidx.fragment.app.FragmentState$1: androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel)
kotlin.collections.ArraysKt___ArraysJvmKt: void fill$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object)
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)
io.flutter.plugins.googlemaps.CirclesController: CirclesController(io.flutter.plugin.common.MethodChannel,float)
com.google.firebase.database.core.persistence.TrackedQueryManager: java.util.Set getKnownCompleteChildren(com.google.firebase.database.core.Path)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: AppCompatSpinner$DropdownPopup(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int)
com.google.android.gms.common.Feature: boolean equals(java.lang.Object)
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void reverse()
com.google.firebase.database.logging.AndroidLogger: java.lang.String buildLogMessage(com.google.firebase.database.logging.Logger$Level,java.lang.String,java.lang.String,long)
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
com.google.android.gms.common.api.internal.BackgroundDetector: void onActivityStarted(android.app.Activity)
com.journeyapps.barcodescanner.camera.CameraInstance: com.journeyapps.barcodescanner.camera.CameraThread access$700(com.journeyapps.barcodescanner.camera.CameraInstance)
com.google.zxing.common.reedsolomon.GenericGF: int getSize()
com.google.firebase.database.snapshot.BooleanNode: int compareLeafValues(com.google.firebase.database.snapshot.LeafNode)
com.google.zxing.common.BitArray: void reverse()
com.google.firebase.database.logging.LogWrapper: boolean logsDebug()
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String getPathProviderTemporaryDirectory()
androidx.fragment.app.Fragment: java.util.ArrayList getSharedElementSourceNames()
androidx.appcompat.app.AppCompatDialog: boolean superDispatchKeyEvent(android.view.KeyEvent)
androidx.fragment.app.DialogFragment: void onStop()
kotlinx.coroutines.internal.SystemPropsKt: int systemProp(java.lang.String,int,int,int)
kotlinx.coroutines.flow.AbstractFlow$collect$1: AbstractFlow$collect$1(kotlinx.coroutines.flow.AbstractFlow,kotlin.coroutines.Continuation)
com.google.android.gms.maps.model.PolygonOptions: boolean isClickable()
androidx.appcompat.view.WindowCallbackWrapper: void onActionModeStarted(android.view.ActionMode)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getParentFragmentManager()
androidx.appcompat.widget.MenuPopupWindow: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
androidx.appcompat.app.AppCompatDelegateImpl: void ensureWindow()
com.google.firebase.database.core.persistence.PruneForest$2: boolean evaluate(java.lang.Object)
androidx.appcompat.widget.SuggestionsAdapter: void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int)
kotlin.collections.EmptyList: boolean equals(java.lang.Object)
kotlinx.coroutines.CancelledContinuation: boolean makeResumed()
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
io.flutter.view.VsyncWaiter$DisplayListener: void onDisplayChanged(int)
io.flutter.plugins.googlemaps.GoogleMapController: void updateInitialMarkers()
com.google.firebase.components.Component$Builder: com.google.firebase.components.Component$Builder access$100(com.google.firebase.components.Component$Builder)
com.google.zxing.oned.UPCEANReader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
com.google.firebase.database.snapshot.Index: com.google.firebase.database.snapshot.Index fromQueryDefinition(java.lang.String)
com.google.android.gms.maps.model.Polyline: void setEndCap(com.google.android.gms.maps.model.Cap)
com.google.android.gms.common.api.internal.GoogleApiManager$zac: java.lang.String toString()
com.google.common.util.concurrent.SettableFuture: com.google.common.util.concurrent.SettableFuture create()
com.google.android.gms.maps.internal.zzbx: boolean isCompassEnabled()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.core.provider.FontProvider: boolean equalsByteArrayList(java.util.List,java.util.List)
androidx.appcompat.widget.TintTypedArray: int getDimensionPixelSize(int,int)
androidx.lifecycle.LifecycleRegistry: void sync()
com.google.zxing.qrcode.decoder.Decoder: Decoder()
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getExitTransitionCallback()
com.google.zxing.common.reedsolomon.GenericGF: java.lang.String toString()
com.google.firebase.database.core.SyncTree: void setupListener(com.google.firebase.database.core.view.QuerySpec,com.google.firebase.database.core.view.View)
io.flutter.plugins.googlemaps.GoogleMapController: void init()
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
androidx.fragment.app.BackStackRecord: boolean isPostponed()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
com.google.android.gms.maps.internal.zzb: com.google.android.gms.dynamic.IObjectWrapper zoomOut()
androidx.fragment.app.FragmentManager: void dispatchLowMemory()
com.google.firebase.database.Query: com.google.firebase.database.Query endBefore(java.lang.String)
com.google.zxing.qrcode.QRCodeReader: com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix)
androidx.appcompat.view.SupportActionModeWrapper: void finish()
io.flutter.view.VsyncWaiter$DisplayListener: void onDisplayRemoved(int)
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel valueOf(java.lang.String)
com.google.firebase.database.core.utilities.DefaultRunLoop: void restart()
io.flutter.view.AccessibilityBridge$Action: AccessibilityBridge$Action(java.lang.String,int,int)
io.flutter.embedding.engine.systemchannels.TextInputChannel: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler access$000(io.flutter.embedding.engine.systemchannels.TextInputChannel)
com.google.android.gms.maps.internal.zzbx: boolean isScrollGesturesEnabled()
io.flutter.plugins.imagepicker.ImageResizer: java.io.File createImageOnExternalDirectory(java.lang.String,android.graphics.Bitmap,int)
com.journeyapps.barcodescanner.CaptureActivity: com.journeyapps.barcodescanner.DecoratedBarcodeView initializeContent()
com.google.zxing.qrcode.decoder.DecodedBitStreamParser: char toAlphaNumericChar(int)
kotlin.text.DelimitedRangesSequence: java.util.Iterator iterator()
io.flutter.plugins.googlemaps.GoogleMapController: void onStop(androidx.lifecycle.LifecycleOwner)
com.google.firebase.database.core.view.ViewProcessor: com.google.firebase.database.core.view.ViewProcessor$ProcessorResult applyOperation(com.google.firebase.database.core.view.ViewCache,com.google.firebase.database.core.operation.Operation,com.google.firebase.database.core.WriteTreeRef,com.google.firebase.database.snapshot.Node)
androidx.window.layout.SidecarWindowBackend: void getWindowLayoutChangeCallbacks$annotations()
androidx.fragment.app.FragmentActivity: void onAttachFragment(androidx.fragment.app.Fragment)
androidx.core.widget.NestedScrollView: boolean isViewDescendantOf(android.view.View,android.view.View)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void saveStateBeforeResult()
com.baseflow.geolocator.GeolocatorPlugin: void access$000(com.baseflow.geolocator.GeolocatorPlugin,com.baseflow.geolocator.GeolocatorLocationService)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.platform.AccessibilityEventsDelegate access$800(io.flutter.plugin.platform.PlatformViewsController)
com.google.zxing.common.GridSampler: void checkAndNudgePoints(com.google.zxing.common.BitMatrix,float[])
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)
kotlinx.coroutines.channels.Closed: java.lang.Throwable getSendException()
androidx.appcompat.widget.ForwardingListener$DisallowIntercept: void run()
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionCancel(android.transition.Transition)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
androidx.appcompat.view.menu.MenuBuilder: boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
kotlin.coroutines.CoroutineContext$plus$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.gms.maps.GoogleMap: GoogleMap(com.google.android.gms.maps.internal.IGoogleMapDelegate)
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect currentWindowBounds(android.app.Activity)
kotlin.collections.EmptyList: java.lang.Object[] toArray()
androidx.fragment.app.DialogFragment: boolean onHasView()
androidx.fragment.app.FragmentManagerState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)
com.google.firebase.components.EventBus: EventBus(java.util.concurrent.Executor)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean canApplyTheme()
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent createTextChangedEvent(int,java.lang.String,java.lang.String)
kotlin.collections.EmptySet: boolean retainAll(java.util.Collection)
com.google.firebase.database.Query: com.google.firebase.database.Query endAt(double)
com.google.android.gms.location.LocationRequest: int hashCode()
com.google.firebase.database.android.SqlPersistenceStorageEngine: void saveUserMerge(com.google.firebase.database.core.Path,com.google.firebase.database.core.CompoundWrite,long)
com.google.zxing.oned.UPCEReader: int[] decodeEnd(com.google.zxing.common.BitArray,int)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext: java.lang.Object getSystemService(java.lang.String)
androidx.core.view.ViewPropertyAnimatorCompat$2: void onAnimationUpdate(android.animation.ValueAnimator)
com.lyokone.location.NotificationOptions: java.lang.String toString()
com.google.android.gms.location.LocationSettingsRequest: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setSubtitle(java.lang.CharSequence)
com.google.firebase.database.logging.LogWrapper: java.lang.String exceptionStacktrace(java.lang.Throwable)
kotlinx.coroutines.scheduling.LimitingDispatcher: LimitingDispatcher(kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher,int,java.lang.String,int)
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper: void error(java.lang.String,java.lang.String,java.lang.Object)
kotlin.collections.EmptyIterator: java.lang.Object next()
androidx.appcompat.graphics.drawable.DrawableWrapper: void setAutoMirrored(boolean)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
io.flutter.plugins.googlemaps.PolylinesController: void addPolyline(java.lang.Object)
androidx.multidex.MultiDex: void doInstallation(android.content.Context,java.io.File,java.io.File,java.lang.String,java.lang.String,boolean)
com.google.android.gms.common.internal.ConnectionErrorMessages: java.lang.String getErrorNotificationTitle(android.content.Context,int)
androidx.core.app.Person: android.app.Person toAndroidPerson()
com.google.android.gms.maps.model.Cap: Cap(com.google.android.gms.maps.model.BitmapDescriptor,float)
com.google.android.gms.common.GooglePlayServicesUtilLight: int zza(android.content.Context,boolean,int)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: int access$200(long)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hasAction(io.flutter.view.AccessibilityBridge$Action)
androidx.appcompat.app.AlertController: void centerButton(android.widget.Button)
androidx.appcompat.widget.AppCompatSpinner$2: AppCompatSpinner$2(androidx.appcompat.widget.AppCompatSpinner)
kotlinx.coroutines.EventLoop: void shutdown()
com.google.android.gms.maps.model.TileOverlay: void remove()
com.google.firebase.database.core.EventRegistration: boolean isZombied()
androidx.appcompat.app.AppCompatDelegate: void removeActivityDelegate(androidx.appcompat.app.AppCompatDelegate)
com.google.firebase.database.android.SqlPersistenceStorageEngine: void saveWrite(com.google.firebase.database.core.Path,long,java.lang.String,byte[])
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: StringsKt__IndentKt$getIndentFunction$2(java.lang.String)
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputConnection createInputConnection(android.view.View,io.flutter.embedding.android.KeyboardManager,android.view.inputmethod.EditorInfo)
androidx.fragment.app.FragmentHostCallback: android.view.View onFindViewById(int)
kotlinx.coroutines.JobSupport: void completeStateFinalization(kotlinx.coroutines.Incomplete,java.lang.Object)
com.google.firebase.database.core.SyncPoint: boolean viewExistsForQuery(com.google.firebase.database.core.view.QuerySpec)
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object cloneTransition(java.lang.Object)
com.google.firebase.database.core.Context: void initializeAndroidPlatform()
androidx.appcompat.widget.ActionMenuPresenter: android.view.View findViewForItem(android.view.MenuItem)
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResourcesInternal()
kotlin.text.DelimitedRangesSequence$iterator$1: void remove()
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: FirebaseDatabasePlugin()
com.google.zxing.oned.rss.RSS14Reader: boolean checkChecksum(com.google.zxing.oned.rss.Pair,com.google.zxing.oned.rss.Pair)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean deleteSurroundingText(int,int)
com.google.zxing.common.reedsolomon.GenericGFPoly: com.google.zxing.common.reedsolomon.GenericGFPoly multiply(int)
com.google.firebase.database.core.Repo$TransactionData: com.google.firebase.database.ValueEventListener access$2500(com.google.firebase.database.core.Repo$TransactionData)
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
com.journeyapps.barcodescanner.RawImageData: int getWidth()
com.google.android.gms.location.FusedLocationProviderClient: com.google.android.gms.internal.location.zzaj zza(com.google.android.gms.tasks.TaskCompletionSource)
androidx.appcompat.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: int getCount()
com.google.android.gms.internal.location.zzap: void zza(com.google.android.gms.internal.location.zzo)
androidx.appcompat.widget.SearchView: void onQueryRefine(java.lang.CharSequence)
com.google.firebase.database.logging.Logger$Level: com.google.firebase.database.logging.Logger$Level valueOf(java.lang.String)
com.google.zxing.oned.rss.AbstractRSSReader: void decrement(int[],float[])
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
com.google.firebase.database.core.persistence.PruneForest$2: PruneForest$2()
com.journeyapps.barcodescanner.CaptureManager$2: void cameraClosed()
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.core.view.ContentInfoCompat$Builder: ContentInfoCompat$Builder(android.content.ClipData,int)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setTitle(java.lang.CharSequence)
com.baseflow.geolocator.location.LocationOptions: long getTimeInterval()
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.internal.GoogleApiAvailabilityCache zae(com.google.android.gms.common.api.internal.GoogleApiManager)
com.google.android.gms.maps.internal.zzbz: android.content.Context zzb(android.content.Context)
com.google.firebase.FirebaseApp: java.lang.String getName()
androidx.appcompat.widget.Toolbar$SavedState$1: androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
io.flutter.plugin.platform.PlatformViewsController: void attachToView(io.flutter.embedding.android.FlutterView)
com.google.android.gms.tasks.Tasks$zza: Tasks$zza(com.google.android.gms.tasks.zzv)
kotlinx.coroutines.channels.ChannelResult$Companion: java.lang.Object failure-PtdJZtk()
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingDisconnect: PersistentConnectionImpl$OutstandingDisconnect(java.lang.String,java.util.List,java.lang.Object,com.google.firebase.database.connection.RequestResultCallback)
io.flutter.plugins.googlemaps.PolygonsController: void changePolygon(java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: boolean isCheckable()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
androidx.fragment.app.Fragment: boolean getAllowEnterTransitionOverlap()
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.gms.dynamite.DynamiteModule$zzb: DynamiteModule$zzb(int,int)
com.google.firebase.database.snapshot.DeferredValueNode: boolean equals(java.lang.Object)
com.google.common.util.concurrent.ThreadFactoryBuilder: java.util.concurrent.ThreadFactory doBuild(com.google.common.util.concurrent.ThreadFactoryBuilder)
io.flutter.plugin.editing.TextInputPlugin: void access$300(io.flutter.plugin.editing.TextInputPlugin,android.view.View)
com.google.android.gms.common.api.internal.zah: zah(com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey,com.google.android.gms.tasks.TaskCompletionSource)
io.flutter.embedding.android.FlutterActivity: void detachFromFlutterEngine()
androidx.exifinterface.media.ExifInterface$Rational: ExifInterface$Rational(double)
com.google.android.gms.internal.location.zzm: int hashCode()
com.google.firebase.FirebaseOptions$Builder: com.google.firebase.FirebaseOptions$Builder setStorageBucket(java.lang.String)
kotlinx.coroutines.JobKt: void ensureActive(kotlin.coroutines.CoroutineContext)
com.google.android.gms.location.zzk: java.lang.Object[] newArray(int)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeInt(android.os.Parcel,int,int)
com.google.android.gms.common.internal.zaf: void onConnectionSuspended(int)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: void verifyCodewordCount(int[],int)
com.google.android.gms.signin.internal.zah: java.lang.Object createFromParcel(android.os.Parcel)
androidx.fragment.app.Fragment: java.lang.Object getSharedElementEnterTransition()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.content.res.ComplexColorCompat: boolean isStateful()
kotlin.comparisons.ComparisonsKt__ComparisonsKt: int compareValues(java.lang.Comparable,java.lang.Comparable)
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBNode copy(java.lang.Object,java.lang.Object,com.google.firebase.database.collection.LLRBNode$Color,com.google.firebase.database.collection.LLRBNode,com.google.firebase.database.collection.LLRBNode)
io.flutter.plugin.platform.PlatformViewsController: float getDisplayDensity()
com.google.android.gms.common.api.internal.zab: zab(int)
com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task addOnCompleteListener(com.google.android.gms.tasks.OnCompleteListener)
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
io.flutter.embedding.android.FlutterActivity: androidx.lifecycle.Lifecycle getLifecycle()
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: ImagePickerPlugin$LifeCycleObserver(io.flutter.plugins.imagepicker.ImagePickerPlugin,android.app.Activity)
io.flutter.plugin.platform.PlatformPlugin: void access$1000(io.flutter.plugin.platform.PlatformPlugin,java.lang.String)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityPaused(android.app.Activity)
androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.Fragment findRetainedFragmentByWho(java.lang.String)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
com.google.android.gms.auth.api.signin.GoogleSignInAccount: java.lang.String getIdToken()
androidx.activity.ComponentActivity$4: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.zxing.BinaryBitmap: boolean isRotateSupported()
com.google.android.gms.common.GooglePlayServicesUtilLight: android.content.Context getRemoteContext(android.content.Context)
io.flutter.embedding.android.FlutterView: void access$000(io.flutter.embedding.android.FlutterView,boolean,boolean)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeUnsignedInt(long)
com.google.android.gms.maps.model.Polyline: void setZIndex(float)
kotlinx.coroutines.AbstractCoroutine: boolean isActive()
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int)
com.google.android.gms.internal.maps.zzae: void setFadeIn(boolean)
com.google.firebase.database.core.WriteTree$1: WriteTree$1(com.google.firebase.database.core.WriteTree,boolean,java.util.List,com.google.firebase.database.core.Path)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: byte readByte()
com.google.zxing.oned.rss.expanded.BitArrayBuilder: com.google.zxing.common.BitArray buildBitArray(java.util.List)
com.google.firebase.database.connection.PersistentConnectionImpl: void upgradeAppCheck()
com.google.android.gms.tasks.Tasks$zzc: void onSuccess(java.lang.Object)
com.google.firebase.provider.FirebaseInitProvider: boolean onCreate()
com.google.firebase.database.core.Context: void ensureAuthTokenProvider()
com.google.android.gms.internal.location.zza: android.os.Parcel obtainAndWriteInterfaceToken()
com.journeyapps.barcodescanner.DecoratedBarcodeView: com.journeyapps.barcodescanner.ViewfinderView getViewFinder()
com.google.android.gms.dynamite.zzl: com.google.android.gms.dynamic.IObjectWrapper zza(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,int,com.google.android.gms.dynamic.IObjectWrapper)
androidx.appcompat.view.menu.MenuBuilder: MenuBuilder(android.content.Context)
io.flutter.embedding.engine.systemchannels.RestorationChannel$1: void notImplemented()
androidx.versionedparcelable.VersionedParcel: void setSerializationFlags(boolean,boolean)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: FlutterFirebasePluginRegistry()
com.google.firebase.database.core.utilities.Pair: boolean equals(java.lang.Object)
com.google.firebase.database.core.SyncTree$ListenContainer: com.google.firebase.database.core.Tag access$1400(com.google.firebase.database.core.SyncTree$ListenContainer)
kotlinx.coroutines.ChildContinuation: java.lang.Object invoke(java.lang.Object)
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task doUnregisterEventListener(com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey)
com.google.android.gms.internal.base.zad: void zaa(android.os.Parcel,android.os.Parcelable)
com.lyokone.location.NotificationOptions: NotificationOptions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.zxing.pdf417.decoder.DetectionResult: int getBarcodeRowCount()
com.lyokone.location.FlutterLocation: boolean shouldShowRequestPermissionRationale()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void onAndroidAccessibilityDisabled()
androidx.appcompat.widget.SearchView: int getImeOptions()
com.journeyapps.barcodescanner.Size: Size(int,int)
androidx.appcompat.app.AlertController: int getIconAttributeResId(int)
com.google.firebase.database.core.view.QueryParams$ViewFrom: com.google.firebase.database.core.view.QueryParams$ViewFrom[] values()
androidx.core.content.res.TypedArrayUtils: android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
androidx.fragment.app.FragmentController: void dispatchLowMemory()
kotlinx.coroutines.internal.ScopeCoroutine: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
com.google.android.gms.maps.model.Cap: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.maps.model.Polyline: java.lang.String getId()
androidx.core.view.ActionProvider: boolean onPerformDefaultAction()
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
io.flutter.embedding.android.FlutterView: void onDetachedFromWindow()
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo: void completeSpecialEffect()
androidx.customview.view.AbsSavedState$2: androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel)
com.google.firebase.components.CycleDetector$ComponentNode: boolean isRoot()
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.PolylineOptions jointType(int)
androidx.activity.ComponentActivity: void onBackPressed()
io.flutter.embedding.engine.systemchannels.NavigationChannel: void popRoute()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpansToExtras(java.lang.CharSequence,android.view.View)
io.flutter.embedding.engine.dart.DartExecutor: void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAutoMirrored(boolean)
com.google.android.gms.maps.internal.zzac: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
com.google.firebase.FirebaseApp$UserUnlockReceiver: void ensureReceiverRegistered(android.content.Context)
com.google.firebase.database.tubesock.WebSocketHandshake: int rand(int,int)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
kotlin.coroutines.jvm.internal.DebugMetadataKt: void checkDebugMetadataVersion(int,int)
com.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnCanceledListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener)
com.google.firebase.components.ComponentRuntime: java.util.List processSetComponents()
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: java.lang.Object invoke(java.lang.Object)
com.google.android.gms.maps.model.TileOverlayOptions: float getTransparency()
com.google.firebase.database.core.view.EventGenerator: com.google.firebase.database.snapshot.Index access$000(com.google.firebase.database.core.view.EventGenerator)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void chooseImageFromGallery(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: com.google.firebase.database.core.Path currentPath()
com.google.zxing.datamatrix.decoder.Version: int getSymbolSizeColumns()
androidx.fragment.app.FragmentLayoutInflaterFactory: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
com.google.zxing.pdf417.decoder.ec.ErrorCorrection: int[] findErrorLocations(com.google.zxing.pdf417.decoder.ec.ModulusPoly)
com.google.android.gms.internal.location.zzak: zzak()
androidx.core.view.ViewParentCompat: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int)
com.google.android.gms.maps.model.Cap: java.lang.String toString()
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode: com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode[] values()
kotlin.text.StringsKt__StringsJVMKt: boolean isBlank(java.lang.CharSequence)
androidx.appcompat.widget.SearchView$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: boolean equals(java.lang.Object)
com.google.firebase.components.Preconditions: void checkArgument(boolean,java.lang.String)
androidx.appcompat.widget.AppCompatSpinner$1: androidx.appcompat.view.menu.ShowableListMenu getPopup()
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments: AccessibilityViewCommand$ScrollToPositionArguments()
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: kotlinx.coroutines.internal.Symbol tryResumeReceive(java.lang.Object,kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
com.google.android.gms.location.zzy: com.google.android.gms.location.zzx zzc(android.os.IBinder)
com.google.zxing.common.CharacterSetECI: CharacterSetECI(java.lang.String,int,int[],java.lang.String[])
androidx.appcompat.app.AppCompatDelegateImpl: boolean isActivityManifestHandlingUiMode()
androidx.appcompat.view.StandaloneActionMode: void setSubtitle(java.lang.CharSequence)
com.google.firebase.database.core.Repo$2: Repo$2(com.google.firebase.database.core.Repo)
com.google.android.gms.maps.model.LatLngBounds: boolean equals(java.lang.Object)
com.google.firebase.database.core.utilities.encoding.CustomClassMapper: java.lang.Object access$200(java.lang.Object)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateOrGetNextCopy(long)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void onClick(android.content.DialogInterface,int)
com.journeyapps.barcodescanner.camera.CameraManager: android.hardware.Camera$Parameters getDefaultCameraParameters()
com.google.firebase.database.connection.ConnectionContext: java.lang.String getUserAgent()
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int)
com.google.firebase.components.ComponentDiscovery: com.google.firebase.components.ComponentDiscovery forContext(android.content.Context,java.lang.Class)
com.lyokone.location.FlutterLocationService: android.os.IBinder onBind(android.content.Intent)
com.google.firebase.database.core.DatabaseConfig: void setLogLevel(com.google.firebase.database.Logger$Level)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.google.android.gms.common.api.internal.TaskApiCall: TaskApiCall()
kotlinx.coroutines.internal.ScopeCoroutine: java.lang.StackTraceElement getStackTraceElement()
com.google.android.gms.maps.model.LatLngBounds: LatLngBounds(com.google.android.gms.maps.model.LatLng,com.google.android.gms.maps.model.LatLng)
androidx.window.embedding.ActivityStack: boolean equals(java.lang.Object)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments: AccessibilityViewCommand$MoveHtmlArguments()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
androidx.appcompat.widget.AppCompatSpinner: int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)
androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
io.flutter.plugin.common.MethodCall: java.lang.Object argument(java.lang.String)
kotlin.Pair: int hashCode()
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1: DeferredComponentChannel$1(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readSize(android.os.Parcel,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List getStringAttributesFromBuffer(java.nio.ByteBuffer,java.nio.ByteBuffer[])
androidx.collection.MapCollections$EntrySet: int size()
io.flutter.plugins.googlemaps.TileOverlayBuilder: void setZIndex(float)
com.google.firebase.database.snapshot.LeafNode: int leafCompare(com.google.firebase.database.snapshot.LeafNode)
com.google.firebase.database.core.utilities.ImmutableTree: com.google.firebase.database.core.Path findRootMostPathWithValue(com.google.firebase.database.core.Path)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Void alreadyResumedError(java.lang.Object)
androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent getNestedScrollingParentForType(int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: FlutterMutatorsStack$FlutterMutatorType(java.lang.String,int)
com.google.firebase.database.Logger$Level: com.google.firebase.database.Logger$Level valueOf(java.lang.String)
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
androidx.fragment.app.FragmentTransitionCompat21: void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
com.google.android.gms.common.api.internal.GoogleApiManager$zab: com.google.android.gms.common.api.Api$Client zab(com.google.android.gms.common.api.internal.GoogleApiManager$zab)
com.google.android.gms.common.api.GoogleApi: GoogleApi(android.app.Activity,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,com.google.android.gms.common.api.GoogleApi$Settings)
androidx.fragment.app.Fragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
io.flutter.plugins.imagepicker.ImagePickerPlugin: void setup(io.flutter.plugin.common.BinaryMessenger,android.app.Application,android.app.Activity,io.flutter.plugin.common.PluginRegistry$Registrar,io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
kotlin.collections.EmptySet: boolean removeAll(java.util.Collection)
androidx.fragment.app.FragmentContainerView: void removeDetachedView(android.view.View,boolean)
io.flutter.plugins.googlemaps.MarkersController: void showMarkerInfoWindow(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.database.core.operation.AckUserWrite: com.google.firebase.database.core.utilities.ImmutableTree getAffectedTree()
com.google.android.gms.common.api.internal.zza: void onSaveInstanceState(android.os.Bundle)
com.google.firebase.database.core.Repo$TransactionData: com.google.firebase.database.snapshot.Node access$1702(com.google.firebase.database.core.Repo$TransactionData,com.google.firebase.database.snapshot.Node)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
com.journeyapps.barcodescanner.camera.CameraSettings: void setRequestedCameraId(int)
androidx.fragment.app.FragmentStateManager: void resume()
com.google.firebase.database.Query: com.google.firebase.database.Query endBefore(boolean)
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: com.google.android.gms.tasks.Task setAutomaticResourceManagementEnabled(java.util.Map)
com.google.firebase.database.core.SyncTree$2: java.util.List call()
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onActivityStopped(android.app.Activity)
com.google.firebase.database.collection.LLRBEmptyNode: boolean isRed()
com.journeyapps.barcodescanner.camera.CameraSettings: boolean isAutoFocusEnabled()
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void zza(android.os.Parcel,android.os.Parcelable,int)
com.google.firebase.database.core.view.QueryParams: com.google.firebase.database.core.view.QueryParams fromQueryObject(java.util.Map)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void done(int)
com.lyokone.location.MethodCallHandlerImpl: void isBackgroundModeEnabled(io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.maps.model.zzf: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.plugins.googlemaps.GoogleMapsPlugin: void onDetachedFromActivity()
io.flutter.plugins.googlemaps.GoogleMapController: void setBuildingsEnabled(boolean)
io.flutter.plugins.googlemaps.PolylinesController: void addPolylines(java.util.List)
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: java.lang.Object[] newArray(int)
androidx.collection.SparseArrayCompat: int size()
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: boolean zabn()
com.journeyapps.barcodescanner.BarcodeResult: java.util.List transformResultPoints(java.util.List,com.journeyapps.barcodescanner.SourceData)
androidx.collection.ArrayMap: boolean retainAll(java.util.Collection)
com.google.firebase.database.android.SqlPersistenceStorageEngine: int splitNodeRunLength(com.google.firebase.database.core.Path,java.util.List,int)
com.baseflow.geolocator.MethodCallHandlerImpl: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.common.FlutterException: FlutterException(java.lang.String,java.lang.String,java.lang.Object)
androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean onKeyPreIme(int,android.view.KeyEvent)
com.google.android.gms.common.internal.zzb: zzb(android.os.Bundle,com.google.android.gms.common.Feature[])
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getAlpha()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setShowAsActionFlags(int)
kotlinx.coroutines.CoroutineStart: CoroutineStart(java.lang.String,int)
com.google.firebase.database.core.WriteTree: java.util.List purgeAllWrites()
com.google.firebase.database.core.view.View: boolean isEmpty()
kotlinx.coroutines.internal.ContextScope: kotlin.coroutines.CoroutineContext getCoroutineContext()
io.flutter.plugins.googlemaps.PolylineController: void setVisible(boolean)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
com.google.firebase.components.RestrictedComponentContainer$RestrictedPublisher: void publish(com.google.firebase.events.Event)
kotlinx.coroutines.CoroutineDispatcher: CoroutineDispatcher()
kotlinx.coroutines.internal.ThreadSafeHeap: boolean isEmpty()
androidx.appcompat.widget.Toolbar: void onLayout(boolean,int,int,int,int)
androidx.fragment.app.SpecialEffectsController$1: void run()
kotlin.collections.EmptyMap: java.lang.Object put(java.lang.Object,java.lang.Object)
io.flutter.plugins.firebase.database.FlutterFirebaseDatabaseException: io.flutter.plugins.firebase.database.FlutterFirebaseDatabaseException fromDatabaseError(com.google.firebase.database.DatabaseError)
com.journeyapps.barcodescanner.DefaultDecoderFactory: DefaultDecoderFactory()
com.journeyapps.barcodescanner.BarcodeView$DecodeMode: BarcodeView$DecodeMode(java.lang.String,int)
com.google.android.gms.location.zzai: java.lang.Object[] newArray(int)
androidx.fragment.app.BackStackRecord: boolean interactsWith(java.util.ArrayList,int,int)
androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)
com.google.android.gms.maps.zzd: void zze(com.google.android.gms.internal.maps.zzt)
androidx.appcompat.widget.ToolbarWidgetWrapper: void updateHomeAccessibility()
androidx.core.graphics.TypefaceCompatApi21Impl: TypefaceCompatApi21Impl()
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBValueNode copy(java.lang.Object,java.lang.Object,com.google.firebase.database.collection.LLRBNode$Color,com.google.firebase.database.collection.LLRBNode,com.google.firebase.database.collection.LLRBNode)
com.google.common.util.concurrent.ThreadFactoryBuilder: com.google.common.util.concurrent.ThreadFactoryBuilder setPriority(int)
com.google.firebase.platforminfo.AutoValue_LibraryVersion: AutoValue_LibraryVersion(java.lang.String,java.lang.String)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)
com.google.zxing.common.PerspectiveTransform: com.google.zxing.common.PerspectiveTransform times(com.google.zxing.common.PerspectiveTransform)
androidx.appcompat.widget.ResourcesWrapper: int getDimensionPixelSize(int)
io.flutter.plugin.platform.PlatformPlugin: void destroy()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: WindowMetricsCalculator$Companion$reset$1()
androidx.fragment.app.FragmentManagerState: FragmentManagerState()
androidx.core.widget.NestedScrollView: boolean pageScroll(int)
io.flutter.embedding.engine.FlutterEngineCache: void remove(java.lang.String)
androidx.fragment.app.Fragment$1: void run()
androidx.appcompat.view.menu.BaseMenuWrapper: BaseMenuWrapper(android.content.Context)
androidx.fragment.app.FragmentAnim$3: void onAnimationEnd(android.animation.Animator)
com.google.firebase.database.DatabaseReference: com.google.firebase.database.DatabaseReference getParent()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.appcompat.view.menu.StandardMenuPopup$2: StandardMenuPopup$2(androidx.appcompat.view.menu.StandardMenuPopup)
io.flutter.plugins.firebase.database.TransactionExecutor: java.lang.Object execute(java.util.Map)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(android.view.ViewGroup,androidx.fragment.app.Fragment,java.lang.String)
com.google.android.gms.maps.model.TileOverlay: int hashCode()
io.flutter.embedding.engine.systemchannels.SystemChannel: void sendMemoryPressureWarning()
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean)
androidx.appcompat.view.menu.ActionMenuItem: android.view.ContextMenu$ContextMenuInfo getMenuInfo()
com.google.zxing.datamatrix.DataMatrixReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap)
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: void endRange()
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
com.google.firebase.database.core.ThreadInitializer$1: void setUncaughtExceptionHandler(java.lang.Thread,java.lang.Thread$UncaughtExceptionHandler)
androidx.appcompat.view.menu.ActionMenuItem: boolean isActionViewExpanded()
io.flutter.Log: void d(java.lang.String,java.lang.String)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: FlutterActivityAndFragmentDelegate(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host)
com.google.zxing.pdf417.decoder.DetectionResult: void setBoundingBox(com.google.zxing.pdf417.decoder.BoundingBox)
androidx.appcompat.widget.Toolbar: void ensureMenu()
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: AccessibilityChannel(io.flutter.embedding.engine.dart.DartExecutor,io.flutter.embedding.engine.FlutterJNI)
androidx.fragment.app.Fragment: void onDestroyOptionsMenu()
io.flutter.plugins.googlemaps.PolygonController: void setConsumeTapEvents(boolean)
com.google.zxing.qrcode.decoder.Mode: Mode(java.lang.String,int,int[],int)
com.baseflow.geolocator.location.LocationManagerClient: boolean isBetterLocation(android.location.Location,android.location.Location)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTitleCondensed()
androidx.core.app.NotificationCompat$Action: androidx.core.graphics.drawable.IconCompat getIconCompat()
androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getResourceTypeName(int)
com.google.zxing.oned.OneDReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: void onFlutterUiNoLongerDisplayed()
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule zza(android.content.Context,java.lang.String,int)
io.flutter.plugin.platform.PlatformPlugin$1: void showSystemOverlays(java.util.List)
kotlinx.coroutines.android.HandlerDispatcherKt: android.os.Handler asHandler(android.os.Looper,boolean)
com.google.firebase.database.connection.PersistentConnectionImpl$6: void onResponse(java.util.Map)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void loadFromAttributes(android.util.AttributeSet,int)
androidx.appcompat.view.menu.BaseMenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.core.view.ViewPropertyAnimatorListenerAdapter: void onAnimationStart(android.view.View)
com.journeyapps.barcodescanner.CaptureActivity: boolean onKeyDown(int,android.view.KeyEvent)
androidx.fragment.app.FragmentController: void dispatchOptionsMenuClosed(android.view.Menu)
androidx.fragment.app.FragmentAnim$2: void onAnimationStart(android.view.animation.Animation)
androidx.appcompat.view.menu.ListMenuPresenter: android.widget.ListAdapter getAdapter()
androidx.core.widget.AutoScrollHelper$ClampedScroller: AutoScrollHelper$ClampedScroller()
com.google.android.gms.common.api.internal.zaz: boolean zaae()
androidx.exifinterface.media.ExifInterface: void validateImages()
androidx.core.provider.FontRequestWorker: android.graphics.Typeface requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeList(android.os.Parcel,int,java.util.List,boolean)
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: com.google.android.gms.tasks.Task setValueWithPriority(java.util.Map)
com.google.firebase.database.DataSnapshot: java.lang.String getKey()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void search(int)
io.flutter.plugin.editing.TextInputPlugin: void didChangeEditingState(boolean,boolean,boolean)
androidx.appcompat.app.WindowDecorActionBar: void onConfigurationChanged(android.content.res.Configuration)
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion()
com.google.android.gms.common.internal.BaseGmsClient: boolean zzb(com.google.android.gms.common.internal.BaseGmsClient)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)
io.flutter.embedding.engine.renderer.FlutterRenderer: io.flutter.view.TextureRegistry$SurfaceTextureEntry createSurfaceTexture()
androidx.appcompat.app.AlertController: void manageScrollIndicators(android.view.View,android.view.View,android.view.View)
androidx.appcompat.app.AppCompatDelegateImpl: boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int)
androidx.fragment.app.FragmentActivity: void onResumeFragments()
androidx.activity.ComponentActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
kotlinx.coroutines.channels.ArrayChannel: java.lang.Object offerInternal(java.lang.Object)
androidx.appcompat.app.AlertController$AlertParams$3: AlertController$AlertParams$3(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController)
com.google.firebase.components.Dependency: java.lang.String describeInjection(int)
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object takeState$kotlinx_coroutines_core()
androidx.fragment.app.DialogFragment: int getTheme()
androidx.core.widget.NestedScrollView: void measureChild(android.view.View,int,int)
com.google.firebase.database.connection.RangeMerge: java.lang.Object getSnap()
com.google.zxing.ReaderException: ReaderException()
io.flutter.view.AccessibilityBridge: boolean externalViewRequestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.fragment.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
androidx.fragment.app.LogWriter: void close()
com.google.firebase.database.core.utilities.Utilities: int compareInts(int,int)
io.flutter.plugins.googlemaps.PolygonController: void remove()
com.google.android.gms.maps.zzy: void onMapClick(com.google.android.gms.maps.model.LatLng)
com.google.firebase.database.core.view.EventGenerator: java.util.List generateEventsForChanges(java.util.List,com.google.firebase.database.snapshot.IndexedNode,java.util.List)
androidx.fragment.app.FragmentTransitionImpl: void bfsAddViewChildren(java.util.List,android.view.View)
kotlinx.coroutines.scheduling.DefaultScheduler: void close()
com.google.android.gms.common.GoogleApiAvailabilityLight: com.google.android.gms.common.GoogleApiAvailabilityLight getInstance()
com.google.firebase.database.android.SqlPersistenceStorageEngine: void beginTransaction()
androidx.appcompat.app.AppCompatViewInflater: android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet)
com.google.android.gms.common.api.Api$AbstractClientBuilder: Api$AbstractClientBuilder()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: DrawableContainer$DrawableContainerState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources)
com.google.zxing.aztec.decoder.Decoder: com.google.zxing.common.DecoderResult decode(com.google.zxing.aztec.AztecDetectorResult)
com.journeyapps.barcodescanner.camera.CameraManager: void startPreview()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,int)
androidx.core.provider.FontProvider$1: int compare(byte[],byte[])
com.google.firebase.database.collection.ImmutableSortedMap: int hashCode()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: PlatformViewsChannel$1(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel)
androidx.appcompat.graphics.drawable.DrawableContainer$1: void run()
androidx.core.app.NavUtils: void navigateUpTo(android.app.Activity,android.content.Intent)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long yoinkParentIdFromParcel(android.view.accessibility.AccessibilityNodeInfo)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.google.android.gms.dynamite.zza: int getLocalVersion(android.content.Context,java.lang.String)
com.google.zxing.common.reedsolomon.ReedSolomonDecoder: com.google.zxing.common.reedsolomon.GenericGFPoly[] runEuclideanAlgorithm(com.google.zxing.common.reedsolomon.GenericGFPoly,com.google.zxing.common.reedsolomon.GenericGFPoly,int)
androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)
com.google.firebase.database.core.Context: Context()
kotlin.collections.EmptyMap: int getSize()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.google.firebase.database.snapshot.PathIndex: java.lang.String getQueryDefinition()
io.flutter.plugins.urllauncher.WebViewActivity: java.util.Map extractHeaders(android.os.Bundle)
io.flutter.plugin.editing.ListenableEditingState: java.util.ArrayList extractBatchTextEditingDeltas()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)
com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: void putThread(com.google.common.util.concurrent.AbstractFuture$Waiter,java.lang.Thread)
com.journeyapps.barcodescanner.DecoderThread: void setCropRect(android.graphics.Rect)
androidx.appcompat.widget.TooltipCompat: void setTooltipText(android.view.View,java.lang.CharSequence)
kotlinx.coroutines.internal.LockFreeLinkedListNode: void helpRemovePrev()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
kotlinx.coroutines.JobSupport: kotlin.coroutines.CoroutineContext$Key getKey()
androidx.fragment.app.FragmentManager$5: void run()
com.baseflow.geolocator.location.LocationManagerClient: void onProviderEnabled(java.lang.String)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTitle(int)
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: int describeContents()
com.google.firebase.database.core.CompoundWrite: CompoundWrite(com.google.firebase.database.core.utilities.ImmutableTree)
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: ThreadContextKt$countAll$1()
androidx.fragment.app.FragmentTransitionCompat21: void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable)
com.google.firebase.database.connection.Connection: void onConnectionShutdown(java.lang.String)
com.google.android.gms.common.internal.BaseGmsClient: void onConnectedLocked(android.os.IInterface)
androidx.appcompat.widget.RtlSpacingHelper: void setAbsolute(int,int)
com.google.firebase.database.core.Repo$15: void onCancelled(com.google.firebase.database.DatabaseError)
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.api.Status zabd()
com.journeyapps.barcodescanner.camera.CameraManager$CameraPreviewCallback: void onPreviewFrame(byte[],android.hardware.Camera)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: ActionMenuPresenter$OverflowMenuButton(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context)
com.google.android.gms.maps.GoogleMap: void resetMinMaxZoomPreference()
androidx.fragment.app.FragmentManager$9: void onActivityResult(androidx.activity.result.ActivityResult)
androidx.core.graphics.TypefaceCompatBaseImpl: androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry getFontFamily(android.graphics.Typeface)
kotlin.text.StringsKt__StringsKt$splitToSequence$1: java.lang.String invoke(kotlin.ranges.IntRange)
io.flutter.plugins.googlemaps.CircleController: void setVisible(boolean)
androidx.appcompat.widget.Toolbar: int getViewListMeasuredWidth(java.util.List,int[])
com.google.android.gms.maps.zzp: zzp(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnPolygonClickListener)
kotlinx.coroutines.channels.LinkedListChannel: java.lang.Object offerInternal(java.lang.Object)
com.google.firebase.database.core.Repo: com.google.firebase.database.connection.PersistentConnection access$200(com.google.firebase.database.core.Repo)
androidx.core.graphics.drawable.WrappedDrawableApi14: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
kotlinx.coroutines.intrinsics.CancellableKt: void dispatcherFailure(kotlin.coroutines.Continuation,java.lang.Throwable)
androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeByte(android.os.Parcel,int,byte)
com.google.zxing.ChecksumException: com.google.zxing.ChecksumException getChecksumInstance()
com.google.android.gms.common.api.internal.ListenerHolder$zaa: ListenerHolder$zaa(com.google.android.gms.common.api.internal.ListenerHolder,android.os.Looper)
io.flutter.embedding.android.KeyboardManager: void access$000(io.flutter.embedding.android.KeyboardManager,android.view.KeyEvent)
androidx.fragment.app.SpecialEffectsController$Operation: SpecialEffectsController$Operation(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String)
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState: void setNumeric()
com.google.android.gms.maps.CameraUpdate: com.google.android.gms.dynamic.IObjectWrapper zzb()
androidx.core.view.ViewCompat: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
androidx.core.app.CoreComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)
androidx.exifinterface.media.ExifInterface: boolean isRw2Format(byte[])
androidx.appcompat.view.menu.CascadingMenuPopup: void onDismiss()
com.google.zxing.qrcode.decoder.BitMatrixParser: byte[] readCodewords()
com.google.firebase.database.core.Context: void ensureUserAgent()
kotlin.text.StringsKt__AppendableKt: void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable()
com.google.firebase.database.Query: com.google.firebase.database.Query endBefore(double,java.lang.String)
kotlinx.coroutines.IncompleteStateBox: IncompleteStateBox(kotlinx.coroutines.Incomplete)
com.journeyapps.barcodescanner.CameraPreview: void pauseAndWait()
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.collection.MapCollections: java.util.Set getKeySet()
com.google.android.gms.maps.internal.zzb: com.google.android.gms.dynamic.IObjectWrapper newCameraPosition(com.google.android.gms.maps.model.CameraPosition)
com.google.firebase.database.snapshot.PriorityUtilities: com.google.firebase.database.snapshot.Node parsePriority(java.lang.Object)
com.google.android.gms.dynamite.zzj: com.google.android.gms.dynamic.IObjectWrapper zza(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,int)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem findItem(int)
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1: LocalizationChannel$1(io.flutter.embedding.engine.systemchannels.LocalizationChannel)
androidx.core.app.NotificationCompat$Action: NotificationCompat$Action(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean,boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
androidx.core.app.ActivityRecreator$1: void run()
androidx.core.view.inputmethod.InputConnectionCompat$2: boolean performPrivateCommand(java.lang.String,android.os.Bundle)
androidx.fragment.app.Fragment$3: Fragment$3(androidx.fragment.app.Fragment,androidx.fragment.app.SpecialEffectsController)
androidx.appcompat.app.AppCompatDialog: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.google.firebase.database.core.SyncTree$11: SyncTree$11(com.google.firebase.database.core.SyncTree,com.google.firebase.database.core.view.QuerySpec)
kotlinx.coroutines.scheduling.NanoTimeSource: long nanoTime()
com.google.android.gms.common.api.internal.GoogleApiManager$zac: com.google.android.gms.common.api.internal.ApiKey zac(com.google.android.gms.common.api.internal.GoogleApiManager$zac)
androidx.lifecycle.DefaultLifecycleObserver: void onDestroy(androidx.lifecycle.LifecycleOwner)
androidx.core.view.WindowInsetsControllerCompat$Impl26: void setAppearanceLightNavigationBars(boolean)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: int getViewTypeCount()
kotlinx.coroutines.CoroutineContextKt: java.lang.String getCoroutineName(kotlin.coroutines.CoroutineContext)
androidx.collection.MapCollections$EntrySet: boolean add(java.lang.Object)
androidx.exifinterface.media.ExifInterface: void removeAttribute(java.lang.String)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
io.flutter.plugins.firebase.database.ValueEventsProxy: ValueEventsProxy(io.flutter.plugin.common.EventChannel$EventSink)
com.google.android.gms.location.zzj: int hashCode()
com.google.android.gms.internal.maps.zzj: void setVisible(boolean)
com.google.zxing.qrcode.decoder.FormatInformation: byte getDataMask()
io.flutter.plugin.common.StandardMessageCodec: void writeValue(java.io.ByteArrayOutputStream,java.lang.Object)
com.google.firebase.database.core.CompoundWrite$1: com.google.firebase.database.core.CompoundWrite onNodeValue(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node,com.google.firebase.database.core.CompoundWrite)
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job)
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: void run()
androidx.fragment.app.FragmentTransition$2: FragmentTransition$2(java.util.ArrayList)
com.google.firebase.database.core.operation.OperationSource: com.google.firebase.database.core.view.QueryParams getQueryParams()
com.google.android.gms.dynamic.zad: zad(android.content.Context,android.content.Intent)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,java.lang.String[],boolean,int)
androidx.appcompat.widget.AppCompatTextHelper: void setTextSizeInternal(int,float)
androidx.appcompat.widget.AppCompatCheckedTextView: void setTextAppearance(android.content.Context,int)
kotlinx.coroutines.scheduling.CoroutineScheduler: void execute(java.lang.Runnable)
androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
com.google.android.gms.internal.common.zze: zze(android.os.Looper)
androidx.exifinterface.media.ExifInterface$ExifAttribute: int size()
androidx.fragment.app.FragmentManager: void dispatchStateChange(int)
com.google.firebase.database.snapshot.IndexedNode: java.util.Iterator reverseIterator()
net.touchcapture.qr.flutterqr.QRView: void getSystemFeatures(io.flutter.plugin.common.MethodChannel$Result)
androidx.collection.ContainerHelpers: int idealIntArraySize(int)
com.lyokone.location.FlutterLocationService: boolean isInForegroundMode()
kotlinx.coroutines.CoroutineContextKt: kotlinx.coroutines.UndispatchedCoroutine undispatchedCompletion(kotlin.coroutines.jvm.internal.CoroutineStackFrame)
kotlinx.coroutines.intrinsics.CancellableKt: void access$dispatcherFailure(kotlin.coroutines.Continuation,java.lang.Throwable)
androidx.fragment.app.FragmentManager: boolean isStateAtLeast(int)
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setStableInsets(androidx.core.graphics.Insets)
io.flutter.plugins.pathprovider.PathProviderPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int,kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.WrappedDrawableState: WrappedDrawableState(androidx.core.graphics.drawable.WrappedDrawableState)
com.lyokone.location.FlutterLocationService: com.lyokone.location.FlutterLocation getLocation()
com.journeyapps.barcodescanner.DecoratedBarcodeView: android.widget.TextView getStatusView()
kotlinx.coroutines.JobKt__JobKt: kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object)
androidx.lifecycle.LiveData$1: LiveData$1(androidx.lifecycle.LiveData)
androidx.core.content.res.ResourcesCompat$FontCallback: android.os.Handler getHandler(android.os.Handler)
com.google.firebase.database.snapshot.PriorityUtilities: com.google.firebase.database.snapshot.Node NullPriority()
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: FragmentManager$LaunchedFragmentInfo(android.os.Parcel)
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract: android.content.Intent createIntent(android.content.Context,java.lang.Object)
io.flutter.view.AccessibilityBridge$3: void onChange(boolean)
com.google.android.gms.common.api.ResolvableApiException: void startResolutionForResult(android.app.Activity,int)
com.google.zxing.maxicode.decoder.DecodedBitStreamParser: int getServiceClass(byte[])
kotlinx.coroutines.internal.ThreadContextKt$updateState$1: kotlinx.coroutines.internal.ThreadState invoke(kotlinx.coroutines.internal.ThreadState,kotlin.coroutines.CoroutineContext$Element)
com.google.firebase.database.DataSnapshot: java.lang.Object getPriority()
com.google.android.gms.common.SupportErrorDialogFragment: void onCancel(android.content.DialogInterface)
io.flutter.plugins.googlemaps.Convert: java.lang.Object cameraPositionToJson(com.google.android.gms.maps.model.CameraPosition)
androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)
androidx.core.widget.TextViewCompat$OreoCallback: TextViewCompat$OreoCallback(android.view.ActionMode$Callback,android.widget.TextView)
com.google.firebase.database.collection.LLRBRedValueNode: com.google.firebase.database.collection.LLRBValueNode copy(java.lang.Object,java.lang.Object,com.google.firebase.database.collection.LLRBNode,com.google.firebase.database.collection.LLRBNode)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: android.os.IBinder readIBinder(android.os.Parcel,int)
com.google.android.gms.internal.maps.zzab: void setColor(int)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: SingleViewPresentation$ImmContext(android.content.Context,android.view.inputmethod.InputMethodManager)
kotlinx.coroutines.internal.OnUndeliveredElementKt: kotlin.jvm.functions.Function1 bindCancellationFun(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.JobSupport: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
kotlin.internal.PlatformImplementations$ReflectThrowable: PlatformImplementations$ReflectThrowable()
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.String[],int,boolean,int,int,java.lang.Object)
com.google.firebase.database.Transaction: com.google.firebase.database.Transaction$Result abort()
com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator: FinderPatternFinder$FurthestFromAverageComparator(float,com.google.zxing.qrcode.detector.FinderPatternFinder$1)
com.google.firebase.database.logging.DefaultLogger: void onLogMessage(com.google.firebase.database.logging.Logger$Level,java.lang.String,java.lang.String,long)
io.flutter.plugins.firebase.database.TransactionExecutor$1: void error(java.lang.String,java.lang.String,java.lang.Object)
com.google.firebase.database.core.utilities.Utilities: java.lang.String stringHashV2Representation(java.lang.String)
com.google.firebase.database.collection.LLRBValueNode: java.lang.Object getKey()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
io.flutter.plugins.googlemaps.PolylineBuilder: void setVisible(boolean)
androidx.appcompat.view.WindowCallbackWrapper: android.view.View onCreatePanelView(int)
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback: ActionMenuView$ActionMenuPresenterCallback()
androidx.appcompat.view.menu.CascadingMenuPopup: void setGravity(int)
com.google.firebase.database.snapshot.BooleanNode: com.google.firebase.database.snapshot.LeafNode$LeafType getLeafType()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
kotlinx.coroutines.internal.DispatchedContinuationKt: kotlinx.coroutines.internal.Symbol access$getUNDEFINED$p()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(androidx.window.extensions.layout.WindowLayoutInfo)
androidx.activity.ComponentActivity$2: void onLaunch(int,androidx.activity.result.contract.ActivityResultContract,java.lang.Object,androidx.core.app.ActivityOptionsCompat)
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl: boolean equals(java.lang.Object)
com.google.android.gms.common.api.internal.BasePendingResult: void zab(com.google.android.gms.common.api.Status)
com.google.firebase.database.connection.PersistentConnectionImpl: void sendUnAppCheck()
com.google.firebase.database.core.Repo: void sendAllReadyTransactions()
androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
com.google.firebase.database.collection.StandardComparator: StandardComparator()
androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)
androidx.fragment.app.FragmentAnim$AnimationOrAnimator: FragmentAnim$AnimationOrAnimator(android.view.animation.Animation)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: java.lang.CharSequence getSubtitle()
com.google.firebase.database.core.persistence.NoopPersistenceManager: void removeUserWrite(long)
androidx.appcompat.widget.AppCompatReceiveContentHelper: android.app.Activity tryGetActivity(android.view.View)
androidx.core.widget.NestedScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int)
com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastO()
androidx.appcompat.view.menu.MenuBuilder: void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: void setBestExposure(android.hardware.Camera$Parameters,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.Region getTransparentRegion()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: void runWorker()
com.google.android.gms.common.internal.zan: zan()
androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback getWrapped()
com.google.android.gms.auth.api.signin.internal.Storage: com.google.android.gms.auth.api.signin.internal.Storage getInstance(android.content.Context)
com.google.firebase.database.core.view.filter.RangedFilter: boolean filtersNodes()
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
com.google.zxing.qrcode.decoder.DataBlock: byte[] getCodewords()
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityDestroyed(android.app.Activity)
com.google.firebase.database.core.Repo: void callOnComplete(com.google.firebase.database.DatabaseReference$CompletionListener,com.google.firebase.database.DatabaseError,com.google.firebase.database.core.Path)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: boolean canApplyTheme()
com.google.android.gms.common.api.internal.zza: android.app.Activity getLifecycleActivity()
com.google.firebase.database.android.SqlPersistenceStorageEngine: void removeUserWrite(long)
androidx.window.layout.FoldingFeature: boolean isSeparating()
com.google.zxing.ResultPoint: float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)
com.google.android.gms.internal.maps.zzj: java.lang.String getId()
androidx.fragment.app.SpecialEffectsController$Operation: void onStart()
androidx.fragment.app.FragmentStore: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
io.flutter.embedding.engine.systemchannels.TextInputChannel$1: TextInputChannel$1(io.flutter.embedding.engine.systemchannels.TextInputChannel)
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
androidx.fragment.app.FragmentTransitionCompat21$3: FragmentTransitionCompat21$3(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
androidx.appcompat.graphics.drawable.DrawableWrapper: void jumpToCurrentState()
androidx.fragment.app.FragmentTransition$5: FragmentTransition$5(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect)
kotlin.sequences.TransformingSequence: java.util.Iterator iterator()
com.journeyapps.barcodescanner.CaptureManager$2: void previewStarted()
kotlinx.coroutines.channels.Closed: java.lang.String toString()
io.flutter.plugin.common.StandardMessageCodec: void writeDouble(java.io.ByteArrayOutputStream,double)
kotlinx.coroutines.JobCancellationException: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
com.google.android.gms.common.api.internal.zza: void addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)
com.google.firebase.database.core.ValueEventRegistration: ValueEventRegistration(com.google.firebase.database.core.Repo,com.google.firebase.database.ValueEventListener,com.google.firebase.database.core.view.QuerySpec)
com.google.firebase.database.core.view.Change: com.google.firebase.database.core.view.Change childMovedChange(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.IndexedNode)
kotlin.collections.EmptyIterator: java.lang.Object previous()
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: boolean hasStableIds()
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isActionViewExpanded()
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.embedding.EmptyEmbeddingComponent: void setSplitInfoCallback(java.util.function.Consumer)
kotlin.sequences.TransformingSequence: kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.TransformingSequence)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getState$kotlinx_coroutines_core()
com.google.firebase.database.core.Repo$21: void run()
com.google.android.gms.common.api.internal.LifecycleCallback: void onDestroy()
com.google.firebase.components.Dependency: boolean isDirectInjection()
kotlin.jvm.internal.Intrinsics: void throwJavaNpe()
com.google.android.gms.maps.model.zzs: com.google.android.gms.maps.model.Tile getTile(int,int,int)
kotlin.collections.EmptyList: int size()
kotlinx.coroutines.channels.ConflatedChannel: java.lang.Object offerInternal(java.lang.Object)
androidx.fragment.app.FragmentStateManager: FragmentStateManager(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment)
androidx.lifecycle.FullLifecycleObserverAdapter: FullLifecycleObserverAdapter(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver)
androidx.appcompat.view.menu.StandardMenuPopup: void setShowTitle(boolean)
io.flutter.plugins.googlemaps.TileOverlaysController: java.lang.String getTileOverlayId(java.util.Map)
com.google.firebase.database.core.utilities.Tree: java.lang.String toString()
androidx.window.embedding.ActivityStack: boolean isEmpty()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getChildCount()
io.flutter.plugin.editing.TextInputPlugin$1: void show()
androidx.window.embedding.SplitPlaceholderRule: boolean equals(java.lang.Object)
com.google.android.gms.maps.model.CircleOptions: void writeToParcel(android.os.Parcel,int)
com.google.common.util.concurrent.ThreadFactoryBuilder: com.google.common.util.concurrent.ThreadFactoryBuilder setNameFormat(java.lang.String)
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.String[])
androidx.appcompat.app.WindowDecorActionBar: boolean collapseActionView()
androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()
kotlin.collections.ArraysKt___ArraysKt: char single(char[])
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException(java.lang.String)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
io.flutter.embedding.android.FlutterActivity: boolean shouldHandleDeeplinking()
androidx.fragment.app.FragmentStateManager: FragmentStateManager(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentState)
kotlin.internal.jdk8.JDK8PlatformImplementations: JDK8PlatformImplementations()
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
io.flutter.plugins.googlemaps.GoogleMapController: int checkSelfPermission(java.lang.String)
com.google.android.gms.signin.SignInOptions: boolean isOfflineAccessRequested()
com.google.firebase.database.core.view.filter.IndexedFilter: com.google.firebase.database.snapshot.Index getIndex()
androidx.appcompat.widget.AppCompatTextHelper: void onSetCompoundDrawables()
androidx.appcompat.widget.ListPopupWindow: ListPopupWindow(android.content.Context,android.util.AttributeSet,int,int)
io.flutter.plugin.editing.TextInputPlugin$1: void requestAutofill()
com.journeyapps.barcodescanner.RotationListener: RotationListener()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.plugins.googlemaps.CircleBuilder: boolean consumeTapEvents()
androidx.appcompat.app.AlertDialog: void onCreate(android.os.Bundle)
io.flutter.view.AccessibilityBridge: io.flutter.embedding.engine.systemchannels.AccessibilityChannel access$700(io.flutter.view.AccessibilityBridge)
androidx.fragment.app.DefaultSpecialEffectsController$7: DefaultSpecialEffectsController$7(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.FragmentTransitionImpl,android.view.View,android.graphics.Rect)
androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.AppCompatTextHelper$1: void onFontRetrieved(android.graphics.Typeface)
com.google.android.gms.maps.zzb: zzb(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnMarkerClickListener)
io.flutter.view.AccessibilityBridge$SpellOutStringAttribute: AccessibilityBridge$SpellOutStringAttribute(io.flutter.view.AccessibilityBridge$1)
com.google.android.gms.common.api.internal.RegisterListenerMethod: void clearListener()
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: int getMax(int[])
io.flutter.embedding.android.FlutterView$2: void onFlutterUiNoLongerDisplayed()
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4: IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,java.lang.Object)
com.google.firebase.components.CycleDetector$Dep: CycleDetector$Dep(java.lang.Class,boolean,com.google.firebase.components.CycleDetector$1)
com.example.sendeaze.MainActivity: MainActivity()
androidx.appcompat.widget.SearchView: int getMaxWidth()
androidx.appcompat.view.menu.ActionMenuItem: android.view.ActionProvider getActionProvider()
androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)
kotlin.collections.EmptyList: boolean isEmpty()
com.google.android.gms.internal.location.zzas: void zza(boolean)
androidx.core.view.ViewParentCompat: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[])
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: void onClick(android.view.View)
com.google.firebase.components.Component: Component(java.util.Set,java.util.Set,int,int,com.google.firebase.components.ComponentFactory,java.util.Set,com.google.firebase.components.Component$1)
com.google.android.gms.location.SettingsClient: com.google.android.gms.tasks.Task checkLocationSettings(com.google.android.gms.location.LocationSettingsRequest)
androidx.fragment.app.FragmentTransitionImpl$2: FragmentTransitionImpl$2(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map)
io.flutter.plugin.editing.ListenableEditingState: int getSelectionEnd()
androidx.core.view.ActionProvider: boolean hasSubMenu()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetLeft(android.view.DisplayCutout)
io.flutter.FlutterInjector: io.flutter.FlutterInjector instance()
kotlin.jvm.internal.CallableReference: boolean isOpen()
com.baseflow.geolocator.location.AndroidIconResource: AndroidIconResource(java.lang.String,java.lang.String)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean isInTouchMode()
com.journeyapps.barcodescanner.camera.CameraThread: void checkRunning()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setNumericShortcut(char)
com.google.android.gms.internal.location.zzk: android.os.IInterface createServiceInterface(android.os.IBinder)
androidx.appcompat.widget.LinearLayoutCompat: void forceUniformHeight(int,int)
com.google.android.gms.location.zzt: zzt(android.os.IBinder)
com.google.android.gms.common.internal.zze: long zze(com.google.android.gms.common.internal.zze)
androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
net.touchcapture.qr.flutterqr.QRView: android.view.View getView()
androidx.appcompat.app.AlertDialog$Builder: android.content.Context getContext()
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList)
io.flutter.plugins.googlemaps.GoogleMapController: void onMapClick(com.google.android.gms.maps.model.LatLng)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.tasks.Task doRegisterEventListener(com.google.android.gms.common.api.internal.RegisterListenerMethod,com.google.android.gms.common.api.internal.UnregisterListenerMethod)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
androidx.fragment.app.FragmentActivity: void onNewIntent(android.content.Intent)
androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeFloat(android.os.Parcel,int,float)
com.google.zxing.pdf417.decoder.DetectionResult: int adjustRowNumbersFromLRI()
io.flutter.plugin.common.BinaryMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
com.google.android.gms.common.util.zzc: boolean isMainThread()
com.google.android.gms.tasks.zzt: void execute(java.lang.Runnable)
com.google.firebase.database.core.WriteTreeRef: com.google.firebase.database.snapshot.Node calcCompleteEventCache(com.google.firebase.database.snapshot.Node,java.util.List,boolean)
com.google.firebase.database.android.SqlPersistenceStorageEngine: void saveTrackedQueryKeys(long,java.util.Set)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.plugins.activity.ActivityControlSurface getActivityControlSurface()
io.flutter.embedding.engine.dart.DartExecutor: void notifyLowMemoryWarning()
com.google.android.gms.maps.internal.zzbx: void setZoomControlsEnabled(boolean)
com.google.firebase.database.connection.PersistentConnectionImpl: java.util.Map access$1900(com.google.firebase.database.connection.PersistentConnectionImpl)
com.journeyapps.barcodescanner.CameraPreview: CameraPreview(android.content.Context,android.util.AttributeSet)
com.google.android.gms.maps.model.PolylineOptions: java.util.List getPattern()
androidx.core.app.NotificationCompat$Action: androidx.core.app.RemoteInput[] getDataOnlyRemoteInputs()
io.flutter.plugin.editing.InputConnectionAdaptor: android.view.inputmethod.CursorAnchorInfo getCursorAnchorInfo()
com.google.firebase.database.collection.ImmutableSortedSet: java.lang.Object getPredecessorEntry(java.lang.Object)
kotlin.text.StringsKt__StringsKt: kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object)
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: SupportMenuInflater$InflatedOnMenuItemClickListener(java.lang.Object,java.lang.String)
com.google.firebase.database.core.SparseSnapshotTree$1: SparseSnapshotTree$1(com.google.firebase.database.core.SparseSnapshotTree,com.google.firebase.database.core.Path)
com.google.android.gms.common.api.internal.zan: zan(com.google.android.gms.common.api.internal.zal,android.app.Dialog)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
com.baseflow.geolocator.GeolocatorLocationService: void disableBackgroundMode()
kotlinx.coroutines.CompletedContinuation: kotlinx.coroutines.CompletedContinuation copy(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable)
kotlinx.coroutines.JobSupport: void onStart()
androidx.fragment.app.FragmentContainerView: void startViewTransition(android.view.View)
androidx.fragment.app.FragmentTransaction: FragmentTransaction(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader)
androidx.appcompat.view.menu.MenuBuilder: void removeItem(int)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeInt(int)
io.flutter.plugin.editing.ListenableEditingState: int getSelectionStart()
androidx.core.view.WindowInsetsControllerCompat$Impl20: WindowInsetsControllerCompat$Impl20(android.view.Window,android.view.View)
androidx.appcompat.widget.ScrollingTabContainerView: android.widget.Spinner createSpinner()
io.flutter.plugin.platform.VirtualDisplayController$OneTimeOnDrawListener: void schedule(android.view.View,java.lang.Runnable)
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.firebase.database.snapshot.EmptyNode: int compareTo(java.lang.Object)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void zaa(com.google.android.gms.common.api.internal.zac)
io.flutter.embedding.engine.dart.DartMessenger$Reply: void reply(java.nio.ByteBuffer)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
androidx.fragment.app.FragmentManager: void dispatchStart()
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem getItem(int)
com.google.firebase.database.core.view.Change: com.google.firebase.database.core.view.Change childChangedChange(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.IndexedNode,com.google.firebase.database.snapshot.IndexedNode)
androidx.core.content.res.ResourcesCompat$FontCallback$2: void run()
com.journeyapps.barcodescanner.ViewfinderView$1: void cameraError(java.lang.Exception)
androidx.fragment.app.FragmentManager: int allocBackStackIndex()
com.google.firebase.FirebaseOptions: java.lang.String getApiKey()
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext: AbstractChannel$ReceiveHasNext(kotlinx.coroutines.channels.AbstractChannel$Itr,kotlinx.coroutines.CancellableContinuation)
androidx.core.provider.FontsContractCompat$FontFamilyResult: FontsContractCompat$FontFamilyResult(int,androidx.core.provider.FontsContractCompat$FontInfo[])
androidx.core.view.ViewCompat: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
androidx.fragment.app.FragmentManager: void dispatchViewCreated()
kotlinx.coroutines.CoroutineId: void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object)
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext)
com.google.firebase.database.core.utilities.Tree: void forEachDescendant(com.google.firebase.database.core.utilities.Tree$TreeVisitor)
kotlin.collections.EmptyList: java.util.Iterator iterator()
com.google.android.gms.maps.GoogleMap: void animateCamera(com.google.android.gms.maps.CameraUpdate)
androidx.lifecycle.ClassesInfoCache$MethodReference: void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
androidx.appcompat.view.WindowCallbackWrapper: boolean onCreatePanelMenu(int,android.view.Menu)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class)
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: AppCompatSpinner$SavedState$1()
com.google.firebase.database.core.Repo: com.google.firebase.database.DatabaseError access$600(java.lang.String,java.lang.String)
com.google.android.gms.maps.internal.zzg: float getMaxZoomLevel()
com.google.firebase.database.core.SyncTree$15: java.lang.Void onNodeValue(com.google.firebase.database.core.Path,com.google.firebase.database.core.SyncPoint,java.lang.Void)
com.google.android.gms.common.internal.BaseGmsClient: void zzb(int)
androidx.core.app.ActivityRecreator$2: void run()
com.google.firebase.database.connection.PersistentConnectionImpl: PersistentConnectionImpl(com.google.firebase.database.connection.ConnectionContext,com.google.firebase.database.connection.HostInfo,com.google.firebase.database.connection.PersistentConnection$Delegate)
com.journeyapps.barcodescanner.camera.AutoFocusManager: void cancelOutstandingTask()
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue: EventLoopImplBase$DelayedTaskQueue(long)
com.google.firebase.database.connection.util.StringListReader: void reset()
androidx.appcompat.app.AppCompatDialog: void invalidateOptionsMenu()
androidx.fragment.app.FragmentManager$PopBackStackState: boolean generateOps(java.util.ArrayList,java.util.ArrayList)
io.flutter.FlutterInjector: io.flutter.embedding.engine.loader.FlutterLoader flutterLoader()
com.google.zxing.DecodeHintType: DecodeHintType(java.lang.String,int,java.lang.Class)
kotlinx.coroutines.internal.Symbol: java.lang.String toString()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onAttach(android.content.Context)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.fragment.app.Fragment: void performViewCreated()
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.PlatformView access$200(io.flutter.plugin.platform.SingleViewPresentation$PresentationState)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3900(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.database.core.SyncTree: com.google.firebase.database.core.Tag access$000(com.google.firebase.database.core.SyncTree,com.google.firebase.database.core.view.QuerySpec)
com.google.firebase.database.core.view.QuerySpec: com.google.firebase.database.core.view.QueryParams getParams()
androidx.lifecycle.ClassesInfoCache$MethodReference: ClassesInfoCache$MethodReference(int,java.lang.reflect.Method)
androidx.window.core.Version: androidx.window.core.Version parse(java.lang.String)
com.google.android.gms.maps.GoogleMapOptions: GoogleMapOptions(byte,byte,int,com.google.android.gms.maps.model.CameraPosition,byte,byte,byte,byte,byte,byte,byte,byte,byte,java.lang.Float,java.lang.Float,com.google.android.gms.maps.model.LatLngBounds,byte)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)
com.google.firebase.database.logging.LogWrapper: void debug(java.lang.String,java.lang.Throwable,java.lang.Object[])
com.google.firebase.database.core.view.Change: com.google.firebase.database.core.view.Change changeWithPrevName(com.google.firebase.database.snapshot.ChildKey)
com.google.firebase.database.core.view.QueryParams: boolean isDefault()
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
com.google.android.gms.signin.SignInOptions: SignInOptions(boolean,boolean,java.lang.String,boolean,java.lang.String,java.lang.String,boolean,java.lang.Long,java.lang.Long)
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn getRowIndicatorColumn(com.google.zxing.common.BitMatrix,com.google.zxing.pdf417.decoder.BoundingBox,com.google.zxing.ResultPoint,boolean,int,int)
io.flutter.plugins.googlemaps.MarkerController: void setInfoWindowAnchor(float,float)
com.google.android.gms.common.internal.zzh: int zzq()
net.touchcapture.qr.flutterqr.QRView$1: void onActivityStarted(android.app.Activity)
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: void startListening(io.flutter.plugin.common.BinaryMessenger)
com.google.zxing.common.HybridBinarizer: HybridBinarizer(com.google.zxing.LuminanceSource)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void onUserLeaveHint()
androidx.core.content.res.ComplexColorCompat: ComplexColorCompat(android.graphics.Shader,android.content.res.ColorStateList,int)
androidx.appcompat.widget.ListPopupWindow: void setWidth(int)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener)
com.google.common.util.concurrent.AbstractFuture: java.lang.Throwable tryInternalFastPathGetFailure()
com.google.zxing.common.BitMatrix: int[] getTopLeftOnBit()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: androidx.lifecycle.ViewModel create(java.lang.Class)
kotlinx.coroutines.internal.ExceptionsConstuctorKt: int fieldsCount(java.lang.Class,int)
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderBackgroundThread: void getExternalCacheDirectories(io.flutter.plugin.common.MethodChannel$Result)
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode: com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String)
com.google.android.gms.common.api.internal.zzc: void onSaveInstanceState(android.os.Bundle)
com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastJellyBean()
kotlin.collections.EmptyMap: boolean isEmpty()
com.journeyapps.barcodescanner.camera.CameraManager: void requestPreviewFrame(com.journeyapps.barcodescanner.camera.PreviewCallback)
androidx.appcompat.widget.ActionBarContextView: boolean showOverflowMenu()
com.google.firebase.database.tubesock.WebSocketHandshake: void verifyServerStatusLine(java.lang.String)
com.google.common.base.Throwables: java.lang.reflect.Method getJlaMethod(java.lang.String,java.lang.Class[])
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
kotlin.collections.MapsKt__MapsKt: void putAll(java.util.Map,java.lang.Iterable)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore removeSlowPath(int,int)
com.google.android.gms.location.zzae: zzae(java.lang.String,java.lang.String,java.lang.String)
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode decodeAsciiSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,java.lang.StringBuilder)
androidx.appcompat.view.menu.MenuItemImpl: void setCheckedInt(boolean)
com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastKitKatWatch()
io.flutter.embedding.engine.systemchannels.NavigationChannel: void setInitialRoute(java.lang.String)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
androidx.core.app.NotificationCompat: android.os.Bundle getExtras(android.app.Notification)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long access$600(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityRecord)
io.flutter.embedding.android.TransparencyMode: TransparencyMode(java.lang.String,int)
androidx.core.graphics.drawable.WrappedDrawableApi14: int[] getState()
io.flutter.embedding.android.FlutterSplashView: void transitionToFlutter()
androidx.core.view.KeyEventDispatcher: boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: android.app.Activity attachedActivity()
com.journeyapps.barcodescanner.BarcodeView: void startDecoderThread()
com.google.firebase.database.core.CompoundWrite: com.google.firebase.database.core.CompoundWrite addWrite(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node)
androidx.cursoradapter.widget.ResourceCursorAdapter: ResourceCursorAdapter(android.content.Context,int,android.database.Cursor,boolean)
androidx.core.content.res.ResourcesCompat: android.util.TypedValue getTypedValue()
androidx.window.embedding.ActivityRule: boolean getAlwaysExpand()
com.google.firebase.database.snapshot.KeyIndex: boolean isDefinedOn(com.google.firebase.database.snapshot.Node)
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.GoogleApiClient asGoogleApiClient()
com.google.zxing.pdf417.decoder.ec.ModulusPoly: com.google.zxing.pdf417.decoder.ec.ModulusPoly multiplyByMonomial(int,int)
androidx.core.provider.FontRequestWorker$2: void accept(java.lang.Object)
com.journeyapps.barcodescanner.camera.CameraManager: CameraManager(android.content.Context)
com.google.android.gms.maps.internal.zzb: com.google.android.gms.dynamic.IObjectWrapper newLatLngZoom(com.google.android.gms.maps.model.LatLng,float)
com.google.android.gms.maps.GoogleMap: void setOnCameraIdleListener(com.google.android.gms.maps.GoogleMap$OnCameraIdleListener)
androidx.appcompat.widget.SearchView$SavedState: SearchView$SavedState(android.os.Parcelable)
androidx.core.graphics.drawable.IconCompat: java.lang.String typeToString(int)
androidx.appcompat.view.menu.BaseMenuPresenter: BaseMenuPresenter(android.content.Context,int,int)
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream: byte[] buffer()
com.google.android.gms.common.wrappers.PackageManagerWrapper: java.lang.CharSequence getApplicationLabel(java.lang.String)
com.google.zxing.oned.rss.expanded.RSSExpandedReader: boolean isNotA1left(com.google.zxing.oned.rss.FinderPattern,boolean,boolean)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
com.google.zxing.pdf417.decoder.DecodedBitStreamParser: int numericCompaction(int[],int,java.lang.StringBuilder)
kotlinx.coroutines.channels.RendezvousChannel: RendezvousChannel(kotlin.jvm.functions.Function1)
androidx.window.core.Bounds: int getHeight()
com.google.zxing.LuminanceSource: boolean isRotateSupported()
com.google.firebase.database.core.SyncTree: com.google.firebase.database.core.view.QuerySpec queryForTag(com.google.firebase.database.core.Tag)
com.google.zxing.qrcode.decoder.DataMask$2: boolean isMasked(int,int)
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: java.lang.String toString(java.util.Collection)
com.google.firebase.database.core.Path: java.lang.String wireFormat()
com.google.android.gms.common.api.internal.zza: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.appcompat.widget.AppCompatBackgroundHelper: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.view.ViewPropertyAnimatorCompat: void cancel()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)
androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationCancel(android.animation.Animator)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumHeight()
androidx.appcompat.widget.Toolbar$SavedState: void writeToParcel(android.os.Parcel,int)
com.google.firebase.database.core.Context: com.google.firebase.database.core.RunLoop getRunLoop()
androidx.appcompat.widget.SearchView: void onDetachedFromWindow()
com.google.firebase.database.OnDisconnect: com.google.android.gms.tasks.Task cancel()
androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)
androidx.core.text.PrecomputedTextCompat$Params: int getHyphenationFrequency()
androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeIBinder(android.os.Parcel,int,android.os.IBinder,boolean)
com.google.android.gms.common.internal.zzf: boolean isBound()
androidx.window.layout.WindowLayoutInfo: int hashCode()
androidx.appcompat.widget.SearchView: void setIconified(boolean)
androidx.appcompat.widget.ToolbarWidgetWrapper: int detectDisplayOptions()
kotlin.text.DelimitedRangesSequence: int access$getStartIndex$p(kotlin.text.DelimitedRangesSequence)
androidx.appcompat.widget.SearchView$SearchAutoComplete$1: void run()
com.google.android.gms.common.internal.zag: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)
androidx.appcompat.app.AlertController$AlertParams$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.google.android.gms.maps.internal.zzu: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
com.google.firebase.database.core.SyncTree$5: java.util.List call()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: boolean inStack()
androidx.window.layout.WindowInfoTracker$Companion: WindowInfoTracker$Companion()
com.lyokone.location.FlutterLocationService: boolean checkBackgroundPermissions()
kotlinx.coroutines.channels.ChannelResult: java.lang.Object constructor-impl(java.lang.Object)
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
androidx.collection.MapCollections$KeySet: boolean containsAll(java.util.Collection)
com.google.android.gms.common.util.DeviceProperties: boolean isSidewinder(android.content.Context)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.maps.MapView: void getMapAsync(com.google.android.gms.maps.OnMapReadyCallback)
androidx.core.graphics.TypefaceCompatBaseImpl$1: int getWeight(androidx.core.provider.FontsContractCompat$FontInfo)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicHeight()
com.google.android.gms.common.api.internal.zzd: void run()
androidx.versionedparcelable.ParcelImpl$1: androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel)
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: void onChange()
com.google.firebase.database.core.ValueProvider$ExistingValueProvider: com.google.firebase.database.core.ValueProvider getImmediateChild(com.google.firebase.database.snapshot.ChildKey)
androidx.appcompat.graphics.drawable.DrawableContainer: void updateDensity(android.content.res.Resources)
com.google.firebase.database.core.persistence.PruneForest$1: boolean evaluate(java.lang.Object)
androidx.core.app.NotificationCompatBuilder: java.util.List getPeople(java.util.List)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getOpacity()
com.google.android.gms.maps.zzac: zzac(com.google.android.gms.maps.MapView$zza,com.google.android.gms.maps.OnMapReadyCallback)
com.google.android.gms.common.internal.BaseGmsClient: android.os.Bundle getGetServiceRequestExtraArgs()
kotlinx.coroutines.flow.internal.SafeCollector: java.lang.Object emit(kotlin.coroutines.Continuation,java.lang.Object)
com.journeyapps.barcodescanner.DecoratedBarcodeView: void setStatusText(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.gms.dynamic.IObjectWrapper$Stub: com.google.android.gms.dynamic.IObjectWrapper asInterface(android.os.IBinder)
com.google.firebase.database.core.view.QueryParams: boolean isViewFromLeft()
androidx.exifinterface.media.ExifInterface: void getStandaloneAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
androidx.appcompat.widget.Toolbar: void ensureNavButtonView()
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
kotlinx.coroutines.internal.ScopeCoroutine: void afterCompletion(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void onBoundsChange(android.graphics.Rect)
io.flutter.plugin.platform.PlatformPlugin: void access$100(io.flutter.plugin.platform.PlatformPlugin,int)
androidx.appcompat.app.AppCompatActivity: void attachBaseContext(android.content.Context)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: VectorDrawableCompat$VPathRenderer(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
com.google.firebase.database.core.view.ViewCache: com.google.firebase.database.core.view.ViewCache updateServerSnap(com.google.firebase.database.snapshot.IndexedNode,boolean,boolean)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet)
androidx.core.widget.TextViewOnReceiveContentListener: java.lang.CharSequence coerceToText(android.content.Context,android.content.ClipData$Item,int)
androidx.multidex.MultiDex$V14$JBMR2ElementConstructor: MultiDex$V14$JBMR2ElementConstructor(java.lang.Class)
com.google.common.util.concurrent.AbstractFuture: java.lang.Object getFutureValue(com.google.common.util.concurrent.ListenableFuture)
com.google.android.gms.internal.maps.zzg: com.google.android.gms.dynamic.IObjectWrapper zza(android.graphics.Bitmap)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int getLength()
io.flutter.plugins.googlemaps.GoogleMapBuilder: GoogleMapBuilder()
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
com.google.android.gms.tasks.zzu: boolean isSuccessful()
android.support.v4.app.INotificationSideChannel$Stub: android.support.v4.app.INotificationSideChannel getDefaultImpl()
com.google.firebase.database.core.CompoundWrite: com.google.firebase.database.snapshot.Node getCompleteNode(com.google.firebase.database.core.Path)
androidx.core.graphics.drawable.WrappedDrawableApi14: void updateLocalState(android.content.res.Resources)
com.google.firebase.database.collection.LLRBRedValueNode: com.google.firebase.database.collection.LLRBNode$Color getColor()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int nextInt(int)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion()
com.google.zxing.pdf417.decoder.ec.ModulusGF: int log(int)
com.google.firebase.database.DataSnapshot$1$1: com.google.firebase.database.DataSnapshot next()
com.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: android.os.Bundle getMetadata(android.content.Context)
com.google.android.gms.common.api.internal.GoogleApiManager$zac: com.google.android.gms.common.Feature zad(com.google.android.gms.common.api.internal.GoogleApiManager$zac)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[])
com.google.android.gms.maps.model.MarkerOptions: MarkerOptions(com.google.android.gms.maps.model.LatLng,java.lang.String,java.lang.String,android.os.IBinder,float,float,boolean,boolean,boolean,float,float,float,float,float)
androidx.appcompat.widget.ActionBarBackgroundDrawable: void getOutline(android.graphics.Outline)
com.google.android.gms.common.api.internal.zza: void onStop()
androidx.appcompat.view.menu.MenuWrapperICS: int size()
androidx.window.layout.WindowMetricsCalculator$Companion: void reset()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: FlutterRenderer$SurfaceTextureRegistryEntry(io.flutter.embedding.engine.renderer.FlutterRenderer,long,android.graphics.SurfaceTexture)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
kotlin.jvm.internal.Intrinsics: void throwUninitializedProperty(java.lang.String)
com.google.firebase.database.android.SqlPersistenceStorageEngine: android.database.sqlite.SQLiteDatabase openDatabase(android.content.Context,java.lang.String)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.Object newFamily()
kotlinx.coroutines.channels.AbstractChannel: void onReceiveEnqueued()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
androidx.appcompat.widget.ActionMenuView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.ActionBarContextView: void onLayout(boolean,int,int,int,int)
io.flutter.plugins.imagepicker.ImagePickerDelegate: java.io.File createTemporaryWritableImageFile()
androidx.fragment.app.DialogFragment: void show(androidx.fragment.app.FragmentManager,java.lang.String)
com.google.android.gms.tasks.zzi: java.lang.Object zza(com.google.android.gms.tasks.zzi)
androidx.core.provider.CallbackWithHandler$1: CallbackWithHandler$1(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.graphics.Typeface)
kotlinx.coroutines.scheduling.WorkQueue: kotlinx.coroutines.scheduling.Task add(kotlinx.coroutines.scheduling.Task,boolean)
io.flutter.plugin.common.BasicMessageChannel: void send(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setTextAppearance(android.content.Context,int)
androidx.appcompat.widget.TooltipCompatHandler: boolean onLongClick(android.view.View)
androidx.fragment.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)
androidx.fragment.app.FragmentTransitionImpl: void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map)
com.google.firebase.DataCollectionDefaultChange: DataCollectionDefaultChange(boolean)
com.google.firebase.database.snapshot.CompoundHash$1: CompoundHash$1(com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder)
io.flutter.embedding.android.FlutterView: FlutterView(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterTextureView)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: int readHeader(android.os.Parcel)
com.google.android.gms.tasks.TaskCompletionSource: boolean trySetException(java.lang.Exception)
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
com.google.zxing.aztec.decoder.Decoder: java.lang.String getCharacter(com.google.zxing.aztec.decoder.Decoder$Table,int)
kotlinx.coroutines.internal.ExceptionsConstuctorKt: int fieldsCountOrDefault(java.lang.Class,int)
com.google.zxing.qrcode.decoder.BitMatrixParser: com.google.zxing.qrcode.decoder.Version readVersion()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicHeight()
androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int)
com.google.android.gms.common.wrappers.PackageManagerWrapper: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)
com.google.zxing.pdf417.decoder.ec.ModulusPoly: ModulusPoly(com.google.zxing.pdf417.decoder.ec.ModulusGF,int[])
com.google.firebase.database.snapshot.Node$1: int compareTo(com.google.firebase.database.snapshot.Node)
androidx.core.view.WindowInsetsCompat$Type: int indexOf(int)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
com.google.firebase.database.snapshot.PriorityIndex: boolean equals(java.lang.Object)
com.google.firebase.database.core.Repo: com.google.firebase.database.core.SyncTree access$400(com.google.firebase.database.core.Repo)
com.google.firebase.database.DatabaseError: java.lang.String getDetails()
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: MenuItemWrapperICS$ActionProviderWrapperJB(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider)
com.google.firebase.database.core.ChildEventRegistration: void fireCancelEvent(com.google.firebase.database.DatabaseError)
com.google.android.gms.maps.model.zze: zze()
com.google.firebase.database.core.view.EventGenerator: java.util.Comparator changeComparator()
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int[] getState()
androidx.appcompat.view.menu.ActionMenuItemView: boolean needsDividerBefore()
androidx.appcompat.widget.LinearLayoutCompat: void layoutHorizontal(int,int,int,int)
com.google.firebase.FirebaseOptions: com.google.firebase.FirebaseOptions fromResource(android.content.Context)
io.flutter.plugins.imagepicker.ImagePickerCache: java.util.Map getCacheMap()
com.google.android.gms.internal.maps.zzv: void zzg(com.google.android.gms.dynamic.IObjectWrapper)
androidx.fragment.app.DefaultSpecialEffectsController$9: DefaultSpecialEffectsController$9(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo)
androidx.customview.view.AbsSavedState$2: androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
com.google.android.gms.common.zzb: zzb()
io.flutter.plugins.googlemaps.PolylineBuilder: void setGeodesic(boolean)
androidx.appcompat.widget.AppCompatTextHelper: boolean isAutoSizeEnabled()
androidx.appcompat.widget.TintTypedArray: boolean hasValue(int)
com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: void putNext(com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter)
androidx.window.layout.FoldingFeature$Orientation: FoldingFeature$Orientation(java.lang.String)
com.google.firebase.database.core.Context: com.google.firebase.database.core.TokenProvider getAuthTokenProvider()
androidx.appcompat.app.AppCompatDelegateImpl$6$1: void onAnimationStart(android.view.View)
androidx.appcompat.widget.TintTypedArray: int getLayoutDimension(int,int)
androidx.core.app.TaskStackBuilder: void startActivities(android.os.Bundle)
io.flutter.embedding.engine.systemchannels.RestorationChannel: void clearData()
androidx.fragment.app.Fragment$3: void run()
io.flutter.plugin.common.BasicMessageChannel: BasicMessageChannel(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MessageCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue)
com.google.zxing.pdf417.PDF417Common: int getCodeword(int)
com.google.android.gms.location.LocationSettingsResult: void writeToParcel(android.os.Parcel,int)
com.google.android.gms.common.api.internal.zam: int zap()
com.google.firebase.events.Event: java.lang.String toString()
androidx.appcompat.view.ActionMode: void setTag(java.lang.Object)
androidx.core.provider.FontRequestWorker: androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int)
androidx.appcompat.widget.ResourcesWrapper: android.graphics.Movie getMovie(int)
com.baseflow.geolocator.LocationServiceHandlerImpl: LocationServiceHandlerImpl()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void setHorizontalOriginalOffset(int)
androidx.collection.MapCollections$ValuesCollection: java.lang.Object[] toArray()
androidx.appcompat.widget.ActionBarOverlayLayout$2: void run()
io.flutter.plugin.platform.VirtualDisplayController: io.flutter.plugin.platform.VirtualDisplayController create(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.PlatformViewFactory,io.flutter.view.TextureRegistry$SurfaceTextureEntry,int,int,int,java.lang.Object,android.view.View$OnFocusChangeListener)
kotlinx.coroutines.flow.internal.SafeCollector: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
com.google.zxing.common.detector.WhiteRectangleDetector: com.google.zxing.ResultPoint[] detect()
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long[],java.nio.ByteOrder)
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.ViewGroup getViewGroup()
androidx.collection.ArraySet: boolean isEmpty()
io.flutter.plugins.imagepicker.ImagePickerDelegate: java.io.File createTemporaryWritableVideoFile()
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(androidx.appcompat.widget.Toolbar$LayoutParams)
com.google.firebase.components.Component: com.google.firebase.components.Component$Builder intoSetBuilder(java.lang.Class)
kotlin.text.StringsKt__StringsKt: java.lang.String substring(java.lang.CharSequence,kotlin.ranges.IntRange)
com.google.firebase.database.core.SyncTree: java.util.List removeEventRegistration(com.google.firebase.database.core.view.QuerySpec,com.google.firebase.database.core.EventRegistration,com.google.firebase.database.DatabaseError)
androidx.fragment.app.FragmentStateManager: void pause()
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String)
com.google.zxing.qrcode.QRCodeReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap)
com.google.android.gms.common.internal.zai: com.google.android.gms.common.api.ApiException zaf(com.google.android.gms.common.api.Status)
com.google.firebase.components.CycleDetector$Dep: CycleDetector$Dep(java.lang.Class,boolean)
com.google.zxing.oned.MultiFormatOneDReader: MultiFormatOneDReader(java.util.Map)
androidx.collection.MapCollections: java.util.Set getEntrySet()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.appcompat.widget.ForwardingListener: ForwardingListener(android.view.View)
com.google.zxing.oned.rss.expanded.decoders.DecodedInformation: boolean isRemaining()
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo: androidx.fragment.app.FragmentAnim$AnimationOrAnimator getAnimation(android.content.Context)
com.google.zxing.pdf417.decoder.ec.ModulusGF: ModulusGF(int,int)
com.google.firebase.platforminfo.AutoValue_LibraryVersion: java.lang.String getLibraryName()
kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)
androidx.window.embedding.SplitRule: SplitRule()
androidx.window.embedding.SplitController: java.util.Set getSplitRules()
androidx.appcompat.widget.DropDownListView: boolean onForwardedEvent(android.view.MotionEvent,int)
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
com.google.android.gms.internal.maps.zzv: boolean zzj(com.google.android.gms.internal.maps.zzt)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.SearchView$2: void run()
androidx.appcompat.widget.ActionBarOverlayLayout: void init(android.content.Context)
com.google.firebase.database.core.SyncTree: java.util.List access$600(com.google.firebase.database.core.SyncTree,com.google.firebase.database.core.view.QuerySpec,com.google.firebase.database.core.operation.Operation)
kotlinx.coroutines.JobSupport$Finishing: JobSupport$Finishing(kotlinx.coroutines.NodeList,boolean,java.lang.Throwable)
com.google.common.util.concurrent.AbstractFuture$AtomicHelper: AbstractFuture$AtomicHelper(com.google.common.util.concurrent.AbstractFuture$1)
io.flutter.embedding.engine.renderer.FlutterRenderer: void stopRenderingToSurface()
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: com.google.zxing.pdf417.decoder.DetectionResult merge(com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn,com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn)
androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)
com.google.android.gms.maps.model.PolygonOptions: com.google.android.gms.maps.model.PolygonOptions strokeColor(int)
androidx.appcompat.app.WindowDecorActionBar: void setDisplayHomeAsUpEnabled(boolean)
androidx.activity.ComponentActivity: void initViewTreeOwners()
androidx.appcompat.view.menu.ListMenuItemView: void addContentView(android.view.View,int)
androidx.core.content.FileProvider: int modeToMode(java.lang.String)
io.flutter.view.AccessibilityBridge: android.graphics.Rect getBoundsInScreen(android.graphics.Rect)
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper(android.content.Context,int)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: com.google.android.gms.auth.api.signin.GoogleSignInAccount zaa(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.lang.Long,java.lang.String,java.util.Set)
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: void access$600(com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder)
androidx.window.embedding.ActivityRule: boolean equals(java.lang.Object)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable createFinalException(java.lang.Throwable,java.lang.Throwable,java.util.ArrayDeque)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void applyTheme(android.content.res.Resources$Theme)
com.google.zxing.pdf417.decoder.ec.ModulusGF: int exp(int)
androidx.appcompat.view.menu.ActionMenuItem: int getGroupId()
androidx.appcompat.widget.ViewUtils: boolean isLayoutRtl(android.view.View)
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
kotlinx.coroutines.NodeList: kotlinx.coroutines.NodeList getList()
com.google.firebase.database.core.WriteTree: com.google.firebase.database.core.UserWriteRecord getWrite(long)
kotlin.jvm.internal.TypeIntrinsics: void throwCce(java.lang.Object,java.lang.String)
androidx.appcompat.view.menu.MenuAdapter: androidx.appcompat.view.menu.MenuItemImpl getItem(int)
androidx.collection.ArraySet$1: int colGetSize()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List getLastInfo()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader getLoader()
androidx.fragment.app.Fragment: void onStop()
com.google.firebase.database.connection.PersistentConnectionImpl$3: void onResponse(java.util.Map)
io.flutter.plugin.common.JSONUtil: java.lang.Object wrap(java.lang.Object)
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock: void connect()
com.google.firebase.database.snapshot.ChildKey: com.google.firebase.database.snapshot.ChildKey getInfoKey()
io.flutter.embedding.android.FlutterView: boolean fitSystemWindows(android.graphics.Rect)
androidx.core.graphics.Insets: androidx.core.graphics.Insets toCompatInsets(android.graphics.Insets)
com.google.firebase.database.connection.PersistentConnectionImpl: boolean connected()
androidx.appcompat.widget.AppCompatSpinner$SavedState: AppCompatSpinner$SavedState(android.os.Parcel)
androidx.appcompat.app.AppCompatDialog: android.view.View findViewById(int)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: StateListDrawable$StateListState(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources)
com.journeyapps.barcodescanner.camera.CameraInstance: void close()
com.google.android.gms.common.api.internal.UnregisterListenerMethod: com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey getListenerKey()
androidx.fragment.app.FragmentTransition: void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection)
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: com.google.zxing.ResultPoint getTo()
io.flutter.plugins.googlemaps.Convert: com.google.android.gms.maps.model.Cap toCap(java.lang.Object)
androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
com.google.firebase.database.core.utilities.Utilities: void hardAssert(boolean,java.lang.String)
com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)
com.google.firebase.database.core.view.QueryParams: int hashCode()
io.flutter.embedding.android.FlutterSplashView: java.lang.String access$500(io.flutter.embedding.android.FlutterSplashView)
kotlinx.coroutines.LazyStandaloneCoroutine: void onStart()
com.google.firebase.database.core.utilities.ImmutableTree: java.lang.Object getValue()
com.google.android.gms.dynamic.IObjectWrapper$Stub$zza: IObjectWrapper$Stub$zza(android.os.IBinder)
androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[])
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
io.flutter.plugin.editing.TextInputPlugin: void access$700(io.flutter.plugin.editing.TextInputPlugin,double,double,double[])
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
io.flutter.plugin.platform.PlatformPlugin$1: void popSystemNavigator()
io.flutter.embedding.android.FlutterTextureView$1: FlutterTextureView$1(io.flutter.embedding.android.FlutterTextureView)
com.google.firebase.database.core.Repo$23: boolean filterTreeNode(com.google.firebase.database.core.utilities.Tree)
com.google.firebase.database.collection.ArraySortedMap: java.lang.Object[] addToArray(java.lang.Object[],int,java.lang.Object)
com.google.firebase.database.collection.ArraySortedMap: com.google.firebase.database.collection.ImmutableSortedMap insert(java.lang.Object,java.lang.Object)
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void cancel()
com.google.firebase.database.core.Context$1: void onSuccess(java.lang.String)
com.google.firebase.database.core.persistence.DefaultPersistenceManager: void applyUserWriteToServerCache(com.google.firebase.database.core.Path,com.google.firebase.database.core.CompoundWrite)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingPut: void markSent()
com.google.zxing.qrcode.decoder.DataMask: com.google.zxing.qrcode.decoder.DataMask[] values()
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable,android.widget.ImageView$ScaleType)
androidx.appcompat.widget.ToolbarWidgetWrapper$2: ToolbarWidgetWrapper$2(androidx.appcompat.widget.ToolbarWidgetWrapper,int)
com.google.zxing.aztec.decoder.Decoder: boolean[] correctBits(boolean[])
com.google.android.gms.internal.location.zzbf: zzbf(int,com.google.android.gms.internal.location.zzbd,android.os.IBinder,android.app.PendingIntent,android.os.IBinder,android.os.IBinder)
androidx.fragment.app.FragmentManager: void dispatchDestroy()
com.google.firebase.database.core.EventRegistration: EventRegistration()
com.google.android.gms.common.api.internal.zad: void zaa(java.lang.RuntimeException)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.google.android.gms.maps.MapView$zza: void getMapAsync(com.google.android.gms.maps.OnMapReadyCallback)
com.google.firebase.database.connection.PersistentConnectionImpl$4: PersistentConnectionImpl$4(com.google.firebase.database.connection.PersistentConnectionImpl,boolean)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean)
kotlinx.coroutines.internal.DispatchedContinuation: kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core()
androidx.fragment.app.FragmentStateManager: void restoreState(java.lang.ClassLoader)
com.google.firebase.database.core.view.View: View(com.google.firebase.database.core.view.QuerySpec,com.google.firebase.database.core.view.ViewCache)
androidx.core.util.ObjectsCompat: int hash(java.lang.Object[])
com.google.firebase.components.Component: boolean isEagerInDefaultApp()
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.lang.Object[] createTypedArray(android.os.Parcel,int,android.os.Parcelable$Creator)
com.google.firebase.database.core.UserWriteRecord: boolean equals(java.lang.Object)
io.flutter.plugins.googlemaps.PolygonController: PolygonController(com.google.android.gms.maps.model.Polygon,boolean,float)
kotlin.KotlinVersion: boolean equals(java.lang.Object)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: SupportActionModeWrapper$CallbackWrapper(android.content.Context,android.view.ActionMode$Callback)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: java.lang.Object getItem(int)
androidx.appcompat.view.menu.MenuBuilder: void changeMenuMode()
androidx.appcompat.widget.AlertDialogLayout: void setChildFrame(android.view.View,int,int,int,int)
com.google.firebase.database.core.Repo$4: Repo$4(com.google.firebase.database.core.Repo)
com.google.android.gms.common.api.internal.zaad: void zaai()
com.google.firebase.database.snapshot.ChildKey$IntegerChildKey: int compareTo(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocusable()
com.google.zxing.common.DetectorResult: com.google.zxing.ResultPoint[] getPoints()
androidx.core.app.NotificationCompat$Action: NotificationCompat$Action(int,java.lang.CharSequence,android.app.PendingIntent)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
io.flutter.embedding.android.FlutterActivity: void onFlutterUiNoLongerDisplayed()
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
com.google.zxing.common.GlobalHistogramBinarizer: GlobalHistogramBinarizer(com.google.zxing.LuminanceSource)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: MenuItemWrapperICS$ActionProviderWrapper(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider)
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser: void parseTwoBytes(int,int,int[])
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
com.journeyapps.barcodescanner.camera.CameraThread: void decrementInstances()
com.google.zxing.oned.ITFReader: void decodeMiddle(com.google.zxing.common.BitArray,int,int,java.lang.StringBuilder)
androidx.appcompat.view.WindowCallbackWrapper: boolean onSearchRequested()
com.google.zxing.oned.UPCEReader: void determineNumSysAndCheckDigit(java.lang.StringBuilder,int)
androidx.collection.ArraySet: androidx.collection.MapCollections getCollection()
com.google.firebase.database.connection.PersistentConnectionImpl$1: void onSuccess(java.lang.String)
androidx.appcompat.view.WindowCallbackWrapper: boolean onSearchRequested(android.view.SearchEvent)
com.google.firebase.database.OnDisconnect$2: OnDisconnect$2(com.google.firebase.database.OnDisconnect,java.util.Map,com.google.firebase.database.core.utilities.Pair,java.util.Map)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.Region getTransparentRegion()
com.google.zxing.pdf417.decoder.DecodedBitStreamParser: int byteCompaction(int,int[],java.nio.charset.Charset,int,java.lang.StringBuilder)
androidx.multidex.MultiDexExtractor: long getZipCrc(java.io.File)
io.flutter.embedding.android.FlutterActivity: boolean stillAttachedForEvent(java.lang.String)
com.google.android.gms.common.api.internal.BackgroundDetector: void onConfigurationChanged(android.content.res.Configuration)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$SemanticsNode access$2600(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.common.util.concurrent.AbstractFuture$SetFuture: void run()
androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingParentForType(int,android.view.ViewParent)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void stop()
com.google.firebase.database.core.ServerValues: java.util.Map generateServerValues(com.google.firebase.database.core.utilities.Clock)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
kotlinx.coroutines.JobNode: void dispose()
com.journeyapps.barcodescanner.CaptureManager$1: void barcodeResult(com.journeyapps.barcodescanner.BarcodeResult)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: com.google.android.gms.tasks.Task firebaseAppToMap(com.google.firebase.FirebaseApp)
com.google.zxing.pdf417.decoder.Codeword: void setRowNumberAsRowIndicatorColumn()
com.google.android.gms.internal.maps.zzab: void setVisible(boolean)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean getPadding(android.graphics.Rect)
com.google.firebase.database.connection.Connection$DisconnectReason: com.google.firebase.database.connection.Connection$DisconnectReason valueOf(java.lang.String)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1$1: void run()
com.google.android.gms.common.util.IOUtils: void closeQuietly(java.io.Closeable)
androidx.window.embedding.SplitController: SplitController(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.zxing.pdf417.decoder.DetectionResult: java.lang.String toString()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.inputmethod.EditorInfoCompat: void setSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence,int,int)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] $values()
com.google.zxing.common.CharacterSetECI: CharacterSetECI(java.lang.String,int,int)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity)
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
com.google.firebase.platforminfo.LibraryVersionComponent: com.google.firebase.components.Component create(java.lang.String,java.lang.String)
com.google.firebase.database.android.AndroidPlatform: com.google.firebase.database.core.persistence.PersistenceManager createPersistenceManager(com.google.firebase.database.core.Context,java.lang.String)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setFilterBitmap(boolean)
com.google.android.gms.dynamic.zag: zag(com.google.android.gms.dynamic.DeferredLifecycleHelper)
com.google.firebase.database.core.SyncTree: java.util.List removeAllEventRegistrations(com.google.firebase.database.core.view.QuerySpec,com.google.firebase.database.DatabaseError)
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher()
com.google.firebase.database.snapshot.Index: Index()
androidx.appcompat.widget.DrawableUtils: void fixVectorDrawableTinting(android.graphics.drawable.Drawable)
com.google.android.gms.common.api.internal.zzc: void onStart()
com.google.firebase.database.snapshot.KeyIndex: int compare(java.lang.Object,java.lang.Object)
com.google.android.gms.common.api.internal.zae: void zac(com.google.android.gms.common.api.internal.GoogleApiManager$zaa)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void autoSizeText()
androidx.versionedparcelable.VersionedParcelParcel: void writeInt(int)
androidx.appcompat.view.menu.MenuItemImpl: boolean setVisibleInt(boolean)
com.google.zxing.oned.rss.RSS14Reader: com.google.zxing.oned.rss.Pair decodePair(com.google.zxing.common.BitArray,boolean,int,java.util.Map)
androidx.appcompat.widget.Toolbar: void onMeasure(int,int)
androidx.appcompat.widget.TintResources: TintResources(android.content.Context,android.content.res.Resources)
io.flutter.plugin.platform.PlatformPlugin$1: void setClipboardData(java.lang.String)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void initTempTextPaint(int)
androidx.appcompat.graphics.drawable.DrawableContainer: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)
com.google.firebase.database.Query: com.google.firebase.database.Query startAt(boolean,java.lang.String)
io.flutter.plugins.googlemaps.TileOverlaysController: void removeTileOverlays(java.util.List)
com.lyokone.location.BackgroundNotification: void updateOptions(com.lyokone.location.NotificationOptions,boolean)
io.flutter.embedding.engine.systemchannels.RestorationChannel$2: RestorationChannel$2(io.flutter.embedding.engine.systemchannels.RestorationChannel)
com.google.firebase.FirebaseApp: void setAutomaticResourceManagementEnabled(boolean)
com.google.android.gms.internal.maps.zzaa: com.google.android.gms.internal.maps.zzz zzi(android.os.IBinder)
com.google.android.gms.common.api.internal.zad: zad(int,com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)
com.google.android.gms.location.zzad: zzad()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet,int)
kotlinx.coroutines.DebugKt: boolean getDEBUG()
com.google.android.gms.maps.model.MarkerOptions: void writeToParcel(android.os.Parcel,int)
com.google.firebase.database.core.utilities.ImmutableTree: com.google.firebase.database.core.utilities.ImmutableTree emptyInstance()
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver: CursorAdapter$MyDataSetObserver(androidx.cursoradapter.widget.CursorAdapter)
com.google.zxing.Result: Result(java.lang.String,byte[],com.google.zxing.ResultPoint[],com.google.zxing.BarcodeFormat,long)
com.google.android.gms.common.GoogleApiAvailabilityLight: boolean isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String)
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.Api$Client zaa(android.os.Looper,com.google.android.gms.common.api.internal.GoogleApiManager$zaa)
io.flutter.plugin.editing.TextInputPlugin: boolean needsAutofill()
com.google.zxing.pdf417.decoder.BoundingBox: int getMinY()
com.google.firebase.database.core.persistence.TrackedQueryManager: void setQueryCompleteIfExists(com.google.firebase.database.core.view.QuerySpec)
androidx.appcompat.view.menu.MenuPopupHelper$1: MenuPopupHelper$1(androidx.appcompat.view.menu.MenuPopupHelper)
com.google.zxing.common.DecoderResult: java.lang.String getECLevel()
io.flutter.embedding.engine.dart.DartMessenger: void send(java.lang.String,java.nio.ByteBuffer)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
com.google.firebase.database.DatabaseReference: com.google.firebase.database.OnDisconnect onDisconnect()
kotlinx.coroutines.internal.ThreadContextKt$findOne$1: ThreadContextKt$findOne$1()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTintList(android.content.res.ColorStateList)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
com.google.android.gms.internal.location.zzbd: java.lang.String toString()
androidx.core.provider.CallbackWithHandler: CallbackWithHandler(androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler)
androidx.appcompat.widget.SearchView: void onMeasure(int,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
androidx.appcompat.widget.ResourcesWrapper: void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle)
androidx.appcompat.widget.TooltipCompatHandler: void clearAnchorPos()
io.flutter.plugin.platform.PlatformViewFactory: PlatformViewFactory(io.flutter.plugin.common.MessageCodec)
com.google.zxing.ResultPoint: java.lang.String toString()
androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)
com.google.zxing.Result: void putMetadata(com.google.zxing.ResultMetadataType,java.lang.Object)
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: boolean onTouchEvent(android.view.MotionEvent)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: int hashCode()
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: void setCachedFirebaseDatabaseInstanceForKey(com.google.firebase.database.FirebaseDatabase,java.lang.String)
com.google.firebase.database.core.UserWriteRecord: com.google.firebase.database.snapshot.Node getOverwrite()
com.google.firebase.FirebaseApp: void access$600(com.google.firebase.FirebaseApp,boolean)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onForwardedEvent(android.view.MotionEvent,int)
androidx.window.layout.SidecarAdapter$Companion: androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState)
androidx.appcompat.widget.TintResources: android.graphics.drawable.Drawable getDrawable(int)
com.journeyapps.barcodescanner.camera.CameraInstance: void validateOpen()
kotlin.KotlinVersion$Companion: KotlinVersion$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugins.googlemaps.PolylineBuilder: com.google.android.gms.maps.model.PolylineOptions build()
com.google.zxing.oned.UPCEANExtension5Support: int determineCheckDigit(int)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobNode: void setJob(kotlinx.coroutines.JobSupport)
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: SafeCollectorKt$emitFun$1()
io.flutter.plugins.flutterexifrotation.FlutterExifRotationPlugin: void launchRotateImage()
com.google.firebase.database.tubesock.WebSocketWriter: WebSocketWriter(com.google.firebase.database.tubesock.WebSocket,java.lang.String,int)
kotlinx.coroutines.CoroutineContextKt: kotlin.coroutines.CoroutineContext newCoroutineContext(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext)
com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.CameraUpdate zoomOut()
io.flutter.embedding.engine.systemchannels.PlatformChannel: void systemChromeChanged(boolean)
com.google.firebase.database.collection.ArraySortedMap: java.lang.Object getMinKey()
com.google.firebase.database.connection.PersistentConnectionImpl: int access$1002(com.google.firebase.database.connection.PersistentConnectionImpl,int)
androidx.core.view.WindowInsetsCompat$Builder: WindowInsetsCompat$Builder()
androidx.window.embedding.SplitController: void initialize(android.content.Context,int)
com.google.zxing.pdf417.decoder.Codeword: int getStartX()
androidx.core.graphics.TypefaceCompatBaseImpl: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int)
androidx.lifecycle.ReportFragment: void onStart()
androidx.window.layout.SidecarAdapter$Companion: int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState)
net.touchcapture.qr.flutterqr.QRView$startScan$2: QRView$startScan$2(java.util.List,net.touchcapture.qr.flutterqr.QRView)
com.google.zxing.common.BitSource: int available()
com.google.firebase.database.core.SyncTree$10: java.lang.Object call()
com.google.firebase.FirebaseApp$UiExecutor: FirebaseApp$UiExecutor(com.google.firebase.FirebaseApp$1)
androidx.appcompat.view.WindowCallbackWrapper: void onPanelClosed(int,android.view.Menu)
com.google.zxing.pdf417.PDF417ResultMetadata: void setFileName(java.lang.String)
com.google.android.gms.maps.model.CircleOptions: com.google.android.gms.maps.model.CircleOptions strokeWidth(float)
kotlin.text.StringsKt__StringsKt: java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
androidx.appcompat.app.AppCompatActivity$1: AppCompatActivity$1(androidx.appcompat.app.AppCompatActivity)
com.google.firebase.database.core.utilities.encoding.CustomClassMapper$BeanMapper: boolean shouldIncludeField(java.lang.reflect.Field)
io.flutter.plugin.platform.SingleViewPresentation$PresentationState: io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup access$002(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup)
com.google.firebase.database.android.AndroidPlatform$1$1: AndroidPlatform$1$1(com.google.firebase.database.android.AndroidPlatform$1,java.lang.String,java.lang.Throwable)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void attachToActivityInternal(android.app.Activity,androidx.lifecycle.Lifecycle)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat(androidx.window.extensions.embedding.ActivityEmbeddingComponent,androidx.window.embedding.EmbeddingAdapter)
androidx.window.embedding.SplitController: void access$setGlobalInstance$cp(androidx.window.embedding.SplitController)
io.flutter.embedding.android.FlutterSurfaceView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
androidx.fragment.app.FragmentContainerView: void addDisappearingFragmentView(android.view.View)
io.flutter.embedding.android.FlutterSurfaceView: void disconnectSurfaceFromRenderer()
androidx.fragment.app.SpecialEffectsController: androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment)
com.google.firebase.database.connection.PersistentConnectionImpl: void onListenRevoked(java.util.List)
com.google.firebase.database.core.view.filter.LimitedFilter: com.google.firebase.database.snapshot.IndexedNode updateFullNode(com.google.firebase.database.snapshot.IndexedNode,com.google.firebase.database.snapshot.IndexedNode,com.google.firebase.database.core.view.filter.ChildChangeAccumulator)
com.google.android.gms.location.FusedLocationProviderClient: FusedLocationProviderClient(android.app.Activity)
androidx.core.graphics.PathParser: float[] getFloats(java.lang.String)
com.google.firebase.database.collection.ImmutableSortedSet$WrappedEntryIterator: ImmutableSortedSet$WrappedEntryIterator(java.util.Iterator)
com.google.zxing.oned.ITFReader: ITFReader()
com.google.zxing.pdf417.decoder.PDF417CodewordDecoder: int getBitValue(int[])
androidx.appcompat.app.WindowDecorActionBar: void showForSystem()
com.google.firebase.database.snapshot.PathIndex: com.google.firebase.database.snapshot.NamedNode maxPost()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void drawableStateChanged()
androidx.appcompat.view.menu.BaseMenuPresenter: android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)
androidx.fragment.app.FragmentTransition: boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List)
io.flutter.plugins.googlemaps.MarkerBuilder: void setAnchor(float,float)
com.google.firebase.database.core.DatabaseConfig: void setPersistenceCacheSizeBytes(long)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: boolean requiresSignIn()
androidx.exifinterface.media.ExifInterface: void parseTiffHeaders(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int)
com.google.android.gms.maps.internal.zzk: void onDestroy()
com.google.firebase.database.core.SyncTree: com.google.firebase.database.core.view.QuerySpec access$1300(com.google.firebase.database.core.SyncTree,com.google.firebase.database.core.view.QuerySpec)
com.google.firebase.database.android.SqlPersistenceStorageEngine$1: java.lang.Object onNodeValue(com.google.firebase.database.core.Path,java.lang.Object,java.lang.Object)
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.tasks.Task zaa(com.google.android.gms.common.api.GoogleApi,com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResources()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: void removeActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener)
io.flutter.plugins.googlemaps.PolygonController: void setVisible(boolean)
com.google.zxing.common.BitMatrix: int hashCode()
io.flutter.plugins.firebase.database.TransactionExecutor: com.google.android.gms.tasks.TaskCompletionSource access$000(io.flutter.plugins.firebase.database.TransactionExecutor)
com.google.firebase.database.core.SyncTree$13: java.util.List call()
com.google.zxing.pdf417.decoder.Codeword: int getEndX()
com.google.android.gms.common.api.GoogleApi: GoogleApi(android.content.Context,com.google.android.gms.common.api.Api,com.google.android.gms.common.api.Api$ApiOptions,com.google.android.gms.common.api.GoogleApi$Settings)
com.google.firebase.database.tubesock.MessageBuilderFactory$TextBuilder$2: java.lang.Object initialValue()
io.flutter.plugins.googlemaps.PolylineBuilder: void setZIndex(float)
androidx.core.view.ActionProvider: void onPrepareSubMenu(android.view.SubMenu)
androidx.appcompat.view.menu.MenuItemWrapperICS: int getGroupId()
io.flutter.embedding.android.FlutterTextureView: void detachFromRenderer()
kotlin.jvm.internal.CallableReference: boolean isSuspend()
com.google.firebase.database.core.Repo: void warnIfWriteFailed(java.lang.String,com.google.firebase.database.core.Path,com.google.firebase.database.DatabaseError)
androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.appcompat.widget.AppCompatButton: void setTextAppearance(android.content.Context,int)
androidx.core.widget.TextViewCompat: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
io.flutter.plugins.googlemaps.TileOverlayController: TileOverlayController(com.google.android.gms.maps.model.TileOverlay)
com.google.firebase.database.tubesock.MessageBuilderFactory$BinaryBuilder: boolean appendBytes(byte[])
com.google.firebase.database.connection.util.RetryHelper: java.util.concurrent.ScheduledFuture access$002(com.google.firebase.database.connection.util.RetryHelper,java.util.concurrent.ScheduledFuture)
com.google.zxing.qrcode.decoder.DecodedBitStreamParser: int parseECIValue(com.google.zxing.common.BitSource)
com.google.zxing.qrcode.detector.Detector: float calculateModuleSize(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)
androidx.multidex.MultiDexExtractor: boolean isModified(android.content.Context,java.io.File,long,java.lang.String)
androidx.appcompat.widget.ButtonBarLayout: void onMeasure(int,int)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void show(int,int)
androidx.core.view.ViewCompat: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.google.zxing.aztec.decoder.Decoder$Table: Decoder$Table(java.lang.String,int)
kotlinx.coroutines.internal.AtomicOp: java.lang.Object perform(java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: boolean requestsActionButton()
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: AccessibilityBridge$LocaleStringAttribute(io.flutter.view.AccessibilityBridge$1)
androidx.appcompat.view.SupportActionModeWrapper: void setTitle(int)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,int,boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(int,java.lang.CharSequence)
androidx.fragment.app.DialogFragment$2: void onCancel(android.content.DialogInterface)
com.google.android.gms.tasks.TaskCompletionSource: void setResult(java.lang.Object)
androidx.core.content.FileProvider$SimplePathStrategy: java.io.File getFileForUri(android.net.Uri)
androidx.fragment.app.Fragment: android.content.Context requireContext()
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.Send takeFirstSendOrPeekClosed()
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback)
io.flutter.plugins.flutterexifrotation.FlutterExifRotationPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object next()
com.journeyapps.barcodescanner.InvertedDecoder: InvertedDecoder(com.google.zxing.Reader)
io.flutter.plugins.googlemaps.PolygonsController: void changePolygons(java.util.List)
com.google.zxing.pdf417.PDF417ResultMetadata: void setLastSegment(boolean)
com.google.zxing.pdf417.decoder.DecodedBitStreamParser$Mode: DecodedBitStreamParser$Mode(java.lang.String,int)
io.flutter.plugins.googlemaps.Convert: void interpretInfoWindowOptions(io.flutter.plugins.googlemaps.MarkerOptionsSink,java.util.Map)
com.google.firebase.database.Query: com.google.firebase.database.Query orderByPriority()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(int)
com.google.firebase.database.DatabaseReference$4: void run()
com.google.firebase.database.snapshot.ValueIndex: int compare(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.systemchannels.MouseCursorChannel: void setMethodHandler(io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler)
com.google.firebase.database.tubesock.WebSocketException: WebSocketException(java.lang.String,java.lang.Throwable)
com.google.firebase.database.snapshot.NamedNode: boolean equals(java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController$1: void ensureValidAndroidVersion(int)
androidx.appcompat.widget.AppCompatButton: void setTextSize(int,float)
androidx.appcompat.widget.AppCompatBackgroundHelper: boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()
kotlinx.coroutines.scheduling.CoroutineScheduler: boolean tryUnpark()
androidx.fragment.app.BackStackRecord: int commit()
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
com.google.zxing.pdf417.PDF417ResultMetadata: boolean isLastSegment()
kotlin.collections.MapsKt__MapsKt: void putAll(java.util.Map,kotlin.Pair[])
com.google.firebase.database.core.Repo: java.lang.String toString()
com.google.zxing.pdf417.detector.Detector: java.util.List detect(boolean,com.google.zxing.common.BitMatrix)
androidx.appcompat.view.menu.MenuPopup: boolean closeMenuOnSubMenuOpened()
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem findItem(int)
androidx.appcompat.widget.Toolbar: void ensureCollapseButtonView()
com.google.zxing.oned.rss.expanded.RSSExpandedReader: void adjustOddEvenCounts(int)
androidx.window.layout.SidecarCompat: java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.SidecarCompat)
androidx.lifecycle.ViewModel: ViewModel()
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void applyTheme(android.content.res.Resources$Theme)
com.google.android.gms.common.internal.BaseGmsClient$zzg: boolean zzm()
io.flutter.plugins.imagepicker.ImageResizer: android.graphics.Bitmap decodeFile(java.lang.String)
androidx.fragment.app.SpecialEffectsController$1: SpecialEffectsController$1(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation)
com.google.zxing.MultiFormatReader: void reset()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: long readUnsignedInt()
kotlinx.coroutines.scheduling.Task: Task()
androidx.appcompat.view.menu.ListMenuItemView: void setShortcut(boolean,char)
com.journeyapps.barcodescanner.camera.CameraManager: int calculateDisplayRotation()
com.google.firebase.database.android.SqlPersistenceStorageEngine: byte[] serializeObject(java.lang.Object)
kotlinx.coroutines.DispatchedTaskKt: boolean isCancellableMode(int)
net.touchcapture.qr.flutterqr.QRView$1: QRView$1(net.touchcapture.qr.flutterqr.QRView)
io.flutter.plugins.googlemaps.CircleBuilder: void setFillColor(int)
com.google.android.gms.maps.GoogleMap: void snapshot(com.google.android.gms.maps.GoogleMap$SnapshotReadyCallback)
androidx.appcompat.app.AppCompatActivity: void initViewTreeOwners()
kotlinx.coroutines.CancellableContinuationImpl: CancellableContinuationImpl(kotlin.coroutines.Continuation,int)
com.baseflow.geolocator.location.LocationServiceStatusReceiver: void onReceive(android.content.Context,android.content.Intent)
com.google.android.gms.maps.zzc: void zzc(com.google.android.gms.internal.maps.zzt)
com.google.firebase.database.core.Repo: com.google.firebase.database.core.utilities.Tree access$2600(com.google.firebase.database.core.Repo)
com.google.android.gms.maps.internal.zzb: com.google.android.gms.dynamic.IObjectWrapper zoomIn()
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$4$1: ExceptionsConstuctorKt$tryCopyException$4$1()
com.lyokone.location.NotificationOptions: java.lang.Integer getColor()
com.google.android.gms.location.LocationSettingsStates: boolean isNetworkLocationPresent()
com.google.firebase.FirebaseOptions: java.lang.String toString()
com.google.android.gms.common.api.internal.GoogleApiManager: java.lang.Object zabc()
kotlinx.coroutines.internal.InlineList: java.lang.Object constructor-impl$default(java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: PlatformChannel$Brightness(java.lang.String,int,java.lang.String)
com.google.firebase.database.core.view.ViewCache: com.google.firebase.database.snapshot.Node getCompleteServerSnap()
com.google.firebase.database.android.SqlPersistenceStorageEngine: void updateServerCache(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node,boolean)
com.google.android.gms.common.zzj: zzj(byte[])
kotlinx.coroutines.internal.ThreadSafeHeap: void siftUpFrom(int)
com.google.android.gms.internal.maps.zzae: float getTransparency()
com.google.firebase.database.core.Repo$22: void visitTree(com.google.firebase.database.core.utilities.Tree)
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
androidx.activity.result.IntentSenderRequest$Builder: androidx.activity.result.IntentSenderRequest$Builder setFillInIntent(android.content.Intent)
androidx.fragment.app.Fragment: void performResume()
androidx.appcompat.view.menu.MenuWrapperICS: void setGroupEnabled(int,boolean)
io.flutter.plugins.imagepicker.ImagePickerDelegate$4: void onPathReady(java.lang.String)
com.google.firebase.database.Query$2: void run()
androidx.appcompat.app.AppCompatActivity: void supportNavigateUpTo(android.content.Intent)
com.google.android.gms.internal.common.zze: zze(android.os.Looper,android.os.Handler$Callback)
com.google.zxing.qrcode.detector.AlignmentPatternFinder: com.google.zxing.qrcode.detector.AlignmentPattern find()
com.google.android.gms.common.internal.GmsClientSupervisor$zza: boolean equals(java.lang.Object)
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setSubtitle(int)
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: OnBackPressedDispatcher$OnBackPressedCancellable(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback)
com.google.android.gms.location.LocationCallback: void onLocationAvailability(com.google.android.gms.location.LocationAvailability)
androidx.core.view.inputmethod.InputConnectionCompat$1: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean beginBatchEdit()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.ColorFilter getColorFilter()
androidx.activity.ComponentActivity: void ensureViewModelStore()
androidx.exifinterface.media.ExifInterface: boolean isSeekableFD(java.io.FileDescriptor)
com.google.android.gms.common.zzj: byte[] zzd()
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$3600(io.flutter.view.AccessibilityBridge$SemanticsNode)
io.flutter.plugin.platform.PlatformViewsController: void onEndFrame()
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: void onActionViewExpanded()
androidx.exifinterface.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromActivityInternal()
io.flutter.plugin.common.StandardMessageCodec: void writeSize(java.io.ByteArrayOutputStream,int)
com.google.android.gms.common.api.internal.BasePendingResult$CallbackHandler: void zaa(com.google.android.gms.common.api.ResultCallback,com.google.android.gms.common.api.Result)
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBValueNode rotateRight()
androidx.window.core.Bounds: Bounds(int,int,int,int)
com.google.android.gms.common.api.PendingResult: PendingResult()
androidx.core.app.ActivityCompat$2: ActivityCompat$2(android.app.Activity)
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean onLevelChange(int)
androidx.core.provider.FontRequestWorker$4: void accept(androidx.core.provider.FontRequestWorker$TypefaceResult)
androidx.core.provider.FontRequestWorker$1: java.lang.Object call()
com.google.zxing.pdf417.PDF417Common: int[] toIntArray(java.util.Collection)
com.google.zxing.pdf417.decoder.DetectionResult: void adjustRowNumbers(int,int,com.google.zxing.pdf417.decoder.Codeword[])
com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule zzb(android.content.Context,java.lang.String,int)
androidx.appcompat.widget.AppCompatSeekBarHelper: void setTickMark(android.graphics.drawable.Drawable)
com.google.android.gms.internal.maps.zzab: void setGeodesic(boolean)
androidx.window.layout.ExtensionInterfaceCompat: boolean validateExtensionInterface()
kotlinx.coroutines.internal.ThreadSafeHeap: kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstOrNull()
androidx.core.content.FileProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])
com.google.firebase.database.core.ZombieEventManager: ZombieEventManager()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
com.google.firebase.components.CycleDetector$Dep: int hashCode()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.google.android.gms.common.api.internal.BackgroundDetector: void onActivityStopped(android.app.Activity)
com.google.firebase.components.LazySet: void add(com.google.firebase.inject.Provider)
androidx.appcompat.widget.DropDownListView: boolean touchModeDrawsInPressedStateCompat()
com.google.android.gms.maps.model.TileOverlay: void clearTileCache()
androidx.activity.ComponentActivity$3: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: WindowMetricsCalculator$Companion$overrideDecorator$1(java.lang.Object)
com.google.firebase.database.connection.PersistentConnectionImpl: com.google.firebase.database.connection.util.RetryHelper access$1700(com.google.firebase.database.connection.PersistentConnectionImpl)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void unsetOnDescendantFocusChangeListener()
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
io.flutter.plugins.googlemaps.PolylineBuilder: void setConsumeTapEvents(boolean)
com.google.firebase.database.connection.PersistentConnectionImpl: java.util.Map access$2600(com.google.firebase.database.connection.PersistentConnectionImpl)
androidx.appcompat.widget.ActionBarOverlayLayout: void postAddActionBarHideOffset()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
com.google.zxing.oned.UPCEANReader: int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[])
com.google.android.gms.location.zzaj: java.lang.String toString()
kotlin.text.StringsKt__IndentKt$getIndentFunction$2: java.lang.String invoke(java.lang.String)
com.google.firebase.database.connection.Connection: void open()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocused()
androidx.appcompat.widget.AppCompatCheckBox: void drawableStateChanged()
androidx.appcompat.widget.SuggestionsAdapter: java.lang.CharSequence convertToString(android.database.Cursor)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
androidx.core.view.WindowInsetsCompat: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
io.flutter.view.AccessibilityBridge$SemanticsNode: void transformPoint(float[],float[],float[])
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: void completeTransaction()
io.flutter.embedding.engine.dart.DartExecutor: void send(java.lang.String,java.nio.ByteBuffer)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String getFileName()
androidx.appcompat.app.AppCompatActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
com.google.firebase.database.core.persistence.TrackedQueryManager: com.google.firebase.database.core.utilities.Predicate access$000()
com.google.firebase.database.core.utilities.encoding.CustomClassMapper$BeanMapper: boolean shouldIncludeGetter(java.lang.reflect.Method)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion: CoroutineScheduler$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugins.googlemaps.PolygonController: void setPoints(java.util.List)
androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)
com.google.firebase.database.core.persistence.DefaultPersistenceManager: void updateServerCache(com.google.firebase.database.core.view.QuerySpec,com.google.firebase.database.snapshot.Node)
com.google.firebase.database.connection.PersistentConnectionImpl: void upgradeAuth()
com.google.zxing.pdf417.decoder.DetectionResultColumn: java.lang.String toString()
com.google.android.gms.internal.base.zab: android.os.Parcel zaa()
com.google.firebase.database.connection.Connection: void close(com.google.firebase.database.connection.Connection$DisconnectReason)
androidx.fragment.app.FragmentManager: boolean isPrimaryNavigation(androidx.fragment.app.Fragment)
com.google.zxing.common.reedsolomon.GenericGF: int log(int)
androidx.activity.result.IntentSenderRequest: int getFlagsMask()
androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate: ResourceManagerInternal$DrawableDelegate()
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderPlatformThread: void getExternalStorageDirectories(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String)
com.google.firebase.components.ComponentDiscovery: java.util.List discoverLazy()
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: android.os.Bundle extractBundle(java.util.Map)
com.google.android.gms.dynamite.zzh: zzh(java.lang.String,java.lang.ClassLoader)
androidx.appcompat.widget.TintTypedArray: android.content.res.ColorStateList getColorStateList(int)
androidx.appcompat.widget.SuggestionsAdapter: void setQueryRefinement(int)
androidx.core.provider.FontRequest: java.lang.String getQuery()
androidx.appcompat.view.SupportActionModeWrapper: boolean isTitleOptional()
androidx.collection.MapCollections$KeySet: boolean addAll(java.util.Collection)
com.journeyapps.barcodescanner.BarcodeView: BarcodeView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void newline(int)
androidx.core.view.OneShotPreDrawListener: void onViewAttachedToWindow(android.view.View)
androidx.fragment.app.FragmentAnim$2: void onAnimationEnd(android.view.animation.Animation)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme)
io.flutter.plugin.editing.TextInputPlugin: void saveEditableSizeAndTransform(double,double,double[])
com.google.android.gms.internal.location.zzbd: com.google.android.gms.internal.location.zzbd zza(com.google.android.gms.location.LocationRequest)
com.google.firebase.FirebaseApp: java.lang.Object get(java.lang.Class)
io.flutter.plugin.common.StandardMessageCodec: void writeFloat(java.io.ByteArrayOutputStream,float)
com.google.firebase.database.core.ServerValues: com.google.firebase.database.core.CompoundWrite resolveDeferredValueMerge(com.google.firebase.database.core.CompoundWrite,com.google.firebase.database.core.SyncTree,com.google.firebase.database.core.Path,java.util.Map)
com.google.zxing.qrcode.decoder.Version: int[] getAlignmentPatternCenters()
com.google.firebase.database.connection.util.StringListReader: void addString(java.lang.String)
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.MarkerOptions rotation(float)
androidx.appcompat.widget.ActionBarContainer: int getMeasuredHeightWithMargins(android.view.View)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: void registerDataSetObserver(android.database.DataSetObserver)
kotlin.collections.EmptySet: void clear()
io.flutter.plugins.googlemaps.Convert: java.lang.String toString(java.lang.Object)
androidx.lifecycle.DefaultLifecycleObserver: void onCreate(androidx.lifecycle.LifecycleOwner)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: io.flutter.embedding.engine.loader.FlutterApplicationInfo load(android.content.Context)
com.google.android.gms.dynamic.DeferredLifecycleHelper: void zaa(android.os.Bundle,com.google.android.gms.dynamic.DeferredLifecycleHelper$zaa)
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
io.flutter.plugin.editing.TextInputPlugin$1: void setClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
com.google.android.gms.dynamite.DynamiteModule: java.lang.Boolean zzaj()
com.journeyapps.barcodescanner.BarcodeResult: java.lang.String toString()
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onCreate(androidx.lifecycle.LifecycleOwner)
androidx.appcompat.view.menu.StandardMenuPopup: void setAnchorView(android.view.View)
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderBackgroundThread: void getStorageDirectory(io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.database.snapshot.EmptyNode: com.google.firebase.database.snapshot.Node getPriority()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onDetach()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()
androidx.window.layout.SidecarWindowBackend$Companion: void resetInstance()
kotlinx.coroutines.CompletedContinuation: java.lang.String toString()
com.google.zxing.common.HybridBinarizer: int cap(int,int,int)
kotlin.collections.EmptyList: boolean addAll(java.util.Collection)
androidx.core.view.ViewCompat$2: java.lang.Object frameworkGet(android.view.View)
com.google.android.gms.common.Feature: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: void setTorch(android.hardware.Camera$Parameters,boolean)
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: DropDownListView$ResolveHoverRunnable(androidx.appcompat.widget.DropDownListView)
androidx.multidex.MultiDex: void access$100(java.lang.Object,java.lang.String,java.lang.Object[])
kotlinx.coroutines.Unconfined: java.lang.String toString()
androidx.fragment.app.FragmentActivity: void validateRequestPermissionsRequestCode(int)
androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspotBounds(int,int,int,int)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityIntentPair(android.app.Activity,android.content.Intent)
com.google.android.gms.common.api.zzb: zzb()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
io.flutter.plugins.googlemaps.GoogleMapController: void onMapReady(com.google.android.gms.maps.GoogleMap)
androidx.fragment.app.FragmentManagerViewModel: void setIsStateSaved(boolean)
androidx.appcompat.view.menu.MenuPopup: int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)
com.journeyapps.barcodescanner.CameraPreview: android.graphics.Rect calculateFramingRect(android.graphics.Rect,android.graphics.Rect)
com.google.firebase.database.core.ValueEventRegistration: java.lang.String toString()
net.touchcapture.qr.flutterqr.FlutterQrPlugin: FlutterQrPlugin()
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions zoomGesturesEnabled(boolean)
androidx.core.content.FileProvider$SimplePathStrategy: void addRoot(java.lang.String,java.io.File)
com.google.zxing.oned.rss.RSS14Reader: void reset()
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty()
kotlinx.coroutines.ChildHandleNode: ChildHandleNode(kotlinx.coroutines.ChildJob)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.google.firebase.components.Component: java.util.Set getPublishedEvents()
com.google.firebase.database.snapshot.ChildKey$IntegerChildKey: java.lang.String toString()
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: Detector$ResultPointsAndTransitions(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,com.google.zxing.datamatrix.detector.Detector$1)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
io.flutter.plugins.googlemaps.MarkerBuilder: void setRotation(float)
com.google.zxing.qrcode.decoder.DataMask$7: boolean isMasked(int,int)
com.google.android.gms.maps.GoogleMap: com.google.android.gms.maps.model.Circle addCircle(com.google.android.gms.maps.model.CircleOptions)
com.google.firebase.database.core.Repo: com.google.firebase.database.core.Path abortTransactions(com.google.firebase.database.core.Path,int)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
androidx.window.layout.WindowLayoutInfo: WindowLayoutInfo(java.util.List)
androidx.appcompat.widget.AppCompatEditText: boolean onDragEvent(android.view.DragEvent)
com.google.firebase.database.core.view.Change: Change(com.google.firebase.database.core.view.Event$EventType,com.google.firebase.database.snapshot.IndexedNode,com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.IndexedNode)
com.google.android.gms.maps.internal.zzbx: void setMyLocationButtonEnabled(boolean)
androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[])
androidx.appcompat.widget.ActionBarContainer: void jumpDrawablesToCurrentState()
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean dispatchKeyEvent(android.view.KeyEvent)
kotlinx.coroutines.DispatchedCoroutine: void afterCompletion(java.lang.Object)
androidx.appcompat.widget.TintContextWrapper: android.content.res.Resources$Theme getTheme()
com.google.firebase.database.connection.util.StringListReader: void mark(int)
com.google.firebase.FirebaseApp: int hashCode()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup)
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate: ResourceManagerInternal$VdcInflateDelegate()
net.touchcapture.qr.flutterqr.CustomFramingRectBarcodeView: CustomFramingRectBarcodeView(android.content.Context)
com.journeyapps.barcodescanner.CaptureActivity: CaptureActivity()
com.google.zxing.common.PerspectiveTransform: com.google.zxing.common.PerspectiveTransform buildAdjoint()
androidx.appcompat.widget.TintContextWrapper: TintContextWrapper(android.content.Context)
com.google.android.gms.tasks.Task: Task()
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: com.google.zxing.common.DecoderResult decode(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
androidx.window.layout.SidecarWindowBackend: SidecarWindowBackend(androidx.window.layout.ExtensionInterfaceCompat)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void getOutline(android.graphics.Outline)
io.flutter.plugins.googlemaps.CircleBuilder: void setCenter(com.google.android.gms.maps.model.LatLng)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: PathInterpolatorCompat(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
com.google.firebase.database.connection.HostInfo: java.net.URI getConnectionUrl(java.lang.String,boolean,java.lang.String,java.lang.String)
kotlin.coroutines.CombinedContext$toString$1: java.lang.String invoke(java.lang.String,kotlin.coroutines.CoroutineContext$Element)
com.google.firebase.database.core.CompoundWrite$1: java.lang.Object onNodeValue(com.google.firebase.database.core.Path,java.lang.Object,java.lang.Object)
com.google.firebase.database.core.persistence.TrackedQueryManager$5: TrackedQueryManager$5(com.google.firebase.database.core.persistence.TrackedQueryManager)
com.google.android.gms.common.api.internal.zace: void onConnected(android.os.Bundle)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)
com.google.android.gms.maps.internal.zzg: void setMyLocationEnabled(boolean)
com.baseflow.geolocator.location.FlutterLocationServiceListener: FlutterLocationServiceListener(io.flutter.plugin.common.MethodChannel$Result)
androidx.core.widget.NestedScrollView: void onRestoreInstanceState(android.os.Parcelable)
com.google.android.gms.common.api.internal.zacl: java.lang.Object then(com.google.android.gms.tasks.Task)
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component2(android.util.Pair)
androidx.fragment.app.BackStackState$1: BackStackState$1()
com.google.android.gms.internal.location.zzk: zzk(android.content.Context,android.os.Looper,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener,java.lang.String,com.google.android.gms.common.internal.ClientSettings)
com.google.android.gms.tasks.zzg: zzg(java.util.concurrent.Executor,com.google.android.gms.tasks.OnCanceledListener)
com.baseflow.geolocator.location.LocationOptions: com.baseflow.geolocator.location.LocationAccuracy getAccuracy()
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
androidx.appcompat.view.menu.MenuBuilder: void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent)
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$4$1: java.lang.Object invoke(java.lang.Object)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean canApplyTheme()
net.touchcapture.qr.flutterqr.QRView: void getCameraInfo(io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.internal.location.zzbe: java.lang.Object[] newArray(int)
com.google.firebase.database.Query: void validateNoOrderByCall()
androidx.arch.core.internal.SafeIterableMap: int size()
io.flutter.embedding.android.FlutterActivity: boolean shouldRestoreAndSaveState()
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void zaa(com.google.android.gms.common.api.internal.zaj)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setInitialCircles(java.lang.Object)
io.flutter.plugins.googlemaps.GoogleMapController: void onInputConnectionLocked()
io.flutter.embedding.android.FlutterActivity: void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener)
com.google.android.gms.common.api.internal.RegisterListenerMethod: RegisterListenerMethod(com.google.android.gms.common.api.internal.ListenerHolder)
com.google.android.gms.common.api.internal.ListenerHolders: com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey createListenerKey(java.lang.Object,java.lang.String)
com.google.zxing.Result: java.lang.String toString()
com.google.android.gms.maps.internal.zzk: void onSaveInstanceState(android.os.Bundle)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: boolean preDispatch(android.view.KeyEvent)
androidx.appcompat.view.menu.ActionMenuItemView: void updateTextButtonVisibility()
com.google.firebase.database.DataSnapshot$1$1: DataSnapshot$1$1(com.google.firebase.database.DataSnapshot$1)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
com.google.android.gms.internal.maps.zzab: void setPoints(java.util.List)
androidx.core.view.DisplayCutoutCompat: androidx.core.view.DisplayCutoutCompat wrap(java.lang.Object)
com.google.firebase.components.AbstractComponentContainer: java.lang.Object get(java.lang.Class)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyUp(int,android.view.KeyEvent)
androidx.versionedparcelable.VersionedParcelParcel: androidx.versionedparcelable.VersionedParcel createSubParcel()
com.google.firebase.database.connection.WebsocketConnection$1: WebsocketConnection$1(com.google.firebase.database.connection.WebsocketConnection)
com.google.firebase.database.core.view.filter.ChildChangeAccumulator: ChildChangeAccumulator()
com.google.android.gms.maps.model.CircleOptions: int getFillColor()
com.google.firebase.database.core.view.ViewCache: com.google.firebase.database.snapshot.Node getCompleteEventSnap()
com.google.android.gms.common.internal.SimpleClientAdapter: android.os.IInterface createServiceInterface(android.os.IBinder)
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
com.google.android.gms.common.internal.ResolveAccountResponse: boolean getSaveDefaultAccount()
androidx.appcompat.widget.SearchView: void updateQueryHint()
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder)
com.baseflow.geolocator.location.LocationServiceStatusReceiver: LocationServiceStatusReceiver(io.flutter.plugin.common.EventChannel$EventSink)
io.flutter.plugins.imagepicker.ImageResizer: java.io.File resizedImage(android.graphics.Bitmap,java.lang.Double,java.lang.Double,java.lang.Integer,java.lang.String)
com.google.zxing.oned.rss.DataCharacter: java.lang.String toString()
androidx.appcompat.app.AppCompatActivity: void onPanelClosed(int,android.view.Menu)
com.google.android.gms.common.api.internal.zza: void onDestroy()
androidx.core.app.TaskStackBuilder: TaskStackBuilder(android.content.Context)
kotlin.ranges.IntRange: java.lang.String toString()
com.google.firebase.database.connection.PersistentConnectionImpl$5: void onResponse(java.util.Map)
androidx.collection.MapCollections$EntrySet: boolean remove(java.lang.Object)
com.google.android.gms.internal.location.zzbk: com.google.android.gms.common.api.PendingResult checkLocationSettings(com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.location.LocationSettingsRequest)
androidx.savedstate.SavedStateRegistry: void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle)
com.google.android.gms.common.api.internal.zak: int zaa(com.google.android.gms.common.api.internal.zam)
androidx.appcompat.view.SupportActionModeWrapper: SupportActionModeWrapper(android.content.Context,androidx.appcompat.view.ActionMode)
net.touchcapture.qr.flutterqr.QRView: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.internal.maps.zzae: boolean getFadeIn()
com.google.android.gms.common.internal.zzd: java.lang.Object createFromParcel(android.os.Parcel)
androidx.fragment.app.FragmentViewLifecycleOwner: void performRestore(android.os.Bundle)
kotlin.KotlinVersionCurrentValue: kotlin.KotlinVersion get()
com.google.firebase.database.core.persistence.NoopPersistenceManager: void setQueryActive(com.google.firebase.database.core.view.QuerySpec)
androidx.appcompat.widget.ResourceManagerInternal: long createCacheKey(android.util.TypedValue)
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSmallIcon(int)
io.flutter.plugins.flutterexifrotation.FlutterExifRotationPlugin: void onDetachedFromActivityForConfigChanges()
net.touchcapture.qr.flutterqr.CustomFramingRectBarcodeView: void setFramingRect(int,int,int)
com.journeyapps.barcodescanner.CaptureActivity: void onPause()
com.google.firebase.database.core.persistence.PruneForest: int hashCode()
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)
com.journeyapps.barcodescanner.Size: int compareTo(com.journeyapps.barcodescanner.Size)
com.google.zxing.common.DecoderResult: DecoderResult(byte[],java.lang.String,java.util.List,java.lang.String)
io.flutter.plugins.urllauncher.UrlLauncher: boolean canLaunch(java.lang.String)
com.google.zxing.common.BitMatrix: BitMatrix(int,int)
kotlinx.coroutines.channels.RendezvousChannel: boolean isBufferAlwaysEmpty()
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: com.google.firebase.database.FirebaseDatabase getCachedFirebaseDatabaseInstanceForKey(java.lang.String)
com.lyokone.location.FlutterLocationService: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.zxing.pdf417.decoder.ec.ModulusPoly: boolean isZero()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void invalidateCache()
com.google.firebase.database.Query: void validateQueryEndpoints(com.google.firebase.database.core.view.QueryParams)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: AnimatedVectorDrawableCompat$1(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat)
androidx.lifecycle.DefaultLifecycleObserver: void onPause(androidx.lifecycle.LifecycleOwner)
com.google.firebase.database.core.SnapshotHolder: SnapshotHolder()
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
androidx.appcompat.widget.AppCompatBackgroundHelper: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.text.PrecomputedTextCompat: void removeSpan(java.lang.Object)
com.google.firebase.database.core.ZombieEventManager: void recordEventRegistration(com.google.firebase.database.core.EventRegistration)
com.journeyapps.barcodescanner.RawImageData: byte[] rotate180(byte[],int,int)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
kotlin.sequences.SequencesKt___SequencesKt: java.util.List toList(kotlin.sequences.Sequence)
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation: boolean getTransformation(long,android.view.animation.Transformation)
com.google.zxing.Result: java.util.Map getResultMetadata()
com.google.firebase.database.core.persistence.DefaultPersistenceManager: void updateServerCache(com.google.firebase.database.core.Path,com.google.firebase.database.core.CompoundWrite)
com.journeyapps.barcodescanner.CameraPreview$1: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)
androidx.collection.ContainerHelpers: int binarySearch(long[],int,long)
com.google.zxing.pdf417.decoder.DetectionResult: com.google.zxing.pdf417.decoder.BoundingBox getBoundingBox()
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder: io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setPlatformBrightness(io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onHoverEvent(android.view.MotionEvent)
androidx.core.view.ViewConfigurationCompat: int getScaledHoverSlop(android.view.ViewConfiguration)
com.google.firebase.database.Query: com.google.firebase.database.core.view.QuerySpec getSpec()
com.google.firebase.database.core.utilities.ImmutableTree: java.util.Collection values()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.multidex.MultiDex$V4: void install(java.lang.ClassLoader,java.util.List)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: boolean readBoolean(android.os.Parcel,int)
com.google.firebase.FirebaseApp$UserUnlockReceiver: void unregister()
androidx.fragment.app.SpecialEffectsController$Operation: androidx.fragment.app.Fragment getFragment()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.android.gms.signin.internal.SignInClientImpl: java.lang.String getServiceDescriptor()
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTooltipText(java.lang.CharSequence)
io.flutter.view.AccessibilityBridge$SemanticsNode: io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$2800(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.database.core.Repo$23: Repo$23(com.google.firebase.database.core.Repo,int)
io.flutter.plugins.urllauncher.WebViewActivity$1: void onReceive(android.content.Context,android.content.Intent)
com.google.firebase.database.core.persistence.DefaultPersistenceManager: void setQueryInactive(com.google.firebase.database.core.view.QuerySpec)
com.google.zxing.common.BitMatrix: BitMatrix(int)
com.google.android.gms.dynamite.DynamiteModule$LoadingException: DynamiteModule$LoadingException(java.lang.String,com.google.android.gms.dynamite.zza)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: SpecialEffectsController$Operation$LifecycleImpact(java.lang.String,int)
com.google.firebase.database.core.utilities.Tree: void updateChild(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.core.utilities.Tree)
com.google.firebase.database.logging.LogWrapper: LogWrapper(com.google.firebase.database.logging.Logger,java.lang.String)
androidx.appcompat.widget.ToolbarWidgetWrapper: android.content.Context getContext()
com.google.zxing.pdf417.decoder.Codeword: int getBucket()
com.google.android.gms.location.zzv: com.google.android.gms.location.zzu zzb(android.os.IBinder)
androidx.core.graphics.TypefaceCompatApi24Impl: TypefaceCompatApi24Impl()
com.google.android.gms.common.GoogleApiAvailabilityLight: int isGooglePlayServicesAvailable(android.content.Context)
io.flutter.plugins.googlemaps.GoogleMapController: void setInitialCircles(java.lang.Object)
io.flutter.plugin.platform.PlatformViewsController$1: void disposeAndroidViewForPlatformView(int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setShowAsActionFlags(int)
androidx.appcompat.app.AlertController: int selectContentView()
io.flutter.embedding.engine.renderer.FlutterRenderer: boolean access$002(io.flutter.embedding.engine.renderer.FlutterRenderer,boolean)
com.journeyapps.barcodescanner.CaptureManager: boolean access$400(com.journeyapps.barcodescanner.CaptureManager)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
androidx.versionedparcelable.ParcelImpl$1: java.lang.Object[] newArray(int)
com.google.android.gms.common.internal.GmsClientSupervisor: GmsClientSupervisor()
com.google.android.gms.common.internal.StringResourceValueReader: java.lang.String getString(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
kotlinx.coroutines.ThreadLocalEventLoop: kotlinx.coroutines.EventLoop getEventLoop$kotlinx_coroutines_core()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView)
com.google.firebase.database.connection.util.RetryHelper: RetryHelper(java.util.concurrent.ScheduledExecutorService,com.google.firebase.database.logging.LogWrapper,long,long,double,double)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int[] getAutoSizeTextAvailableSizes()
androidx.core.view.ViewPropertyAnimatorCompat: void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener)
io.flutter.plugins.googlemaps.MarkerController: void setConsumeTapEvents(boolean)
androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onLowMemory()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)
androidx.appcompat.app.AlertController$4: void onScrollStateChanged(android.widget.AbsListView,int)
androidx.fragment.app.FragmentContainerView: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean)
io.flutter.plugins.googlemaps.CircleBuilder: void setStrokeColor(int)
com.google.android.gms.internal.location.zzc: android.os.Parcelable zza(android.os.Parcel,android.os.Parcelable$Creator)
com.google.firebase.database.snapshot.EmptyNode: EmptyNode()
androidx.fragment.app.FragmentContainerView: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)
com.google.android.gms.dynamite.DynamiteModule$LoadingException: DynamiteModule$LoadingException(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()
androidx.fragment.app.FragmentManagerState: FragmentManagerState(android.os.Parcel)
com.google.zxing.aztec.decoder.Decoder: byte readByte(boolean[],int)
com.google.android.gms.internal.common.zzb: android.os.IBinder asBinder()
io.flutter.embedding.engine.systemchannels.TextInputChannel: void go(int)
androidx.lifecycle.ReportFragment: void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event)
com.google.zxing.common.CharacterSetECI: com.google.zxing.common.CharacterSetECI getCharacterSetECIByValue(int)
androidx.appcompat.view.menu.MenuDialogHelper: void onDismiss(android.content.DialogInterface)
androidx.core.graphics.ColorUtils: int compositeAlpha(int,int)
com.google.firebase.database.android.AndroidPlatform: com.google.firebase.database.connection.PersistentConnection newPersistentConnection(com.google.firebase.database.core.Context,com.google.firebase.database.connection.ConnectionContext,com.google.firebase.database.connection.HostInfo,com.google.firebase.database.connection.PersistentConnection$Delegate)
com.google.firebase.database.core.EventRegistration: void zombify()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumWidth()
kotlinx.coroutines.channels.RendezvousChannel: boolean isBufferEmpty()
kotlinx.coroutines.JobSupport: boolean isActive()
com.google.zxing.client.android.camera.open.OpenCameraInterface: android.hardware.Camera open(int)
com.google.android.gms.location.SettingsClient: SettingsClient(android.content.Context)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback)
com.google.firebase.database.Query: com.google.firebase.database.Query startAfter(java.lang.String,java.lang.String)
kotlinx.coroutines.JobSupport$ChildCompletion: JobSupport$ChildCompletion(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
com.journeyapps.barcodescanner.CameraPreview: void initCamera()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme)
androidx.appcompat.widget.ResourcesWrapper: void getValueForDensity(int,int,android.util.TypedValue,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable()
com.google.android.gms.tasks.zzc: void cancel()
com.google.zxing.oned.rss.RSS14Reader: void adjustOddEvenCounts(boolean,int)
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.Closed getClosedForSend()
androidx.window.embedding.SplitPairFilter: java.lang.String toString()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet)
androidx.appcompat.app.ResourcesFlusher: void flushLollipops(android.content.res.Resources)
com.google.firebase.database.Transaction$Result: Transaction$Result(boolean,com.google.firebase.database.snapshot.Node)
com.google.firebase.database.tubesock.WebSocketHandshake: byte[] getHandshake()
com.google.android.gms.maps.Projection: Projection(com.google.android.gms.maps.internal.IProjectionDelegate)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setEnabled(boolean)
androidx.appcompat.widget.SearchView: void updateSearchAutoComplete()
io.flutter.util.PathUtils: java.lang.String getDataDirectory(android.content.Context)
androidx.collection.LruCache: void trimToSize(int)
androidx.appcompat.widget.SuggestionsAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
com.google.android.gms.common.api.internal.zzc: zzc()
com.google.zxing.common.reedsolomon.GenericGF: int exp(int)
com.google.common.util.concurrent.internal.InternalFutureFailureAccess: InternalFutureFailureAccess()
com.google.android.gms.common.internal.BaseGmsClient$zzf: boolean zzm()
androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1: void onFlutterUiDisplayed()
com.google.android.gms.internal.location.zzas: void removeAllListeners()
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
com.google.android.gms.internal.location.zzbd: int hashCode()
com.google.firebase.database.core.utilities.OffsetClock: long millis()
io.flutter.plugins.googlemaps.PolygonBuilder: void setConsumeTapEvents(boolean)
com.google.android.gms.common.api.internal.ApiExceptionMapper: ApiExceptionMapper()
com.google.firebase.database.snapshot.ChildKey: boolean isInt()
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
androidx.core.widget.AutoScrollHelper$ClampedScroller: void requestStop()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setSelection(int,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(java.lang.Object)
androidx.appcompat.widget.TooltipPopup: android.view.View getAppRootView(android.view.View)
com.google.firebase.database.android.SqlPersistenceStorageEngine: android.database.Cursor loadNestedQuery(com.google.firebase.database.core.Path,java.lang.String[])
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object removeFirstOrNull()
com.google.android.gms.common.api.internal.zag: com.google.android.gms.common.Feature[] zaa(com.google.android.gms.common.api.internal.GoogleApiManager$zaa)
io.flutter.embedding.engine.systemchannels.RestorationChannel: java.util.Map packageData(byte[])
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setAutoCancel(boolean)
androidx.appcompat.view.menu.MenuBuilder: void startDispatchingItemsChanged()
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: WindowMetricsCalculator$Companion$decorator$1()
com.google.android.gms.tasks.zzh: zzh(com.google.android.gms.tasks.zzg)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding(android.app.Activity,androidx.lifecycle.Lifecycle)
com.google.zxing.aztec.detector.Detector: int getDimension()
androidx.fragment.app.FragmentManager: int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet)
com.google.firebase.database.android.SqlPersistenceStorageEngine: void deleteTrackedQuery(long)
com.google.android.gms.internal.maps.zzab: void setStartCap(com.google.android.gms.maps.model.Cap)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int getTimeout()
androidx.collection.MapCollections$KeySet: boolean contains(java.lang.Object)
androidx.fragment.app.Fragment: boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean isAutoMirrored()
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: void send(java.lang.String,java.nio.ByteBuffer)
androidx.appcompat.widget.SearchView: void onTextFocusChanged()
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState: void setAlpha()
com.lyokone.location.LocationPlugin: void attachToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)
net.touchcapture.qr.flutterqr.QRView: boolean access$hasCameraPermission(net.touchcapture.qr.flutterqr.QRView)
androidx.fragment.app.DefaultSpecialEffectsController$2: DefaultSpecialEffectsController$2(androidx.fragment.app.DefaultSpecialEffectsController,android.view.ViewGroup,android.view.View,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo)
io.flutter.embedding.engine.renderer.FlutterRenderer$1: void onFlutterUiDisplayed()
androidx.fragment.app.Fragment: boolean isInBackStack()
androidx.appcompat.view.WindowCallbackWrapper: void onWindowFocusChanged(boolean)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
androidx.appcompat.widget.ToolbarWidgetWrapper$1: void onClick(android.view.View)
com.google.firebase.database.collection.ArraySortedMap: java.util.Iterator iterator()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
com.google.firebase.database.snapshot.EmptyNode: com.google.firebase.database.snapshot.Node updatePriority(com.google.firebase.database.snapshot.Node)
androidx.collection.MapCollections$EntrySet: int hashCode()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.DebugStringsKt: java.lang.String toDebugString(kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspot(float,float)
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.view.menu.ListMenuPresenter: ListMenuPresenter(android.content.Context,int)
com.google.firebase.database.core.persistence.TrackedQueryManager: long calculateCountToPrune(com.google.firebase.database.core.persistence.CachePolicy,long)
com.google.common.util.concurrent.AbstractFuture$TrustedFuture: boolean isDone()
com.google.firebase.database.collection.ArraySortedMap: com.google.firebase.database.collection.ArraySortedMap buildFrom(java.util.List,java.util.Map,com.google.firebase.database.collection.ImmutableSortedMap$Builder$KeyTranslator,java.util.Comparator)
io.flutter.embedding.android.FlutterTextureView: boolean access$100(io.flutter.embedding.android.FlutterTextureView)
com.google.zxing.maxicode.decoder.DecodedBitStreamParser: int getCountry(byte[])
io.flutter.FlutterInjector$Builder$NamedThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
com.google.android.gms.tasks.zzu: com.google.android.gms.tasks.Task addOnFailureListener(java.util.concurrent.Executor,com.google.android.gms.tasks.OnFailureListener)
com.google.firebase.database.core.Path: Path(java.lang.String)
kotlin.collections.MapsKt__MapsKt: java.util.Map optimizeReadOnlyMap(java.util.Map)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.google.zxing.qrcode.detector.AlignmentPatternFinder: boolean foundPatternCross(int[])
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
com.google.firebase.database.connection.WebsocketConnection: boolean access$102(com.google.firebase.database.connection.WebsocketConnection,boolean)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTitle(int)
androidx.window.layout.SidecarWindowBackend: boolean isActivityRegistered(android.app.Activity)
androidx.core.widget.NestedScrollView: boolean canScroll()
androidx.appcompat.widget.TintTypedArray: boolean getBoolean(int,boolean)
com.google.android.gms.common.api.Status: java.lang.String toString()
com.google.firebase.database.connection.ConnectionContext: ConnectionContext(com.google.firebase.database.logging.Logger,com.google.firebase.database.connection.ConnectionTokenProvider,com.google.firebase.database.connection.ConnectionTokenProvider,java.util.concurrent.ScheduledExecutorService,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.google.android.gms.maps.model.zzh: zzh()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean fitSystemWindows(android.graphics.Rect)
androidx.appcompat.view.WindowCallbackWrapper: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
com.google.firebase.database.core.UserWriteRecord: long getWriteId()
androidx.activity.contextaware.ContextAwareHelper: void clearAvailableContext()
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet,int)
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout: SingleViewPresentation$AccessibilityDelegatingFrameLayout(android.content.Context,io.flutter.plugin.platform.AccessibilityEventsDelegate,android.view.View)
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions: java.util.Map parseResult(int,android.content.Intent)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderView(android.view.View)
com.google.firebase.database.connection.util.StringListReader: void freeze()
androidx.appcompat.widget.ResourcesWrapper: android.content.res.AssetFileDescriptor openRawResourceFd(int)
com.google.android.gms.common.internal.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
kotlinx.coroutines.JobSupport$Finishing: boolean isCancelling()
com.journeyapps.barcodescanner.CaptureManager: void setShowMissingCameraPermissionDialog(boolean,java.lang.String)
com.google.android.gms.common.internal.BaseGmsClient$zzc: BaseGmsClient$zzc(com.google.android.gms.common.internal.BaseGmsClient,java.lang.Object)
androidx.lifecycle.ClassesInfoCache: boolean hasLifecycleMethods(java.lang.Class)
com.google.zxing.aztec.AztecReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet)
androidx.core.content.FileProvider$SimplePathStrategy: FileProvider$SimplePathStrategy(java.lang.String)
com.google.android.gms.common.internal.zak: void onComplete(com.google.android.gms.common.api.Status)
com.google.firebase.database.tubesock.WebSocket: com.google.firebase.database.tubesock.ThreadInitializer getIntializer()
com.journeyapps.barcodescanner.BarcodeView: com.journeyapps.barcodescanner.DecoderFactory getDecoderFactory()
com.google.android.gms.maps.internal.zzb: zzb(android.os.IBinder)
kotlin.ranges.IntRange: boolean isEmpty()
kotlinx.coroutines.YieldContext$Key: YieldContext$Key(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.WindowInsetsControllerCompat$Impl20: void unsetWindowFlag(int)
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: boolean isNumericToAlphaNumericLatch(int)
com.google.common.util.concurrent.Futures: void addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback,java.util.concurrent.Executor)
androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
androidx.fragment.app.Fragment: java.util.ArrayList getSharedElementTargetNames()
com.journeyapps.barcodescanner.DecoratedBarcodeView$WrappedCallback: DecoratedBarcodeView$WrappedCallback(com.journeyapps.barcodescanner.DecoratedBarcodeView,com.journeyapps.barcodescanner.BarcodeCallback)
io.flutter.plugins.googlemaps.PolygonBuilder: void setPoints(java.util.List)
androidx.lifecycle.ViewModel: void clear()
kotlinx.coroutines.CancellableContinuationImpl: void parentCancelled$kotlinx_coroutines_core(java.lang.Throwable)
io.flutter.view.AccessibilityBridge$StringAttribute: AccessibilityBridge$StringAttribute()
com.google.firebase.database.util.JsonMapper: java.lang.String serializeJson(java.util.Map)
androidx.fragment.app.FragmentTransitionCompat21$1: android.graphics.Rect onGetEpicenter(android.transition.Transition)
io.flutter.plugins.googlemaps.Convert: com.google.android.gms.maps.CameraUpdate toCameraUpdate(java.lang.Object,float)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setActionView(int)
androidx.appcompat.widget.ForwardingListener: boolean onForwardingStopped()
io.flutter.embedding.engine.FlutterEngine$1: FlutterEngine$1(io.flutter.embedding.engine.FlutterEngine)
androidx.appcompat.widget.ForwardingListener$TriggerLongPress: ForwardingListener$TriggerLongPress(androidx.appcompat.widget.ForwardingListener)
com.baseflow.geolocator.location.FusedLocationClient: void startPositionUpdates(android.app.Activity,com.baseflow.geolocator.location.PositionChangedCallback,com.baseflow.geolocator.errors.ErrorCallback)
androidx.appcompat.app.WindowDecorActionBar: void doShow(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
com.google.android.gms.common.internal.ResolveAccountResponse: void writeToParcel(android.os.Parcel,int)
com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions: int getTransitions()
com.google.firebase.database.connection.PersistentConnectionImpl: boolean shouldReconnect()
androidx.fragment.app.Fragment: void performMultiWindowModeChanged(boolean)
androidx.core.widget.AutoScrollHelper: int constrain(int,int,int)
androidx.appcompat.widget.ListPopupWindow: int getMaxAvailableHeight(android.view.View,int,boolean)
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt: java.lang.String systemProp(java.lang.String)
kotlinx.coroutines.JobSupport: boolean getHandlesException$kotlinx_coroutines_core()
kotlinx.coroutines.internal.LockFreeLinkedListKt: java.lang.Object getCONDITION_FALSE()
com.google.common.util.concurrent.AbstractFuture: com.google.common.util.concurrent.AbstractFuture$Listener clearListeners(com.google.common.util.concurrent.AbstractFuture$Listener)
com.google.firebase.database.core.view.QueryParams$ViewFrom: QueryParams$ViewFrom(java.lang.String,int)
com.google.android.gms.maps.model.Circle: void setFillColor(int)
androidx.core.app.NotificationCompatJellybean: android.os.Bundle[] toBundleArray(androidx.core.app.RemoteInput[])
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatPopupWindow: AppCompatPopupWindow(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.gms.common.GooglePlayServicesUtilLight: boolean isUserRecoverableError(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setTextSizeInternal(int,float)
androidx.appcompat.view.menu.StandardMenuPopup$1: StandardMenuPopup$1(androidx.appcompat.view.menu.StandardMenuPopup)
androidx.appcompat.widget.AppCompatRatingBar: void onMeasure(int,int)
com.google.android.gms.common.GoogleSignatureVerifier: com.google.android.gms.common.zze zza(android.content.pm.PackageInfo,com.google.android.gms.common.zze[])
com.google.firebase.database.snapshot.LeafNode: com.google.firebase.database.snapshot.Node getImmediateChild(com.google.firebase.database.snapshot.ChildKey)
androidx.appcompat.app.AppCompatDelegateImpl: void onPanelClosed(int)
com.google.android.gms.common.zze: byte[] zza(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
androidx.appcompat.view.menu.ListMenuItemView: void onMeasure(int,int)
androidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)
io.flutter.embedding.android.FlutterActivity: io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine)
com.google.firebase.database.core.RepoInfo: int hashCode()
com.google.android.gms.common.api.GoogleApi: android.os.Looper getLooper()
androidx.appcompat.view.menu.ExpandedMenuView: void onDetachedFromWindow()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
kotlin.ranges.IntProgression: kotlin.collections.IntIterator iterator()
com.google.android.gms.maps.model.zzt: com.google.android.gms.maps.model.Tile getTile(int,int,int)
androidx.appcompat.app.AlertController$RecycleListView: void setHasDecor(boolean,boolean)
com.google.firebase.database.core.Repo$10: Repo$10(com.google.firebase.database.core.Repo,com.google.firebase.database.core.Path,long,com.google.firebase.database.DatabaseReference$CompletionListener)
kotlin.text.DelimitedRangesSequence$iterator$1: boolean hasNext()
com.google.firebase.database.connection.PersistentConnectionImpl: void access$2000(com.google.firebase.database.connection.PersistentConnectionImpl)
com.journeyapps.barcodescanner.camera.CameraSettings$FocusMode: CameraSettings$FocusMode(java.lang.String,int)
com.journeyapps.barcodescanner.CaptureManager: void initializeFromIntent(android.content.Intent,android.os.Bundle)
com.google.zxing.oned.UPCEANExtension2Support: java.util.Map parseExtensionString(java.lang.String)
com.journeyapps.barcodescanner.BarcodeResult: java.util.Map getResultMetadata()
androidx.lifecycle.ViewModelStore: java.util.Set keys()
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1: java.util.Iterator iterator()
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.plugins.googlemaps.MarkerBuilder: void setInfoWindowAnchor(float,float)
kotlin.jvm.internal.Reflection: kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference)
androidx.window.embedding.SplitController: void unregisterRule(androidx.window.embedding.EmbeddingRule)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void finishWithAlreadyActiveError(io.flutter.plugin.common.MethodChannel$Result)
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter: void onTypefaceRequestFailed(int)
com.google.android.gms.common.internal.GmsClient: java.util.Set getScopes()
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$2002(io.flutter.view.AccessibilityBridge$SemanticsNode,int)
io.flutter.embedding.android.FlutterView: android.view.PointerIcon getSystemPointerIcon(int)
androidx.fragment.app.FragmentStateManager: void moveToExpectedState()
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: void removeEventStreamHandlers()
androidx.fragment.app.FragmentManager$9: FragmentManager$9(androidx.fragment.app.FragmentManager)
kotlinx.coroutines.CoroutineExceptionHandlerImplKt: void handleCoroutineExceptionImpl(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)
kotlinx.coroutines.CommonPool: java.util.concurrent.ExecutorService createPool()
com.google.firebase.database.connection.PersistentConnectionImpl: void access$2500(com.google.firebase.database.connection.PersistentConnectionImpl,java.util.List,com.google.firebase.database.connection.PersistentConnectionImpl$QuerySpec)
io.flutter.plugins.googlemaps.Convert: java.lang.Object polygonIdToJson(java.lang.String)
io.flutter.view.AccessibilityBridge: void handleTouchExploration(float,float)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean isTransitionReversed(int,int)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: boolean casWaiters(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter)
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int,int,int,int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
io.flutter.plugins.imagepicker.ImagePickerCache: ImagePickerCache(android.content.Context)
io.flutter.plugin.platform.PlatformViewsController: io.flutter.plugin.editing.TextInputPlugin access$1000(io.flutter.plugin.platform.PlatformViewsController)
com.journeyapps.barcodescanner.DecoratedBarcodeView: com.journeyapps.barcodescanner.DecoderFactory getDecoderFactory()
androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
com.journeyapps.barcodescanner.Size: com.journeyapps.barcodescanner.Size rotate()
com.google.common.util.concurrent.AbstractFuture: boolean access$300()
com.google.firebase.database.core.ServerValues: com.google.firebase.database.snapshot.Node resolveDeferredValueSnapshot(com.google.firebase.database.snapshot.Node,com.google.firebase.database.core.SyncTree,com.google.firebase.database.core.Path,java.util.Map)
com.journeyapps.barcodescanner.CaptureManager: void returnResult(com.journeyapps.barcodescanner.BarcodeResult)
com.google.firebase.database.core.SyncTree$1: SyncTree$1(com.google.firebase.database.core.SyncTree,boolean,com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node,long,com.google.firebase.database.snapshot.Node,boolean)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
androidx.fragment.app.FragmentStateManager: void destroyFragmentView()
com.google.firebase.database.Transaction$Result: Transaction$Result(boolean,com.google.firebase.database.snapshot.Node,com.google.firebase.database.Transaction$1)
androidx.appcompat.app.AppCompatDelegateImpl: AppCompatDelegateImpl(android.app.Dialog,androidx.appcompat.app.AppCompatCallback)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode)
io.flutter.view.AccessibilityBridge: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
com.google.zxing.maxicode.MaxiCodeReader: com.google.zxing.common.BitMatrix extractPureBits(com.google.zxing.common.BitMatrix)
com.google.zxing.Result: Result(java.lang.String,byte[],int,com.google.zxing.ResultPoint[],com.google.zxing.BarcodeFormat,long)
kotlin.collections.EmptyIterator: void set(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
kotlin.collections.ArraysUtilJVM: java.util.List asList(java.lang.Object[])
io.flutter.plugins.googlemaps.GoogleMapController: void setMapType(int)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: JobSupport$addLastAtomic$$inlined$addLastIf$1(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.JobSupport,java.lang.Object)
com.google.zxing.datamatrix.detector.Detector: com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,int,int)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: EventChannel$IncomingStreamRequestHandler$EventSinkImplementation(io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler,io.flutter.plugin.common.EventChannel$1)
io.flutter.plugin.common.JSONMethodCodec: java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall)
androidx.fragment.app.FragmentStore: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
androidx.appcompat.graphics.drawable.DrawableContainer: void getHotspotBounds(android.graphics.Rect)
com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult: com.google.zxing.oned.rss.expanded.decoders.DecodedInformation getDecodedInformation()
kotlin.coroutines.AbstractCoroutineContextKey: boolean isSubKey$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)
com.google.firebase.database.core.utilities.NodeSizeEstimator: int nodeCount(com.google.firebase.database.snapshot.Node)
kotlin.text.CharsKt__CharJVMKt: boolean isWhitespace(char)
androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Long toLongOrNull(java.lang.String)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void setTextInputMethodHandler(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler)
com.google.zxing.aztec.detector.Detector: void extractParameters(com.google.zxing.ResultPoint[])
com.journeyapps.barcodescanner.CameraPreview$5: void previewStarted()
com.baseflow.geolocator.location.FusedLocationClient$1: FusedLocationClient$1(com.baseflow.geolocator.location.FusedLocationClient,android.content.Context)
com.google.zxing.common.PerspectiveTransform: com.google.zxing.common.PerspectiveTransform quadrilateralToQuadrilateral(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)
androidx.exifinterface.media.ExifInterface$ExifTag: ExifInterface$ExifTag(java.lang.String,int,int)
com.google.firebase.database.core.SyncTree$4: SyncTree$4(com.google.firebase.database.core.SyncTree)
com.google.firebase.database.snapshot.IndexedNode: com.google.firebase.database.snapshot.Node getNode()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void zab(com.google.android.gms.common.api.internal.GoogleApiManager$zac)
com.lyokone.location.LocationPlugin$1: void onServiceDisconnected(android.content.ComponentName)
com.google.android.gms.common.internal.zzj: boolean zza(int,android.os.Parcel,android.os.Parcel,int)
androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityRule parseSplitActivityRule(android.content.Context,android.content.res.XmlResourceParser)
androidx.appcompat.view.menu.ActionMenuItem: ActionMenuItem(android.content.Context,int,int,int,int,java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: AnimatedVectorDrawableCompat()
kotlin.collections.EmptyList: boolean addAll(int,java.util.Collection)
androidx.appcompat.widget.ResourcesWrapper: int[] getIntArray(int)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.SubMenu addSubMenu(int,int,int,int)
com.google.zxing.oned.rss.expanded.ExpandedRow: java.util.List getPairs()
com.google.android.gms.dynamite.DynamiteModule$zza: DynamiteModule$zza()
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: void doAfterTextChanged(android.widget.AutoCompleteTextView)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isClickable()
kotlin.text.StringsKt__StringsKt: java.lang.CharSequence trim(java.lang.CharSequence)
kotlin.jvm.internal.TypeIntrinsics: boolean isFunctionOfArity(java.lang.Object,int)
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int)
androidx.core.content.res.ComplexColorCompat: void setColor(int)
com.google.firebase.database.android.SqlPersistenceStorageEngine: SqlPersistenceStorageEngine(android.content.Context,com.google.firebase.database.core.Context,java.lang.String)
com.google.common.util.concurrent.AbstractFuture: java.lang.String toString()
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper(android.content.Context,android.content.res.Resources$Theme)
com.google.android.gms.maps.model.VisibleRegion: boolean equals(java.lang.Object)
com.google.firebase.components.ComponentRuntime: void initializeEagerComponents(boolean)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)
androidx.appcompat.view.menu.BaseMenuPresenter: void updateMenuView(boolean)
androidx.appcompat.widget.AppCompatButton: void onLayout(boolean,int,int,int,int)
io.flutter.plugin.platform.PlatformView: void onFlutterViewDetached()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean didScroll()
com.journeyapps.barcodescanner.CaptureManager: void access$600(com.journeyapps.barcodescanner.CaptureManager)
androidx.fragment.app.FragmentManager: void forcePostponedTransactions()
androidx.fragment.app.FragmentState: FragmentState(androidx.fragment.app.Fragment)
kotlin.collections.EmptyList: int indexOf(java.lang.Void)
io.flutter.view.AccessibilityBridge$StringAttribute: AccessibilityBridge$StringAttribute(io.flutter.view.AccessibilityBridge$1)
androidx.appcompat.app.AppCompatActivity: void onStop()
androidx.appcompat.widget.ResourcesWrapper: void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)
androidx.core.provider.FontRequestWorker$3: FontRequestWorker$3(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingListen: java.lang.String toString()
io.flutter.view.AccessibilityBridge$1: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
io.flutter.plugins.urllauncher.UrlLauncher: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus launch(java.lang.String,android.os.Bundle,boolean,boolean,boolean)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void onAndroidAccessibilityEnabled()
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
com.google.android.gms.internal.location.zzas: com.google.android.gms.internal.location.zzat zzb(com.google.android.gms.common.api.internal.ListenerHolder)
com.google.android.gms.internal.maps.zzy: void setZIndex(float)
androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class)
androidx.core.app.ActivityRecreator$1: ActivityRecreator$1(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object)
androidx.core.view.ActionProvider: void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener)
com.google.firebase.database.snapshot.ChildrenNode$NamedNodeIterator: void remove()
io.flutter.plugins.imagepicker.ImagePickerDelegate$2$1: void onScanCompleted(java.lang.String,android.net.Uri)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class)
io.flutter.plugins.googlemaps.PolygonController: void setGeodesic(boolean)
com.google.android.gms.internal.location.zzbf: void writeToParcel(android.os.Parcel,int)
io.flutter.embedding.android.FlutterImageView: void detachFromRenderer()
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext$Key getKey()
com.google.android.gms.maps.internal.zzg: void setBuildingsEnabled(boolean)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)
com.google.firebase.database.collection.ImmutableSortedSet: com.google.firebase.database.collection.ImmutableSortedSet remove(java.lang.Object)
androidx.core.widget.NestedScrollView$SavedState: void writeToParcel(android.os.Parcel,int)
io.flutter.plugins.googlemaps.GoogleMapController: void onPolylineClick(com.google.android.gms.maps.model.Polyline)
com.google.zxing.BarcodeFormat: com.google.zxing.BarcodeFormat valueOf(java.lang.String)
com.google.zxing.ResultPoint: int hashCode()
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: FlutterPlugin$FlutterPluginBinding(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.plugin.common.BinaryMessenger,io.flutter.view.TextureRegistry,io.flutter.plugin.platform.PlatformViewRegistry,io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets)
com.google.zxing.oned.EAN13Reader: EAN13Reader()
androidx.fragment.app.FragmentManager: void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager)
androidx.fragment.app.FragmentTransitionCompat21$4: FragmentTransitionCompat21$4(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Runnable)
com.google.firebase.database.tubesock.WebSocket: void access$000(com.google.firebase.database.tubesock.WebSocket)
com.google.android.gms.maps.UiSettings: void setRotateGesturesEnabled(boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int[] cleanupAutoSizePresetSizes(int[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.os.Bundle getExtras()
androidx.fragment.app.Fragment: void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
androidx.core.widget.NestedScrollView: void requestLayout()
kotlinx.coroutines.JobSupportKt: kotlinx.coroutines.Empty access$getEMPTY_NEW$p()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(int,android.graphics.PorterDuff$Mode)
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.core.content.res.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)
androidx.lifecycle.ReportFragment: void onResume()
io.flutter.plugins.imagepicker.ImagePickerDelegate$3: ImagePickerDelegate$3(io.flutter.plugins.imagepicker.ImagePickerDelegate)
com.google.android.gms.dynamic.DeferredLifecycleHelper: DeferredLifecycleHelper()
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void destroy()
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: com.google.zxing.pdf417.decoder.BoundingBox adjustBoundingBox(com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn)
com.google.firebase.database.tubesock.WebSocket: com.google.firebase.database.tubesock.WebSocketEventHandler getEventHandler()
kotlinx.coroutines.CancellableContinuationImpl: void dispatchResume(int)
com.google.zxing.qrcode.detector.FinderPatternFinder: FinderPatternFinder(com.google.zxing.common.BitMatrix,com.google.zxing.ResultPointCallback)
io.flutter.plugins.googlemaps.PolygonController: void setHoles(java.util.List)
androidx.core.view.ViewCompat$1: androidx.core.view.ContentInfoCompat onReceiveContent(androidx.core.view.ContentInfoCompat)
androidx.fragment.app.BackStackState: int describeContents()
com.google.firebase.database.FirebaseDatabase$1: void run()
com.google.android.gms.maps.model.MarkerOptions: float getInfoWindowAnchorV()
androidx.fragment.app.DialogFragment: boolean access$200(androidx.fragment.app.DialogFragment)
kotlinx.coroutines.ThreadLocalEventLoop: void setEventLoop$kotlinx_coroutines_core(kotlinx.coroutines.EventLoop)
com.google.firebase.database.core.utilities.encoding.CustomClassMapper$BeanMapper: java.lang.String serializedName(java.lang.String)
com.google.android.gms.location.zzaa: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.provider.RequestExecutor: void execute(java.util.concurrent.Executor,java.util.concurrent.Callable,androidx.core.util.Consumer)
com.google.firebase.database.snapshot.CompoundHash: java.util.List getHashes()
net.touchcapture.qr.flutterqr.QRView: void pauseCamera(io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setSubtitle(java.lang.CharSequence)
io.flutter.plugin.common.StandardMethodCodec: java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object)
androidx.core.view.WindowInsetsControllerCompat$Impl20: void setWindowFlag(int)
androidx.appcompat.widget.SearchView$3: void onFocusChange(android.view.View,boolean)
kotlinx.coroutines.CompletedExceptionally: boolean getHandled()
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void writeBundle(android.os.Parcel,int,android.os.Bundle,boolean)
com.google.android.gms.maps.model.Cap: Cap(int)
androidx.appcompat.widget.Toolbar: boolean canShowOverflowMenu()
com.journeyapps.barcodescanner.CameraPreview$5: void cameraError(java.lang.Exception)
io.flutter.plugin.platform.PlatformPlugin: void setClipboardData(java.lang.String)
com.google.zxing.datamatrix.DataMatrixReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map)
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.SystemChannel getSystemChannel()
androidx.fragment.app.Fragment: void setPopDirection(boolean)
kotlinx.coroutines.JobSupport: java.lang.Object getState$kotlinx_coroutines_core()
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet)
io.flutter.plugins.googlemaps.PolylineBuilder: PolylineBuilder(float)
com.google.android.gms.common.api.internal.zaad: androidx.collection.ArraySet zaah()
androidx.fragment.app.BackStackRecord: void commitNowAllowingStateLoss()
com.google.zxing.pdf417.detector.PDF417DetectorResult: java.util.List getPoints()
com.google.zxing.client.android.InactivityTimer$PowerStatusReceiver: InactivityTimer$PowerStatusReceiver(com.google.zxing.client.android.InactivityTimer,com.google.zxing.client.android.InactivityTimer$1)
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextDirectionHeuristic getTextDirection()
androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)
com.google.firebase.database.core.SyncTree$2: java.lang.Object call()
io.flutter.plugins.googlemaps.Convert: java.util.Map pointToJson(android.graphics.Point)
kotlinx.coroutines.JobSupport: java.lang.Object tryMakeCompleting(java.lang.Object,java.lang.Object)
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.util.List access$4100(io.flutter.view.AccessibilityBridge$SemanticsNode)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
io.flutter.plugins.googlemaps.CircleBuilder: CircleBuilder(float)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: void writeShort(short)
androidx.appcompat.view.menu.CascadingMenuPopup: void addMenu(androidx.appcompat.view.menu.MenuBuilder)
io.flutter.plugin.platform.PlatformViewsController: void onDetachedFromJNI()
com.google.firebase.database.snapshot.DoubleNode: com.google.firebase.database.snapshot.Node updatePriority(com.google.firebase.database.snapshot.Node)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.util.Map getAllPrefs()
kotlinx.coroutines.flow.internal.NoOpContinuation: void resumeWith(java.lang.Object)
com.google.zxing.aztec.AztecDetectorResult: int getNbDatablocks()
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: ActionBarOverlayLayout$LayoutParams(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.channels.AbstractChannel$Itr: java.lang.Object hasNextSuspend(kotlin.coroutines.Continuation)
com.google.firebase.database.core.persistence.DefaultPersistenceManager: void setQueryComplete(com.google.firebase.database.core.view.QuerySpec)
androidx.window.embedding.ActivityStack: boolean contains(android.app.Activity)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
kotlinx.coroutines.scheduling.DefaultScheduler: kotlinx.coroutines.CoroutineDispatcher getIO()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: io.flutter.embedding.engine.FlutterEngine getFlutterEngine()
com.google.firebase.database.core.ValidationPath: ValidationPath(com.google.firebase.database.core.Path)
com.google.android.gms.maps.GoogleMap: boolean setMapStyle(com.google.android.gms.maps.model.MapStyleOptions)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
androidx.core.provider.FontRequest: FontRequest(java.lang.String,java.lang.String,java.lang.String,java.util.List)
io.flutter.plugins.googlemaps.GoogleMapController: void setZoomGesturesEnabled(boolean)
com.google.firebase.database.tubesock.MessageBuilderFactory$BinaryBuilder: MessageBuilderFactory$BinaryBuilder()
androidx.exifinterface.media.ExifInterface: byte[] getThumbnail()
io.flutter.embedding.android.FlutterTextureView: FlutterTextureView(android.content.Context)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int[] getState()
com.google.firebase.database.core.view.filter.LimitedFilter: boolean filtersNodes()
com.google.android.gms.common.internal.safeparcel.SafeParcelWriter: void zzb(android.os.Parcel,int)
com.google.android.gms.common.api.internal.zaj: void zaa(com.google.android.gms.common.api.internal.ApiKey,com.google.android.gms.common.ConnectionResult,java.lang.String)
com.google.firebase.database.connection.WebsocketConnection: void access$600(com.google.firebase.database.connection.WebsocketConnection)
io.flutter.plugin.platform.VirtualDisplayController: void resize(int,int,java.lang.Runnable)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: AccessibilityClickableSpanCompat(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int)
com.google.zxing.InvertedLuminanceSource: com.google.zxing.LuminanceSource invert()
com.google.firebase.database.connection.PersistentConnectionImpl: com.google.firebase.database.connection.PersistentConnection$Delegate access$1400(com.google.firebase.database.connection.PersistentConnectionImpl)
com.google.zxing.oned.ITFReader: int skipWhiteSpace(com.google.zxing.common.BitArray)
androidx.fragment.app.FragmentTransition: java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()
kotlin.random.FallbackThreadLocalRandom: FallbackThreadLocalRandom()
com.google.zxing.oned.rss.expanded.RSSExpandedReader: void findNextPair(com.google.zxing.common.BitArray,java.util.List,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
androidx.fragment.app.Fragment: void performAttach()
com.google.firebase.database.core.SyncTree: java.util.List access$1700(com.google.firebase.database.core.SyncTree,com.google.firebase.database.core.operation.Operation,com.google.firebase.database.core.utilities.ImmutableTree,com.google.firebase.database.snapshot.Node,com.google.firebase.database.core.WriteTreeRef)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: AnimatedStateListDrawableCompat$AnimatedStateListState(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
androidx.appcompat.widget.Toolbar$3: void onClick(android.view.View)
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.exifinterface.media.ExifInterface$1: ExifInterface$1(androidx.exifinterface.media.ExifInterface,androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
com.lyokone.location.FlutterLocation: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.firebase.database.core.SyncTree$5: SyncTree$5(com.google.firebase.database.core.SyncTree,com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node)
com.journeyapps.barcodescanner.DecoratedBarcodeView: DecoratedBarcodeView(android.content.Context,android.util.AttributeSet)
androidx.multidex.MultiDex$V14: java.lang.String optimizedPathFor(java.io.File)
com.google.android.gms.common.api.internal.zaab: void onComplete(com.google.android.gms.tasks.Task)
com.google.android.gms.maps.model.zzv: java.lang.Object[] newArray(int)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
kotlin.random.Random$Default: Random$Default(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)
com.journeyapps.barcodescanner.camera.CameraInstance: com.journeyapps.barcodescanner.camera.CameraManager access$100(com.journeyapps.barcodescanner.camera.CameraInstance)
com.google.zxing.client.android.camera.open.OpenCameraInterface: OpenCameraInterface()
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean)
com.google.firebase.database.core.SyncTree$15: java.lang.Object onNodeValue(com.google.firebase.database.core.Path,java.lang.Object,java.lang.Object)
com.google.zxing.qrcode.QRCodeReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map)
com.google.android.gms.common.internal.BaseGmsClient: void onUserSignOut(com.google.android.gms.common.internal.BaseGmsClient$SignOutCallbacks)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener)
com.google.firebase.FirebaseOptions$Builder: com.google.firebase.FirebaseOptions$Builder setDatabaseUrl(java.lang.String)
com.google.firebase.components.Component: boolean isAlwaysEager()
io.flutter.embedding.android.FlutterImageView: void resizeIfNeeded(int,int)
androidx.appcompat.view.menu.SubMenuBuilder: java.lang.String getActionViewStatesKey()
androidx.core.view.ContentInfoCompat: int getFlags()
io.flutter.plugins.googlemaps.TileOverlayBuilder: void setVisible(boolean)
io.flutter.FlutterInjector: FlutterInjector(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager,io.flutter.embedding.engine.FlutterJNI$Factory,java.util.concurrent.ExecutorService,io.flutter.FlutterInjector$1)
androidx.core.view.WindowInsetsControllerCompat: WindowInsetsControllerCompat(android.view.Window,android.view.View)
androidx.fragment.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)
androidx.appcompat.widget.AppCompatCheckedTextView: AppCompatCheckedTextView(android.content.Context,android.util.AttributeSet)
kotlin.collections.EmptyList: java.lang.Object get(int)
com.google.zxing.InvertedLuminanceSource: byte[] getRow(int,byte[])
com.google.android.gms.maps.model.zzi: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.google.android.gms.common.api.internal.zah: void zaa(com.google.android.gms.common.api.Status)
com.journeyapps.barcodescanner.CameraPreview: android.graphics.Rect getPreviewFramingRect()
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setCameraTargetBounds(com.google.android.gms.maps.model.LatLngBounds)
com.google.android.gms.common.api.internal.LifecycleCallback: void onStart()
com.google.android.gms.internal.maps.zzag: com.google.android.gms.internal.maps.zzaf zzk(android.os.IBinder)
com.lyokone.location.FlutterLocationService: void disableBackgroundMode()
androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isChecked()
com.google.android.gms.maps.internal.zzf: com.google.android.gms.maps.internal.ICameraUpdateFactoryDelegate zze()
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState: void incrementPosition(int)
kotlinx.coroutines.channels.AbstractSendChannel: void onClosedIdempotent(kotlinx.coroutines.internal.LockFreeLinkedListNode)
io.flutter.plugin.localization.LocalizationPlugin: java.util.Locale resolveNativeLocale(java.util.List)
com.google.android.gms.common.GoogleSignatureVerifier: GoogleSignatureVerifier(android.content.Context)
com.google.android.gms.internal.location.zzbg: java.lang.Object[] newArray(int)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: java.lang.Object getSystemService(java.lang.String)
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache: ModuleNameRetriever$Cache(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)
kotlinx.coroutines.channels.AbstractChannel$Itr: AbstractChannel$Itr(kotlinx.coroutines.channels.AbstractChannel)
androidx.appcompat.view.menu.SubMenuBuilder: void setQwertyMode(boolean)
com.google.firebase.database.core.utilities.DefaultClock: long millis()
kotlin.collections.EmptyList: java.lang.Object[] toArray(java.lang.Object[])
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()
androidx.window.embedding.ExtensionEmbeddingBackend: boolean isSplitSupported()
androidx.fragment.app.Fragment: void onDetach()
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence)
kotlin.coroutines.CombinedContext: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$1: ImagePickerPlugin$MethodResultWrapper$1(io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper,java.lang.Object)
androidx.appcompat.view.menu.StandardMenuPopup: void onDismiss()
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2: long access$100(com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
androidx.core.text.PrecomputedTextCompat$Params: int getBreakStrategy()
com.google.firebase.database.core.Path: int compareTo(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn: com.google.zxing.pdf417.decoder.BarcodeMetadata getBarcodeMetadata()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.google.firebase.database.core.persistence.NoopPersistenceManager: void applyUserWriteToServerCache(com.google.firebase.database.core.Path,com.google.firebase.database.core.CompoundWrite)
com.baseflow.geolocator.location.LocationMapper: java.util.Map toHashMap(android.location.Location)
androidx.savedstate.SavedStateRegistry$1: SavedStateRegistry$1(androidx.savedstate.SavedStateRegistry)
io.flutter.plugins.googlemaps.PolylinesController: void changePolyline(java.lang.Object)
com.google.firebase.database.connection.util.RetryHelper$1: RetryHelper$1(com.google.firebase.database.connection.util.RetryHelper,java.lang.Runnable)
androidx.collection.ArraySet: boolean equals(java.lang.Object)
kotlinx.coroutines.internal.LockFreeTaskQueue: int getSize()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.google.firebase.database.core.utilities.Validation: void validateWritablePath(com.google.firebase.database.core.Path)
com.google.zxing.oned.rss.expanded.decoders.BlockParsedResult: boolean isFinished()
androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)
androidx.appcompat.widget.DropDownListView: boolean isFocused()
androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)
androidx.core.app.NotificationManagerCompat$SideChannelManager: void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)
io.flutter.plugins.imagepicker.ImagePickerFileProvider: ImagePickerFileProvider()
io.flutter.view.AccessibilityBridge$1: void onTap(int)
com.google.firebase.FirebaseApp: boolean isDataCollectionDefaultEnabled()
com.google.firebase.database.collection.ImmutableSortedMap$Builder: com.google.firebase.database.collection.ImmutableSortedMap$Builder$KeyTranslator identityTranslator()
io.flutter.view.AccessibilityBridge$SemanticsNode: void ensureInverseTransform()
androidx.fragment.app.FragmentManager$4: androidx.fragment.app.SpecialEffectsController createController(android.view.ViewGroup)
androidx.window.layout.SidecarCompat: androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity)
kotlin.text.StringsKt__StringsKt$splitToSequence$1: StringsKt__StringsKt$splitToSequence$1(java.lang.CharSequence)
io.flutter.plugins.pathprovider.PathProviderPlugin: void setup(io.flutter.plugin.common.BinaryMessenger,android.content.Context)
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager access$000(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel)
io.flutter.plugins.sharedpreferences.SharedPreferencesPlugin: SharedPreferencesPlugin()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean didChangeLabel()
io.flutter.embedding.engine.systemchannels.LifecycleChannel: void appIsResumed()
androidx.collection.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)
io.flutter.plugin.editing.TextInputPlugin: android.view.inputmethod.InputMethodManager getInputMethodManager()
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.view.menu.CascadingMenuPopup: int getInitialMenuPosition()
androidx.lifecycle.ViewModelProvider$OnRequeryFactory: ViewModelProvider$OnRequeryFactory()
io.flutter.plugins.imagepicker.ExifDataCopier: void setIfNotNull(androidx.exifinterface.media.ExifInterface,androidx.exifinterface.media.ExifInterface,java.lang.String)
com.google.zxing.Result: com.google.zxing.BarcodeFormat getBarcodeFormat()
com.google.firebase.database.core.utilities.Validation: void validatePathString(java.lang.String)
androidx.fragment.app.Fragment: Fragment()
androidx.fragment.app.FragmentTransitionCompat21: void setEpicenter(java.lang.Object,android.graphics.Rect)
androidx.versionedparcelable.VersionedParcelParcel: VersionedParcelParcel(android.os.Parcel)
io.flutter.plugin.platform.VirtualDisplayController: void dispose()
androidx.multidex.MultiDex: void installSecondaryDexes(java.lang.ClassLoader,java.io.File,java.util.List)
com.google.android.gms.common.util.ProcessUtils: java.io.BufferedReader zzk(java.lang.String)
kotlinx.coroutines.DebugStringsKt: java.lang.String getClassSimpleName(java.lang.Object)
com.google.firebase.database.core.persistence.TrackedQueryManager: void saveTrackedQuery(com.google.firebase.database.core.persistence.TrackedQuery)
kotlin.ranges.IntRange: kotlin.ranges.IntRange access$getEMPTY$cp()
com.google.firebase.database.core.utilities.Tree: com.google.firebase.database.core.Path getPath()
com.journeyapps.barcodescanner.SourceData: void setCropRect(android.graphics.Rect)
com.google.android.gms.maps.internal.zzk: void onStart()
com.google.firebase.database.collection.LLRBEmptyNode: void inOrderTraversal(com.google.firebase.database.collection.LLRBNode$NodeVisitor)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: ViewCompat$UnhandledKeyEventManager()
kotlin.internal.jdk7.JDK7PlatformImplementations: void addSuppressed(java.lang.Throwable,java.lang.Throwable)
androidx.core.view.WindowInsetsControllerCompat$Impl: void setAppearanceLightNavigationBars(boolean)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String[] getStringArray(int)
androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration)
com.google.firebase.database.core.Context: void assertUnfrozen()
kotlinx.coroutines.MainCoroutineDispatcher: MainCoroutineDispatcher()
com.lyokone.location.FlutterLocation$1: FlutterLocation$1(com.lyokone.location.FlutterLocation)
com.google.firebase.components.InvalidRegistrarException: InvalidRegistrarException(java.lang.String,java.lang.Throwable)
com.google.android.gms.common.internal.ClientSettings: android.accounts.Account getAccountOrDefault()
com.google.common.util.concurrent.AbstractFuture$TrustedFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)
com.google.android.gms.common.api.internal.LifecycleActivity: android.app.Activity asActivity()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.firebase.database.core.WriteTreeRef: com.google.firebase.database.snapshot.Node shadowingWrite(com.google.firebase.database.core.Path)
io.flutter.plugins.googlemaps.MarkerBuilder: MarkerBuilder()
com.baseflow.geolocator.location.ForegroundNotificationOptions: boolean isEnableWifiLock()
androidx.appcompat.widget.SuggestionsAdapter: void changeCursor(android.database.Cursor)
androidx.appcompat.view.menu.StandardMenuPopup$2: void onViewDetachedFromWindow(android.view.View)
androidx.core.widget.NestedScrollView$AccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
com.google.zxing.common.DefaultGridSampler: com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,com.google.zxing.common.PerspectiveTransform)
androidx.fragment.app.Fragment: android.view.View getView()
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getChangingConfigurations()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void setDirection(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.Cap getEndCap()
com.google.firebase.database.DataSnapshot: java.lang.Object getValue(boolean)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: kotlinx.coroutines.scheduling.Task pollGlobalQueues()
androidx.appcompat.widget.ListPopupWindow$3: void onNothingSelected(android.widget.AdapterView)
androidx.fragment.app.FragmentManager: void dispatchMultiWindowModeChanged(boolean)
androidx.fragment.app.FragmentManager$10: void onActivityResult(java.lang.Object)
com.google.android.gms.maps.internal.zzg: com.google.android.gms.internal.maps.zzac addTileOverlay(com.google.android.gms.maps.model.TileOverlayOptions)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int)
com.google.firebase.database.core.SyncTree$14: java.util.List call()
kotlin.text.StringsKt__StringsKt: java.lang.String substringAfter$default(java.lang.String,char,java.lang.String,int,java.lang.Object)
io.flutter.plugin.common.EventChannel: io.flutter.plugin.common.MethodCodec access$000(io.flutter.plugin.common.EventChannel)
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl$1: void run()
com.google.android.gms.common.api.internal.zabq: zabq(com.google.android.gms.common.api.internal.zabp)
com.google.firebase.database.core.view.ViewProcessor$ProcessorResult: ViewProcessor$ProcessorResult(com.google.firebase.database.core.view.ViewCache,java.util.List)
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key)
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: kotlin.Pair invoke(java.lang.CharSequence,int)
io.flutter.embedding.engine.loader.ApplicationInfoLoader: void parseDomain(android.content.res.XmlResourceParser,org.json.JSONArray,boolean)
com.google.firebase.database.collection.LLRBEmptyNode: com.google.firebase.database.collection.LLRBNode getLeft()
androidx.fragment.app.Fragment: void noteStateNotSaved()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean transitionHasReversibleFlag(int,int)
androidx.appcompat.app.AppCompatDelegateImpl: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
androidx.core.widget.NestedScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(android.content.Context,int)
kotlinx.coroutines.channels.ConflatedChannel: kotlinx.coroutines.internal.UndeliveredElementException updateValueLocked(java.lang.Object)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: boolean zab(com.google.android.gms.common.api.internal.zac)
com.google.firebase.database.core.Path: com.google.firebase.database.core.Path child(com.google.firebase.database.snapshot.ChildKey)
androidx.fragment.app.FragmentContainerView: void removeView(android.view.View)
com.google.firebase.database.core.operation.AckUserWrite: java.lang.String toString()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean equals(java.lang.Object)
androidx.collection.ArraySet$1: java.lang.Object colSetValue(int,java.lang.Object)
com.google.android.gms.common.GoogleApiAvailability: android.app.Dialog zaa(android.app.Activity,android.content.DialogInterface$OnCancelListener)
com.baseflow.geolocator.location.GeolocationManager: com.baseflow.geolocator.location.LocationClient createLocationClient(android.content.Context,boolean,com.baseflow.geolocator.location.LocationOptions)
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(int,int)
com.google.android.gms.internal.location.zzbg: zzbg()
net.touchcapture.qr.flutterqr.QRView: void barCodeViewNotSet(io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugin.common.MethodChannel: java.lang.String access$100(io.flutter.plugin.common.MethodChannel)
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1: java.lang.Object[] newArray(int)
kotlinx.coroutines.JobSupport: boolean tryMakeCancelling(kotlinx.coroutines.Incomplete,java.lang.Throwable)
com.google.android.gms.maps.GoogleMapOptions: java.lang.Float getMaxZoomPreference()
io.flutter.plugins.googlemaps.CirclesController: void addCircle(java.lang.Object)
androidx.fragment.app.DialogFragment: void onViewStateRestored(android.os.Bundle)
kotlin.text.StringsKt__StringsKt: boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean)
com.google.zxing.qrcode.detector.AlignmentPatternFinder: com.google.zxing.qrcode.detector.AlignmentPattern handlePossibleCenter(int[],int,int)
io.flutter.embedding.engine.renderer.FlutterRenderer: void access$400(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
com.google.zxing.pdf417.decoder.ec.ModulusPoly: java.lang.String toString()
com.google.firebase.database.Query$4: void run()
kotlin.collections.EmptyIterator: EmptyIterator()
com.google.firebase.database.core.WriteTree: com.google.firebase.database.core.WriteTreeRef childWrites(com.google.firebase.database.core.Path)
com.google.firebase.database.core.CompoundWrite: com.google.firebase.database.snapshot.Node apply(com.google.firebase.database.snapshot.Node)
com.google.firebase.database.core.view.DataEvent: java.lang.String getPreviousName()
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
com.google.android.gms.common.internal.SimpleClientAdapter: java.lang.String getStartServiceAction()
com.google.zxing.oned.UPCEANReader: int[] findGuardPattern(com.google.zxing.common.BitArray,int,boolean,int[],int[])
com.google.firebase.database.connection.util.RetryHelper: void setMaxDelay()
com.google.android.gms.common.api.internal.zah: boolean zab(com.google.android.gms.common.api.internal.GoogleApiManager$zaa)
com.baseflow.geolocator.permission.PermissionManager: com.baseflow.geolocator.permission.LocationPermission checkPermissionStatus(android.content.Context)
androidx.core.widget.NestedScrollView: int getScrollRange()
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void zabl()
com.google.android.gms.common.internal.DialogRedirect: DialogRedirect()
androidx.appcompat.view.SupportActionModeWrapper: void setSubtitle(int)
com.google.firebase.database.connection.PersistentConnectionImpl: void tryScheduleReconnect()
androidx.fragment.app.FragmentManagerViewModel: java.util.Collection getRetainedFragments()
com.google.zxing.common.DecoderResult: byte[] getRawBytes()
androidx.versionedparcelable.VersionedParcel: android.os.Parcelable readParcelable(android.os.Parcelable,int)
com.google.firebase.components.ComponentRuntime: void doInitializeEagerComponents(java.util.Map,boolean)
com.google.android.gms.dynamic.zag: void zaa(com.google.android.gms.dynamic.LifecycleDelegate)
androidx.appcompat.widget.SearchView: void onWindowFocusChanged(boolean)
io.flutter.plugins.googlemaps.PolylineController: boolean consumeTapEvents()
com.journeyapps.barcodescanner.CameraPreview: android.graphics.Matrix calculateTextureTransform(com.journeyapps.barcodescanner.Size,com.journeyapps.barcodescanner.Size)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeSystemUIOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
androidx.appcompat.widget.ListPopupWindow: android.view.View getAnchorView()
io.flutter.plugin.editing.TextInputPlugin: void hideTextInput(android.view.View)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setShortcut(char,char,int,int)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityFilter parseActivityFilter(android.content.Context,android.content.res.XmlResourceParser)
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.Result await(long,java.util.concurrent.TimeUnit)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: boolean isOverlapAllowed()
androidx.versionedparcelable.VersionedParcelParcel: void writeByteArray(byte[])
com.google.firebase.platforminfo.AutoValue_LibraryVersion: java.lang.String toString()
com.google.zxing.qrcode.decoder.Mode: com.google.zxing.qrcode.decoder.Mode[] values()
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getIcon2(android.database.Cursor)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingDisconnect: PersistentConnectionImpl$OutstandingDisconnect(java.lang.String,java.util.List,java.lang.Object,com.google.firebase.database.connection.RequestResultCallback,com.google.firebase.database.connection.PersistentConnectionImpl$1)
com.google.android.gms.common.internal.ClientIdentity: java.lang.String toString()
com.google.firebase.components.OptionalProvider: com.google.firebase.components.OptionalProvider empty()
androidx.appcompat.widget.DropDownListView: void onDetachedFromWindow()
com.google.firebase.database.connection.PersistentConnectionImpl: void unlisten(java.util.List,java.util.Map)
com.google.android.gms.dynamic.DeferredLifecycleHelper: void onStart()
androidx.appcompat.view.menu.MenuItemImpl: boolean shouldShowShortcut()
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
androidx.appcompat.graphics.drawable.DrawableContainer: int getCurrentIndex()
com.google.android.gms.location.LocationSettingsResult: com.google.android.gms.location.LocationSettingsStates getLocationSettingsStates()
com.google.zxing.pdf417.decoder.BarcodeValue: int[] getValue()
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.Region getTransparentRegion()
kotlinx.coroutines.internal.FastServiceLoader: java.lang.Object getProviderInstance(java.lang.String,java.lang.ClassLoader,java.lang.Class)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable access$recoverFromStackFrame(java.lang.Throwable,kotlin.coroutines.jvm.internal.CoroutineStackFrame)
androidx.cursoradapter.widget.CursorAdapter: void onContentChanged()
androidx.fragment.app.FragmentManager: void removeCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
com.google.firebase.database.core.Repo$TransactionData: long access$1902(com.google.firebase.database.core.Repo$TransactionData,long)
com.google.android.gms.tasks.zzt: zzt()
kotlin.coroutines.CombinedContext$toString$1: CombinedContext$toString$1()
com.google.firebase.database.core.SyncTree$KeepSyncedEventRegistration: com.google.firebase.database.core.EventRegistration clone(com.google.firebase.database.core.view.QuerySpec)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.Throwable recoverFromStackFrame(java.lang.Throwable,kotlin.coroutines.jvm.internal.CoroutineStackFrame)
io.flutter.embedding.android.FlutterView: boolean onTouchEvent(android.view.MotionEvent)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.google.android.gms.common.Feature: Feature(java.lang.String,int,long)
io.flutter.plugin.platform.PlatformPlugin: void setSystemChromeEnabledSystemUIMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode)
com.google.firebase.database.snapshot.Node$1: com.google.firebase.database.snapshot.Node getPriority()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setFilterBitmap(boolean)
com.google.firebase.database.core.operation.Merge: java.lang.String toString()
com.google.firebase.database.core.Repo$4: void stopListening(com.google.firebase.database.core.view.QuerySpec,com.google.firebase.database.core.Tag)
androidx.core.view.inputmethod.InputContentInfoCompat: android.content.ClipDescription getDescription()
com.google.firebase.platforminfo.LibraryVersion: com.google.firebase.platforminfo.LibraryVersion create(java.lang.String,java.lang.String)
com.google.firebase.database.core.view.Change: com.google.firebase.database.core.view.Change childRemovedChange(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.IndexedNode)
androidx.appcompat.graphics.drawable.DrawableContainer: void setTintList(android.content.res.ColorStateList)
androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: FragmentLifecycleCallbacksDispatcher(androidx.fragment.app.FragmentManager)
androidx.fragment.app.Fragment: void onViewStateRestored(android.os.Bundle)
androidx.collection.MapCollections$KeySet: boolean add(java.lang.Object)
com.journeyapps.barcodescanner.DecoderResultPointCallback: DecoderResultPointCallback()
kotlinx.coroutines.EventLoopImplBase: void shutdown()
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean)
com.google.firebase.database.core.Path$1: java.lang.Object next()
com.google.firebase.database.core.persistence.TrackedQueryManager: void setQueryInactive(com.google.firebase.database.core.view.QuerySpec)
androidx.appcompat.widget.ScrollingTabContainerView: void performCollapse()
androidx.window.embedding.SplitRule: int getMinWidth()
com.google.common.util.concurrent.ThreadFactoryBuilder: java.util.concurrent.ThreadFactory build()
com.google.firebase.database.android.SqlPersistenceStorageEngine$1: java.lang.Integer onNodeValue(com.google.firebase.database.core.Path,java.lang.Void,java.lang.Integer)
androidx.fragment.app.FragmentController: void attachHost(androidx.fragment.app.Fragment)
com.google.firebase.database.snapshot.KeyIndex: java.lang.String getQueryDefinition()
kotlin.ranges.IntRange: java.lang.Integer getStart()
kotlinx.coroutines.JobSupport: void onCancelling(java.lang.Throwable)
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params build()
kotlin.coroutines.CombinedContext: int size()
com.google.android.gms.tasks.zzm: void cancel()
com.google.android.gms.location.FusedLocationProviderClient$zza: void zza(com.google.android.gms.internal.location.zzad)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.DispatcherExecutor: java.lang.String toString()
com.google.firebase.database.core.utilities.DefaultRunLoop$FirebaseThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
androidx.appcompat.widget.TooltipCompatHandler$2: void run()
io.flutter.plugin.platform.PlatformViewsController$1: long createVirtualDisplayForPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.scheduling.WorkQueue: void offloadAllWorkTo(kotlinx.coroutines.scheduling.GlobalQueue)
com.google.android.gms.common.api.internal.zak: void onActivityResult(int,int,android.content.Intent)
io.flutter.plugins.googlemaps.GoogleMapController: void onMarkerDrag(com.google.android.gms.maps.model.Marker)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry: void detachFromBroadcastReceiver()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver: void onInvalidated()
com.google.firebase.components.EventBus: void enablePublishingAndFlushPending()
io.flutter.plugins.imagepicker.ImagePickerDelegate: void launchMultiPickImageFromGalleryIntent()
com.google.firebase.database.snapshot.EmptyNode: com.google.firebase.database.snapshot.Node updateImmediateChild(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node)
com.google.common.base.MoreObjects$ToStringHelper: com.google.common.base.MoreObjects$ToStringHelper addValue(java.lang.Object)
com.google.zxing.common.reedsolomon.GenericGF: com.google.zxing.common.reedsolomon.GenericGFPoly getOne()
com.google.zxing.PlanarYUVLuminanceSource: byte[] getRow(int,byte[])
com.google.android.gms.tasks.zzc: com.google.android.gms.tasks.zzu zza(com.google.android.gms.tasks.zzc)
com.google.firebase.database.tubesock.WebSocketMessage: WebSocketMessage(java.lang.String)
com.google.zxing.datamatrix.decoder.BitMatrixParser: int readCorner1(int,int)
com.google.android.gms.tasks.zzu: java.lang.Exception getException()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void setValue(java.lang.Object)
io.flutter.plugins.firebase.database.FlutterFirebaseDatabaseException: io.flutter.plugins.firebase.database.FlutterFirebaseDatabaseException unknown()
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitXml(android.content.Context,int)
androidx.fragment.app.FragmentTransition: void configureTransitionsReordered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback)
com.google.android.gms.tasks.zzd: zzd(com.google.android.gms.tasks.zzc,com.google.android.gms.tasks.Task)
io.flutter.plugins.imagepicker.ImagePickerDelegate$3: void onPathReady(java.lang.String)
kotlinx.coroutines.channels.AbstractSendChannel: kotlinx.coroutines.channels.ReceiveOrClosed sendBuffered(java.lang.Object)
androidx.fragment.app.DefaultSpecialEffectsController$5: void onCancel()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.app.AppCompatDelegateImpl: void setTitle(java.lang.CharSequence)
androidx.fragment.app.FragmentActivity: FragmentActivity()
com.google.android.gms.maps.model.zzu: zzu()
androidx.fragment.app.FragmentContainerView: void removeViews(int,int)
com.google.firebase.database.core.persistence.PruneForest: java.lang.String toString()
androidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onActivityPaused(android.app.Activity)
androidx.core.widget.NestedScrollView: void abortAnimatedScroll()
kotlinx.coroutines.CoroutineExceptionHandlerKt: void handleCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
kotlinx.coroutines.JobSupport: kotlinx.coroutines.ChildHandle getParentHandle$kotlinx_coroutines_core()
androidx.core.view.WindowInsetsControllerCompat$Impl30: WindowInsetsControllerCompat$Impl30(android.view.Window,androidx.core.view.WindowInsetsControllerCompat)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity)
androidx.appcompat.widget.AppCompatPopupWindow: void showAsDropDown(android.view.View,int,int)
com.lyokone.location.FlutterLocation: boolean checkPermissions()
net.touchcapture.qr.flutterqr.QRView: void resumeCamera(io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.database.core.persistence.PruneForest: boolean shouldKeep(com.google.firebase.database.core.Path)
androidx.lifecycle.LiveData$AlwaysActiveObserver: LiveData$AlwaysActiveObserver(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient$1: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
io.flutter.embedding.android.KeyboardManager: void destroy()
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: int currentHashLength()
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.fragment.app.FragmentActivity: void init()
kotlin.SynchronizedLazyImpl: boolean isInitialized()
io.flutter.plugin.platform.PlatformPlugin: void access$400(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode)
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams()
androidx.collection.SparseArrayCompat: void clear()
androidx.fragment.app.FragmentManagerState: int describeContents()
com.google.android.gms.common.GoogleApiAvailabilityLight: boolean isUserResolvableError(int)
com.google.firebase.database.DatabaseReference: void runTransaction(com.google.firebase.database.Transaction$Handler,boolean)
com.google.android.gms.tasks.TaskCompletionSource: TaskCompletionSource()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean setLayoutDirection(int,int)
com.google.firebase.database.core.SyncTree: void setQueryActive(com.google.firebase.database.core.view.QuerySpec)
com.google.firebase.database.connection.util.StringListReader: java.lang.String toString()
com.google.firebase.database.connection.PersistentConnectionImpl: void handleTimestamp(long)
net.touchcapture.qr.flutterqr.QRView: boolean hasCameraPermission()
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
com.google.android.gms.maps.internal.zzac: zzac()
com.google.android.gms.dynamite.zzj: int zzb(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,boolean)
io.flutter.plugins.firebase.database.FlutterFirebaseDatabaseException: java.lang.String getMessage()
com.google.firebase.database.tubesock.WebSocket$State: com.google.firebase.database.tubesock.WebSocket$State[] values()
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key: ExecutorCoroutineDispatcher$Key(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.SearchView$SavedState$1: androidx.appcompat.widget.SearchView$SavedState[] newArray(int)
kotlinx.coroutines.internal.StackTraceRecoveryKt: java.lang.StackTraceElement artificialFrame(java.lang.String)
com.google.zxing.InvertedLuminanceSource: InvertedLuminanceSource(com.google.zxing.LuminanceSource)
io.flutter.plugins.googlemaps.Convert: int toPixels(java.lang.Object,float)
androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setAutoSizeTextTypeWithDefaults(int)
androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitRules(java.util.Set)
androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)
com.google.android.gms.location.zzah: java.lang.Object[] newArray(int)
io.flutter.plugins.googlemaps.TileOverlayController: void setTransparency(float)
com.google.firebase.database.core.SyncPoint: com.google.firebase.database.core.view.View getView(com.google.firebase.database.core.view.QuerySpec,com.google.firebase.database.core.WriteTreeRef,com.google.firebase.database.core.view.CacheNode)
io.flutter.plugins.flutterexifrotation.FlutterExifRotationPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
kotlinx.coroutines.CancelHandler: CancelHandler()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect getConstantPadding()
androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int)
com.google.zxing.oned.UPCAReader: UPCAReader()
kotlinx.coroutines.internal.DispatchedContinuationKt: void resumeCancellableWith$default(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.widget.NestedScrollView: void scrollTo(int,int)
io.flutter.embedding.engine.renderer.FlutterRenderer: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)
com.google.android.gms.common.api.internal.zacd: void run()
com.google.android.gms.maps.model.CustomCap: CustomCap(com.google.android.gms.maps.model.BitmapDescriptor,float)
com.google.firebase.database.snapshot.LeafNode$LeafType: com.google.firebase.database.snapshot.LeafNode$LeafType[] values()
com.google.android.gms.internal.maps.zzb: android.os.IBinder asBinder()
com.google.firebase.database.core.persistence.LRUCachePolicy: LRUCachePolicy(long)
com.google.firebase.database.snapshot.CompoundHash: java.util.List getPosts()
androidx.window.embedding.SplitInfo: boolean contains(android.app.Activity)
kotlinx.coroutines.JobSupport: void setParentHandle$kotlinx_coroutines_core(kotlinx.coroutines.ChildHandle)
kotlinx.coroutines.JobSupport: void continueCompleting(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object)
androidx.core.content.res.ColorStateListInflaterCompat: int modulateColorAlpha(int,float)
androidx.fragment.app.Fragment: void setPostOnViewCreatedAlpha(float)
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo: DefaultSpecialEffectsController$SpecialEffectsInfo(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal)
com.google.firebase.database.snapshot.BooleanNode: com.google.firebase.database.snapshot.BooleanNode updatePriority(com.google.firebase.database.snapshot.Node)
com.google.firebase.database.tubesock.MessageBuilderFactory: com.google.firebase.database.tubesock.MessageBuilderFactory$Builder builder(byte)
kotlinx.coroutines.internal.StackTraceRecoveryKt: boolean elementWiseEquals(java.lang.StackTraceElement,java.lang.StackTraceElement)
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: com.google.android.gms.tasks.Task observe(java.util.Map)
io.flutter.plugin.editing.TextInputPlugin: void notifyViewEntered()
androidx.exifinterface.media.ExifInterface: boolean isRafFormat(byte[])
com.google.firebase.database.core.persistence.TrackedQueryManager: void setQueriesComplete(com.google.firebase.database.core.Path)
com.google.firebase.database.core.utilities.DefaultRunLoop: com.google.firebase.database.core.ThreadInitializer getThreadInitializer()
kotlinx.coroutines.CommonPool: void close()
com.google.zxing.pdf417.PDF417ResultMetadata: void setFileSize(long)
kotlinx.coroutines.channels.LinkedListChannel: boolean isBufferAlwaysEmpty()
com.google.android.gms.common.util.DeviceProperties: boolean zzf(android.content.Context)
com.google.android.gms.maps.zzq: void zza(com.google.android.gms.internal.maps.zzz)
com.google.firebase.database.snapshot.StringNode: java.lang.String getHashRepresentation(com.google.firebase.database.snapshot.Node$HashVersion)
com.google.android.gms.signin.internal.zak: void writeToParcel(android.os.Parcel,int)
kotlin.collections.SetsKt__SetsKt: java.util.Set optimizeReadOnlySet(java.util.Set)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void onBoundsChange(android.graphics.Rect)
androidx.fragment.app.FragmentContainerView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)
net.touchcapture.qr.flutterqr.QRView: net.touchcapture.qr.flutterqr.CustomFramingRectBarcodeView access$getBarcodeView$p(net.touchcapture.qr.flutterqr.QRView)
kotlinx.coroutines.flow.AbstractFlow$collect$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.internal.LockFreeLinkedListNode: void finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode)
com.google.android.gms.common.api.internal.GoogleApiManager$zab: boolean zaa(com.google.android.gms.common.api.internal.GoogleApiManager$zab,boolean)
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric: boolean isSecondDigitFNC1()
com.google.android.gms.common.api.internal.GoogleApiManager: long zai(com.google.android.gms.common.api.internal.GoogleApiManager)
com.google.zxing.qrcode.decoder.DataBlock: DataBlock(int,byte[])
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2$1: java.lang.Object next()
com.google.firebase.database.collection.LLRBBlackValueNode: com.google.firebase.database.collection.LLRBValueNode copy(java.lang.Object,java.lang.Object,com.google.firebase.database.collection.LLRBNode,com.google.firebase.database.collection.LLRBNode)
com.google.firebase.database.core.SyncTree: java.util.List access$400(com.google.firebase.database.core.SyncTree,com.google.firebase.database.core.operation.Operation)
com.google.zxing.client.android.AmbientLightManager: void onAccuracyChanged(android.hardware.Sensor,int)
io.flutter.plugins.imagepicker.ImageResizer: ImageResizer(java.io.File,io.flutter.plugins.imagepicker.ExifDataCopier)
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: void onStartEnterTransition()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
androidx.fragment.app.FragmentTransitionImpl$2: void run()
io.flutter.embedding.engine.FlutterEngineCache: io.flutter.embedding.engine.FlutterEngineCache getInstance()
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionCancel(android.transition.Transition)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: PlatformChannel$ClipboardContentFormat(java.lang.String,int,java.lang.String)
com.google.zxing.aztec.detector.Detector: boolean isValid(int,int)
com.google.android.gms.maps.GoogleMap: void setMapType(int)
io.flutter.plugins.imagepicker.ImagePickerDelegate: ImagePickerDelegate(android.app.Activity,java.io.File,io.flutter.plugins.imagepicker.ImageResizer,io.flutter.plugin.common.MethodChannel$Result,io.flutter.plugin.common.MethodCall,io.flutter.plugins.imagepicker.ImagePickerCache,io.flutter.plugins.imagepicker.ImagePickerDelegate$PermissionManager,io.flutter.plugins.imagepicker.ImagePickerDelegate$FileUriResolver,io.flutter.plugins.imagepicker.FileUtils)
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback unwrap()
com.google.firebase.database.core.persistence.PruneForest: boolean equals(java.lang.Object)
io.flutter.plugins.googlemaps.MarkerController: void showInfoWindow()
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
androidx.arch.core.internal.SafeIterableMap: java.util.Iterator iterator()
androidx.fragment.app.BackStackState: BackStackState(androidx.fragment.app.BackStackRecord)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.renderer.FlutterRenderer getRenderer()
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)
com.google.android.gms.maps.model.SquareCap: SquareCap()
kotlinx.coroutines.CoroutineDispatcher$Key: CoroutineDispatcher$Key(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void onFinishInflate()
com.google.android.gms.common.internal.ClientSettings: ClientSettings(android.accounts.Account,java.util.Set,java.util.Map,int,android.view.View,java.lang.String,java.lang.String,com.google.android.gms.signin.SignInOptions,boolean)
io.flutter.plugins.googlemaps.Convert: com.google.android.gms.maps.model.BitmapDescriptor getBitmapFromBytes(java.util.List)
com.google.zxing.ReaderException: ReaderException(java.lang.Throwable)
com.google.android.gms.dynamite.zzj: int zza(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,boolean)
com.google.firebase.database.connection.PersistentConnectionImpl: void resume(java.lang.String)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper: boolean casValue(com.google.common.util.concurrent.AbstractFuture,java.lang.Object,java.lang.Object)
androidx.core.widget.NestedScrollView: void onMeasure(int,int)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: AccessibilityViewEmbedder$ReflectionAccessors()
io.flutter.plugins.googlemaps.PolylinesController: void removePolylines(java.util.List)
com.google.firebase.database.core.Repo$TransactionData: Repo$TransactionData(com.google.firebase.database.core.Path,com.google.firebase.database.Transaction$Handler,com.google.firebase.database.ValueEventListener,com.google.firebase.database.core.Repo$TransactionStatus,boolean,long,com.google.firebase.database.core.Repo$1)
com.google.android.gms.common.api.Api: com.google.android.gms.common.api.Api$AbstractClientBuilder zai()
com.google.firebase.database.snapshot.ChildKey: com.google.firebase.database.snapshot.ChildKey fromString(java.lang.String)
kotlinx.coroutines.DefaultExecutor: void acknowledgeShutdownIfNeeded()
androidx.fragment.app.BackStackRecord: int commitInternal(boolean)
com.google.firebase.database.core.utilities.ImmutableTree: java.lang.Object leafMostValue(com.google.firebase.database.core.Path)
com.google.android.gms.common.api.internal.zag: void zad(com.google.android.gms.common.api.internal.GoogleApiManager$zaa)
androidx.appcompat.view.menu.ActionMenuItem: boolean isVisible()
com.google.firebase.database.snapshot.IndexedNode: java.util.Iterator iterator()
com.google.firebase.database.core.SyncTree$3: java.lang.Object call()
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(android.content.Context,android.util.AttributeSet)
kotlin.jvm.internal.Intrinsics: java.lang.String stringPlus(java.lang.String,java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer: void startRenderingToSurface(android.view.Surface,boolean)
com.google.android.gms.tasks.Tasks$zzc: void zzf()
com.google.android.gms.common.api.internal.zabh: zabh(com.google.android.gms.common.api.internal.GoogleApiManager)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeListener(androidx.core.util.Consumer)
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.journeyapps.barcodescanner.CaptureManager: void onSaveInstanceState(android.os.Bundle)
com.google.android.gms.maps.model.zzu: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.Log: void w(java.lang.String,java.lang.String)
com.google.zxing.qrcode.decoder.DataMask$2: DataMask$2(java.lang.String,int)
com.google.firebase.database.core.persistence.TrackedQuery: java.lang.String toString()
com.google.zxing.client.android.InactivityTimer: void cancelCallback()
com.google.firebase.database.snapshot.ChildrenNode$1: int compare(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
com.google.android.gms.common.api.internal.ListenerHolder: void notifyListener(com.google.android.gms.common.api.internal.ListenerHolder$Notifier)
com.google.firebase.database.core.Repo: void restoreWrites(com.google.firebase.database.core.persistence.PersistenceManager)
io.flutter.plugins.googlemaps.MarkersController: MarkersController(io.flutter.plugin.common.MethodChannel)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
androidx.appcompat.widget.LinearLayoutCompat: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.google.zxing.common.BitSource: int getBitOffset()
kotlinx.coroutines.EventLoop: void incrementUseCount(boolean)
com.google.firebase.database.connection.PersistentConnectionImpl$1: void onError(java.lang.String)
androidx.core.widget.ImageViewCompat: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
com.journeyapps.barcodescanner.camera.CenterCropStrategy: CenterCropStrategy()
com.journeyapps.barcodescanner.CaptureManager: void onPause()
androidx.appcompat.widget.ActionMenuPresenter: void setReserveOverflow(boolean)
com.google.android.gms.location.FusedLocationProviderClient: FusedLocationProviderClient(android.content.Context)
androidx.lifecycle.DefaultLifecycleObserver: void onStop(androidx.lifecycle.LifecycleOwner)
androidx.core.view.WindowInsetsCompat: boolean isConsumed()
com.lyokone.location.FlutterLocationService: java.util.Map changeNotificationOptions(com.lyokone.location.NotificationOptions)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setCollapsible(boolean)
com.google.firebase.database.core.WriteTree: WriteTree()
androidx.appcompat.app.AppCompatActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
kotlin.coroutines.EmptyCoroutineContext: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
com.google.android.gms.internal.maps.zzv: java.lang.String getId()
com.google.android.gms.maps.GoogleMapOptions: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAutoMirrored(boolean)
androidx.appcompat.widget.AppCompatImageHelper: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.baseflow.geolocator.location.LocationAccuracyStatus: com.baseflow.geolocator.location.LocationAccuracyStatus[] values()
com.google.android.gms.signin.internal.SignInClientImpl: SignInClientImpl(android.content.Context,android.os.Looper,boolean,com.google.android.gms.common.internal.ClientSettings,android.os.Bundle,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)
com.baseflow.geolocator.location.LocationOptions: LocationOptions(com.baseflow.geolocator.location.LocationAccuracy,long,long)
kotlinx.coroutines.StandaloneCoroutine: boolean handleJobException(java.lang.Throwable)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getMinimumWidth()
io.flutter.plugin.platform.PlatformViewsController: android.util.SparseArray access$400(io.flutter.plugin.platform.PlatformViewsController)
com.google.firebase.database.core.view.QueryParams: int getLimit()
io.flutter.plugins.googlemaps.MarkerController: boolean isInfoWindowShown()
androidx.collection.MapCollections$ValuesCollection: boolean remove(java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)
kotlinx.coroutines.flow.AbstractFlow: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
com.baseflow.geolocator.location.AndroidIconResource: com.baseflow.geolocator.location.AndroidIconResource parseArguments(java.util.Map)
androidx.appcompat.widget.SearchView: boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent)
androidx.appcompat.view.menu.CascadingMenuPopup: void setForceShowIcon(boolean)
com.google.android.gms.internal.maps.zzj: int zzj()
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup)
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock$1: void run()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setVisible(boolean)
com.google.common.util.concurrent.ThreadFactoryBuilder: java.lang.String format(java.lang.String,java.lang.Object[])
androidx.fragment.app.FragmentManager: boolean isParentMenuVisible(androidx.fragment.app.Fragment)
com.google.android.gms.location.zzj: java.lang.String toString()
androidx.appcompat.widget.DropDownListView: void positionSelectorLikeTouchCompat(int,android.view.View,float,float)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setMinMaxZoomPreference(java.lang.Float,java.lang.Float)
androidx.core.content.FileProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)
androidx.appcompat.widget.ListPopupWindow: void setAnchorView(android.view.View)
androidx.appcompat.view.menu.StandardMenuPopup: void dismiss()
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams()
kotlin.random.Random: kotlin.random.Random access$getDefaultRandom$cp()
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
androidx.fragment.app.SuperNotCalledException: SuperNotCalledException(java.lang.String)
com.google.firebase.database.snapshot.ChildrenNode: int getChildCount()
com.google.firebase.database.core.Repo$8: Repo$8(com.google.firebase.database.core.Repo,com.google.firebase.database.core.Path,long,com.google.firebase.database.DatabaseReference$CompletionListener)
com.google.android.gms.maps.internal.zzs: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
androidx.core.app.NotificationCompat$BigTextStyle: java.lang.String getClassName()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
kotlinx.coroutines.CompletedContinuation: kotlinx.coroutines.CompletedContinuation copy$default(kotlinx.coroutines.CompletedContinuation,java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int available()
com.google.zxing.Result: com.google.zxing.ResultPoint[] getResultPoints()
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
androidx.appcompat.widget.ButtonBarLayout: boolean isStacked()
androidx.appcompat.view.menu.MenuItemImpl: java.lang.String getShortcutLabel()
androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String)
androidx.collection.ArrayMap: ArrayMap()
androidx.appcompat.view.menu.BaseMenuPresenter: void setId(int)
io.flutter.plugin.editing.TextInputPlugin: void clearTextInputClient()
com.google.firebase.database.connection.PersistentConnectionImpl: boolean access$2900(com.google.firebase.database.connection.PersistentConnectionImpl)
com.google.android.gms.internal.maps.zzy: void setStrokeWidth(float)
androidx.window.layout.SidecarWindowBackend: void callbackRemovedForActivity(android.app.Activity)
com.google.android.gms.maps.zzu: zzu(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnCameraMoveStartedListener)
kotlinx.coroutines.AbstractCoroutine: void afterResume(java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItem: android.content.res.ColorStateList getIconTintList()
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle decodeSystemChromeStyle(org.json.JSONObject)
com.journeyapps.barcodescanner.camera.FitXYStrategy: float getScore(com.journeyapps.barcodescanner.Size,com.journeyapps.barcodescanner.Size)
androidx.core.app.NotificationManagerCompat: void createNotificationChannel(android.app.NotificationChannel)
androidx.window.layout.FoldingFeature$State: FoldingFeature$State(java.lang.String)
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: android.os.Bundle createBundle(android.os.Parcel,int)
androidx.core.app.NotificationCompat$Action: boolean getAllowGeneratedReplies()
androidx.core.content.res.TypedArrayUtils: androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int)
io.flutter.view.FlutterMain: java.lang.String getLookupKeyForAsset(java.lang.String)
io.flutter.embedding.engine.systemchannels.AccessibilityChannel: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
com.google.zxing.oned.rss.FinderPattern: int hashCode()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
com.google.firebase.database.core.Context: java.util.concurrent.ScheduledExecutorService getExecutorService()
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.fragment.app.FragmentManager: boolean isStateSaved()
com.google.android.gms.common.internal.BaseGmsClient$zzb: void handleMessage(android.os.Message)
com.google.firebase.database.Query: com.google.firebase.database.Query orderByKey()
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: androidx.fragment.app.FragmentTransitionImpl getHandlingImpl(java.lang.Object)
androidx.core.view.ContentInfoCompat: java.lang.String flagsToString(int)
com.google.android.gms.tasks.zzu$zza: void onStop()
io.flutter.plugins.googlemaps.TileOverlaysController: java.util.Map getTileOverlayInfo(java.lang.String)
com.google.firebase.database.DatabaseReference: com.google.android.gms.tasks.Task updateChildren(java.util.Map)
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()
io.flutter.plugin.common.MethodChannel: void invokeMethod(java.lang.String,java.lang.Object,io.flutter.plugin.common.MethodChannel$Result)
net.touchcapture.qr.flutterqr.CustomFramingRectBarcodeView$Companion: CustomFramingRectBarcodeView$Companion()
kotlin.jvm.internal.ClassReference$Companion: ClassReference$Companion()
com.google.android.gms.internal.location.zzo: void writeToParcel(android.os.Parcel,int)
com.google.zxing.common.reedsolomon.GenericGF: int getGeneratorBase()
io.flutter.plugin.common.BasicMessageChannel: void send(java.lang.Object)
androidx.fragment.app.FragmentManager: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)
androidx.appcompat.widget.SuggestionsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)
com.google.zxing.datamatrix.decoder.Version$ECBlocks: Version$ECBlocks(int,com.google.zxing.datamatrix.decoder.Version$ECB,com.google.zxing.datamatrix.decoder.Version$ECB)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setDither(boolean)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$tryCopyException$5$1: java.lang.Object invoke(java.lang.Object)
kotlin.jvm.internal.ClassReference: java.util.Map access$getSimpleNames$cp()
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.PolylineOptions visible(boolean)
com.google.zxing.qrcode.decoder.Version$ECB: Version$ECB(int,int)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.firebase.FirebaseOptions: java.lang.String getApplicationId()
androidx.appcompat.widget.Toolbar: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: float readFloat()
com.google.android.gms.maps.model.Marker: boolean isInfoWindowShown()
com.google.android.gms.common.ConnectionResult: ConnectionResult(int,android.app.PendingIntent,java.lang.String)
com.journeyapps.barcodescanner.camera.CameraSettings: boolean isAutoTorchEnabled()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAlpha(int)
com.google.android.gms.common.api.Response: com.google.android.gms.common.api.Result getResult()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateNextCopy(long)
kotlin.coroutines.CoroutineContext$Element$DefaultImpls: java.lang.Object fold(kotlin.coroutines.CoroutineContext$Element,java.lang.Object,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.zxing.oned.CodaBarReader: void setCounters(com.google.zxing.common.BitArray)
com.journeyapps.barcodescanner.camera.CameraInstance$3: CameraInstance$3(com.journeyapps.barcodescanner.camera.CameraInstance)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
androidx.appcompat.widget.ViewStubCompat: android.view.View inflate()
io.flutter.plugins.imagepicker.ImageResizer: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void readFully(byte[],int,int)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$4: java.lang.Throwable invoke(java.lang.Throwable)
androidx.appcompat.widget.SearchView$SearchAutoComplete: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
com.google.android.gms.common.util.CrashUtils: boolean zza(android.content.Context,java.lang.Throwable,int)
com.google.firebase.database.core.persistence.NoopPersistenceManager: java.lang.Object runInTransaction(java.util.concurrent.Callable)
androidx.appcompat.widget.ActionBarOverlayLayout: void postRemoveActionBarHideOffset()
com.google.android.gms.common.GooglePlayServicesUtil: int isGooglePlayServicesAvailable(android.content.Context,int)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long)
com.google.firebase.database.MutableData: java.lang.Object getValue()
androidx.core.widget.AutoScrollHelper$ClampedScroller: int getDeltaY()
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback: ActionMenuPresenter$PopupPresenterCallback(androidx.appcompat.widget.ActionMenuPresenter)
com.google.firebase.database.core.Repo$TransactionData: com.google.firebase.database.DatabaseError access$2902(com.google.firebase.database.core.Repo$TransactionData,com.google.firebase.database.DatabaseError)
com.google.firebase.database.snapshot.StringNode: com.google.firebase.database.snapshot.StringNode updatePriority(com.google.firebase.database.snapshot.Node)
io.flutter.plugins.googlemaps.CirclesController: void removeCircles(java.util.List)
androidx.appcompat.widget.AlertDialogLayout: int resolveMinimumHeight(android.view.View)
androidx.exifinterface.media.ExifInterface$ExifAttribute: double getDoubleValue(java.nio.ByteOrder)
androidx.tracing.Trace: void handleException(java.lang.String,java.lang.Exception)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
com.google.zxing.oned.rss.expanded.ExpandedRow: int getRowNumber()
com.google.firebase.database.core.Repo$14: void visitTree(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node)
androidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)
io.flutter.plugins.googlemaps.PolylineBuilder: void setStartCap(com.google.android.gms.maps.model.Cap)
kotlinx.coroutines.scheduling.CoroutineScheduler: CoroutineScheduler(int,int,long,java.lang.String)
androidx.appcompat.view.menu.MenuAdapter: int getCount()
com.google.firebase.database.core.Repo$8: void onRequestResult(java.lang.String,java.lang.String)
androidx.fragment.app.FragmentTransition: void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
androidx.exifinterface.media.ExifInterface: void getRawAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
com.google.android.gms.common.internal.BaseGmsClient$zza: BaseGmsClient$zza(com.google.android.gms.common.internal.BaseGmsClient,int,android.os.Bundle)
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.Object newFamily()
androidx.core.widget.TextViewCompat: android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback)
kotlinx.coroutines.JobNode: kotlinx.coroutines.NodeList getList()
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean setState(int[])
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
io.flutter.plugins.imagepicker.ImagePickerPlugin: void onDetachedFromActivity()
com.google.android.gms.maps.MapView$zza: void onStart()
io.flutter.embedding.android.FlutterTextureView: void connectSurfaceToRenderer()
com.google.android.gms.internal.common.zzb: boolean zza(int,android.os.Parcel,android.os.Parcel,int)
androidx.exifinterface.media.ExifInterface$Rational: java.lang.String toString()
com.lyokone.location.LocationPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void distributeKeyframes(android.animation.Keyframe[],float,int,int)
androidx.window.embedding.EmbeddingInterfaceCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
androidx.fragment.app.FragmentStore: void makeActive(androidx.fragment.app.FragmentStateManager)
androidx.appcompat.widget.ActionMenuView: void onMeasureExactFormat(int,int)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3402(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int)
com.google.android.gms.common.internal.BaseGmsClient: void zza(com.google.android.gms.common.internal.BaseGmsClient,com.google.android.gms.common.internal.zzb)
com.google.zxing.oned.rss.FinderPattern: boolean equals(java.lang.Object)
com.google.android.gms.internal.location.zzbe: java.lang.Object createFromParcel(android.os.Parcel)
com.google.firebase.database.core.operation.AckUserWrite: boolean isRevert()
androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.zxing.pdf417.PDF417ResultMetadata: void setFileId(java.lang.String)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void cancel()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.lang.reflect.Field getTextViewField(java.lang.String)
androidx.cursoradapter.widget.CursorAdapter: java.lang.Object getItem(int)
androidx.fragment.app.FragmentManager$2: void onStart(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal)
androidx.core.view.inputmethod.EditorInfoCompat: void setInitialSurroundingText(android.view.inputmethod.EditorInfo,java.lang.CharSequence)
io.flutter.plugin.editing.InputConnectionAdaptor: InputConnectionAdaptor(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.embedding.android.KeyboardManager,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean commitText(java.lang.CharSequence,int)
io.flutter.plugins.imagepicker.ImagePickerDelegate: boolean needRequestCameraPermission()
com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator: int compare(com.google.zxing.qrcode.detector.FinderPattern,com.google.zxing.qrcode.detector.FinderPattern)
androidx.appcompat.app.AppCompatDialog: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.google.firebase.database.collection.RBTreeSortedMap: com.google.firebase.database.collection.ImmutableSortedMap insert(java.lang.Object,java.lang.Object)
com.journeyapps.barcodescanner.Size: com.journeyapps.barcodescanner.Size scaleFit(com.journeyapps.barcodescanner.Size)
com.google.android.gms.dynamic.ObjectWrapper: com.google.android.gms.dynamic.IObjectWrapper wrap(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
androidx.core.graphics.drawable.IconCompat: android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)
androidx.appcompat.widget.ActionMenuPresenter: boolean isOverflowMenuShowPending()
com.google.firebase.database.core.utilities.Utilities: com.google.firebase.database.core.utilities.Pair wrapOnComplete(com.google.firebase.database.DatabaseReference$CompletionListener)
androidx.appcompat.view.menu.StandardMenuPopup: boolean tryShow()
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: int correctErrors(int[],int[],int)
kotlin.Result$Failure: Result$Failure(java.lang.Throwable)
io.flutter.plugins.imagepicker.FileUtils: FileUtils()
androidx.core.graphics.drawable.IconCompat: int getResId()
androidx.core.graphics.drawable.WrappedDrawableApi14: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.core.util.Preconditions: int checkFlagsArgument(int,int)
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
kotlinx.coroutines.android.HandlerContext: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
com.journeyapps.barcodescanner.DecoratedBarcodeView: void setTorchOn()
androidx.fragment.app.SpecialEffectsController$Operation: void cancel()
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityEvent access$300(io.flutter.view.AccessibilityBridge,int,int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.google.android.gms.common.api.internal.BackgroundDetector: void onActivityPaused(android.app.Activity)
com.journeyapps.barcodescanner.CaptureManager$1: void possibleResultPoints(java.util.List)
com.google.firebase.database.core.persistence.TrackedQueryManager: void resetPreviouslyActiveTrackedQueries()
com.google.firebase.database.core.persistence.TrackedQueryManager$3: boolean evaluate(java.lang.Object)
com.google.firebase.database.core.view.ViewProcessor$WriteTreeCompleteChildSource: com.google.firebase.database.snapshot.NamedNode getChildAfterChild(com.google.firebase.database.snapshot.Index,com.google.firebase.database.snapshot.NamedNode,boolean)
com.google.android.gms.dynamite.zzl: zzl(android.os.IBinder)
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void dismiss()
io.flutter.embedding.android.FlutterActivity: void onNewIntent(android.content.Intent)
com.journeyapps.barcodescanner.camera.CameraManager: java.lang.String access$100()
com.google.firebase.database.core.ValidationPath: void withObject(java.lang.Object)
io.flutter.plugins.googlemaps.MarkersController: void setGoogleMap(com.google.android.gms.maps.GoogleMap)
com.google.zxing.pdf417.PDF417Reader: int getMaxWidth(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)
com.google.zxing.Result: void putAllMetadata(java.util.Map)
androidx.appcompat.app.LayoutIncludeDetector: boolean isParserOutdated(org.xmlpull.v1.XmlPullParser)
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.LifecycleChannel getLifecycleChannel()
androidx.window.core.Bounds: int getLeft()
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor: boolean onTouch(android.view.View,android.view.MotionEvent)
com.google.android.gms.dynamic.DeferredLifecycleHelper: com.google.android.gms.dynamic.LifecycleDelegate getDelegate()
com.google.firebase.database.connection.PersistentConnectionImpl: boolean idleHasTimedOut()
com.google.zxing.qrcode.decoder.DecodedBitStreamParser: void decodeKanjiSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int)
com.google.android.gms.maps.model.Marker: void setVisible(boolean)
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet)
com.google.zxing.pdf417.PDF417ResultMetadata: void setOptionalData(int[])
androidx.fragment.app.BackStackState: androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManager)
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver: void onActivityStarted(android.app.Activity)
androidx.appcompat.widget.Toolbar: void measureChildConstrained(android.view.View,int,int,int,int,int)
com.google.firebase.database.connection.util.StringListReader: void checkState()
io.flutter.embedding.engine.loader.FlutterLoader: void startInitialization(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader$Settings)
androidx.fragment.app.FragmentActivity: void onResume()
androidx.collection.MapCollections$KeySet: boolean isEmpty()
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: boolean setFrame(int,int,int,int)
com.google.firebase.database.core.Repo$6: void onRequestResult(java.lang.String,java.lang.String)
io.flutter.view.AccessibilityBridge$SemanticsNode: int access$6300(io.flutter.view.AccessibilityBridge$SemanticsNode)
com.google.firebase.database.connection.PersistentConnectionImpl$QuerySpec: java.util.List access$100(com.google.firebase.database.connection.PersistentConnectionImpl$QuerySpec)
com.google.firebase.database.core.view.filter.LimitedFilter: com.google.firebase.database.snapshot.IndexedNode updateChild(com.google.firebase.database.snapshot.IndexedNode,com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node,com.google.firebase.database.core.Path,com.google.firebase.database.core.view.filter.NodeFilter$CompleteChildSource,com.google.firebase.database.core.view.filter.ChildChangeAccumulator)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler: BasicMessageChannel$IncomingReplyHandler(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean)
androidx.appcompat.widget.TintContextWrapper: android.content.Context wrap(android.content.Context)
androidx.core.provider.FontRequestWorker$2: void accept(androidx.core.provider.FontRequestWorker$TypefaceResult)
io.flutter.plugins.googlemaps.CirclesController: boolean onCircleTap(java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
com.google.firebase.components.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
com.google.firebase.database.core.view.filter.ChildChangeAccumulator: void trackChildChange(com.google.firebase.database.core.view.Change)
com.journeyapps.barcodescanner.BarcodeView$DecodeMode: com.journeyapps.barcodescanner.BarcodeView$DecodeMode valueOf(java.lang.String)
androidx.fragment.app.BackStackState$1: java.lang.Object[] newArray(int)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void useFrontCamera(android.content.Intent)
com.google.firebase.database.core.SparseSnapshotTree: SparseSnapshotTree()
com.google.firebase.database.core.Tag: Tag(long)
androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
androidx.window.embedding.SplitPlaceholderRule: int hashCode()
androidx.appcompat.view.menu.MenuItemImpl: void actionFormatChanged()
com.google.android.gms.common.internal.safeparcel.SafeParcelReader: java.lang.Float readFloatObject(android.os.Parcel,int)
androidx.appcompat.widget.AppCompatRatingBar: AppCompatRatingBar(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setFilterBitmap(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setState(int[])
androidx.window.core.Version: int getPatch()
com.baseflow.geolocator.location.GeolocationManager: boolean onActivityResult(int,int,android.content.Intent)
androidx.interpolator.view.animation.LinearOutSlowInInterpolator: LinearOutSlowInInterpolator()
com.google.android.gms.internal.maps.zzx: com.google.android.gms.internal.maps.zzw zzh(android.os.IBinder)
kotlinx.coroutines.Job$Key: Job$Key()
androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)
kotlinx.coroutines.channels.ChannelResult$Failed: ChannelResult$Failed()
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
androidx.appcompat.widget.AppCompatRadioButton: AppCompatRadioButton(android.content.Context,android.util.AttributeSet,int)
androidx.interpolator.view.animation.FastOutSlowInInterpolator: float getInterpolation(float)
com.google.firebase.database.core.view.ViewProcessor$1: com.google.firebase.database.snapshot.Node getCompleteChild(com.google.firebase.database.snapshot.ChildKey)
com.lyokone.location.FlutterLocationService: io.flutter.plugin.common.PluginRegistry$ActivityResultListener getLocationActivityResultListener()
androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,int,boolean)
androidx.fragment.app.FragmentManager: void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)
androidx.fragment.app.FragmentAnim$AnimationOrAnimator: FragmentAnim$AnimationOrAnimator(android.animation.Animator)
com.google.zxing.MultiFormatReader: MultiFormatReader()
androidx.core.graphics.TypefaceCompatBaseImpl$2: boolean isItalic(java.lang.Object)
com.google.android.gms.tasks.zzk: java.lang.Object zza(com.google.android.gms.tasks.zzk)
com.journeyapps.barcodescanner.CameraPreview: void setPreviewScalingStrategy(com.journeyapps.barcodescanner.camera.PreviewScalingStrategy)
androidx.tracing.Trace: void endSection()
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1: void onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply)
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: DecodedBitStreamParser$Mode(java.lang.String,int)
com.journeyapps.barcodescanner.camera.CameraSurface: CameraSurface(android.graphics.SurfaceTexture)
com.google.firebase.database.core.SyncTree: com.google.firebase.database.core.view.QuerySpec queryForListening(com.google.firebase.database.core.view.QuerySpec)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher: void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean)
com.google.zxing.qrcode.decoder.BitMatrixParser: void remask()
androidx.activity.ComponentActivity$NonConfigurationInstances: ComponentActivity$NonConfigurationInstances()
com.google.zxing.oned.rss.AbstractRSSReader: float[] getOddRoundingErrors()
androidx.core.graphics.TypefaceCompatBaseImpl$1: TypefaceCompatBaseImpl$1(androidx.core.graphics.TypefaceCompatBaseImpl)
androidx.core.content.FileProvider: boolean onCreate()
io.flutter.embedding.engine.systemchannels.PlatformChannel: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode decodeSystemUiMode(java.lang.String)
io.flutter.embedding.android.FlutterSurfaceView: boolean access$002(io.flutter.embedding.android.FlutterSurfaceView,boolean)
kotlinx.coroutines.internal.InlineList: java.lang.Object constructor-impl(java.lang.Object)
androidx.collection.ArraySet: ArraySet()
kotlin.jvm.internal.Lambda: java.lang.String toString()
kotlin.text.StringsKt__StringNumberConversionsKt: java.lang.Integer toIntOrNull(java.lang.String,int)
com.google.android.gms.common.api.internal.zabv: zabv(com.google.android.gms.common.api.internal.RegisterListenerMethod,com.google.android.gms.common.api.internal.UnregisterListenerMethod)
io.flutter.plugins.googlemaps.PolygonBuilder: void setStrokeColor(int)
com.google.firebase.database.snapshot.PriorityUtilities: boolean isValidPriority(com.google.firebase.database.snapshot.Node)
com.baseflow.geolocator.location.BackgroundNotification: void updateChannel(java.lang.String)
kotlin.text.StringsKt__StringsJVMKt: boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object)
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
kotlin.ranges.IntProgressionIterator: IntProgressionIterator(int,int,int)
com.google.android.gms.maps.model.zzf: zzf()
com.google.android.gms.dynamic.DeferredLifecycleHelper: com.google.android.gms.dynamic.LifecycleDelegate zab(com.google.android.gms.dynamic.DeferredLifecycleHelper)
androidx.appcompat.widget.AppCompatTextView: void setTextSize(int,float)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: FontResourcesParserCompat$FontFileResourceEntry(java.lang.String,int,boolean,java.lang.String,int,int)
androidx.multidex.MultiDex$V14$ICSElementConstructor: java.lang.Object newInstance(java.io.File,dalvik.system.DexFile)
com.journeyapps.barcodescanner.CameraPreview: com.journeyapps.barcodescanner.CameraPreview$StateListener access$400(com.journeyapps.barcodescanner.CameraPreview)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: ExtensionEmbeddingBackend$SplitListenerWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.baseflow.geolocator.location.AndroidIconResource: java.lang.String getName()
com.google.android.gms.maps.GoogleMap: com.google.android.gms.maps.model.Marker addMarker(com.google.android.gms.maps.model.MarkerOptions)
androidx.appcompat.view.WindowCallbackWrapper: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)
com.google.common.util.concurrent.AbstractFuture: boolean cancel(boolean)
com.google.firebase.database.connection.PersistentConnectionImpl: void sendStats(java.util.Map)
com.baseflow.geolocator.location.LocationManagerClient: void stopPositionUpdates()
com.google.android.gms.internal.location.zzn: java.lang.Object[] newArray(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setHotspotBounds(int,int,int,int)
com.google.android.gms.common.internal.BaseGmsClient: com.google.android.gms.common.ConnectionResult zza(com.google.android.gms.common.internal.BaseGmsClient,com.google.android.gms.common.ConnectionResult)
androidx.fragment.app.FragmentState: FragmentState(android.os.Parcel)
androidx.appcompat.widget.SearchView$4: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)
io.flutter.embedding.android.FlutterActivity: void onUserLeaveHint()
com.google.firebase.database.snapshot.EmptyNode: boolean hasChild(com.google.firebase.database.snapshot.ChildKey)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
com.google.firebase.database.core.Path$1: com.google.firebase.database.snapshot.ChildKey next()
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: boolean onForwardingStarted()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean dispatchOnCreate()
com.google.zxing.oned.rss.RSS14Reader: com.google.zxing.oned.rss.DataCharacter decodeDataCharacter(com.google.zxing.common.BitArray,com.google.zxing.oned.rss.FinderPattern,boolean)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setColorFilter(android.graphics.ColorFilter)
androidx.collection.ArraySet$1: void colPut(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
com.google.firebase.database.core.ZombieEventManager: void unRecordEventRegistration(com.google.firebase.database.core.EventRegistration)
com.google.android.gms.internal.location.zzaz: zzaz(android.content.Context,android.os.Looper,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener,java.lang.String,com.google.android.gms.common.internal.ClientSettings)
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: com.google.zxing.oned.rss.expanded.decoders.DecodedChar decodeAlphanumeric(int)
androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.fragment.app.DialogFragment: void setupDialog(android.app.Dialog,int)
com.journeyapps.barcodescanner.CameraPreview: void rotationChanged()
androidx.lifecycle.ViewModelStore: ViewModelStore()
kotlin.collections.EmptyList: void add(int,java.lang.Object)
androidx.core.provider.CallbackWithHandler$1: void run()
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1: void reply(java.lang.Object)
androidx.core.widget.TextViewCompat$OreoCallback: void recomputeProcessTextMenuItems(android.view.Menu)
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getIO()
com.google.firebase.database.FirebaseDatabase: void goOnline()
com.google.zxing.oned.Code39Reader: char patternToChar(int)
io.flutter.plugins.googlemaps.GoogleMapController: void destroyMapViewIfNecessary()
com.google.firebase.database.connection.util.RetryHelper: void retry(java.lang.Runnable)
com.journeyapps.barcodescanner.camera.CameraInstance: void requestPreview(com.journeyapps.barcodescanner.camera.PreviewCallback)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setHotspotBounds(int,int,int,int)
com.google.android.gms.common.internal.GmsClientSupervisor: com.google.android.gms.common.internal.GmsClientSupervisor getInstance(android.content.Context)
androidx.appcompat.widget.TintContextWrapper: android.content.res.Resources getResources()
androidx.fragment.app.FragmentManagerState$1: androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel)
androidx.lifecycle.ReportFragment: void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setTintMode(android.graphics.PorterDuff$Mode)
kotlin.sequences.TransformingSequence$iterator$1: TransformingSequence$iterator$1(kotlin.sequences.TransformingSequence)
androidx.window.embedding.EmptyEmbeddingComponent: void setEmbeddingRules(java.util.Set)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
com.google.android.gms.location.zzaa: java.lang.Object[] newArray(int)
com.google.firebase.database.snapshot.NamedNode: int hashCode()
com.google.firebase.database.connection.PersistentConnectionImpl: void cancelSentTransactions()
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: AppCompatDelegateImpl$PanelFeatureState(int)
com.google.zxing.common.DecoderResult: void setErasures(java.lang.Integer)
com.google.android.gms.maps.model.Marker: void setFlat(boolean)
kotlin.sequences.TransformingSequence: TransformingSequence(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat: WindowInsetsCompat(android.view.WindowInsets)
io.flutter.embedding.engine.renderer.FlutterRenderer: void access$500(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()
androidx.appcompat.widget.ListPopupWindow: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
kotlinx.coroutines.channels.ArrayChannel: boolean isBufferAlwaysEmpty()
com.baseflow.geolocator.permission.PermissionManager: boolean hasPermission(android.content.Context)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
kotlinx.coroutines.flow.internal.NoOpContinuation: kotlin.coroutines.CoroutineContext getContext()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
kotlinx.coroutines.channels.ConflatedChannel: java.lang.String getBufferDebugString()
androidx.exifinterface.media.ExifInterface: void copyChunksUpToGivenChunkType(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream,byte[],byte[])
androidx.window.embedding.ActivityFilter: int hashCode()
com.google.firebase.database.core.SyncTree: void collectDistinctViewsForSubTree(com.google.firebase.database.core.utilities.ImmutableTree,java.util.List)
com.google.firebase.database.connection.PersistentConnectionImpl: void onKill(java.lang.String)
androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintList(android.content.res.ColorStateList)
androidx.fragment.app.FragmentManager: void doPendingDeferredStart()
androidx.appcompat.app.AlertController: void setView(int)
com.google.zxing.datamatrix.detector.Detector: com.google.zxing.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint)
androidx.appcompat.widget.ActionBarContextView$1: void onClick(android.view.View)
androidx.core.graphics.TypefaceCompatApi21Impl: java.io.File getFile(android.os.ParcelFileDescriptor)
androidx.appcompat.widget.AppCompatTextHelper: AppCompatTextHelper(android.widget.TextView)
androidx.window.core.Version$Companion: androidx.window.core.Version parse(java.lang.String)
com.google.android.gms.maps.UiSettings: void setMyLocationButtonEnabled(boolean)
com.journeyapps.barcodescanner.CaptureManager: void setMissingCameraPermissionResult()
com.google.android.gms.common.api.internal.GoogleApiManager$zab: void zaa(com.google.android.gms.common.internal.IAccountAccessor,java.util.Set)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void removeListener(androidx.core.util.Consumer)
com.lyokone.location.FlutterLocation: void requestPermissions()
com.google.zxing.qrcode.detector.FinderPattern: FinderPattern(float,float,float,int)
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitRules$window_release(android.content.Context,int)
com.google.firebase.database.core.ValueProvider$DeferredValueProvider: com.google.firebase.database.core.ValueProvider getImmediateChild(com.google.firebase.database.snapshot.ChildKey)
androidx.window.embedding.SplitRule$Api30Impl: SplitRule$Api30Impl()
androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)
com.google.android.gms.tasks.zzr: void zza(com.google.android.gms.tasks.zzq)
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: java.lang.String access$100(java.lang.Exception)
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()
com.google.zxing.MultiFormatReader: com.google.zxing.Result decodeInternal(com.google.zxing.BinaryBitmap)
com.google.firebase.database.core.persistence.PruneForest: PruneForest()
kotlinx.coroutines.UndispatchedMarker: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.Toolbar: void setTitleTextAppearance(android.content.Context,int)
kotlinx.coroutines.channels.LinkedListChannel: boolean isBufferEmpty()
androidx.appcompat.view.menu.ActionMenuItemView: boolean onTouchEvent(android.view.MotionEvent)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
androidx.window.core.Version: boolean equals(java.lang.Object)
kotlinx.coroutines.internal.ThreadContextKt$countAll$1: java.lang.Object invoke(java.lang.Object,kotlin.coroutines.CoroutineContext$Element)
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion()
androidx.appcompat.widget.LinearLayoutCompat: int getLocationOffset(android.view.View)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getParentNodeId(android.view.accessibility.AccessibilityNodeInfo)
com.google.android.gms.common.internal.GmsClient: com.google.android.gms.common.internal.BaseGmsClient$BaseConnectionCallbacks zaa(com.google.android.gms.common.api.internal.ConnectionCallbacks)
com.google.android.gms.internal.location.zzbc: void zza(com.google.android.gms.location.LocationSettingsResult)
androidx.core.content.FileProvider: android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File)
com.google.android.gms.common.internal.zzf: void zzf(java.lang.String)
androidx.window.layout.SidecarAdapter$Companion: java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.appcompat.view.menu.ActionMenuItem: void setShowAsAction(int)
com.google.android.gms.common.GoogleApiAvailabilityLight: android.app.PendingIntent getErrorResolutionPendingIntent(android.content.Context,int,int)
io.flutter.embedding.engine.dart.DartMessenger: void invokeHandler(io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,int)
com.google.common.util.concurrent.AbstractFuture: void addDoneString(java.lang.StringBuilder)
androidx.core.widget.NestedScrollView: void requestDisallowInterceptTouchEvent(boolean)
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener: ListPopupWindow$PopupScrollListener(androidx.appcompat.widget.ListPopupWindow)
io.flutter.plugin.editing.FlutterTextUtils: boolean isTagSpecChar(int)
com.google.android.gms.location.LocationRequest: com.google.android.gms.location.LocationRequest setFastestInterval(long)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: android.view.View onCreateActionView()
androidx.exifinterface.media.ExifInterface: int copy(java.io.InputStream,java.io.OutputStream)
androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme)
androidx.appcompat.graphics.drawable.DrawableWrapper: int getChangingConfigurations()
androidx.appcompat.widget.AppCompatToggleButton: void drawableStateChanged()
com.google.firebase.database.core.Repo$6: Repo$6(com.google.firebase.database.core.Repo,com.google.firebase.database.core.UserWriteRecord)
kotlinx.coroutines.internal.LockFreeLinkedListNode: kotlinx.coroutines.internal.LockFreeLinkedListNode getPrevNode()
com.google.android.gms.common.internal.ResolveAccountResponse: com.google.android.gms.common.internal.IAccountAccessor getAccountAccessor()
androidx.appcompat.widget.ActionMenuPresenter: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.window.embedding.SplitController: void removeSplitListener(androidx.core.util.Consumer)
kotlin.collections.EmptyList: java.util.ListIterator listIterator(int)
com.google.firebase.database.collection.RBTreeSortedMap: RBTreeSortedMap(com.google.firebase.database.collection.LLRBNode,java.util.Comparator)
androidx.appcompat.view.menu.MenuBuilder: void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl)
com.journeyapps.barcodescanner.camera.FitCenterStrategy: android.graphics.Rect scalePreview(com.journeyapps.barcodescanner.Size,com.journeyapps.barcodescanner.Size)
androidx.appcompat.widget.Toolbar: void inflateMenu(int)
io.flutter.plugins.googlemaps.MarkersController: java.lang.String getMarkerId(java.lang.Object)
kotlinx.coroutines.channels.Closed: void completeResumeReceive(java.lang.Object)
com.google.android.gms.location.LocationSettingsResult: com.google.android.gms.common.api.Status getStatus()
com.google.firebase.database.DatabaseException: DatabaseException(java.lang.String)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
kotlinx.coroutines.EventLoopImplBase: boolean isCompleted()
com.google.zxing.datamatrix.decoder.DataBlock: byte[] getCodewords()
androidx.core.text.PrecomputedTextCompat$Params: int hashCode()
io.flutter.embedding.android.FlutterView$2: FlutterView$2(io.flutter.embedding.android.FlutterView)
androidx.window.layout.SidecarCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List extrasIntList(java.lang.String)
kotlinx.coroutines.CancellableContinuationImpl: boolean isReusable()
com.google.zxing.aztec.AztecDetectorResult: int getNbLayers()
com.google.android.gms.maps.model.zzu: java.lang.Object[] newArray(int)
androidx.appcompat.view.menu.MenuBuilder: void setGroupEnabled(int,boolean)
com.google.firebase.database.core.utilities.ImmutableTree: java.lang.Object rootMostValueMatching(com.google.firebase.database.core.Path,com.google.firebase.database.core.utilities.Predicate)
com.google.firebase.database.Query: void removeEventListener(com.google.firebase.database.ChildEventListener)
com.google.android.gms.common.api.internal.GoogleApiManager: void zaa(com.google.android.gms.common.ConnectionResult,int)
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback: KeyboardManager$PerEventCallbackBuilder$Callback(io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder,io.flutter.embedding.android.KeyboardManager$1)
com.google.android.gms.maps.internal.zzg: void setPadding(int,int,int,int)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: java.lang.String access$3502(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String)
com.google.android.gms.location.zzaj: int hashCode()
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: void onDestroyActionMode(androidx.appcompat.view.ActionMode)
com.google.android.gms.location.zzab: java.lang.Object[] newArray(int)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.google.firebase.database.connection.WebsocketConnection: void resetKeepAlive()
com.journeyapps.barcodescanner.camera.CameraManager: void setDesiredParameters(boolean)
com.google.firebase.database.connection.PersistentConnectionImpl$QuerySpec: java.lang.String toString()
androidx.appcompat.app.AlertController$4: void onScroll(android.widget.AbsListView,int,int,int)
androidx.appcompat.widget.ActionMenuView: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
com.google.zxing.pdf417.decoder.DetectionResultRowIndicatorColumn: DetectionResultRowIndicatorColumn(com.google.zxing.pdf417.decoder.BoundingBox,boolean)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void onAnimationsEnded()
com.google.firebase.database.core.Repo: void ackWriteAndRerunTransactions(long,com.google.firebase.database.core.Path,com.google.firebase.database.DatabaseError)
com.google.firebase.components.LazySet: LazySet(java.util.Collection)
com.google.zxing.oned.rss.expanded.ExpandedPair: com.google.zxing.oned.rss.DataCharacter getRightChar()
androidx.appcompat.view.WindowCallbackWrapper: void onDetachedFromWindow()
kotlin.ranges.IntRange: IntRange(int,int)
com.journeyapps.barcodescanner.ViewfinderView$1: void cameraClosed()
com.google.android.gms.internal.location.zzm: zzm(com.google.android.gms.location.zzj,java.util.List,java.lang.String)
com.google.android.gms.signin.internal.zag: zag(android.os.IBinder)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: long generateTransitionKey(int,int)
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: void setBestPreviewFPS(android.hardware.Camera$Parameters)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.app.AppCompatDelegateImpl: void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)
com.google.zxing.pdf417.decoder.ec.ModulusGF: int getSize()
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.common.MessageCodec getCreateArgsCodec()
com.google.android.gms.maps.model.TileOverlay: void setZIndex(float)
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper: void notImplemented()
com.lyokone.location.BackgroundNotification: void updateNotification(com.lyokone.location.NotificationOptions,boolean)
com.google.firebase.database.connection.WebsocketConnection: void start()
com.google.firebase.FirebaseOptions$Builder: com.google.firebase.FirebaseOptions build()
kotlinx.coroutines.internal.MainDispatchersKt: kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher$default(java.lang.Throwable,java.lang.String,int,java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIcon(int)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)
com.google.android.gms.maps.model.CircleOptions: boolean isVisible()
kotlinx.coroutines.JobSupport: void initParentJob(kotlinx.coroutines.Job)
com.google.common.util.concurrent.AbstractFuture$Failure$1: AbstractFuture$Failure$1(java.lang.String)
com.google.zxing.oned.rss.expanded.decoders.DecodedNumeric: int getFirstDigit()
io.flutter.plugin.editing.TextInputPlugin$2: TextInputPlugin$2(io.flutter.plugin.editing.TextInputPlugin,boolean,double[],double[])
com.google.zxing.qrcode.detector.Detector: Detector(com.google.zxing.common.BitMatrix)
com.baseflow.geolocator.LocationServiceHandlerImpl: void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink)
com.journeyapps.barcodescanner.camera.CameraInstance: com.journeyapps.barcodescanner.camera.DisplayConfiguration getDisplayConfiguration()
com.google.firebase.database.core.SyncPoint: SyncPoint(com.google.firebase.database.core.persistence.PersistenceManager)
com.journeyapps.barcodescanner.DecoderThread$1: DecoderThread$1(com.journeyapps.barcodescanner.DecoderThread)
kotlinx.coroutines.channels.AbstractChannel: void onReceiveDequeued()
com.google.android.gms.internal.maps.zzab: void setPattern(java.util.List)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getTtcIndex()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onLayoutDirectionChanged(int)
io.flutter.plugins.imagepicker.ImagePickerPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
kotlin.Pair: java.lang.Object component1()
androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
androidx.core.content.res.GrowingArrayUtils: int[] append(int[],int,int)
androidx.fragment.app.FragmentManager: void enqueueAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void updateSystemUiOverlays()
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult: androidx.activity.result.ActivityResult parseResult(int,android.content.Intent)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
androidx.core.graphics.drawable.IconCompat: void onPreParceling(boolean)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void zabm()
io.flutter.plugin.editing.FlutterTextUtils: boolean isKeycapBase(int)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: void onAnimationStart(android.view.View)
androidx.core.widget.NestedScrollView: boolean scrollAndFocus(int,int,int)
io.flutter.plugins.googlemaps.MarkersController: void onMarkerDragEnd(java.lang.String,com.google.android.gms.maps.model.LatLng)
com.google.firebase.components.Component$Builder: Component$Builder(java.lang.Class,java.lang.Class[])
io.flutter.FlutterInjector: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager()
androidx.fragment.app.FragmentLayoutInflaterFactory$1: void onViewAttachedToWindow(android.view.View)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams()
androidx.core.graphics.drawable.WrappedDrawableApi14: WrappedDrawableApi14(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)
com.google.zxing.datamatrix.decoder.Version: int getVersionNumber()
androidx.collection.ArrayMap$1: void colRemoveAt(int)
com.google.android.gms.tasks.zzu: boolean zza()
com.journeyapps.barcodescanner.CameraPreview: void calculateFrames()
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_1_0()
com.google.firebase.database.core.utilities.Utilities: void hardAssert(boolean)
kotlin.random.FallbackThreadLocalRandom$implStorage$1: java.util.Random initialValue()
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.Class obtainFontFamily()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer getCallback()
androidx.fragment.app.FragmentTransitionImpl$3: FragmentTransitionImpl$3(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map)
io.flutter.embedding.engine.systemchannels.RestorationChannel: RestorationChannel(io.flutter.embedding.engine.dart.DartExecutor,boolean)
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: void onChange()
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextClassifierHelper: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.google.firebase.database.snapshot.ChildrenNode: com.google.firebase.database.snapshot.Node getPriority()
androidx.window.embedding.SplitRule: boolean checkParentMetrics(android.view.WindowMetrics)
androidx.core.app.NotificationManagerCompat: void notify(java.lang.String,int,android.app.Notification)
androidx.core.view.AccessibilityDelegateCompat: AccessibilityDelegateCompat(android.view.View$AccessibilityDelegate)
androidx.collection.MapCollections: boolean containsAllHelper(java.util.Map,java.util.Collection)
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color valueOf(java.lang.String)
io.flutter.embedding.android.SplashScreen: android.os.Bundle saveSplashScreenState()
com.google.firebase.database.core.view.filter.RangedFilter: com.google.firebase.database.snapshot.IndexedNode updatePriority(com.google.firebase.database.snapshot.IndexedNode,com.google.firebase.database.snapshot.Node)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem)
kotlin.jvm.internal.Lambda: Lambda(int)
androidx.window.layout.EmptyDecorator: EmptyDecorator()
androidx.fragment.app.Fragment: android.view.View getAnimatingAway()
com.google.zxing.common.detector.MathUtils: float distance(int,int,int,int)
com.google.firebase.database.core.CompoundWrite: com.google.firebase.database.core.CompoundWrite fromValue(java.util.Map)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.gms.signin.zaa: com.google.android.gms.common.api.Api$Client buildClient(android.content.Context,android.os.Looper,com.google.android.gms.common.internal.ClientSettings,java.lang.Object,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)
com.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime build()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(android.graphics.drawable.Drawable)
com.google.android.gms.maps.GoogleMapOptions: com.google.android.gms.maps.GoogleMapOptions mapType(int)
com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1: sun.misc.Unsafe run()
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: boolean hasSubMenu()
com.google.firebase.database.android.SqlPersistenceStorageEngine: java.lang.String commaSeparatedList(java.util.Collection)
com.google.android.gms.internal.base.zad: android.os.Parcelable zaa(android.os.Parcel,android.os.Parcelable$Creator)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet,int)
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)
io.flutter.plugins.googlemaps.PolylineBuilder: void setPattern(java.util.List)
androidx.collection.ArrayMap$1: void colPut(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.ToolbarWidgetWrapper: void updateToolbarLogo()
com.google.android.gms.maps.Projection: android.graphics.Point toScreenLocation(com.google.android.gms.maps.model.LatLng)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
com.google.android.gms.common.api.GoogleApi: com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl zaa(int,com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)
com.google.android.gms.maps.model.Marker: void hideInfoWindow()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void finish()
com.google.firebase.components.ComponentRuntime$Builder: com.google.firebase.components.ComponentRuntime$Builder addComponentRegistrar(com.google.firebase.components.ComponentRegistrar)
androidx.fragment.app.FragmentState: int describeContents()
kotlin.random.AbstractPlatformRandom: AbstractPlatformRandom()
kotlin.ranges.RangesKt___RangesKt: long coerceAtLeast(long,long)
androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawable(int)
com.journeyapps.barcodescanner.BarcodeView: com.journeyapps.barcodescanner.BarcodeCallback access$000(com.journeyapps.barcodescanner.BarcodeView)
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: com.google.zxing.oned.rss.expanded.decoders.DecodedInformation decodeGeneralPurposeField(int,java.lang.String)
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBNode getMin()
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
com.google.android.gms.common.api.internal.zam: zam(com.google.android.gms.common.ConnectionResult,int)
com.google.android.gms.location.LocationCallback: void onLocationResult(com.google.android.gms.location.LocationResult)
com.google.zxing.PlanarYUVLuminanceSource: void reverseHorizontal(int,int)
com.google.firebase.database.snapshot.CompoundHash$CompoundHashBuilder: void startChild(com.google.firebase.database.snapshot.ChildKey)
com.baseflow.geolocator.location.FusedLocationClient: void stopPositionUpdates()
com.google.android.gms.location.LocationSettingsStates: void writeToParcel(android.os.Parcel,int)
com.google.firebase.database.Query: void removeEventListener(com.google.firebase.database.ValueEventListener)
androidx.fragment.app.Fragment: void initState()
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.google.firebase.components.Lazy: Lazy(com.google.firebase.inject.Provider)
com.google.firebase.database.snapshot.LongNode: java.lang.Object getValue()
androidx.lifecycle.LifecycleRegistry: void removeObserver(androidx.lifecycle.LifecycleObserver)
com.google.android.gms.maps.zzb: boolean zza(com.google.android.gms.internal.maps.zzt)
com.journeyapps.barcodescanner.CameraPreview$3: boolean handleMessage(android.os.Message)
androidx.fragment.app.DialogFragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
androidx.appcompat.widget.AppCompatTextHelper: void setCompoundTints()
com.google.android.gms.location.zzj: boolean equals(java.lang.Object)
com.google.firebase.database.connection.PersistentConnectionImpl$5: PersistentConnectionImpl$5(com.google.firebase.database.connection.PersistentConnectionImpl,java.lang.String,long,com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingPut,com.google.firebase.database.connection.RequestResultCallback)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: int getHorizontalOffset()
com.google.firebase.database.connection.PersistentConnectionImpl: boolean isIdle()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View)
androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager get()
androidx.fragment.app.FragmentContainerView: void endViewTransition(android.view.View)
com.google.android.gms.internal.base.zaa: zaa(java.lang.String)
com.google.firebase.database.tubesock.WebSocket: void pong(byte[])
com.google.firebase.internal.DataCollectionConfigStorage: void setEnabled(java.lang.Boolean)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable()
androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat$Params getParams()
io.flutter.plugins.googlemaps.PolygonBuilder: void setZIndex(float)
com.google.firebase.database.snapshot.DoubleNode: java.lang.Object getValue()
com.google.android.gms.common.api.internal.ListenerHolder$zaa: void handleMessage(android.os.Message)
com.google.firebase.database.Query: com.google.firebase.database.Query startAt(double)
com.google.firebase.database.tubesock.WebSocketWriter$1: WebSocketWriter$1(com.google.firebase.database.tubesock.WebSocketWriter)
com.google.android.gms.common.GoogleApiAvailability: android.content.Intent getErrorResolutionIntent(android.content.Context,int,java.lang.String)
kotlin.coroutines.CombinedContext: java.lang.String toString()
com.google.android.gms.common.internal.zad: void redirect()
androidx.appcompat.view.menu.MenuItemImpl: android.view.View getActionView()
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
com.lyokone.location.NotificationOptions: java.lang.String getChannelName()
com.google.firebase.database.tubesock.WebSocketWriter: void writeMessage()
androidx.core.view.ViewPropertyAnimatorCompat: ViewPropertyAnimatorCompat(android.view.View)
com.google.android.gms.maps.model.CircleOptions: com.google.android.gms.maps.model.CircleOptions fillColor(int)
com.journeyapps.barcodescanner.MixedDecoder: com.google.zxing.BinaryBitmap toBitmap(com.google.zxing.LuminanceSource)
kotlin.collections.EmptySet: int hashCode()
com.lyokone.location.FlutterLocationService: void enableBackgroundMode()
com.google.zxing.oned.UPCAReader: com.google.zxing.Result decode(com.google.zxing.BinaryBitmap)
com.google.firebase.database.connection.PersistentConnectionImpl$2: PersistentConnectionImpl$2(com.google.firebase.database.connection.PersistentConnectionImpl,com.google.android.gms.tasks.TaskCompletionSource)
kotlin.jvm.internal.FunctionReference: FunctionReference(int)
androidx.window.layout.WindowInfoTrackerDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
com.journeyapps.barcodescanner.CameraPreview: android.view.TextureView$SurfaceTextureListener surfaceTextureListener()
com.google.firebase.database.collection.LLRBValueNode: com.google.firebase.database.collection.LLRBNode getRight()
com.google.firebase.database.core.SparseSnapshotTree: void remember(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node)
com.google.firebase.database.collection.ImmutableSortedSet: java.util.Iterator reverseIterator()
androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter)
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.MarkerOptions infoWindowAnchor(float,float)
com.google.firebase.database.core.WriteTree: boolean recordContainsPath(com.google.firebase.database.core.UserWriteRecord,com.google.firebase.database.core.Path)
androidx.fragment.app.FragmentManager: void cancelExitAnimation(androidx.fragment.app.Fragment)
androidx.activity.result.contract.ActivityResultContract$SynchronousResult: ActivityResultContract$SynchronousResult(java.lang.Object)
com.google.android.gms.common.zza: zza()
com.google.firebase.components.CycleDetector$ComponentNode: boolean isLeaf()
com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.common.api.internal.zabq zaa(android.content.Context,com.google.android.gms.common.api.internal.zabp)
com.google.android.gms.common.internal.Preconditions: void checkNotMainThread()
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
com.google.android.gms.internal.location.zzay: void onNotifyListenerFailed()
com.google.zxing.common.BitArray: int[] makeArray(int)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setColorFilter(android.graphics.ColorFilter)
com.google.zxing.oned.rss.expanded.decoders.AI013x0x1xDecoder: AI013x0x1xDecoder(com.google.zxing.common.BitArray,java.lang.String,java.lang.String)
androidx.appcompat.app.AlertDialog: boolean onKeyDown(int,android.view.KeyEvent)
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.String joinToString(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1)
io.flutter.plugins.googlemaps.PolygonController: void setStrokeWidth(float)
io.flutter.plugins.googlemaps.Convert: android.graphics.Bitmap toBitmap(java.lang.Object)
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
androidx.appcompat.view.menu.MenuItemImpl: java.lang.String toString()
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper: MenuItemWrapperICS$OnMenuItemClickListenerWrapper(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener)
com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock$1: WebsocketConnection$WSClientTubesock$1(com.google.firebase.database.connection.WebsocketConnection$WSClientTubesock)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType fromValue(java.lang.String)
com.google.zxing.pdf417.detector.Detector: com.google.zxing.pdf417.detector.PDF417DetectorResult detect(com.google.zxing.BinaryBitmap,java.util.Map,boolean)
com.google.firebase.database.core.SyncTree$15: SyncTree$15(com.google.firebase.database.core.SyncTree)
io.flutter.embedding.android.FlutterSurfaceView$2: void onFlutterUiNoLongerDisplayed()
kotlin.coroutines.jvm.internal.DebugMetadataKt: java.lang.StackTraceElement getStackTraceElement(kotlin.coroutines.jvm.internal.BaseContinuationImpl)
com.google.android.gms.common.internal.Preconditions: java.lang.String checkNotEmpty(java.lang.String,java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean isAutoMirrored()
androidx.fragment.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)
io.flutter.plugins.googlemaps.GoogleMapController$1: GoogleMapController$1(io.flutter.plugins.googlemaps.GoogleMapController,io.flutter.plugin.common.MethodChannel$Result)
androidx.exifinterface.media.ExifInterface$ExifAttribute: java.lang.String toString()
com.google.android.gms.internal.location.zzbl: zzbl(com.google.android.gms.internal.location.zzbk,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.location.LocationSettingsRequest,java.lang.String)
com.google.firebase.database.core.ServerValues: com.google.firebase.database.snapshot.Node resolveDeferredValueSnapshot(com.google.firebase.database.snapshot.Node,com.google.firebase.database.core.ValueProvider,java.util.Map)
com.google.firebase.database.core.SyncTree: com.google.firebase.database.core.view.QuerySpec access$500(com.google.firebase.database.core.SyncTree,com.google.firebase.database.core.Tag)
androidx.multidex.MultiDexExtractor: android.content.SharedPreferences getMultiDexPreferences(android.content.Context)
androidx.core.text.PrecomputedTextCompat: int nextSpanTransition(int,int,java.lang.Class)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: WindowInfoTrackerCallbackAdapter$addListener$1$1(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation)
androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.activity.ComponentActivity$2$1: ComponentActivity$2$1(androidx.activity.ComponentActivity$2,int,androidx.activity.result.contract.ActivityResultContract$SynchronousResult)
androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)
com.journeyapps.barcodescanner.BarcodeResult: android.graphics.Bitmap getBitmap()
com.google.firebase.database.core.Repo: void postEvent(java.lang.Runnable)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: void release()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.gms.maps.GoogleMapOptions: int getMapType()
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
androidx.appcompat.widget.AppCompatSpinner$1: AppCompatSpinner$1(androidx.appcompat.widget.AppCompatSpinner,android.view.View,androidx.appcompat.widget.AppCompatSpinner$DropdownPopup)
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter)
androidx.collection.SparseArrayCompat: SparseArrayCompat(int)
kotlinx.coroutines.EventLoopImplBase$DelayedTask: int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase)
com.google.zxing.qrcode.detector.Detector: int computeDimension(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,com.google.zxing.ResultPoint,float)
androidx.fragment.app.Fragment: java.lang.Object getExitTransition()
androidx.appcompat.widget.SearchView$8: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void access$100(android.content.Context)
com.google.android.gms.common.zze: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int)
com.google.android.gms.maps.CameraUpdateFactory: com.google.android.gms.maps.CameraUpdate newLatLngZoom(com.google.android.gms.maps.model.LatLng,float)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: PlatformChannel$SystemUiMode(java.lang.String,int,java.lang.String)
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.ResultCallback zab(com.google.android.gms.common.api.ResultCallback)
androidx.collection.MapCollections$EntrySet: boolean retainAll(java.util.Collection)
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createURational(androidx.exifinterface.media.ExifInterface$Rational[],java.nio.ByteOrder)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.StaticLayout createStaticLayoutForMeasuringPre16(java.lang.CharSequence,android.text.Layout$Alignment,int)
com.google.android.gms.tasks.Tasks: java.lang.Object zzb(com.google.android.gms.tasks.Task)
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp: void complete(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object)
androidx.fragment.app.FragmentManagerViewModel: java.lang.String toString()
com.google.android.gms.maps.internal.zzby: void zza(android.os.Bundle,android.os.Bundle)
kotlinx.coroutines.internal.ArrayQueue: boolean isEmpty()
com.google.zxing.oned.rss.FinderPattern: FinderPattern(int,int[],int,int,int)
com.google.firebase.database.snapshot.NamedNode: com.google.firebase.database.snapshot.NamedNode getMaxNode()
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
androidx.core.view.WindowInsetsControllerCompat$Impl23: void setAppearanceLightStatusBars(boolean)
androidx.core.view.WindowInsetsControllerCompat$Impl23: WindowInsetsControllerCompat$Impl23(android.view.Window,android.view.View)
androidx.core.widget.AutoScrollHelper: void cancelTargetTouch()
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: boolean overridesItemVisibility()
com.google.zxing.common.reedsolomon.GenericGF: int multiply(int,int)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: int getVerticalOffset()
androidx.collection.LongSparseArray: androidx.collection.LongSparseArray clone()
androidx.appcompat.view.SupportActionModeWrapper: java.lang.Object getTag()
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setEnabled(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
com.google.firebase.database.core.view.QuerySpec: java.lang.String toString()
kotlinx.coroutines.channels.ChannelResult$Failed: java.lang.String toString()
com.google.zxing.datamatrix.decoder.DataBlock: com.google.zxing.datamatrix.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.datamatrix.decoder.Version)
com.google.firebase.database.tubesock.WebSocketWriter: void handleError(com.google.firebase.database.tubesock.WebSocketException)
com.google.android.gms.common.api.internal.zacg: zacg(com.google.android.gms.common.api.internal.zace,com.google.android.gms.signin.internal.zak)
com.google.firebase.database.core.persistence.TrackedQueryManager: void setQueryActive(com.google.firebase.database.core.view.QuerySpec)
com.google.firebase.database.core.persistence.NoopPersistenceManager: NoopPersistenceManager()
com.google.android.gms.common.api.internal.TaskApiCall: boolean shouldAutoResolveMissingFeatures()
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver: boolean deliverSelfNotifications()
io.flutter.plugins.pathprovider.PathProviderPlugin$PathProviderPlatformThread: void getApplicationSupportDirectory(io.flutter.plugin.common.MethodChannel$Result)
androidx.core.view.ViewCompat: void setBackground(android.view.View,android.graphics.drawable.Drawable)
io.flutter.embedding.engine.renderer.FlutterRenderer: FlutterRenderer(io.flutter.embedding.engine.FlutterJNI)
androidx.appcompat.view.menu.CascadingMenuPopup: android.widget.ListView getListView()
com.google.zxing.Binarizer: Binarizer(com.google.zxing.LuminanceSource)
com.google.firebase.database.collection.ArraySortedMap: java.lang.Object getMaxKey()
com.journeyapps.barcodescanner.BarcodeView: void initialize()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
io.flutter.plugin.editing.TextInputPlugin: void access$400(io.flutter.plugin.editing.TextInputPlugin)
androidx.appcompat.view.menu.MenuItemImpl: boolean invoke()
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
androidx.appcompat.widget.AppCompatDrawableManager: void preload()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: float getInterpolation(float)
io.flutter.plugins.googlemaps.GoogleMapController: void updateInitialTileOverlays()
androidx.core.widget.TextViewCompat: int getTextDirection(android.text.TextDirectionHeuristic)
androidx.fragment.app.FragmentStore: int findFragmentIndexInContainer(androidx.fragment.app.Fragment)
androidx.fragment.app.FragmentManager: void checkStateLoss()
io.flutter.plugin.editing.TextInputPlugin: void setTextInputClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration)
com.google.firebase.database.connection.PersistentConnectionImpl: java.util.Map getPutObject(java.util.List,java.lang.Object,java.lang.String)
io.flutter.plugins.firebase.database.ValueEventsProxy: void onCancelled(com.google.firebase.database.DatabaseError)
androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)
androidx.appcompat.view.menu.MenuItemWrapperICS: int getAlphabeticModifiers()
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionStart(android.transition.Transition)
com.lyokone.location.MethodCallHandlerImpl: void onHasPermission(io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.tasks.TaskExecutors$zza: TaskExecutors$zza()
com.google.firebase.database.core.SparseSnapshotTree$1: void visitChild(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node)
com.journeyapps.barcodescanner.Decoder: com.google.zxing.BinaryBitmap toBitmap(com.google.zxing.LuminanceSource)
kotlinx.coroutines.JobSupport: void parentCancelled(kotlinx.coroutines.ParentJob)
androidx.core.app.NavUtils: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
io.flutter.plugin.editing.InputConnectionAdaptor: InputConnectionAdaptor(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.embedding.android.KeyboardManager,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo,io.flutter.embedding.engine.FlutterJNI)
kotlin.ranges.IntProgression: int getLast()
com.google.android.gms.maps.model.LatLng: java.lang.String toString()
com.google.zxing.oned.rss.Pair: com.google.zxing.oned.rss.FinderPattern getFinderPattern()
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.flutter.embedding.android.FlutterSplashView$1: FlutterSplashView$1(io.flutter.embedding.android.FlutterSplashView)
androidx.core.widget.TextViewOnReceiveContentListener: androidx.core.view.ContentInfoCompat onReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.google.firebase.database.core.view.ViewProcessor: com.google.firebase.database.core.view.ViewCache applyUserOverwrite(com.google.firebase.database.core.view.ViewCache,com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node,com.google.firebase.database.core.WriteTreeRef,com.google.firebase.database.snapshot.Node,com.google.firebase.database.core.view.filter.ChildChangeAccumulator)
com.google.firebase.FirebaseApp$GlobalBackgroundStateListener: void onBackgroundStateChanged(boolean)
kotlinx.coroutines.channels.AbstractChannel: kotlinx.coroutines.channels.ChannelIterator iterator()
net.touchcapture.qr.flutterqr.QRView$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
kotlinx.coroutines.EventLoop_commonKt: kotlinx.coroutines.internal.Symbol access$getDISPOSED_TASK$p()
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo: DartMessenger$BufferedMessageInfo(java.nio.ByteBuffer,int,long)
androidx.core.app.NotificationCompatBuilder: android.app.Notification$Builder getBuilder()
kotlinx.coroutines.intrinsics.CancellableKt: void startCoroutineCancellable(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1)
io.flutter.plugins.urllauncher.WebViewActivity$2: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
androidx.multidex.MultiDex: java.io.File getDexDir(android.content.Context,java.io.File,java.lang.String)
kotlinx.coroutines.NodeList: java.lang.String getString(java.lang.String)
com.google.firebase.database.core.utilities.DefaultRunLoop: java.util.concurrent.ScheduledExecutorService getExecutorService()
io.flutter.plugin.platform.PlatformViewRegistryImpl: PlatformViewRegistryImpl()
androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
com.google.android.gms.location.LocationServices: com.google.android.gms.location.SettingsClient getSettingsClient(android.app.Activity)
com.google.android.gms.common.api.Response: void setResult(com.google.android.gms.common.api.Result)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatTextHelper$1: void onFontRetrievalFailed(int)
androidx.cursoradapter.widget.CursorAdapter: android.widget.Filter getFilter()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setHotspotBounds(int,int,int,int)
com.journeyapps.barcodescanner.SourceData: boolean isRotated()
com.google.firebase.database.snapshot.LongNode: boolean equals(java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getChildId(android.view.accessibility.AccessibilityNodeInfo,int)
androidx.core.widget.NestedScrollView: boolean isOffScreen(android.view.View)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: boolean access$202(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,boolean)
com.google.android.gms.maps.model.Tile: void writeToParcel(android.os.Parcel,int)
com.google.firebase.database.core.view.CacheNode: com.google.firebase.database.snapshot.IndexedNode getIndexedNode()
androidx.fragment.app.DefaultSpecialEffectsController$4: void onAnimationRepeat(android.view.animation.Animation)
kotlinx.coroutines.CancellableContinuationImpl: boolean cancelLater(java.lang.Throwable)
io.flutter.embedding.android.FlutterView: void onConfigurationChanged(android.content.res.Configuration)
androidx.activity.ComponentActivity: java.lang.Object onRetainNonConfigurationInstance()
com.google.firebase.database.snapshot.LongNode: com.google.firebase.database.snapshot.Node updatePriority(com.google.firebase.database.snapshot.Node)
com.google.zxing.oned.rss.expanded.decoders.GeneralAppIdDecoder: int extractNumericValueFromBitArray(int,int)
androidx.window.core.Version: int getMajor()
androidx.appcompat.widget.ToolbarWidgetWrapper: void initProgress()
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean isFocusable()
com.google.android.gms.internal.location.zzar: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
com.google.firebase.database.core.Context: void requireStarted()
androidx.appcompat.widget.AppCompatRadioButton: AppCompatRadioButton(android.content.Context,android.util.AttributeSet)
com.journeyapps.barcodescanner.DecoratedBarcodeView: void initializeFromIntent(android.content.Intent)
androidx.appcompat.app.WindowDecorActionBar: void doHide(boolean)
androidx.core.app.ActivityRecreator: java.lang.reflect.Field getTokenField()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int peek()
com.google.firebase.database.collection.ImmutableSortedMap: ImmutableSortedMap()
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
com.google.firebase.database.snapshot.ChildKey$IntegerChildKey: boolean isInt()
androidx.fragment.app.Fragment: void performPause()
io.flutter.view.AccessibilityBridge$2: void onAccessibilityStateChanged(boolean)
com.google.android.gms.common.GooglePlayServicesUtilLight: java.lang.String getErrorString(int)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: void setHotspot(float,float)
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
androidx.core.app.NotificationCompatBuilder: void removeSoundAndVibration(android.app.Notification)
androidx.fragment.app.FragmentManager: void reportBackStackChanged()
com.google.zxing.oned.rss.expanded.decoders.AI01320xDecoder: void addWeightCode(java.lang.StringBuilder,int)
io.flutter.view.AccessibilityBridge$SemanticsNode: java.lang.CharSequence getValueLabelHint()
androidx.appcompat.app.AppCompatDelegateImpl: void installViewFactory()
kotlin.random.Random$Default: int nextBits(int)
androidx.collection.ArraySet: int indexOf(java.lang.Object,int)
com.google.firebase.database.collection.RBTreeSortedMap: java.lang.Object getMinKey()
com.google.zxing.aztec.detector.Detector$Point: int getX()
io.flutter.embedding.android.FlutterImageView: void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer)
com.baseflow.geolocator.errors.ErrorCodes: com.baseflow.geolocator.errors.ErrorCodes valueOf(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: void onConfigurationChanged(android.content.res.Configuration)
com.journeyapps.barcodescanner.BarcodeView: void stopDecoding()
androidx.fragment.app.FragmentManager: void addBackStackState(androidx.fragment.app.BackStackRecord)
androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.appcompat.widget.Toolbar$3: Toolbar$3(androidx.appcompat.widget.Toolbar)
kotlinx.coroutines.scheduling.WorkQueue: int getSize$kotlinx_coroutines_core()
net.touchcapture.qr.flutterqr.QRView: io.flutter.plugin.common.MethodChannel access$getChannel$p(net.touchcapture.qr.flutterqr.QRView)
com.google.zxing.common.BitMatrix: int getHeight()
com.google.firebase.database.core.CompoundWrite$1: CompoundWrite$1(com.google.firebase.database.core.CompoundWrite,com.google.firebase.database.core.Path)
kotlinx.coroutines.JobSupport$Finishing: void setExceptionsHolder(java.lang.Object)
kotlinx.coroutines.channels.ArrayChannel: void enqueueElement(int,java.lang.Object)
com.google.firebase.database.core.utilities.ParsedUrl: ParsedUrl()
androidx.appcompat.widget.ScrollingTabContainerView: boolean performExpand()
com.google.android.gms.internal.location.zzap: zzap(android.os.IBinder)
io.flutter.plugin.platform.VirtualDisplayController$1: VirtualDisplayController$1(io.flutter.plugin.platform.VirtualDisplayController,android.view.View,java.lang.Runnable)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
net.touchcapture.qr.flutterqr.FlutterQrPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.multidex.ZipUtil: androidx.multidex.ZipUtil$CentralDirectory findCentralDirectory(java.io.RandomAccessFile)
com.google.firebase.database.DatabaseError: com.google.firebase.database.DatabaseError fromCode(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: PlatformChannel$DeviceOrientation(java.lang.String,int,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
com.google.firebase.database.core.persistence.TrackedQueryManager$4: boolean evaluate(java.lang.Object)
com.google.zxing.maxicode.decoder.DecodedBitStreamParser: int getBit(int,byte[])
com.google.android.gms.maps.model.Circle: Circle(com.google.android.gms.internal.maps.zzh)
androidx.arch.core.executor.ArchTaskExecutor: void executeOnDiskIO(java.lang.Runnable)
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
com.google.firebase.database.tubesock.WebSocket: java.util.concurrent.ThreadFactory getThreadFactory()
com.google.zxing.common.reedsolomon.GenericGFPoly: int getCoefficient(int)
androidx.activity.result.ActivityResult: android.content.Intent getData()
com.google.android.gms.internal.location.zzap: void zza(com.google.android.gms.location.LocationSettingsRequest,com.google.android.gms.internal.location.zzaq,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.appcompat.graphics.drawable.DrawableContainer: void setTintMode(android.graphics.PorterDuff$Mode)
io.flutter.plugins.googlemaps.TileOverlaysController: void addTileOverlay(java.util.Map)
io.flutter.plugins.firebase.database.TransactionHandler: com.google.firebase.database.Transaction$Result doTransaction(com.google.firebase.database.MutableData)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
com.baseflow.geolocator.location.FusedLocationClient: com.baseflow.geolocator.errors.ErrorCallback access$300(com.baseflow.geolocator.location.FusedLocationClient)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void createCachedBitmapIfNeeded(int,int)
com.google.firebase.database.collection.LLRBBlackValueNode: int size()
com.google.zxing.oned.rss.AbstractRSSReader: int[] getEvenCounts()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
com.google.firebase.database.snapshot.ValueIndex: com.google.firebase.database.snapshot.ValueIndex getInstance()
io.flutter.plugin.platform.PlatformViewsController: void onPreEngineRestart()
com.google.android.gms.common.internal.BaseGmsClient: boolean isConnecting()
io.flutter.plugins.imagepicker.ImagePickerDelegate: void clearMethodCallAndResult()
com.journeyapps.barcodescanner.camera.CameraInstance: void notifyError(java.lang.Exception)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.util.List access$200(io.flutter.plugins.pathprovider.PathProviderPlugin,java.lang.String)
androidx.appcompat.view.menu.SubMenuBuilder: boolean isShortcutsVisible()
androidx.arch.core.executor.DefaultTaskExecutor$1: DefaultTaskExecutor$1(androidx.arch.core.executor.DefaultTaskExecutor)
androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)
androidx.appcompat.view.menu.ActionMenuItemView: boolean prefersCondensedTitle()
com.google.android.gms.maps.zzo: void zza(com.google.android.gms.internal.maps.zzh)
com.google.firebase.database.core.Repo$TransactionData: int access$2108(com.google.firebase.database.core.Repo$TransactionData)
kotlin.collections.ArraysKt___ArraysKt: java.lang.Object singleOrNull(java.lang.Object[])
io.flutter.plugin.platform.PlatformPlugin: void popSystemNavigator()
com.google.firebase.database.snapshot.ChildrenNode$ChildVisitor: void visitEntry(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.SearchView: boolean requestFocus(int,android.graphics.Rect)
com.google.android.gms.common.internal.Preconditions: void checkArgument(boolean,java.lang.Object)
com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: boolean casWaiters(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter)
androidx.core.widget.NestedScrollView: void addView(android.view.View,int)
com.google.zxing.oned.rss.RSS14Reader: com.google.zxing.Result constructResult(com.google.zxing.oned.rss.Pair,com.google.zxing.oned.rss.Pair)
com.google.zxing.pdf417.decoder.ec.ModulusPoly: int evaluateAt(int)
kotlinx.coroutines.JobSupport$Finishing: boolean isCompleting()
io.flutter.plugins.googlemaps.PolylineBuilder: void setJointType(int)
com.google.android.gms.tasks.zzi: void onComplete(com.google.android.gms.tasks.Task)
androidx.exifinterface.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.firebase.database.core.CompoundWrite: java.util.Iterator iterator()
com.google.android.gms.internal.maps.zzf: com.google.android.gms.internal.maps.zze zzb(android.os.IBinder)
com.google.firebase.database.snapshot.EmptyNode: int compareTo(com.google.firebase.database.snapshot.Node)
kotlinx.coroutines.channels.Closed: java.lang.Object getOfferResult()
com.google.android.gms.maps.model.zzs: zzs(com.google.android.gms.maps.model.TileOverlayOptions)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onDestroyView()
androidx.window.embedding.EmbeddingBackend: java.util.Set getSplitRules()
com.google.firebase.database.logging.Logger$Level: Logger$Level(java.lang.String,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAllowCaching(boolean)
androidx.core.app.TaskStackBuilder: java.util.Iterator iterator()
androidx.versionedparcelable.VersionedParcelParcel: VersionedParcelParcel(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
io.flutter.plugin.platform.PlatformViewsController$1: PlatformViewsController$1(io.flutter.plugin.platform.PlatformViewsController)
com.google.firebase.database.tubesock.WebSocketWriter: void setOutput(java.io.OutputStream)
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State: CurrentParsingState$State(java.lang.String,int)
io.flutter.plugins.googlemaps.GoogleMapController: void dispose()
com.journeyapps.barcodescanner.camera.DisplayConfiguration: com.journeyapps.barcodescanner.Size getDesiredPreviewSize(boolean)
androidx.collection.SimpleArrayMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)
com.google.android.gms.common.internal.zzh: java.lang.String zzt()
com.google.zxing.qrcode.detector.FinderPattern: FinderPattern(float,float,float)
com.google.zxing.oned.rss.AbstractRSSReader: float[] getEvenRoundingErrors()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: boolean canReverse()
com.google.android.gms.maps.model.TileOverlay: boolean getFadeIn()
com.google.zxing.aztec.decoder.Decoder: java.lang.String getEncodedData(boolean[])
com.google.firebase.database.snapshot.ChildKey: boolean isPriorityChildName()
com.google.firebase.database.snapshot.ChildrenNode: void forEachChild(com.google.firebase.database.snapshot.ChildrenNode$ChildVisitor)
kotlinx.coroutines.flow.internal.NoOpContinuation: NoOpContinuation()
kotlinx.coroutines.EventLoopImplBase$DelayedTask: kotlinx.coroutines.internal.ThreadSafeHeap getHeap()
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()
com.google.android.gms.internal.location.zzay: void notifyListener(java.lang.Object)
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl)
com.google.zxing.qrcode.decoder.Version: int getTotalCodewords()
com.journeyapps.barcodescanner.camera.AutoFocusManager: AutoFocusManager(android.hardware.Camera,com.journeyapps.barcodescanner.camera.CameraSettings)
androidx.appcompat.widget.ActionBarContextView: boolean onHoverEvent(android.view.MotionEvent)
androidx.appcompat.app.AlertController$5: AlertController$5(androidx.appcompat.app.AlertController,android.view.View,android.view.View)
io.flutter.view.AccessibilityBridge: void setAccessibilityPaneTitle(java.lang.String)
io.flutter.plugins.googlemaps.MarkersController: void onMarkerDragStart(java.lang.String,com.google.android.gms.maps.model.LatLng)
com.google.firebase.database.core.utilities.Utilities: java.lang.String doubleToHashString(double)
com.google.firebase.database.android.SqlPersistenceStorageEngine$2: java.lang.Object onNodeValue(com.google.firebase.database.core.Path,java.lang.Object,java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder: void close(boolean)
androidx.appcompat.view.menu.BaseMenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.Object newFamily()
androidx.fragment.app.FragmentManager$11: void onActivityResult(java.lang.Object)
androidx.appcompat.widget.Toolbar$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
io.flutter.plugin.common.JSONMethodCodec: JSONMethodCodec()
androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
androidx.appcompat.app.AppCompatDialog$1: AppCompatDialog$1(androidx.appcompat.app.AppCompatDialog)
com.google.zxing.oned.rss.DataCharacter: boolean equals(java.lang.Object)
com.google.firebase.database.snapshot.KeyIndex: java.lang.String toString()
androidx.window.embedding.SplitInfo: boolean equals(java.lang.Object)
io.flutter.embedding.engine.systemchannels.LocalizationChannel: void setLocalizationMessageHandler(io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler)
com.google.firebase.database.collection.ImmutableSortedMapIterator: java.util.Map$Entry next()
com.google.firebase.database.core.view.DataEvent: com.google.firebase.database.core.Path getPath()
androidx.fragment.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)
io.flutter.embedding.android.FlutterTextureView: void access$200(io.flutter.embedding.android.FlutterTextureView)
androidx.core.graphics.drawable.WrappedDrawableApi21: WrappedDrawableApi21(android.graphics.drawable.Drawable)
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator getOrCreate()
androidx.core.view.ViewCompat$4: java.lang.Object frameworkGet(android.view.View)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getChangingConfigurations()
io.flutter.plugin.editing.TextInputPlugin: boolean canShowTextInput()
androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context getActionBarThemedContext()
net.touchcapture.qr.flutterqr.QRView: void getFlashInfo(io.flutter.plugin.common.MethodChannel$Result)
com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode: com.google.zxing.datamatrix.decoder.DecodedBitStreamParser$Mode[] values()
io.flutter.embedding.engine.FlutterEngine: io.flutter.embedding.engine.systemchannels.KeyEventChannel getKeyEventChannel()
com.google.firebase.database.DataSnapshot$1$1: boolean hasNext()
androidx.appcompat.view.menu.MenuItemWrapperICS: int getItemId()
com.google.android.gms.common.api.internal.GoogleApiManager$zab: GoogleApiManager$zab(com.google.android.gms.common.api.internal.GoogleApiManager,com.google.android.gms.common.api.Api$Client,com.google.android.gms.common.api.internal.ApiKey)
com.google.android.gms.maps.model.MarkerOptions: com.google.android.gms.maps.model.MarkerOptions flat(boolean)
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: AppCompatDelegateImpl$PanelMenuPresenterCallback(androidx.appcompat.app.AppCompatDelegateImpl)
com.google.firebase.database.snapshot.ValueIndex: boolean isDefinedOn(com.google.firebase.database.snapshot.Node)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
io.flutter.view.AccessibilityBridge$SemanticsNode: boolean hadAction(io.flutter.view.AccessibilityBridge$Action)
com.google.android.gms.internal.location.zzaz: android.location.Location getLastLocation()
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface access$getExtensionCallback$p(androidx.window.layout.SidecarCompat)
com.google.zxing.qrcode.decoder.DataMask$5: DataMask$5(java.lang.String,int)
com.google.zxing.pdf417.decoder.BoundingBox: com.google.zxing.ResultPoint getBottomLeft()
com.google.firebase.database.core.CompoundWrite: com.google.firebase.database.core.CompoundWrite removeWrite(com.google.firebase.database.core.Path)
com.google.android.gms.common.api.UnsupportedApiCallException: UnsupportedApiCallException(com.google.android.gms.common.Feature)
androidx.appcompat.widget.ScrollingTabContainerView: void animateToTab(int)
com.journeyapps.barcodescanner.SourceData: com.google.zxing.ResultPoint translateResultPoint(com.google.zxing.ResultPoint)
io.flutter.embedding.android.FlutterSurfaceView$1: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
com.google.zxing.oned.UPCEANExtension5Support: int extensionChecksum(java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void setupAnimatorSet()
com.google.firebase.database.core.RepoManager$1: void run()
com.google.android.gms.internal.maps.zzae: void setVisible(boolean)
com.google.firebase.components.Dependency: boolean equals(java.lang.Object)
kotlinx.coroutines.Dispatchers: kotlinx.coroutines.CoroutineDispatcher getDefault()
com.journeyapps.barcodescanner.RotationListener: android.view.WindowManager access$000(com.journeyapps.barcodescanner.RotationListener)
com.lyokone.location.LocationPlugin: void onDetachedFromActivityForConfigChanges()
io.flutter.plugins.googlemaps.Convert: java.util.List toPattern(java.lang.Object)
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: LockFreeTaskQueueCore$Companion()
androidx.activity.ComponentActivity$2$2: ComponentActivity$2$2(androidx.activity.ComponentActivity$2,int,android.content.IntentSender$SendIntentException)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int inferValueTypeFromValues(android.content.res.TypedArray,int,int)
androidx.appcompat.app.AppCompatDialog: void onStop()
io.flutter.plugin.platform.PlatformPlugin: void access$300(io.flutter.plugin.platform.PlatformPlugin,java.util.List)
kotlinx.coroutines.flow.internal.SafeCollector_commonKt$checkContext$result$1: SafeCollector_commonKt$checkContext$result$1(kotlinx.coroutines.flow.internal.SafeCollector)
com.journeyapps.barcodescanner.camera.CameraManager: void open()
androidx.fragment.app.FragmentStateManager: void detach()
androidx.appcompat.app.AppCompatDialog: void onCreate(android.os.Bundle)
androidx.appcompat.app.AppCompatDelegateImpl: void setContentView(int)
com.google.zxing.common.BitArray: boolean isRange(int,int,boolean)
com.google.firebase.database.core.persistence.PruneForest$1: boolean evaluate(java.lang.Boolean)
com.google.android.gms.location.LocationRequest: com.google.android.gms.location.LocationRequest setInterval(long)
io.flutter.plugin.editing.TextInputPlugin: TextInputPlugin(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.plugin.platform.PlatformViewsController)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$2: java.lang.Throwable invoke(java.lang.Throwable)
kotlinx.coroutines.CancellableContinuationImpl: kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core()
com.google.zxing.oned.rss.expanded.ExpandedPair: int hashCode()
androidx.core.widget.TextViewOnReceiveContentListener: TextViewOnReceiveContentListener()
androidx.appcompat.view.menu.MenuPopupHelper: void show()
com.google.firebase.database.core.operation.OperationSource: OperationSource(com.google.firebase.database.core.operation.OperationSource$Source,com.google.firebase.database.core.view.QueryParams,boolean)
com.google.android.gms.maps.GoogleMap: void setMyLocationEnabled(boolean)
androidx.appcompat.app.AppCompatDelegate: android.content.Context attachBaseContext2(android.content.Context)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: java.lang.Long getSourceNodeId(android.view.accessibility.AccessibilityNodeInfo)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicWidth()
kotlinx.coroutines.CancellableContinuationImpl: boolean trySuspend()
androidx.appcompat.widget.AppCompatCompoundButtonHelper: int getCompoundPaddingLeft(int)
kotlinx.coroutines.channels.ConflatedChannel: boolean isBufferAlwaysEmpty()
io.flutter.plugins.sharedpreferences.MethodCallHandlerImpl: java.util.List decodeList(java.lang.String)
io.flutter.view.AccessibilityBridge$SpellOutStringAttribute: AccessibilityBridge$SpellOutStringAttribute()
com.google.android.gms.maps.model.PolylineOptions: com.google.android.gms.maps.model.PolylineOptions zIndex(float)
androidx.arch.core.executor.TaskExecutor: TaskExecutor()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setChangingConfigurations(int)
androidx.collection.SimpleArrayMap: java.lang.Object setValueAt(int,java.lang.Object)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setChangingConfigurations(int)
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getContentDescription()
androidx.core.graphics.drawable.WrappedDrawableState: int getChangingConfigurations()
com.google.android.gms.location.FusedLocationProviderClient: com.google.android.gms.tasks.Task removeLocationUpdates(com.google.android.gms.location.LocationCallback)
com.baseflow.geolocator.location.FlutterLocationServiceListener: void onLocationServiceResult(boolean)
androidx.appcompat.app.WindowDecorActionBar: WindowDecorActionBar(android.app.Dialog)
androidx.appcompat.app.WindowDecorActionBar: void completeDeferredDestroyActionMode()
androidx.activity.contextaware.ContextAwareHelper: ContextAwareHelper()
com.google.android.gms.signin.SignInOptions: int hashCode()
com.google.android.gms.common.ConnectionResult: java.lang.String getErrorMessage()
com.google.zxing.common.reedsolomon.GenericGFPoly: java.lang.String toString()
kotlinx.coroutines.channels.ChannelResult$Closed: ChannelResult$Closed(java.lang.Throwable)
com.baseflow.geolocator.location.LocationClient: boolean checkLocationService(android.content.Context)
io.flutter.plugins.firebase.database.FirebaseDatabasePlugin: com.google.android.gms.tasks.Task goOnline(java.util.Map)
androidx.appcompat.widget.LinearLayoutCompat: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet)
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void onSaveInstanceState(android.os.Bundle)
com.google.android.gms.tasks.Task: com.google.android.gms.tasks.Task continueWith(com.google.android.gms.tasks.Continuation)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.google.firebase.database.snapshot.RangeMerge: com.google.firebase.database.snapshot.Node applyTo(com.google.firebase.database.snapshot.Node)
com.google.android.gms.common.internal.DialogRedirect: void onClick(android.content.DialogInterface,int)
com.google.android.gms.maps.model.Polyline: void setGeodesic(boolean)
com.google.android.gms.common.api.internal.zaad: void zaa(android.app.Activity,com.google.android.gms.common.api.internal.GoogleApiManager,com.google.android.gms.common.api.internal.ApiKey)
com.google.firebase.database.core.DatabaseConfig: void setSessionPersistenceKey(java.lang.String)
androidx.collection.MapCollections$ValuesCollection: boolean add(java.lang.Object)
com.google.firebase.database.core.persistence.NoopPersistenceManager: com.google.firebase.database.core.view.CacheNode serverCache(com.google.firebase.database.core.view.QuerySpec)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHeading(boolean)
com.google.firebase.database.snapshot.ValueIndex: ValueIndex()
androidx.window.core.Version: int compareTo(androidx.window.core.Version)
kotlinx.coroutines.JobSupport$Finishing: java.util.ArrayList allocateList()
com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2$1: RBTreeSortedMap$Builder$Base1_2$1(com.google.firebase.database.collection.RBTreeSortedMap$Builder$Base1_2)
com.google.android.gms.location.LocationResult: java.util.List getLocations()
androidx.appcompat.widget.VectorEnabledTintResources: boolean isCompatVectorFromResourcesEnabled()
com.google.android.gms.internal.maps.zzy: void setVisible(boolean)
com.google.android.gms.common.GoogleApiAvailability: boolean showErrorDialogFragment(android.app.Activity,int,int,android.content.DialogInterface$OnCancelListener)
androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent)
androidx.core.widget.TextViewOnReceiveContentListener$ApiImpl: java.lang.CharSequence coerce(android.content.Context,android.content.ClipData$Item,int)
com.journeyapps.barcodescanner.camera.CameraManager: void setDisplayConfiguration(com.journeyapps.barcodescanner.camera.DisplayConfiguration)
androidx.fragment.app.SpecialEffectsController$Operation$1: void onCancel()
androidx.activity.result.IntentSenderRequest: int getFlagsValues()
androidx.appcompat.widget.AppCompatSpinner$SavedState: AppCompatSpinner$SavedState(android.os.Parcelable)
com.google.android.gms.maps.model.PolylineOptions: int getColor()
com.google.android.gms.maps.model.LatLngBounds: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isEnabled()
androidx.core.content.FileProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
androidx.fragment.app.FragmentTransition: void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
com.google.android.gms.common.GooglePlayServicesUtilLight: android.content.res.Resources getRemoteResource(android.content.Context)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumWidth()
com.google.firebase.provider.FirebaseInitProvider: void checkContentProviderAuthority(android.content.pm.ProviderInfo)
androidx.appcompat.app.AppCompatDelegateImpl$4: AppCompatDelegateImpl$4(androidx.appcompat.app.AppCompatDelegateImpl)
com.google.zxing.aztec.detector.Detector: int getColor(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus valueOf(java.lang.String)
io.flutter.FlutterInjector: io.flutter.embedding.engine.FlutterJNI$Factory getFlutterJNIFactory()
com.google.firebase.provider.FirebaseInitProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)
com.google.firebase.database.core.utilities.Utilities: com.google.firebase.database.core.utilities.ParsedUrl parseUrl(java.lang.String)
com.journeyapps.barcodescanner.CaptureManager: void onResume()
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)
androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry ceil(java.lang.Object)
com.google.zxing.common.HybridBinarizer: com.google.zxing.Binarizer createBinarizer(com.google.zxing.LuminanceSource)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean extrasAvailable()
androidx.core.view.ViewCompat: boolean hasOnClickListeners(android.view.View)
com.google.android.gms.maps.internal.zzaq: zzaq()
androidx.window.embedding.EmptyEmbeddingComponent: EmptyEmbeddingComponent()
com.google.firebase.database.core.Path: int hashCode()
androidx.appcompat.view.menu.MenuItemWrapperICS: int getOrder()
com.google.zxing.ReaderException: java.lang.Throwable fillInStackTrace()
io.flutter.embedding.engine.loader.FlutterLoader: io.flutter.embedding.engine.loader.ResourceExtractor initResources(android.content.Context)
com.google.android.gms.common.GooglePlayServicesUtilLight: boolean isRestrictedUserProfile(android.content.Context)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl: android.net.Uri getLinkUri()
com.google.firebase.database.connection.util.StringListReader: boolean markSupported()
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
androidx.core.content.res.ResourcesCompat$FontCallback$1: ResourcesCompat$FontCallback$1(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface)
com.google.firebase.database.core.utilities.ImmutableTree$1: java.lang.Object onNodeValue(com.google.firebase.database.core.Path,java.lang.Object,java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.multidex.MultiDex: android.content.pm.ApplicationInfo getApplicationInfo(android.content.Context)
kotlinx.coroutines.Unconfined: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
com.google.firebase.database.connection.Connection: void onConnectionReady(long,java.lang.String)
com.google.firebase.database.core.RepoManager: com.google.firebase.database.core.Repo createRepo(com.google.firebase.database.core.Context,com.google.firebase.database.core.RepoInfo,com.google.firebase.database.FirebaseDatabase)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean isInOverlayMode()
com.google.zxing.common.GlobalHistogramBinarizer: int estimateBlackPoint(int[])
com.google.firebase.database.snapshot.LeafNode: com.google.firebase.database.snapshot.Node getPriority()
com.google.android.gms.maps.model.TileOverlay: void setFadeIn(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: android.graphics.SurfaceTexture surfaceTexture()
com.google.zxing.datamatrix.decoder.Version: int getDataRegionSizeRows()
androidx.core.widget.NestedScrollView: void onLayout(boolean,int,int,int,int)
androidx.appcompat.widget.ActionBarContainer: boolean verifyDrawable(android.graphics.drawable.Drawable)
androidx.core.provider.CallbackWithHandler$2: void run()
io.flutter.plugins.googlemaps.GoogleMapsPlugin: void onDetachedFromActivityForConfigChanges()
com.google.firebase.FirebaseOptions: java.lang.String getGcmSenderId()
androidx.core.provider.FontRequestWorker$4: FontRequestWorker$4(java.lang.String)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
androidx.collection.SimpleArrayMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)
com.google.android.gms.common.api.internal.zan: void zas()
com.google.firebase.components.LazySet: com.google.firebase.components.LazySet fromCollection(java.util.Collection)
androidx.fragment.app.FragmentStateManager: android.os.Bundle saveBasicState()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setActionView(int)
com.lyokone.location.StreamHandlerImpl: void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.widget.Toolbar: void onRtlPropertiesChanged(int)
androidx.appcompat.widget.ScrollingTabContainerView: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
kotlinx.coroutines.flow.internal.DownstreamExceptionElement: DownstreamExceptionElement(java.lang.Throwable)
androidx.core.widget.NestedScrollView: boolean shouldDelayChildPressedState()
com.google.zxing.oned.EAN13Reader: int decodeMiddle(com.google.zxing.common.BitArray,int[],java.lang.StringBuilder)
com.google.firebase.database.core.SyncTree$ListenContainer: com.google.firebase.database.connection.CompoundHash getCompoundHash()
com.google.android.gms.maps.model.PolylineOptions: PolylineOptions(java.util.List,float,int,float,boolean,boolean,boolean,com.google.android.gms.maps.model.Cap,com.google.android.gms.maps.model.Cap,int,java.util.List)
com.google.firebase.database.core.Repo: void onServerInfoUpdate(com.google.firebase.database.snapshot.ChildKey,java.lang.Object)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
io.flutter.embedding.android.FlutterView$ZeroSides: FlutterView$ZeroSides(java.lang.String,int)
com.google.android.gms.maps.internal.zzg: void setMaxZoomPreference(float)
androidx.appcompat.widget.AlertDialogLayout: void onLayout(boolean,int,int,int,int)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object takeState$kotlinx_coroutines_core()
androidx.appcompat.app.AppCompatDialog: void setContentView(int)
com.google.firebase.components.CycleDetector$ComponentNode: void addDependency(com.google.firebase.components.CycleDetector$ComponentNode)
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper()
kotlinx.coroutines.internal.LockFreeLinkedListHead: LockFreeLinkedListHead()
androidx.appcompat.widget.ActionBarContextView: void initForMode(androidx.appcompat.view.ActionMode)
androidx.collection.ArraySet: void allocArrays(int)
com.google.firebase.database.core.Repo: com.google.firebase.database.snapshot.Node getLatestState(com.google.firebase.database.core.Path)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setTint(int)
com.google.firebase.database.core.persistence.TrackedQueryManager: java.util.List getQueriesMatching(com.google.firebase.database.core.utilities.Predicate)
io.flutter.embedding.engine.systemchannels.RestorationChannel: boolean access$102(io.flutter.embedding.engine.systemchannels.RestorationChannel,boolean)
io.flutter.plugin.editing.InputConnectionAdaptor: boolean setComposingRegion(int,int)
androidx.appcompat.view.menu.MenuBuilder: void clearHeader()
androidx.core.graphics.TypefaceCompatApi26Impl: boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int)
androidx.fragment.app.DialogFragment: android.view.View onFindViewById(int)
net.touchcapture.qr.flutterqr.QRView: void stopScan()
androidx.appcompat.widget.SearchView$SavedState$1: SearchView$SavedState$1()
com.google.zxing.aztec.detector.Detector: float distance(com.google.zxing.aztec.detector.Detector$Point,com.google.zxing.aztec.detector.Detector$Point)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.EmbeddingInterfaceCompat initAndVerifyEmbeddingExtension()
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1: AbstractFuture$UnsafeAtomicHelper$1()
com.google.firebase.database.core.view.QueryParams: com.google.firebase.database.snapshot.Node normalizeValue(com.google.firebase.database.snapshot.Node)
kotlinx.coroutines.channels.ChannelResult$Closed: int hashCode()
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.view.menu.CascadingMenuPopup$1: void onGlobalLayout()
com.journeyapps.barcodescanner.camera.AutoFocusManager: boolean access$302(com.journeyapps.barcodescanner.camera.AutoFocusManager,boolean)
kotlin.text.StringsKt__StringsKt: kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean)
com.google.firebase.database.core.utilities.encoding.CustomClassMapper$BeanMapper: java.lang.String annotatedName(java.lang.reflect.AccessibleObject)
com.google.firebase.database.connection.PersistentConnectionImpl$7: void onResponse(java.util.Map)
androidx.core.app.NotificationManagerCompat: NotificationManagerCompat(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
androidx.appcompat.view.SupportMenuInflater$MenuState: void readItem(android.util.AttributeSet)
io.flutter.plugin.editing.TextEditingDelta: TextEditingDelta(java.lang.CharSequence,int,int,int,int)
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback: ActionMenuItemView$PopupCallback()
androidx.window.layout.SidecarAdapter: androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState)
androidx.fragment.app.FragmentManager: void startPendingDeferredFragments()
androidx.appcompat.widget.SearchView: boolean isLandscapeMode(android.content.Context)
com.lyokone.location.NotificationOptions: java.lang.String getTitle()
com.google.android.gms.location.zzab: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantWidth()
androidx.core.graphics.PathParser: void addNode(java.util.ArrayList,char,float[])
com.google.firebase.FirebaseApp: FirebaseApp(android.content.Context,java.lang.String,com.google.firebase.FirebaseOptions)
androidx.fragment.app.FragmentTransitionImpl$3: void run()
com.google.android.gms.maps.internal.zzbx: boolean isRotateGesturesEnabled()
com.google.firebase.database.snapshot.ChildrenNode$NamedNodeIterator: ChildrenNode$NamedNodeIterator(java.util.Iterator)
androidx.lifecycle.ViewTreeViewModelStoreOwner: void set(android.view.View,androidx.lifecycle.ViewModelStoreOwner)
androidx.appcompat.view.ActionMode: boolean getTitleOptionalHint()
androidx.appcompat.widget.ResourcesWrapper: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])
com.google.firebase.database.core.UserWriteRecord: com.google.firebase.database.core.Path getPath()
com.google.firebase.database.DataSnapshot$1: DataSnapshot$1(com.google.firebase.database.DataSnapshot,java.util.Iterator)
io.flutter.embedding.engine.FlutterEngine: java.util.Set access$000(io.flutter.embedding.engine.FlutterEngine)
androidx.core.app.Person: java.lang.String resolveToLegacyUri()
com.google.android.gms.common.internal.BaseGmsClient: void zza(com.google.android.gms.common.internal.zzb)
io.flutter.embedding.android.FlutterSplashView: void access$200(io.flutter.embedding.android.FlutterSplashView)
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(android.view.ViewGroup$LayoutParams)
kotlinx.coroutines.JobImpl: boolean getHandlesException$kotlinx_coroutines_core()
androidx.appcompat.view.StandaloneActionMode: void finish()
kotlin.random.Random$Default: int nextInt()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
io.flutter.plugin.platform.PlatformPlugin: void access$700(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle)
com.google.firebase.FirebaseOptions: java.lang.String getDatabaseUrl()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
kotlinx.coroutines.internal.ContextScope: ContextScope(kotlin.coroutines.CoroutineContext)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: VectorDrawableCompat$VectorDrawableCompatState()
com.google.android.gms.common.api.Status: boolean equals(java.lang.Object)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion()
androidx.appcompat.view.ActionBarPolicy: androidx.appcompat.view.ActionBarPolicy get(android.content.Context)
com.google.common.util.concurrent.AbstractFuture: boolean setException(java.lang.Throwable)
com.google.firebase.database.core.WriteTree: com.google.firebase.database.snapshot.Node calcCompleteChild(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.core.view.CacheNode)
androidx.appcompat.widget.Toolbar: void setSubtitleTextAppearance(android.content.Context,int)
kotlinx.coroutines.flow.internal.SafeCollectorKt$emitFun$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ActionBarContainer: boolean onHoverEvent(android.view.MotionEvent)
kotlinx.coroutines.flow.internal.DownstreamExceptionElement$Key: DownstreamExceptionElement$Key(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.maps.zzx: zzx(com.google.android.gms.maps.GoogleMap,com.google.android.gms.maps.GoogleMap$OnCameraIdleListener)
io.flutter.plugin.platform.PlatformViewsController: boolean access$1202(io.flutter.plugin.platform.PlatformViewsController,boolean)
com.google.firebase.database.snapshot.NodeUtilities: int nameAndPriorityCompare(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node,com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node)
com.google.zxing.LuminanceSource: int getWidth()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1: void resize(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.zxing.qrcode.detector.FinderPatternFinder: void shiftCounts2(int[])
com.google.firebase.database.core.Repo$2: void onTokenChange(java.lang.String)
com.google.android.gms.location.LocationSettingsRequest$Builder: com.google.android.gms.location.LocationSettingsRequest$Builder addLocationRequest(com.google.android.gms.location.LocationRequest)
com.google.firebase.database.connection.CompoundHash: java.util.List getHashes()
com.google.firebase.database.core.view.ViewProcessor: boolean cacheHasChild(com.google.firebase.database.core.view.ViewCache,com.google.firebase.database.snapshot.ChildKey)
io.flutter.view.AccessibilityBridge: int access$1176(io.flutter.view.AccessibilityBridge,int)
com.google.android.gms.location.zzag: zzag()
androidx.interpolator.view.animation.LookupTableInterpolator: LookupTableInterpolator(float[])
com.google.firebase.components.ComponentRuntime: com.google.firebase.inject.Provider getProvider(java.lang.Class)
com.baseflow.geolocator.location.LocationManagerClient: void isLocationServiceEnabled(com.baseflow.geolocator.location.LocationServiceListener)
androidx.collection.MapCollections$EntrySet: boolean contains(java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler: void parkedWorkersStackTopUpdate(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,int,int)
kotlin.jvm.internal.TypeIntrinsics: void throwCce(java.lang.String)
io.flutter.plugins.pathprovider.PathProviderPlugin: PathProviderPlugin()
androidx.appcompat.widget.SearchView: void launchIntent(android.content.Intent)
androidx.core.view.MenuItemCompat: void setNumericShortcut(android.view.MenuItem,char,int)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void takeVideoWithCamera(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean isFocused()
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion: long updateTail(long,int)
androidx.fragment.app.FragmentTransition$1: void run()
androidx.fragment.app.FragmentController: void dispatchPause()
com.google.android.gms.dynamic.ObjectWrapper: java.lang.Object unwrap(com.google.android.gms.dynamic.IObjectWrapper)
com.google.android.gms.common.api.Api: Api(java.lang.String,com.google.android.gms.common.api.Api$AbstractClientBuilder,com.google.android.gms.common.api.Api$ClientKey)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable)
com.google.firebase.database.tubesock.WebSocket: WebSocket(com.google.firebase.database.connection.ConnectionContext,java.net.URI,java.lang.String,java.util.Map)
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
androidx.core.provider.FontRequest: java.lang.String getId()
com.google.firebase.database.logging.AndroidLogger: void debug(java.lang.String,java.lang.String)
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionEnd(android.transition.Transition)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float)
androidx.core.app.Person: java.lang.CharSequence getName()
com.google.firebase.components.ComponentRuntime: ComponentRuntime(java.util.concurrent.Executor,java.lang.Iterable,java.util.Collection)
androidx.appcompat.widget.DropDownListView: boolean onTouchEvent(android.view.MotionEvent)
androidx.activity.result.ActivityResultRegistry$3: ActivityResultRegistry$3(androidx.activity.result.ActivityResultRegistry,java.lang.String,int,androidx.activity.result.contract.ActivityResultContract)
com.google.android.gms.maps.MapView$zza: void onCreate(android.os.Bundle)
io.flutter.plugins.pathprovider.PathProviderPlugin: java.lang.String access$500(io.flutter.plugins.pathprovider.PathProviderPlugin)
com.google.firebase.database.Query: com.google.firebase.database.Query endAt(com.google.firebase.database.snapshot.Node,java.lang.String)
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger: DartExecutor$DefaultBinaryMessenger(io.flutter.embedding.engine.dart.DartMessenger,io.flutter.embedding.engine.dart.DartExecutor$1)
io.flutter.view.AccessibilityBridge$SemanticsNode: AccessibilityBridge$SemanticsNode(io.flutter.view.AccessibilityBridge)
com.baseflow.geolocator.GeolocatorLocationService: GeolocatorLocationService()
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void applyButtonTint()
com.google.firebase.database.android.SqlPersistenceStorageEngine$1: SqlPersistenceStorageEngine$1(com.google.firebase.database.android.SqlPersistenceStorageEngine,com.google.firebase.database.core.utilities.ImmutableTree)
com.google.firebase.database.core.view.QuerySpec: boolean loadsAllData()
kotlinx.coroutines.channels.ClosedReceiveChannelException: ClosedReceiveChannelException(java.lang.String)
androidx.core.content.FileProvider: java.lang.String[] copyOf(java.lang.String[],int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState()
com.baseflow.geolocator.location.LocationAccuracy: com.baseflow.geolocator.location.LocationAccuracy valueOf(java.lang.String)
androidx.fragment.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding: android.content.Context getApplicationContext()
com.google.android.gms.common.SupportErrorDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)
androidx.core.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)
com.google.android.gms.maps.model.CustomCap: java.lang.String toString()
androidx.window.embedding.SplitPairRule: int hashCode()
net.touchcapture.qr.flutterqr.Shared: Shared()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIntent(android.content.Intent)
androidx.core.app.ActivityRecreator: java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class)
com.google.zxing.oned.CodaBarReader: com.google.zxing.Result decodeRow(int,com.google.zxing.common.BitArray,java.util.Map)
androidx.core.app.Person: boolean isImportant()
io.flutter.plugins.imagepicker.ImagePickerPlugin: io.flutter.plugins.imagepicker.ImagePickerDelegate access$000(io.flutter.plugins.imagepicker.ImagePickerPlugin)
androidx.appcompat.widget.AppCompatTextHelper$2: AppCompatTextHelper$2(androidx.appcompat.widget.AppCompatTextHelper,android.widget.TextView,android.graphics.Typeface,int)
io.flutter.embedding.engine.renderer.FlutterRenderer: void setSemanticsEnabled(boolean)
com.lyokone.location.LocationPlugin: void dispose()
com.journeyapps.barcodescanner.camera.PreviewScalingStrategy: java.util.List getBestPreviewOrder(java.util.List,com.journeyapps.barcodescanner.Size)
io.flutter.view.AccessibilityBridge$4: AccessibilityBridge$4(io.flutter.view.AccessibilityBridge,android.view.accessibility.AccessibilityManager)
androidx.fragment.app.FragmentManager: void updateOnBackPressedCallbackEnabled()
io.flutter.plugins.googlemaps.PolylineController: void setConsumeTapEvents(boolean)
com.google.android.gms.common.internal.zab: zab()
com.google.android.gms.common.internal.Preconditions: void checkState(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean canApplyTheme()
com.journeyapps.barcodescanner.CaptureManager: void openCameraWithPermission()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
io.flutter.plugins.urllauncher.MethodCallHandlerImpl: void onCanLaunch(io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
androidx.fragment.app.FragmentViewLifecycleOwner: void setCurrentState(androidx.lifecycle.Lifecycle$State)
androidx.appcompat.widget.Toolbar$2: Toolbar$2(androidx.appcompat.widget.Toolbar)
com.google.firebase.database.core.Repo$18: Repo$18(com.google.firebase.database.core.Repo,com.google.firebase.database.core.Path,java.util.List,com.google.firebase.database.core.Repo)
androidx.core.content.res.ResourcesCompat$ColorStateListCacheKey: ResourcesCompat$ColorStateListCacheKey(android.content.res.Resources,android.content.res.Resources$Theme)
kotlinx.coroutines.EventLoopImplBase: void enqueue(java.lang.Runnable)
kotlin.jvm.internal.ReflectionFactory: java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: boolean areAllItemsEnabled()
com.google.firebase.database.core.Context: void initServices()
com.google.firebase.database.core.utilities.DefaultClock: DefaultClock()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType fromValue(java.lang.String)
androidx.fragment.app.FragmentManager: void execSingleAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean)
androidx.appcompat.widget.SuggestionsAdapter: void setViewText(android.widget.TextView,java.lang.CharSequence)
androidx.appcompat.graphics.drawable.DrawableContainer: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
androidx.collection.MapCollections$ArrayIterator: void remove()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$1: FlutterMutatorView$1(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView,android.view.View$OnFocusChangeListener,android.view.View)
com.google.android.gms.common.api.internal.zzc: void onStop()
com.google.android.gms.maps.MapView$zzb: MapView$zzb(android.view.ViewGroup,android.content.Context,com.google.android.gms.maps.GoogleMapOptions)
com.google.firebase.database.util.JsonMapper: void serializeJsonValue(java.lang.Object,org.json.JSONStringer)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
com.google.firebase.database.core.SyncTree: java.util.List applyTaggedListenComplete(com.google.firebase.database.core.Tag)
com.google.firebase.database.collection.ImmutableSortedMap: boolean equals(java.lang.Object)
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent getPlaceholderIntent()
com.google.android.gms.common.ConnectionResult: ConnectionResult(int,android.app.PendingIntent)
androidx.fragment.app.DialogFragment: void onDestroyView()
kotlin.collections.EmptyMap: void clear()
androidx.savedstate.SavedStateRegistry: void runOnNextRecreation(java.lang.Class)
com.google.firebase.database.core.CompoundWrite: com.google.firebase.database.core.CompoundWrite addWrites(com.google.firebase.database.core.Path,com.google.firebase.database.core.CompoundWrite)
com.google.android.gms.tasks.Tasks: com.google.android.gms.tasks.Task call(java.util.concurrent.Executor,java.util.concurrent.Callable)
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors: int getVirtualNodeId(long)
androidx.appcompat.graphics.drawable.DrawableWrapper: void draw(android.graphics.Canvas)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicWidth()
kotlinx.coroutines.CancellableContinuationImpl: void callCancelHandler(kotlin.jvm.functions.Function1,java.lang.Throwable)
io.flutter.plugins.googlemaps.GoogleMapController: void onRestoreInstanceState(android.os.Bundle)
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel: void invokeViewFocused(int)
androidx.window.layout.FoldingFeature$Orientation: java.lang.String toString()
com.google.android.gms.common.api.internal.ListenerHolder$ListenerKey: ListenerHolder$ListenerKey(java.lang.Object,java.lang.String)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void updateDensity(android.content.res.Resources)
androidx.appcompat.widget.ListPopupWindow$3: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
com.google.zxing.common.DecoderResult: int getStructuredAppendSequenceNumber()
io.flutter.plugin.platform.PlatformPlugin: void updateSystemUiOverlays()
androidx.appcompat.view.StandaloneActionMode: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
androidx.exifinterface.media.ExifInterface: void loadAttributes(java.io.InputStream)
androidx.window.embedding.SplitRule: int hashCode()
androidx.appcompat.widget.LinearLayoutCompat: void onLayout(boolean,int,int,int,int)
com.baseflow.geolocator.StreamHandlerImpl: void startListening(android.content.Context,io.flutter.plugin.common.BinaryMessenger)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int)
com.google.android.gms.maps.UiSettings: UiSettings(com.google.android.gms.maps.internal.IUiSettingsDelegate)
com.google.firebase.database.snapshot.PathIndex: int compare(com.google.firebase.database.snapshot.NamedNode,com.google.firebase.database.snapshot.NamedNode)
androidx.appcompat.view.menu.ActionMenuItemView: void onClick(android.view.View)
io.flutter.plugin.editing.TextInputPlugin: void showTextInput(android.view.View)
androidx.core.app.Person: java.lang.String getUri()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream: ExifInterface$ByteOrderedDataOutputStream(java.io.OutputStream,java.nio.ByteOrder)
androidx.appcompat.view.menu.ListMenuItemView: void insertIconView()
androidx.appcompat.view.SupportMenuInflater: void inflate(int,android.view.Menu)
io.flutter.embedding.android.FlutterView: void revertImageView(java.lang.Runnable)
com.google.firebase.database.core.Repo: void abortTransactionsAtNode(com.google.firebase.database.core.utilities.Tree,int)
androidx.versionedparcelable.VersionedParcelParcel: java.lang.String readString()
kotlin.ranges.IntRange: boolean equals(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String getActionSymbolicName(int)
com.google.firebase.database.connection.PersistentConnectionImpl: void onDisconnect(com.google.firebase.database.connection.Connection$DisconnectReason)
com.google.android.gms.common.api.internal.zae: void zaa(java.lang.RuntimeException)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float)
com.google.firebase.database.Query: com.google.firebase.database.Query limitToLast(int)
com.journeyapps.barcodescanner.camera.CameraManager: com.journeyapps.barcodescanner.Size getPreviewSize()
com.google.firebase.database.core.Path: boolean equals(java.lang.Object)
com.google.android.gms.signin.SignInOptions: boolean isForceCodeForRefreshToken()
com.google.android.gms.maps.model.zzc: java.lang.Object[] newArray(int)
androidx.fragment.app.DialogFragment$2: DialogFragment$2(androidx.fragment.app.DialogFragment)
io.flutter.plugins.googlemaps.Convert: java.lang.Object latLngToJson(com.google.android.gms.maps.model.LatLng)
io.flutter.embedding.engine.dart.DartMessenger: void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler)
com.google.android.gms.maps.zzr: void onSnapshotReady(android.graphics.Bitmap)
com.google.zxing.ResultPoint: float getY()
kotlin.collections.CollectionsKt___CollectionsKt: java.lang.Appendable joinTo$default(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: InputContentInfoCompat$InputContentInfoCompatApi25Impl(android.net.Uri,android.content.ClipDescription,android.net.Uri)
androidx.core.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)
com.lyokone.location.FlutterLocationService: void onCreate()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
kotlin.collections.EmptyList: void clear()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.Region getTransparentRegion()
kotlinx.coroutines.channels.ArrayChannel: boolean isBufferEmpty()
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean onStateChange(int[])
com.google.firebase.emulators.EmulatedServiceSettings: int getPort()
com.google.android.gms.maps.internal.zzf: zzf(android.os.IBinder)
com.google.firebase.database.core.view.EventGenerator: void generateEventsForType(java.util.List,com.google.firebase.database.core.view.Event$EventType,java.util.List,java.util.List,com.google.firebase.database.snapshot.IndexedNode)
androidx.exifinterface.media.ExifInterface: int writeExifSegment(androidx.exifinterface.media.ExifInterface$ByteOrderedDataOutputStream)
com.google.firebase.database.snapshot.BooleanNode: com.google.firebase.database.snapshot.Node updatePriority(com.google.firebase.database.snapshot.Node)
com.google.firebase.database.snapshot.EmptyNode: com.google.firebase.database.snapshot.ChildKey getPredecessorChildKey(com.google.firebase.database.snapshot.ChildKey)
io.flutter.plugins.firebase.database.EventsProxy: void sendEvent(java.lang.String,com.google.firebase.database.DataSnapshot,java.lang.String)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: void setMenuPrepared()
com.google.android.gms.common.internal.GoogleApiAvailabilityCache: void flush()
com.google.android.gms.internal.maps.zzae: void setTransparency(float)
io.flutter.embedding.engine.systemchannels.KeyEventChannel: io.flutter.plugin.common.BasicMessageChannel$Reply createReplyHandler(io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler)
androidx.appcompat.view.menu.MenuWrapperICS: void setGroupCheckable(int,boolean,boolean)
androidx.activity.result.ActivityResult: ActivityResult(android.os.Parcel)
io.flutter.embedding.android.FlutterActivity: boolean shouldDestroyEngineWithHost()
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: SafeIterableMap$AscendingIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.content.ClipDescription getDescription()
com.google.firebase.database.snapshot.Node$HashVersion: com.google.firebase.database.snapshot.Node$HashVersion[] values()
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter)
com.google.android.gms.maps.model.PolylineOptions: boolean isGeodesic()
kotlinx.coroutines.JobSupport: java.util.concurrent.CancellationException toCancellationException$default(kotlinx.coroutines.JobSupport,java.lang.Throwable,java.lang.String,int,java.lang.Object)
com.journeyapps.barcodescanner.camera.CameraInstance$2: CameraInstance$2(com.journeyapps.barcodescanner.camera.CameraInstance)
androidx.core.provider.FontRequestWorker$TypefaceResult: boolean isSuccess()
com.google.android.gms.maps.model.zzv: java.lang.Object createFromParcel(android.os.Parcel)
com.google.zxing.qrcode.decoder.DataMask: DataMask(java.lang.String,int,com.google.zxing.qrcode.decoder.DataMask$1)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet)
io.flutter.view.VsyncWaiter: void init()
androidx.appcompat.widget.ActionMenuView: void onLayout(boolean,int,int,int,int)
com.google.zxing.maxicode.MaxiCodeReader: void reset()
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1: java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode)
kotlinx.coroutines.internal.LockFreeTaskQueue: LockFreeTaskQueue(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
com.google.android.gms.dynamic.DeferredLifecycleHelper: void onDestroy()
androidx.appcompat.widget.DropDownListView: void updateSelectorStateCompat()
com.google.zxing.oned.UPCEANReader: int[] decodeEnd(com.google.zxing.common.BitArray,int)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setMapType(int)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
androidx.versionedparcelable.VersionedParcelParcel: void writeString(java.lang.String)
androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: int addLast(java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder: void onItemsChanged(boolean)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent)
io.flutter.plugins.googlemaps.PolylineController: void setEndCap(com.google.android.gms.maps.model.Cap)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.view.View getCustomView()
kotlin.text.DelimitedRangesSequence$iterator$1: kotlin.ranges.IntRange next()
androidx.core.view.ViewCompat: int getImportantForAccessibility(android.view.View)
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
com.journeyapps.barcodescanner.Size: int compareTo(java.lang.Object)
androidx.core.widget.NestedScrollView: android.os.Parcelable onSaveInstanceState()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
com.google.android.gms.tasks.zzg: java.lang.Object zza(com.google.android.gms.tasks.zzg)
kotlinx.coroutines.AbstractTimeSourceKt: kotlinx.coroutines.AbstractTimeSource getTimeSource()
com.google.firebase.components.ComponentDiscovery$MetadataRegistrarNameRetriever: java.util.List retrieve(android.content.Context)
io.flutter.plugin.common.JSONMessageCodec: java.nio.ByteBuffer encodeMessage(java.lang.Object)
androidx.appcompat.widget.AppCompatReceiveContentHelper: androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener createOnCommitContentListener(android.view.View)
io.flutter.plugin.platform.PlatformViewsController: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
com.google.firebase.database.tubesock.WebSocket: void blockClose()
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
androidx.collection.MapCollections$ValuesCollection: boolean contains(java.lang.Object)
androidx.fragment.app.FragmentManager$11: void onActivityResult(java.util.Map)
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.PorterDuff$Mode getIconTintMode()
kotlinx.coroutines.flow.SafeFlow: SafeFlow(kotlin.jvm.functions.Function2)
com.google.android.gms.common.api.Status: boolean hasResolution()
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: GradientColorInflaterCompat$ColorStops(int,int,int)
androidx.appcompat.view.menu.MenuBuilder: int findGroupIndex(int,int)
com.google.firebase.database.tubesock.WebSocketWriter: void stopIt()
com.google.firebase.database.core.view.ViewProcessor: com.google.firebase.database.core.view.ViewCache revertUserWrite(com.google.firebase.database.core.view.ViewCache,com.google.firebase.database.core.Path,com.google.firebase.database.core.WriteTreeRef,com.google.firebase.database.snapshot.Node,com.google.firebase.database.core.view.filter.ChildChangeAccumulator)
io.flutter.plugins.urllauncher.WebViewActivity$1: WebViewActivity$1(io.flutter.plugins.urllauncher.WebViewActivity)
androidx.fragment.app.SpecialEffectsController$Operation: void complete()
com.google.android.gms.maps.GoogleMap: boolean isTrafficEnabled()
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler: void onCancel(java.lang.Object,io.flutter.plugin.common.BinaryMessenger$BinaryReply)
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$1: ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$1(java.lang.reflect.Constructor)
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel forBits(int)
androidx.appcompat.view.StandaloneActionMode: void setSubtitle(int)
androidx.fragment.app.FragmentTransitionCompat21: void addTargets(java.lang.Object,java.util.ArrayList)
androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)
io.flutter.plugins.urllauncher.WebViewActivity$2: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPaneTitle(java.lang.CharSequence)
androidx.appcompat.graphics.drawable.StateListDrawable: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getTooltipText()
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider: ListPopupWindow$ListSelectorHider(androidx.appcompat.widget.ListPopupWindow)
com.google.firebase.database.core.SyncTree$7: java.util.List call()
androidx.appcompat.view.menu.ActionMenuItemView: boolean needsDividerAfter()
androidx.core.provider.FontProvider$1: FontProvider$1()
com.google.firebase.database.connection.PersistentConnectionImpl$2: void onSuccess(java.lang.String)
androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()
com.google.firebase.database.core.ChildEventRegistration: int hashCode()
kotlinx.coroutines.internal.ExceptionsConstuctorKt$createConstructor$$inlined$safeCtor$3: java.lang.Throwable invoke(java.lang.Throwable)
androidx.cursoradapter.widget.CursorFilter: void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults)
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill: java.lang.String translateAutofillHint(java.lang.String)
androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setChangingConfigurations(int)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.google.android.gms.common.internal.zze: zze(android.content.Context)
com.google.zxing.qrcode.decoder.DecodedBitStreamParser: void decodeAlphanumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,boolean)
com.google.android.gms.common.api.internal.zabq: void unregister()
com.google.firebase.database.core.utilities.Utilities: boolean equals(java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentStore: java.util.ArrayList saveActiveFragments()
androidx.appcompat.widget.Toolbar: void addSystemView(android.view.View,boolean)
androidx.appcompat.widget.ToolbarWidgetWrapper: void updateNavigationIcon()
com.lyokone.location.FlutterLocation: FlutterLocation(android.content.Context,android.app.Activity)
com.google.firebase.database.core.WriteTreeRef: com.google.firebase.database.snapshot.Node calcEventCacheAfterServerOverwrite(com.google.firebase.database.core.Path,com.google.firebase.database.snapshot.Node,com.google.firebase.database.snapshot.Node)
io.flutter.embedding.engine.loader.FlutterLoader$Settings: java.lang.String getLogTag()
io.flutter.embedding.android.FlutterSurfaceView: void detachFromRenderer()
androidx.fragment.app.BackStackState: void writeToParcel(android.os.Parcel,int)
androidx.window.layout.SidecarCompat: void register(android.os.IBinder,android.app.Activity)
io.flutter.plugin.platform.SingleViewPresentation$WindowManagerHandler: SingleViewPresentation$WindowManagerHandler(android.view.WindowManager,io.flutter.plugin.platform.SingleViewPresentation$FakeWindowViewGroup)
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered: kotlinx.coroutines.internal.Symbol tryResumeSend(kotlinx.coroutines.internal.LockFreeLinkedListNode$PrepareOp)
io.flutter.embedding.engine.systemchannels.PlatformChannel: int decodeOrientations(org.json.JSONArray)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
com.google.firebase.database.android.AndroidEventTarget: void postEvent(java.lang.Runnable)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()
io.flutter.view.AccessibilityBridge: android.view.accessibility.AccessibilityNodeInfo obtainAccessibilityNodeInfo(android.view.View,int)
com.google.firebase.database.core.persistence.TrackedQueryManager: com.google.firebase.database.core.persistence.PruneForest pruneOldQueries(com.google.firebase.database.core.persistence.CachePolicy)
androidx.window.core.Version$Companion: Version$Companion()
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
com.google.android.gms.common.internal.zaj: java.lang.Object convert(com.google.android.gms.common.api.Result)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean needMirroring()
com.google.zxing.oned.EANManufacturerOrgSupport: void initIfNeeded()
com.google.android.gms.location.LocationRequest: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.SuggestionsAdapter: void notifyDataSetChanged()
kotlinx.coroutines.JobSupport: void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable)
com.google.firebase.database.snapshot.PathIndex: int hashCode()
androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: int access$3400(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction)
androidx.savedstate.SavedStateRegistryController: void performSave(android.os.Bundle)
net.touchcapture.qr.flutterqr.QRView$1: void onActivityStopped(android.app.Activity)
com.google.firebase.database.collection.ImmutableSortedSet: java.lang.Object getMinEntry()
androidx.collection.MapCollections$KeySet: boolean remove(java.lang.Object)
net.touchcapture.qr.flutterqr.Shared: void setBinding(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.lyokone.location.FlutterLocation: void buildLocationSettingsRequest()
com.google.android.gms.location.LocationAvailability: LocationAvailability(int,int,int,long,com.google.android.gms.location.zzaj[])
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener: void onScroll(android.widget.AbsListView,int,int,int)
androidx.appcompat.view.menu.MenuItemImpl: void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.core.widget.TextViewOnReceiveContentListener: void replaceSelection(android.text.Editable,java.lang.CharSequence)
com.google.common.base.Throwables: java.lang.reflect.Method getSizeMethod()
com.google.firebase.database.snapshot.LeafNode: java.lang.String getPriorityHash(com.google.firebase.database.snapshot.Node$HashVersion)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: void stop()
com.google.zxing.pdf417.decoder.PDF417ScanningDecoder: boolean checkCodewordSkew(int,int,int)
io.flutter.plugins.googlemaps.GoogleMapsPlugin$2: GoogleMapsPlugin$2(io.flutter.plugins.googlemaps.GoogleMapsPlugin)
com.journeyapps.barcodescanner.SourceData: SourceData(byte[],int,int,int,int)
com.google.android.gms.common.internal.GmsClientSupervisor$zza: int zzq()
kotlin.ranges.IntProgression$Companion: kotlin.ranges.IntProgression fromClosedRange(int,int,int)
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
androidx.core.view.DisplayCutoutCompat: int getSafeInsetRight()
androidx.appcompat.widget.AppCompatImageHelper: void applySupportImageTint()
com.baseflow.geolocator.location.LocationManagerClient: java.lang.String getBestProvider(android.location.LocationManager,com.baseflow.geolocator.location.LocationAccuracy)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: AppCompatDelegateImpl$ActionMenuPresenterCallback(androidx.appcompat.app.AppCompatDelegateImpl)
kotlinx.coroutines.scheduling.WorkQueue: long tryStealLastScheduled(kotlinx.coroutines.scheduling.WorkQueue,boolean)
com.google.firebase.database.snapshot.PathIndex: com.google.firebase.database.snapshot.NamedNode makePost(com.google.firebase.database.snapshot.ChildKey,com.google.firebase.database.snapshot.Node)
androidx.fragment.app.Fragment$2: void run()
com.google.android.gms.maps.internal.zzg: com.google.android.gms.internal.maps.zzz addPolyline(com.google.android.gms.maps.model.PolylineOptions)
kotlinx.coroutines.scheduling.CoroutineScheduler: int parkedWorkersStackNextIndex(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker)
com.lyokone.location.FlutterLocation: boolean checkServiceEnabled()
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)
io.flutter.plugins.urllauncher.UrlLauncher: void closeWebView()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setShortcut(char,char)
com.google.android.gms.internal.maps.zza: void zzb(int,android.os.Parcel)
com.journeyapps.barcodescanner.DecoderResultPointCallback: void foundPossibleResultPoint(com.google.zxing.ResultPoint)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
androidx.multidex.MultiDexExtractor$1: MultiDexExtractor$1(androidx.multidex.MultiDexExtractor)
com.google.android.gms.location.zzs: boolean dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
io.flutter.plugins.googlemaps.CirclesController: void changeCircle(java.lang.Object)
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State: com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState$State valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel: void previous(int)
io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper$3: ImagePickerPlugin$MethodResultWrapper$3(io.flutter.plugins.imagepicker.ImagePickerPlugin$MethodResultWrapper)
io.flutter.plugins.googlemaps.Convert: java.util.List toHoles(java.lang.Object)
com.google.zxing.pdf417.decoder.ec.ModulusGF: com.google.zxing.pdf417.decoder.ec.ModulusPoly buildMonomial(int,int)
com.google.firebase.database.connection.PersistentConnectionImpl: void put(java.util.List,java.lang.Object,com.google.firebase.database.connection.RequestResultCallback)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
com.google.firebase.database.core.view.CacheNode: boolean isFullyInitialized()
kotlin.collections.EmptyIterator: void remove()
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate: void release()
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter)
com.google.android.gms.common.internal.zzc: java.lang.Object[] newArray(int)
kotlinx.coroutines.EventLoop: boolean isUnconfinedQueueEmpty()
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry: long id()
com.google.firebase.database.Query: com.google.firebase.database.Query orderByChild(java.lang.String)
com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper: boolean casWaiters(com.google.common.util.concurrent.AbstractFuture,com.google.common.util.concurrent.AbstractFuture$Waiter,com.google.common.util.concurrent.AbstractFuture$Waiter)
com.google.firebase.database.core.Context: boolean isPersistenceEnabled()
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable: void run()
androidx.appcompat.view.menu.CascadingMenuPopup: void showMenu(androidx.appcompat.view.menu.MenuBuilder)
com.journeyapps.barcodescanner.camera.CameraConfigurationUtils: java.lang.String toString(java.lang.Iterable)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: CoroutineScheduler$Worker(kotlinx.coroutines.scheduling.CoroutineScheduler,int)
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo: java.lang.Object getTransition()
com.google.android.gms.location.zzak: zzak()
com.google.firebase.database.util.JsonMapper: java.util.Map parseJson(java.lang.String)
io.flutter.plugins.googlemaps.GoogleMapBuilder: void setZoomGesturesEnabled(boolean)
io.flutter.embedding.android.FlutterSplashView: io.flutter.embedding.android.FlutterView access$000(io.flutter.embedding.android.FlutterSplashView)
net.touchcapture.qr.flutterqr.QRView: void dispose()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderTitle(int)
com.google.firebase.database.core.Repo$1: void run()
androidx.fragment.app.FragmentManager: void setVisibleRemovingFragment(androidx.fragment.app.Fragment)
com.google.android.gms.tasks.zzk: com.google.android.gms.tasks.OnFailureListener zzb(com.google.android.gms.tasks.zzk)
com.google.firebase.FirebaseApp: java.lang.String toString()
com.google.android.gms.location.SettingsClient: SettingsClient(android.app.Activity)
io.flutter.embedding.engine.renderer.FlutterRenderer: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
com.google.firebase.database.core.SyncTree$KeepSyncedEventRegistration: int hashCode()
kotlin.jvm.internal.PackageReference: java.lang.Class getJClass()
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher: void dispatchWithContext$kotlinx_coroutines_core(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean)
com.baseflow.geolocator.GeolocatorPlugin$1: void onServiceDisconnected(android.content.ComponentName)
kotlin.random.Random$Default: Random$Default()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
com.google.android.gms.common.api.internal.zza: void onStart()
com.google.zxing.common.BitArray: void clear()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float)
com.google.zxing.oned.rss.expanded.decoders.CurrentParsingState: int getPosition()
com.google.android.gms.common.internal.zag: zag(com.google.android.gms.common.api.internal.OnConnectionFailedListener)
kotlinx.coroutines.UndispatchedMarker: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
com.google.firebase.database.connection.util.StringListReader: long skip(long)
com.google.android.gms.signin.internal.SignInClientImpl: android.os.Bundle getGetServiceRequestExtraArgs()
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] values()
androidx.collection.ArraySet: java.lang.Object[] toArray(java.lang.Object[])
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display)
com.google.android.gms.maps.MapView$zzb: void createDelegate(com.google.android.gms.dynamic.OnDelegateCreatedListener)
com.google.firebase.database.connection.PersistentConnectionImpl: void onAuthRevoked(java.lang.String,java.lang.String)
com.google.zxing.oned.EANManufacturerOrgSupport: java.lang.String lookupCountryIdentifier(java.lang.String)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.google.firebase.database.collection.ArraySortedMap: boolean containsKey(java.lang.Object)
com.google.android.gms.common.api.internal.GoogleApiManager$zaa: com.google.android.gms.common.api.Api$Client zag(com.google.android.gms.common.api.internal.GoogleApiManager$zaa)
androidx.core.graphics.TypefaceCompatBaseImpl: void addFontFamily(android.graphics.Typeface,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean hasExpandedActionView()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
io.flutter.plugin.platform.SingleViewPresentation$ImmContext: SingleViewPresentation$ImmContext(android.content.Context)
io.flutter.embedding.android.FlutterView: void resetWillNotDraw(boolean,boolean)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void jumpToCurrentState()
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets)
com.google.android.gms.location.LocationSettingsRequest: LocationSettingsRequest(java.util.List,boolean,boolean,com.google.android.gms.location.zzae)
kotlinx.coroutines.scheduling.CoroutineScheduler: void close()
io.flutter.plugins.flutter_plugin_android_lifecycle.FlutterAndroidLifecyclePlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.fragment.app.FragmentManager: boolean dispatchPrepareOptionsMenu(android.view.Menu)
androidx.collection.SparseArrayCompat: int keyAt(int)
io.flutter.embedding.android.FlutterSplashView$SavedState$1: io.flutter.embedding.android.FlutterSplashView$SavedState[] newArray(int)
com.google.zxing.oned.ITFReader: void validateQuietZone(com.google.zxing.common.BitArray,int)
androidx.fragment.app.FragmentManager$StartEnterTransitionListener: FragmentManager$StartEnterTransitionListener(androidx.fragment.app.BackStackRecord,boolean)
com.google.firebase.database.core.view.CancelEvent: java.lang.String toString()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
androidx.fragment.app.FragmentActivity: void onPictureInPictureModeChanged(boolean)
com.journeyapps.barcodescanner.camera.CameraInstance: boolean isCameraClosed()
io.flutter.plugins.imagepicker.ImagePickerDelegate$2: void getFullImagePath(android.net.Uri,io.flutter.plugins.imagepicker.ImagePickerDelegate$OnPathReadyListener)
androidx.fragment.app.FragmentManager: FragmentManager()
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object)
com.google.firebase.database.core.Repo: void sendTransactionQueue(java.util.List,com.google.firebase.database.core.Path)
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver: CursorAdapter$ChangeObserver(androidx.cursoradapter.widget.CursorAdapter)
io.flutter.embedding.android.FlutterTextureView: void pause()
kotlinx.coroutines.Empty: boolean isActive()
androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment)
com.google.zxing.qrcode.detector.AlignmentPatternFinder: float centerFromEnd(int[],int)
com.google.android.gms.common.GoogleApiAvailabilityLight: GoogleApiAvailabilityLight()
androidx.versionedparcelable.VersionedParcelParcel: boolean readBoolean()
io.flutter.plugin.editing.InputConnectionAdaptor: boolean sendKeyEvent(android.view.KeyEvent)
io.flutter.plugin.editing.TextInputPlugin: void unlockPlatformViewInputConnection()
com.google.android.gms.common.internal.BaseGmsClient$zza: void zzn()
androidx.core.view.ViewPropertyAnimatorCompat: long getDuration()
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
androidx.collection.ArrayMap: java.util.Set entrySet()
androidx.core.view.WindowInsetsCompat: void setStableInsets(androidx.core.graphics.Insets)
io.flutter.plugins.imagepicker.ImagePickerDelegate: void launchTakeImageWithCameraIntent()
androidx.window.layout.SidecarCompat: SidecarCompat(android.content.Context)
com.google.android.gms.common.ConnectionResult: android.app.PendingIntent getResolution()
androidx.appcompat.widget.ContentFrameLayout: void dispatchFitSystemWindows(android.graphics.Rect)
com.google.firebase.database.connection.PersistentConnectionImpl$OutstandingPut: java.util.Map getRequest()
io.flutter.plugin.platform.PlatformViewsController: void lockInputConnection(io.flutter.plugin.platform.VirtualDisplayController)
kotlinx.coroutines.channels.AbstractChannel: void removeReceiveOnCancel(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.channels.Receive)
com.google.android.gms.tasks.zzm: java.lang.Object zza(com.google.android.gms.tasks.zzm)
androidx.core.view.ViewCompat$AccessibilityViewProperty: ViewCompat$AccessibilityViewProperty(int,java.lang.Class,int)
io.flutter.plugin.common.StandardMessageCodec: void writeChar(java.io.ByteArrayOutputStream,int)
com.google.android.gms.common.internal.BaseGmsClient$zzc: void zzo()
androidx.activity.result.contract.ActivityResultContract: androidx.activity.result.contract.ActivityResultContract$SynchronousResult getSynchronousResult(android.content.Context,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
androidx.appcompat.widget.TooltipPopup: TooltipPopup(android.content.Context)
com.google.android.gms.common.api.internal.GoogleApiManager: com.google.android.gms.common.GoogleApiAvailability zah(com.google.android.gms.common.api.internal.GoogleApiManager)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean onStateChanged(int[])
com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper: AbstractFuture$UnsafeAtomicHelper(com.google.common.util.concurrent.AbstractFuture$1)
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation: void error(java.lang.String,java.lang.String,java.lang.Object)
kotlinx.coroutines.EventLoop: EventLoop()
com.google.firebase.database.core.CompoundWrite: java.util.Map childCompoundWrites()
androidx.core.app.ActivityRecreator$3: void run()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.view.Menu getMenu()
androidx.core.app.NotificationCompat$Action: NotificationCompat$Action(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.Set getSplitRules()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
io.flutter.plugins.urllauncher.UrlLauncherPlugin: void onDetachedFromActivityForConfigChanges()
com.google.android.gms.common.internal.zzg: android.content.Intent zzg(java.lang.String)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer getCallback()
io.flutter.embedding.android.FlutterActivity: void onStop()
